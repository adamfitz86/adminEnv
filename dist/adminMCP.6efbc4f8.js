// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (
  modules,
  entry,
  mainEntry,
  parcelRequireName,
  externals,
  distDir,
  publicUrl,
  devServer
) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var importMap = previousRequire.i || {};
  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        if (externals[name]) {
          return externals[name];
        }
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        globalObject
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.require = nodeRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.distDir = distDir;
  newRequire.publicUrl = publicUrl;
  newRequire.devServer = devServer;
  newRequire.i = importMap;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  // Only insert newRequire.load when it is actually used.
  // The code in this file is linted against ES5, so dynamic import is not allowed.
  // INSERT_LOAD_HERE

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });
    }
  }
})({"4VwAv":[function(require,module,exports,__globalThis) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SERVER_PORT = 3000;
var HMR_SECURE = false;
var HMR_ENV_HASH = "439701173a9199ea";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "390a7dc96efbc4f8";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_SERVER_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , disposedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ , bundleNotFound = false;
function getHostname() {
    return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);
}
// eslint-disable-next-line no-redeclare
let WebSocket = globalThis.WebSocket;
if (!WebSocket && typeof module.bundle.root === 'function') try {
    // eslint-disable-next-line no-global-assign
    WebSocket = module.bundle.root('ws');
} catch  {
// ignore.
}
var hostname = getHostname();
var port = getPort();
var protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && ![
    'localhost',
    '127.0.0.1',
    '0.0.0.0'
].includes(hostname) ? 'wss' : 'ws';
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if (!parent || !parent.isParcelRequire) {
    // Web extension context
    var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes('test.js');
    }
    var ws;
    if (HMR_USE_SSE) ws = new EventSource('/__parcel_hmr');
    else try {
        // If we're running in the dev server's node runner, listen for messages on the parent port.
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) {
            parentPort.on('message', async (message)=>{
                try {
                    await handleMessage(message);
                    parentPort.postMessage('updated');
                } catch  {
                    parentPort.postMessage('restart');
                }
            });
            // After the bundle has finished running, notify the dev server that the HMR update is complete.
            queueMicrotask(()=>parentPort.postMessage('ready'));
        }
    } catch  {
        if (typeof WebSocket !== 'undefined') try {
            ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');
        } catch (err) {
            // Ignore cloudflare workers error.
            if (err.message && !err.message.includes('Disallowed operation called within global scope')) console.error(err.message);
        }
    }
    if (ws) {
        // $FlowFixMe
        ws.onmessage = async function(event /*: {data: string, ...} */ ) {
            var data /*: HMRMessage */  = JSON.parse(event.data);
            await handleMessage(data);
        };
        if (ws instanceof WebSocket) {
            ws.onerror = function(e) {
                if (e.message) console.error(e.message);
            };
            ws.onclose = function() {
                console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
            };
        }
    }
}
async function handleMessage(data /*: HMRMessage */ ) {
    checkedAssets = {} /*: {|[string]: boolean|} */ ;
    disposedAssets = {} /*: {|[string]: boolean|} */ ;
    assetsToAccept = [];
    assetsToDispose = [];
    bundleNotFound = false;
    if (data.type === 'reload') fullReload();
    else if (data.type === 'update') {
        // Remove error overlay if there is one
        if (typeof document !== 'undefined') removeErrorOverlay();
        let assets = data.assets;
        // Handle HMR Update
        let handled = assets.every((asset)=>{
            return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
        });
        // Dispatch a custom event in case a bundle was not found. This might mean
        // an asset on the server changed and we should reload the page. This event
        // gives the client an opportunity to refresh without losing state
        // (e.g. via React Server Components). If e.preventDefault() is not called,
        // we will trigger a full page reload.
        if (handled && bundleNotFound && assets.some((a)=>a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {
            cancelable: true
        }));
        if (handled) {
            console.clear();
            // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
            if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') window.dispatchEvent(new CustomEvent('parcelhmraccept'));
            await hmrApplyUpdates(assets);
            hmrDisposeQueue();
            // Run accept callbacks. This will also re-execute other disposed assets in topological order.
            let processedAssets = {};
            for(let i = 0; i < assetsToAccept.length; i++){
                let id = assetsToAccept[i][1];
                if (!processedAssets[id]) {
                    hmrAccept(assetsToAccept[i][0], id);
                    processedAssets[id] = true;
                }
            }
        } else fullReload();
    }
    if (data.type === 'error') {
        // Log parcel errors to console
        for (let ansiDiagnostic of data.diagnostics.ansi){
            let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
            console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
        }
        if (typeof document !== 'undefined') {
            // Render the fancy html overlay
            removeErrorOverlay();
            var overlay = createErrorOverlay(data.diagnostics.html);
            // $FlowFixMe
            document.body.appendChild(overlay);
        }
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, '') : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + '</div>').join('')}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ''}
      </div>
    `;
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if (typeof location !== 'undefined' && 'reload' in location) location.reload();
    else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
    else try {
        let { workerData, parentPort } = module.bundle.root('node:worker_threads') /*: any*/ ;
        if (workerData !== null && workerData !== void 0 && workerData.__parcel) parentPort.postMessage('restart');
    } catch (err) {
        console.error("[parcel] \u26A0\uFE0F An HMR update was not accepted. Please restart the process.");
    }
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute('href');
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', // $FlowFixMe
    href.split('?')[0] + '?' + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout || typeof document === 'undefined') return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === 'js') {
        if (typeof document !== 'undefined') {
            let script = document.createElement('script');
            script.src = asset.url + '?t=' + Date.now();
            if (asset.outputFormat === 'esmodule') script.type = 'module';
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === 'function') {
            // Worker scripts
            if (asset.outputFormat === 'esmodule') return import(asset.url + '?t=' + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + '?t=' + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        }
        // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.
        // This is required in case modules are duplicated. We need to ensure all instances have the updated code.
        if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    checkedAssets = {};
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else if (a !== null) {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) {
            bundleNotFound = true;
            return true;
        }
        return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return null;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    if (!cached) return true;
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
    return false;
}
function hmrDisposeQueue() {
    // Dispose all old assets.
    for(let i = 0; i < assetsToDispose.length; i++){
        let id = assetsToDispose[i][1];
        if (!disposedAssets[id]) {
            hmrDispose(assetsToDispose[i][0], id);
            disposedAssets[id] = true;
        }
    }
    assetsToDispose = [];
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
        let assetsToAlsoAccept = [];
        cached.hot._acceptCallbacks.forEach(function(cb) {
            let additionalAssets = cb(function() {
                return getParents(module.bundle.root, id);
            });
            if (Array.isArray(additionalAssets) && additionalAssets.length) assetsToAlsoAccept.push(...additionalAssets);
        });
        if (assetsToAlsoAccept.length) {
            let handled = assetsToAlsoAccept.every(function(a) {
                return hmrAcceptCheck(a[0], a[1]);
            });
            if (!handled) return fullReload();
            hmrDisposeQueue();
        }
    }
}

},{}],"4dmnR":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$1d45 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$1d45.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$1d45.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _app = require("./App");
var _appDefault = parcelHelpers.interopDefault(_app);
const container = document.getElementById('root');
const root = (0, _client.createRoot)(container);
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactDefault.default).StrictMode, {
    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appDefault.default), {}, void 0, false, {
        fileName: "src/index.tsx",
        lineNumber: 7,
        columnNumber: 5
    }, undefined)
}, void 0, false, {
    fileName: "src/index.tsx",
    lineNumber: 6,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$1d45.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","react":"jMk1U","react-dom/client":"hrvwu","./App":"3VLq5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi"}],"dVPUn":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"gnlQf"}],"gnlQf":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    var React = require("58362d9d82be395f");
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = '' + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = '' + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    var didWarnAboutKeySpread = {};
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (hasOwnProperty.call(props, 'key')) {
            var componentName = getComponentNameFromType(type);
            var keys = Object.keys(props).filter(function(k) {
                return k !== 'key';
            });
            var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';
            if (!didWarnAboutKeySpread[componentName + beforeExample]) {
                var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';
                error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);
                didWarnAboutKeySpread[componentName + beforeExample] = true;
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"58362d9d82be395f":"jMk1U"}],"jMk1U":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"ghslp"}],"ghslp":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = '18.3.1';
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame.getCurrentStack = null;
    ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = ''; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) stack += impl() || '';
        return stack;
    };
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    var deprecatedAPIs = {
        isMounted: [
            'isMounted',
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            'replaceState',
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            '=': '=0',
            ':': '=2'
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return '$' + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === 'object' && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape('' + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === 'undefined' || type === 'boolean') // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case 'string':
            case 'number':
                invokeCallback = true;
                break;
            case 'object':
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = '';
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + '/';
                mapIntoArray(mappedChild, array, escapedChildKey, '', function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === 'object') {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, '', '', function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error('React.Children.only expected to receive a single React element child.');
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject = payload._result;
            if (moduleObject === undefined) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
            if (!('default' in moduleObject)) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
            return moduleObject.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'defaultProps', {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'propTypes', {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== 'function') error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        else if (render.length !== 0 && render.length !== 2) error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error("memo: The first argument must be a component. Instead received: %s", type === null ? 'null' : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, 'type', {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ('require' + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === 'undefined') error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error) {
            popActScope(prevActScopeDepth);
            throw error;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        } else resolve(returnValue);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null);
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.act = act;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"hrvwu":[function(require,module,exports,__globalThis) {
'use strict';
var m = require("aaccff5d309d9239");
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"aaccff5d309d9239":"i4X7T"}],"i4X7T":[function(require,module,exports,__globalThis) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"cLd8p"}],"cLd8p":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require("6f0162e9ab224cd4");
    var Scheduler = require("8ad4ca65319d28a7");
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning('warn', format, args);
        }
    }
    function error(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning('error', format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = true; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + 'Capture', dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies[registrationName]) error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') possibleRegistrationNames.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error('Invalid attribute name: `%s`', attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case 'function':
            case 'symbol':
                // eslint-disable-line
                return true;
            case 'boolean':
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== 'data-' && prefix !== 'aria-';
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === 'undefined') return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        'children',
        'dangerouslySetInnerHTML',
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        'defaultValue',
        'defaultChecked',
        'innerHTML',
        'suppressContentEditableWarning',
        'suppressHydrationWarning',
        'style'
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            'acceptCharset',
            'accept-charset'
        ],
        [
            'className',
            'class'
        ],
        [
            'htmlFor',
            'for'
        ],
        [
            'httpEquiv',
            'http-equiv'
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        'contentEditable',
        'draggable',
        'spellCheck',
        'value'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        'allowFullScreen',
        'async',
        // on the client side because the browsers are inconsistent. Instead we call focus().
        'autoFocus',
        'autoPlay',
        'controls',
        'default',
        'defer',
        'disabled',
        'disablePictureInPicture',
        'disableRemotePlayback',
        'formNoValidate',
        'hidden',
        'loop',
        'noModule',
        'noValidate',
        'open',
        'playsInline',
        'readOnly',
        'required',
        'reversed',
        'scoped',
        'seamless',
        'itemScope'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        'checked',
        // disabled with `removeAttribute`. We have special logic for handling this.
        'multiple',
        'muted',
        'selected' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        'capture',
        'download' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        'cols',
        'rows',
        'size',
        'span' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        'rowSpan',
        'start'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        'xlink:actuate',
        'xlink:arcrole',
        'xlink:role',
        'xlink:show',
        'xlink:title',
        'xlink:type' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink', false, false);
    }); // String SVG attributes with the xml namespace.
    [
        'xml:base',
        'xml:lang',
        'xml:space' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace', false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        'tabIndex',
        'crossOrigin'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, 'xlink:href', 'http://www.w3.org/1999/xlink', true, false);
    [
        'src',
        'href',
        'action',
        'formAction'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL('' + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === '' + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === '' + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === '' + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, '' + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : '';
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = '';
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = '' + value;
                if (propertyInfo.sanitizeURL) sanitizeURL(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_SCOPE_TYPE = Symbol.for('react.scope');
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
    var REACT_CACHE_TYPE = Symbol.for('react.cache');
    var REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame('Lazy');
            case SuspenseComponent:
                return describeBuiltInComponentFrame('Suspense');
            case SuspenseListComponent:
                return describeBuiltInComponentFrame('SuspenseList');
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return '';
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = '';
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node);
            return info;
        } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || 'Context';
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return 'Cache';
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + '.Consumer';
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + '.Provider';
            case DehydratedFragment:
                return 'DehydratedFragment';
            case ForwardRef:
                return getWrappedName$1(type, type.render, 'ForwardRef');
            case Fragment:
                return 'Fragment';
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return 'Portal';
            case HostRoot:
                return 'Root';
            case HostText:
                return 'Text';
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return 'StrictMode';
                return 'Mode';
            case OffscreenComponent:
                return 'Offscreen';
            case Profiler:
                return 'Profiler';
            case ScopeComponent:
                return 'Scope';
            case SuspenseComponent:
                return 'Suspense';
            case SuspenseListComponent:
                return 'SuspenseList';
            case TracingMarkerComponent:
                return 'TracingMarker';
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === 'function') return type.displayName || type.name || null;
                if (typeof type === 'string') return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current === null) return null;
        var owner = current._debugOwner;
        if (owner !== null && typeof owner !== 'undefined') return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current === null) return '';
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case 'boolean':
            case 'number':
            case 'string':
            case 'undefined':
                return value;
            case 'object':
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return '';
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = '';
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? 'true' : 'false';
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? 'checked' : 'value';
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== 'undefined' ? document : undefined);
        if (typeof doc === 'undefined') return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps('input', props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, 'checked', checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === 'number') {
                if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
                // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === 'submit' || type === 'reset') {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute('value');
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty('defaultValue')) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== '') node.name = '';
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== '') node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, 'name');
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === 'object' && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === 'string' || typeof child === 'number') return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute('value', toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return '\n\nCheck the render method of `' + ownerName + '`.';
        return '';
    }
    var valuePropNames = [
        'value',
        'defaultValue'
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps('select', props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue['$' + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps('textarea', props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component');
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');
                if (isArray(children)) {
                    if (children.length > 1) throw new Error('<textarea> can only have at most one child.');
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = '';
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== '' && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case 'svg':
                return SVG_NAMESPACE;
            case 'math':
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!('innerHTML' in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement('div');
                reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            'animationDelay',
            'animationDirection',
            'animationDuration',
            'animationFillMode',
            'animationIterationCount',
            'animationName',
            'animationPlayState',
            'animationTimingFunction'
        ],
        background: [
            'backgroundAttachment',
            'backgroundClip',
            'backgroundColor',
            'backgroundImage',
            'backgroundOrigin',
            'backgroundPositionX',
            'backgroundPositionY',
            'backgroundRepeat',
            'backgroundSize'
        ],
        backgroundPosition: [
            'backgroundPositionX',
            'backgroundPositionY'
        ],
        border: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth',
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth',
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth',
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth',
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderBlockEnd: [
            'borderBlockEndColor',
            'borderBlockEndStyle',
            'borderBlockEndWidth'
        ],
        borderBlockStart: [
            'borderBlockStartColor',
            'borderBlockStartStyle',
            'borderBlockStartWidth'
        ],
        borderBottom: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth'
        ],
        borderColor: [
            'borderBottomColor',
            'borderLeftColor',
            'borderRightColor',
            'borderTopColor'
        ],
        borderImage: [
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth'
        ],
        borderInlineEnd: [
            'borderInlineEndColor',
            'borderInlineEndStyle',
            'borderInlineEndWidth'
        ],
        borderInlineStart: [
            'borderInlineStartColor',
            'borderInlineStartStyle',
            'borderInlineStartWidth'
        ],
        borderLeft: [
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth'
        ],
        borderRadius: [
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
            'borderTopLeftRadius',
            'borderTopRightRadius'
        ],
        borderRight: [
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth'
        ],
        borderStyle: [
            'borderBottomStyle',
            'borderLeftStyle',
            'borderRightStyle',
            'borderTopStyle'
        ],
        borderTop: [
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderWidth: [
            'borderBottomWidth',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth'
        ],
        columnRule: [
            'columnRuleColor',
            'columnRuleStyle',
            'columnRuleWidth'
        ],
        columns: [
            'columnCount',
            'columnWidth'
        ],
        flex: [
            'flexBasis',
            'flexGrow',
            'flexShrink'
        ],
        flexFlow: [
            'flexDirection',
            'flexWrap'
        ],
        font: [
            'fontFamily',
            'fontFeatureSettings',
            'fontKerning',
            'fontLanguageOverride',
            'fontSize',
            'fontSizeAdjust',
            'fontStretch',
            'fontStyle',
            'fontVariant',
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition',
            'fontWeight',
            'lineHeight'
        ],
        fontVariant: [
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition'
        ],
        gap: [
            'columnGap',
            'rowGap'
        ],
        grid: [
            'gridAutoColumns',
            'gridAutoFlow',
            'gridAutoRows',
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        gridArea: [
            'gridColumnEnd',
            'gridColumnStart',
            'gridRowEnd',
            'gridRowStart'
        ],
        gridColumn: [
            'gridColumnEnd',
            'gridColumnStart'
        ],
        gridColumnGap: [
            'columnGap'
        ],
        gridGap: [
            'columnGap',
            'rowGap'
        ],
        gridRow: [
            'gridRowEnd',
            'gridRowStart'
        ],
        gridRowGap: [
            'rowGap'
        ],
        gridTemplate: [
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        listStyle: [
            'listStyleImage',
            'listStylePosition',
            'listStyleType'
        ],
        margin: [
            'marginBottom',
            'marginLeft',
            'marginRight',
            'marginTop'
        ],
        marker: [
            'markerEnd',
            'markerMid',
            'markerStart'
        ],
        mask: [
            'maskClip',
            'maskComposite',
            'maskImage',
            'maskMode',
            'maskOrigin',
            'maskPositionX',
            'maskPositionY',
            'maskRepeat',
            'maskSize'
        ],
        maskPosition: [
            'maskPositionX',
            'maskPositionY'
        ],
        outline: [
            'outlineColor',
            'outlineStyle',
            'outlineWidth'
        ],
        overflow: [
            'overflowX',
            'overflowY'
        ],
        padding: [
            'paddingBottom',
            'paddingLeft',
            'paddingRight',
            'paddingTop'
        ],
        placeContent: [
            'alignContent',
            'justifyContent'
        ],
        placeItems: [
            'alignItems',
            'justifyItems'
        ],
        placeSelf: [
            'alignSelf',
            'justifySelf'
        ],
        textDecoration: [
            'textDecorationColor',
            'textDecorationLine',
            'textDecorationStyle'
        ],
        textEmphasis: [
            'textEmphasisColor',
            'textEmphasisStyle'
        ],
        transition: [
            'transitionDelay',
            'transitionDuration',
            'transitionProperty',
            'transitionTimingFunction'
        ],
        wordWrap: [
            'overflowWrap'
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes = [
        'Webkit',
        'ms',
        'Moz',
        'O'
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) return '';
        if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ('' + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error('Unsupported style property %s. Did you mean %s?', name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error('`NaN` is an invalid value for the `%s` css style property.', name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error('`Infinity` is an invalid value for the `%s` css style property.', name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf('-') > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === 'number') {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = '';
        var delimiter = '';
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') styleName = 'cssFloat';
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === 'boolean' || value === '';
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + ',' + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = '__html';
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + 'use `dangerouslySetInnerHTML`.');
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');
            if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== 'object') throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf('-') === -1) return typeof props.is === 'string';
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: 'accept',
        acceptcharset: 'acceptCharset',
        'accept-charset': 'acceptCharset',
        accesskey: 'accessKey',
        action: 'action',
        allowfullscreen: 'allowFullScreen',
        alt: 'alt',
        as: 'as',
        async: 'async',
        autocapitalize: 'autoCapitalize',
        autocomplete: 'autoComplete',
        autocorrect: 'autoCorrect',
        autofocus: 'autoFocus',
        autoplay: 'autoPlay',
        autosave: 'autoSave',
        capture: 'capture',
        cellpadding: 'cellPadding',
        cellspacing: 'cellSpacing',
        challenge: 'challenge',
        charset: 'charSet',
        checked: 'checked',
        children: 'children',
        cite: 'cite',
        class: 'className',
        classid: 'classID',
        classname: 'className',
        cols: 'cols',
        colspan: 'colSpan',
        content: 'content',
        contenteditable: 'contentEditable',
        contextmenu: 'contextMenu',
        controls: 'controls',
        controlslist: 'controlsList',
        coords: 'coords',
        crossorigin: 'crossOrigin',
        dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
        data: 'data',
        datetime: 'dateTime',
        default: 'default',
        defaultchecked: 'defaultChecked',
        defaultvalue: 'defaultValue',
        defer: 'defer',
        dir: 'dir',
        disabled: 'disabled',
        disablepictureinpicture: 'disablePictureInPicture',
        disableremoteplayback: 'disableRemotePlayback',
        download: 'download',
        draggable: 'draggable',
        enctype: 'encType',
        enterkeyhint: 'enterKeyHint',
        for: 'htmlFor',
        form: 'form',
        formmethod: 'formMethod',
        formaction: 'formAction',
        formenctype: 'formEncType',
        formnovalidate: 'formNoValidate',
        formtarget: 'formTarget',
        frameborder: 'frameBorder',
        headers: 'headers',
        height: 'height',
        hidden: 'hidden',
        high: 'high',
        href: 'href',
        hreflang: 'hrefLang',
        htmlfor: 'htmlFor',
        httpequiv: 'httpEquiv',
        'http-equiv': 'httpEquiv',
        icon: 'icon',
        id: 'id',
        imagesizes: 'imageSizes',
        imagesrcset: 'imageSrcSet',
        innerhtml: 'innerHTML',
        inputmode: 'inputMode',
        integrity: 'integrity',
        is: 'is',
        itemid: 'itemID',
        itemprop: 'itemProp',
        itemref: 'itemRef',
        itemscope: 'itemScope',
        itemtype: 'itemType',
        keyparams: 'keyParams',
        keytype: 'keyType',
        kind: 'kind',
        label: 'label',
        lang: 'lang',
        list: 'list',
        loop: 'loop',
        low: 'low',
        manifest: 'manifest',
        marginwidth: 'marginWidth',
        marginheight: 'marginHeight',
        max: 'max',
        maxlength: 'maxLength',
        media: 'media',
        mediagroup: 'mediaGroup',
        method: 'method',
        min: 'min',
        minlength: 'minLength',
        multiple: 'multiple',
        muted: 'muted',
        name: 'name',
        nomodule: 'noModule',
        nonce: 'nonce',
        novalidate: 'noValidate',
        open: 'open',
        optimum: 'optimum',
        pattern: 'pattern',
        placeholder: 'placeholder',
        playsinline: 'playsInline',
        poster: 'poster',
        preload: 'preload',
        profile: 'profile',
        radiogroup: 'radioGroup',
        readonly: 'readOnly',
        referrerpolicy: 'referrerPolicy',
        rel: 'rel',
        required: 'required',
        reversed: 'reversed',
        role: 'role',
        rows: 'rows',
        rowspan: 'rowSpan',
        sandbox: 'sandbox',
        scope: 'scope',
        scoped: 'scoped',
        scrolling: 'scrolling',
        seamless: 'seamless',
        selected: 'selected',
        shape: 'shape',
        size: 'size',
        sizes: 'sizes',
        span: 'span',
        spellcheck: 'spellCheck',
        src: 'src',
        srcdoc: 'srcDoc',
        srclang: 'srcLang',
        srcset: 'srcSet',
        start: 'start',
        step: 'step',
        style: 'style',
        summary: 'summary',
        tabindex: 'tabIndex',
        target: 'target',
        title: 'title',
        type: 'type',
        usemap: 'useMap',
        value: 'value',
        width: 'width',
        wmode: 'wmode',
        wrap: 'wrap',
        // SVG
        about: 'about',
        accentheight: 'accentHeight',
        'accent-height': 'accentHeight',
        accumulate: 'accumulate',
        additive: 'additive',
        alignmentbaseline: 'alignmentBaseline',
        'alignment-baseline': 'alignmentBaseline',
        allowreorder: 'allowReorder',
        alphabetic: 'alphabetic',
        amplitude: 'amplitude',
        arabicform: 'arabicForm',
        'arabic-form': 'arabicForm',
        ascent: 'ascent',
        attributename: 'attributeName',
        attributetype: 'attributeType',
        autoreverse: 'autoReverse',
        azimuth: 'azimuth',
        basefrequency: 'baseFrequency',
        baselineshift: 'baselineShift',
        'baseline-shift': 'baselineShift',
        baseprofile: 'baseProfile',
        bbox: 'bbox',
        begin: 'begin',
        bias: 'bias',
        by: 'by',
        calcmode: 'calcMode',
        capheight: 'capHeight',
        'cap-height': 'capHeight',
        clip: 'clip',
        clippath: 'clipPath',
        'clip-path': 'clipPath',
        clippathunits: 'clipPathUnits',
        cliprule: 'clipRule',
        'clip-rule': 'clipRule',
        color: 'color',
        colorinterpolation: 'colorInterpolation',
        'color-interpolation': 'colorInterpolation',
        colorinterpolationfilters: 'colorInterpolationFilters',
        'color-interpolation-filters': 'colorInterpolationFilters',
        colorprofile: 'colorProfile',
        'color-profile': 'colorProfile',
        colorrendering: 'colorRendering',
        'color-rendering': 'colorRendering',
        contentscripttype: 'contentScriptType',
        contentstyletype: 'contentStyleType',
        cursor: 'cursor',
        cx: 'cx',
        cy: 'cy',
        d: 'd',
        datatype: 'datatype',
        decelerate: 'decelerate',
        descent: 'descent',
        diffuseconstant: 'diffuseConstant',
        direction: 'direction',
        display: 'display',
        divisor: 'divisor',
        dominantbaseline: 'dominantBaseline',
        'dominant-baseline': 'dominantBaseline',
        dur: 'dur',
        dx: 'dx',
        dy: 'dy',
        edgemode: 'edgeMode',
        elevation: 'elevation',
        enablebackground: 'enableBackground',
        'enable-background': 'enableBackground',
        end: 'end',
        exponent: 'exponent',
        externalresourcesrequired: 'externalResourcesRequired',
        fill: 'fill',
        fillopacity: 'fillOpacity',
        'fill-opacity': 'fillOpacity',
        fillrule: 'fillRule',
        'fill-rule': 'fillRule',
        filter: 'filter',
        filterres: 'filterRes',
        filterunits: 'filterUnits',
        floodopacity: 'floodOpacity',
        'flood-opacity': 'floodOpacity',
        floodcolor: 'floodColor',
        'flood-color': 'floodColor',
        focusable: 'focusable',
        fontfamily: 'fontFamily',
        'font-family': 'fontFamily',
        fontsize: 'fontSize',
        'font-size': 'fontSize',
        fontsizeadjust: 'fontSizeAdjust',
        'font-size-adjust': 'fontSizeAdjust',
        fontstretch: 'fontStretch',
        'font-stretch': 'fontStretch',
        fontstyle: 'fontStyle',
        'font-style': 'fontStyle',
        fontvariant: 'fontVariant',
        'font-variant': 'fontVariant',
        fontweight: 'fontWeight',
        'font-weight': 'fontWeight',
        format: 'format',
        from: 'from',
        fx: 'fx',
        fy: 'fy',
        g1: 'g1',
        g2: 'g2',
        glyphname: 'glyphName',
        'glyph-name': 'glyphName',
        glyphorientationhorizontal: 'glyphOrientationHorizontal',
        'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
        glyphorientationvertical: 'glyphOrientationVertical',
        'glyph-orientation-vertical': 'glyphOrientationVertical',
        glyphref: 'glyphRef',
        gradienttransform: 'gradientTransform',
        gradientunits: 'gradientUnits',
        hanging: 'hanging',
        horizadvx: 'horizAdvX',
        'horiz-adv-x': 'horizAdvX',
        horizoriginx: 'horizOriginX',
        'horiz-origin-x': 'horizOriginX',
        ideographic: 'ideographic',
        imagerendering: 'imageRendering',
        'image-rendering': 'imageRendering',
        in2: 'in2',
        in: 'in',
        inlist: 'inlist',
        intercept: 'intercept',
        k1: 'k1',
        k2: 'k2',
        k3: 'k3',
        k4: 'k4',
        k: 'k',
        kernelmatrix: 'kernelMatrix',
        kernelunitlength: 'kernelUnitLength',
        kerning: 'kerning',
        keypoints: 'keyPoints',
        keysplines: 'keySplines',
        keytimes: 'keyTimes',
        lengthadjust: 'lengthAdjust',
        letterspacing: 'letterSpacing',
        'letter-spacing': 'letterSpacing',
        lightingcolor: 'lightingColor',
        'lighting-color': 'lightingColor',
        limitingconeangle: 'limitingConeAngle',
        local: 'local',
        markerend: 'markerEnd',
        'marker-end': 'markerEnd',
        markerheight: 'markerHeight',
        markermid: 'markerMid',
        'marker-mid': 'markerMid',
        markerstart: 'markerStart',
        'marker-start': 'markerStart',
        markerunits: 'markerUnits',
        markerwidth: 'markerWidth',
        mask: 'mask',
        maskcontentunits: 'maskContentUnits',
        maskunits: 'maskUnits',
        mathematical: 'mathematical',
        mode: 'mode',
        numoctaves: 'numOctaves',
        offset: 'offset',
        opacity: 'opacity',
        operator: 'operator',
        order: 'order',
        orient: 'orient',
        orientation: 'orientation',
        origin: 'origin',
        overflow: 'overflow',
        overlineposition: 'overlinePosition',
        'overline-position': 'overlinePosition',
        overlinethickness: 'overlineThickness',
        'overline-thickness': 'overlineThickness',
        paintorder: 'paintOrder',
        'paint-order': 'paintOrder',
        panose1: 'panose1',
        'panose-1': 'panose1',
        pathlength: 'pathLength',
        patterncontentunits: 'patternContentUnits',
        patterntransform: 'patternTransform',
        patternunits: 'patternUnits',
        pointerevents: 'pointerEvents',
        'pointer-events': 'pointerEvents',
        points: 'points',
        pointsatx: 'pointsAtX',
        pointsaty: 'pointsAtY',
        pointsatz: 'pointsAtZ',
        prefix: 'prefix',
        preservealpha: 'preserveAlpha',
        preserveaspectratio: 'preserveAspectRatio',
        primitiveunits: 'primitiveUnits',
        property: 'property',
        r: 'r',
        radius: 'radius',
        refx: 'refX',
        refy: 'refY',
        renderingintent: 'renderingIntent',
        'rendering-intent': 'renderingIntent',
        repeatcount: 'repeatCount',
        repeatdur: 'repeatDur',
        requiredextensions: 'requiredExtensions',
        requiredfeatures: 'requiredFeatures',
        resource: 'resource',
        restart: 'restart',
        result: 'result',
        results: 'results',
        rotate: 'rotate',
        rx: 'rx',
        ry: 'ry',
        scale: 'scale',
        security: 'security',
        seed: 'seed',
        shaperendering: 'shapeRendering',
        'shape-rendering': 'shapeRendering',
        slope: 'slope',
        spacing: 'spacing',
        specularconstant: 'specularConstant',
        specularexponent: 'specularExponent',
        speed: 'speed',
        spreadmethod: 'spreadMethod',
        startoffset: 'startOffset',
        stddeviation: 'stdDeviation',
        stemh: 'stemh',
        stemv: 'stemv',
        stitchtiles: 'stitchTiles',
        stopcolor: 'stopColor',
        'stop-color': 'stopColor',
        stopopacity: 'stopOpacity',
        'stop-opacity': 'stopOpacity',
        strikethroughposition: 'strikethroughPosition',
        'strikethrough-position': 'strikethroughPosition',
        strikethroughthickness: 'strikethroughThickness',
        'strikethrough-thickness': 'strikethroughThickness',
        string: 'string',
        stroke: 'stroke',
        strokedasharray: 'strokeDasharray',
        'stroke-dasharray': 'strokeDasharray',
        strokedashoffset: 'strokeDashoffset',
        'stroke-dashoffset': 'strokeDashoffset',
        strokelinecap: 'strokeLinecap',
        'stroke-linecap': 'strokeLinecap',
        strokelinejoin: 'strokeLinejoin',
        'stroke-linejoin': 'strokeLinejoin',
        strokemiterlimit: 'strokeMiterlimit',
        'stroke-miterlimit': 'strokeMiterlimit',
        strokewidth: 'strokeWidth',
        'stroke-width': 'strokeWidth',
        strokeopacity: 'strokeOpacity',
        'stroke-opacity': 'strokeOpacity',
        suppresscontenteditablewarning: 'suppressContentEditableWarning',
        suppresshydrationwarning: 'suppressHydrationWarning',
        surfacescale: 'surfaceScale',
        systemlanguage: 'systemLanguage',
        tablevalues: 'tableValues',
        targetx: 'targetX',
        targety: 'targetY',
        textanchor: 'textAnchor',
        'text-anchor': 'textAnchor',
        textdecoration: 'textDecoration',
        'text-decoration': 'textDecoration',
        textlength: 'textLength',
        textrendering: 'textRendering',
        'text-rendering': 'textRendering',
        to: 'to',
        transform: 'transform',
        typeof: 'typeof',
        u1: 'u1',
        u2: 'u2',
        underlineposition: 'underlinePosition',
        'underline-position': 'underlinePosition',
        underlinethickness: 'underlineThickness',
        'underline-thickness': 'underlineThickness',
        unicode: 'unicode',
        unicodebidi: 'unicodeBidi',
        'unicode-bidi': 'unicodeBidi',
        unicoderange: 'unicodeRange',
        'unicode-range': 'unicodeRange',
        unitsperem: 'unitsPerEm',
        'units-per-em': 'unitsPerEm',
        unselectable: 'unselectable',
        valphabetic: 'vAlphabetic',
        'v-alphabetic': 'vAlphabetic',
        values: 'values',
        vectoreffect: 'vectorEffect',
        'vector-effect': 'vectorEffect',
        version: 'version',
        vertadvy: 'vertAdvY',
        'vert-adv-y': 'vertAdvY',
        vertoriginx: 'vertOriginX',
        'vert-origin-x': 'vertOriginX',
        vertoriginy: 'vertOriginY',
        'vert-origin-y': 'vertOriginY',
        vhanging: 'vHanging',
        'v-hanging': 'vHanging',
        videographic: 'vIdeographic',
        'v-ideographic': 'vIdeographic',
        viewbox: 'viewBox',
        viewtarget: 'viewTarget',
        visibility: 'visibility',
        vmathematical: 'vMathematical',
        'v-mathematical': 'vMathematical',
        vocab: 'vocab',
        widths: 'widths',
        wordspacing: 'wordSpacing',
        'word-spacing': 'wordSpacing',
        writingmode: 'writingMode',
        'writing-mode': 'writingMode',
        x1: 'x1',
        x2: 'x2',
        x: 'x',
        xchannelselector: 'xChannelSelector',
        xheight: 'xHeight',
        'x-height': 'xHeight',
        xlinkactuate: 'xlinkActuate',
        'xlink:actuate': 'xlinkActuate',
        xlinkarcrole: 'xlinkArcrole',
        'xlink:arcrole': 'xlinkArcrole',
        xlinkhref: 'xlinkHref',
        'xlink:href': 'xlinkHref',
        xlinkrole: 'xlinkRole',
        'xlink:role': 'xlinkRole',
        xlinkshow: 'xlinkShow',
        'xlink:show': 'xlinkShow',
        xlinktitle: 'xlinkTitle',
        'xlink:title': 'xlinkTitle',
        xlinktype: 'xlinkType',
        'xlink:type': 'xlinkType',
        xmlbase: 'xmlBase',
        'xml:base': 'xmlBase',
        xmllang: 'xmlLang',
        'xml:lang': 'xmlLang',
        xmlns: 'xmlns',
        'xml:space': 'xmlSpace',
        xmlnsxlink: 'xmlnsXlink',
        'xmlns:xlink': 'xmlnsXlink',
        xmlspace: 'xmlSpace',
        y1: 'y1',
        y2: 'y2',
        y: 'y',
        ychannelselector: 'yChannelSelector',
        z: 'z',
        zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
        'aria-current': 0,
        // state
        'aria-description': 0,
        'aria-details': 0,
        'aria-disabled': 0,
        // state
        'aria-hidden': 0,
        // state
        'aria-invalid': 0,
        // state
        'aria-keyshortcuts': 0,
        'aria-label': 0,
        'aria-roledescription': 0,
        // Widget Attributes
        'aria-autocomplete': 0,
        'aria-checked': 0,
        'aria-expanded': 0,
        'aria-haspopup': 0,
        'aria-level': 0,
        'aria-modal': 0,
        'aria-multiline': 0,
        'aria-multiselectable': 0,
        'aria-orientation': 0,
        'aria-placeholder': 0,
        'aria-pressed': 0,
        'aria-readonly': 0,
        'aria-required': 0,
        'aria-selected': 0,
        'aria-sort': 0,
        'aria-valuemax': 0,
        'aria-valuemin': 0,
        'aria-valuenow': 0,
        'aria-valuetext': 0,
        // Live Region Attributes
        'aria-atomic': 0,
        'aria-busy': 0,
        'aria-live': 0,
        'aria-relevant': 0,
        // Drag-and-Drop Attributes
        'aria-dropeffect': 0,
        'aria-grabbed': 0,
        // Relationship Attributes
        'aria-activedescendant': 0,
        'aria-colcount': 0,
        'aria-colindex': 0,
        'aria-colspan': 0,
        'aria-controls': 0,
        'aria-describedby': 0,
        'aria-errormessage': 0,
        'aria-flowto': 0,
        'aria-labelledby': 0,
        'aria-owns': 0,
        'aria-posinset': 0,
        'aria-rowcount': 0,
        'aria-rowindex': 0,
        'aria-rowspan': 0,
        'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (invalidProps.length === 1) error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
            error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error('Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === 'innerhtml') {
            error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'aria') {
            error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
            error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'number' && isNaN(value)) {
            error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (unknownProps.length === 1) error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== 'function') throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== 'function') throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options, 'passive', {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
    } catch (e) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === 'undefined' || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent('Event');
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers
            window.addEventListener('error', handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, 'event', windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener('error', handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get(key) {
        return key._reactInternals;
    }
    function has(key) {
        return key._reactInternals !== undefined;
    }
    function set(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode);
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || 'A component');
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error('Unable to find node on an unmounted component.');
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error('Unable to find node on an unmounted component.');
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error('Unable to find node on an unmounted component.');
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error('Unable to find node on an unmounted component.');
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error('React instrumentation encountered an error: %s.', err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === 'function') {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === 'function') try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error('React instrumentation encountered an error: %s', err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return 'Sync';
        if (lane & InputContinuousHydrationLane) return 'InputContinuousHydration';
        if (lane & InputContinuousLane) return 'InputContinuous';
        if (lane & DefaultHydrationLane) return 'DefaultHydration';
        if (lane & DefaultLane) return 'Default';
        if (lane & TransitionHydrationLane) return 'TransitionHydration';
        if (lane & TransitionLanes) return 'Transition';
        if (lane & RetryLanes) return 'Retry';
        if (lane & SelectiveHydrationLane) return 'SelectiveHydration';
        if (lane & IdleHydrationLane) return 'IdleHydration';
        if (lane & IdleLane) return 'Idle';
        if (lane & OffscreenLane) return 'Offscreen';
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error('Should have found matching lanes. This is a bug in React.');
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error('Should have found matching lanes. This is a bug in React.');
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
            entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        'mousedown',
        'mouseup',
        'touchcancel',
        'touchend',
        'touchstart',
        'auxclick',
        'dblclick',
        'pointercancel',
        'pointerdown',
        'pointerup',
        'dragend',
        'dragstart',
        'drop',
        'compositionend',
        'compositionstart',
        'keydown',
        'keypress',
        'keyup',
        'input',
        'textInput',
        'copy',
        'cut',
        'paste',
        'click',
        'change',
        'contextmenu',
        'reset',
        'submit'
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case 'focusin':
            case 'focusout':
                queuedFocus = null;
                break;
            case 'dragenter':
            case 'dragleave':
                queuedDrag = null;
                break;
            case 'mouseover':
            case 'mouseout':
                queuedMouse = null;
                break;
            case 'pointerover':
            case 'pointerout':
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case 'focusin':
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case 'dragenter':
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case 'mouseover':
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case 'pointerover':
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case 'gotpointercapture':
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case 'cancel':
            case 'click':
            case 'close':
            case 'contextmenu':
            case 'copy':
            case 'cut':
            case 'auxclick':
            case 'dblclick':
            case 'dragend':
            case 'dragstart':
            case 'drop':
            case 'focusin':
            case 'focusout':
            case 'input':
            case 'invalid':
            case 'keydown':
            case 'keypress':
            case 'keyup':
            case 'mousedown':
            case 'mouseup':
            case 'paste':
            case 'pause':
            case 'play':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointerup':
            case 'ratechange':
            case 'reset':
            case 'resize':
            case 'seeked':
            case 'submit':
            case 'touchcancel':
            case 'touchend':
            case 'touchstart':
            case 'volumechange':
            // eslint-disable-next-line no-fallthrough
            case 'change':
            case 'selectionchange':
            case 'textInput':
            case 'compositionstart':
            case 'compositionend':
            case 'compositionupdate':
            // eslint-disable-next-line no-fallthrough
            case 'beforeblur':
            case 'afterblur':
            // eslint-disable-next-line no-fallthrough
            case 'beforeinput':
            case 'blur':
            case 'fullscreenchange':
            case 'focus':
            case 'hashchange':
            case 'popstate':
            case 'select':
            case 'selectstart':
                return DiscreteEventPriority;
            case 'drag':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'mousemove':
            case 'mouseout':
            case 'mouseover':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'scroll':
            case 'toggle':
            case 'touchmove':
            case 'wheel':
            // eslint-disable-next-line no-fallthrough
            case 'mouseenter':
            case 'mouseleave':
            case 'pointerenter':
            case 'pointerleave':
                return ContinuousEventPriority;
            case 'message':
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ('value' in root) return root.value;
        return root.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== 'unknown') event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== 'unknown') // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === 'mousemove') {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ('movementX' in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ('movementY' in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified'
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        '8': 'Backspace',
        '9': 'Tab',
        '12': 'Clear',
        '13': 'Enter',
        '16': 'Shift',
        '17': 'Control',
        '18': 'Alt',
        '19': 'Pause',
        '20': 'CapsLock',
        '27': 'Escape',
        '32': ' ',
        '33': 'PageUp',
        '34': 'PageDown',
        '35': 'End',
        '36': 'Home',
        '37': 'ArrowLeft',
        '38': 'ArrowUp',
        '39': 'ArrowRight',
        '40': 'ArrowDown',
        '45': 'Insert',
        '46': 'Delete',
        '112': 'F1',
        '113': 'F2',
        '114': 'F3',
        '115': 'F4',
        '116': 'F5',
        '117': 'F6',
        '118': 'F7',
        '119': 'F8',
        '120': 'F9',
        '121': 'F10',
        '122': 'F11',
        '123': 'F12',
        '144': 'NumLock',
        '145': 'ScrollLock',
        '224': 'Meta'
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        return '';
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') return getEventCharCode(event);
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;
    if (canUseDOM && 'documentMode' in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste'
        ]);
        registerTwoPhaseEvent('onCompositionEnd', [
            'compositionend',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionStart', [
            'compositionstart',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionUpdate', [
            'compositionupdate',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case 'compositionstart':
                return 'onCompositionStart';
            case 'compositionend':
                return 'onCompositionEnd';
            case 'compositionupdate':
                return 'onCompositionUpdate';
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case 'keyup':
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'keydown':
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = 'onCompositionStart';
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = 'onCompositionEnd';
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === 'onCompositionStart') isComposing = initialize(nativeEventTarget);
            else if (eventType === 'onCompositionEnd') {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case 'compositionend':
                return getDataFromCustomEvent(nativeEvent);
            case 'keypress':
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case 'textInput':
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case 'paste':
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case 'keypress':
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case 'compositionend':
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === 'input') return !!supportedInputTypes[elem.type];
        if (nodeName === 'textarea') return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent('onChange', [
            'change',
            'click',
            'focusin',
            'focusout',
            'input',
            'keydown',
            'keyup',
            'selectionchange'
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, 'onChange');
        if (listeners.length > 0) {
            var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === 'change') return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === 'focusin') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === 'focusout') stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === 'click') return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === 'input' || domEventName === 'change') return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== 'number') return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === 'focusout') handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent('onMouseEnter', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onMouseLeave', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onPointerEnter', [
            'pointerout',
            'pointerover'
        ]);
        registerDirectEvent('onPointerLeave', [
            'pointerout',
            'pointerover'
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
        var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = 'onMouseLeave';
        var enterEventType = 'onMouseEnter';
        var eventTypePrefix = 'mouse';
        if (domEventName === 'pointerout' || domEventName === 'pointerover') {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = 'onPointerLeave';
            enterEventType = 'onPointerEnter';
            eventTypePrefix = 'pointer';
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ('contains' in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === 'string';
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === 'function') priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ('selectionStart' in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent('onSelect', [
            'focusout',
            'contextmenu',
            'dragend',
            'focusin',
            'keydown',
            'keyup',
            'mousedown',
            'mouseup',
            'selectionchange'
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ('selectionStart' in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');
            if (listeners.length > 0) {
                var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case 'focusin':
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case 'focusout':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'mousedown':
                mouseDown = true;
                break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'selectionchange':
                if (skipSelectionChangeEvent) break;
            // falls through
            case 'keydown':
            case 'keyup':
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!('TransitionEvent' in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        'abort',
        'auxClick',
        'cancel',
        'canPlay',
        'canPlayThrough',
        'click',
        'close',
        'contextMenu',
        'copy',
        'cut',
        'drag',
        'dragEnd',
        'dragEnter',
        'dragExit',
        'dragLeave',
        'dragOver',
        'dragStart',
        'drop',
        'durationChange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'gotPointerCapture',
        'input',
        'invalid',
        'keyDown',
        'keyPress',
        'keyUp',
        'load',
        'loadedData',
        'loadedMetadata',
        'loadStart',
        'lostPointerCapture',
        'mouseDown',
        'mouseMove',
        'mouseOut',
        'mouseOver',
        'mouseUp',
        'paste',
        'pause',
        'play',
        'playing',
        'pointerCancel',
        'pointerDown',
        'pointerMove',
        'pointerOut',
        'pointerOver',
        'pointerUp',
        'progress',
        'rateChange',
        'reset',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'submit',
        'suspend',
        'timeUpdate',
        'touchCancel',
        'touchEnd',
        'touchStart',
        'volumeChange',
        'scroll',
        'toggle',
        'touchMove',
        'waiting',
        'wheel'
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, 'on' + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');
        registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');
        registerSimpleEvent(ANIMATION_START, 'onAnimationStart');
        registerSimpleEvent('dblclick', 'onDoubleClick');
        registerSimpleEvent('focusin', 'onFocus');
        registerSimpleEvent('focusout', 'onBlur');
        registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case 'keypress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case 'keydown':
            case 'keyup':
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case 'focusin':
                reactEventType = 'focus';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'focusout':
                reactEventType = 'blur';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'beforeblur':
            case 'afterblur':
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'click':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            /* falls through */ case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case 'scroll':
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case 'wheel':
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case 'copy':
            case 'cut':
            case 'paste':
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        'abort',
        'canplay',
        'canplaythrough',
        'durationchange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'pause',
        'play',
        'playing',
        'progress',
        'ratechange',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'volumechange',
        'waiting'
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        'cancel',
        'close',
        'invalid',
        'load',
        'scroll',
        'toggle'
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || 'unknown-event';
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== 'selectionchange') {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent('selectionchange', false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') isPassiveListener = true;
        }
        targetContainer;
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + 'Capture' : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + 'Capture';
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error('Extra attributes from the server: %s', names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error('Text content does not match server-rendered HTML.');
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === 'number') setTextContent(domElement, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === 'select') {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                props = rawProps;
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                props = rawProps;
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                props = rawProps;
                break;
            case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
            case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'select':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'textarea':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = '';
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = '';
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string' || typeof nextProp === 'number') (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
            case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                break;
            case 'input':
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case 'value':
                    break;
                case 'checked':
                    break;
                case 'selected':
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === 'number') {
                    if (domElement.textContent !== '' + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            '' + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === 'boolean') {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute('style');
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'select':
            case 'option':
                break;
            default:
                if (typeof rawProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === '') // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case 'input':
                restoreControlledState(domElement, props);
                return;
            case 'textarea':
                restoreControlledState$2(domElement, props);
                return;
            case 'select':
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        'address',
        'applet',
        'area',
        'article',
        'aside',
        'base',
        'basefont',
        'bgsound',
        'blockquote',
        'body',
        'br',
        'button',
        'caption',
        'center',
        'col',
        'colgroup',
        'dd',
        'details',
        'dir',
        'div',
        'dl',
        'dt',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'frame',
        'frameset',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'iframe',
        'img',
        'input',
        'isindex',
        'li',
        'link',
        'listing',
        'main',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'nav',
        'noembed',
        'noframes',
        'noscript',
        'object',
        'ol',
        'p',
        'param',
        'plaintext',
        'pre',
        'script',
        'section',
        'select',
        'source',
        'style',
        'summary',
        'table',
        'tbody',
        'td',
        'template',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'title',
        'tr',
        'track',
        'ul',
        'wbr',
        'xmp'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        'applet',
        'caption',
        'html',
        'table',
        'td',
        'th',
        'marquee',
        'object',
        'template',
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        'foreignObject',
        'desc',
        'title'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        'button'
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        'dd',
        'dt',
        'li',
        'option',
        'optgroup',
        'p',
        'rp',
        'rt'
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') ancestorInfo.formTag = info;
        if (tag === 'a') ancestorInfo.aTagInScope = info;
        if (tag === 'button') ancestorInfo.buttonTagInScope = info;
        if (tag === 'nobr') ancestorInfo.nobrTagInScope = info;
        if (tag === 'p') ancestorInfo.pTagInButtonScope = info;
        if (tag === 'li') ancestorInfo.listItemTagAutoclosing = info;
        if (tag === 'dd' || tag === 'dt') ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
                return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
                return tag === '#text';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
                return tag === 'col' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
                return tag === 'head' || tag === 'body' || tag === 'frameset';
            case 'frameset':
                return tag === 'frame';
            case '#document':
                return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
            case 'rp':
            case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frameset':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':
            case 'pre':
            case 'listing':
            case 'table':
            case 'hr':
            case 'xmp':
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return ancestorInfo.pTagInButtonScope;
            case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case 'li':
                return ancestorInfo.listItemTagAutoclosing;
            case 'dd':
            case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
            case 'button':
                return ancestorInfo.buttonTagInScope;
            case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case 'nobr':
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error('validateDOMNesting: when childText is passed, childTag should be null');
            childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
            if (/\S/.test(childText)) tagDisplayName = 'Text nodes';
            else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = '<' + childTag + '>';
        if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === 'string' || typeof props.children === 'number') {
            var string = '' + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                return !!props.autoFocus;
            case 'img':
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
            var string = '' + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                if (newProps.autoFocus) domElement.focus();
                return;
            case 'img':
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, '');
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node); // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        // TODO: Does this work for all element types? What about MathML? Should we
        // pass host context to this method?
        instance;
        var style = instance.style;
        if (typeof style.setProperty === 'function') style.setProperty('display', 'none', 'important');
        else style.display = 'none';
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = '';
    }
    function unhideInstance(instance, props) {
        instance;
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
        instance.style.display = dangerousStyleValue('display', display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = '';
        else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) container.removeChild(container.documentElement);
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === '' || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset;
        var digest, message, stack;
        if (dataset) {
            digest = dataset.dgst;
            message = dataset.msg;
            stack = dataset.stck;
        }
        return {
            message: message,
            digest: digest,
            stack: stack
        };
    // const nextSibling = instance.nextSibling;
    // if (nextSibling) {
    //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
    //   value.message = dataset.msg;
    //   value.hash = dataset.hash;
    //   if (true) {
    //     value.stack = dataset.stack;
    //   }
    // }
    // return value;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== 'head' && parentType !== 'body';
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;
    var internalEventHandlerListenersKey = '__reactListeners$' + randomKey;
    var internalEventHandlesSetKey = '__reactHandles$' + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error('getNodeFromInstance: Invalid argument.');
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index < 0) {
            error('Unexpected pop.');
            return;
        }
        if (fiber !== fiberStack[index]) error('Unexpected Fiber popped.');
        cursor.current = valueStack[index];
        valueStack[index] = null;
        fiberStack[index] = null;
        index--;
    }
    function push(cursor, value, fiber) {
        index++;
        valueStack[index] = cursor.current;
        fiberStack[index] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== 'function') {
            var componentName = getComponentNameFromFiber(fiber) || 'Unknown';
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
        var name = getComponentNameFromFiber(fiber) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = '';
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating) error('We should not be hydrating here. This is a bug in React. Please file a bug.');
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(', ');
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== 'object') return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== 'object') throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
            // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self) && // Will already throw with "Function components cannot have string refs"
            !(element._owner && element._owner.tag !== ClassComponent) && // Will already warn with "Function components cannot be given refs"
            !(typeof element.type === 'function' && !isReactClass(element.type)) && // Will already throw with "Element ref was specified as a string (someStringRef) but no owner was set"
            element._owner) {
                var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
                if (!didWarnAboutStringRefs[componentName]) {
                    error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + 'bug in React. Please file an issue.');
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, 'ref');
                var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== 'string') throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + ' the following reasons:\n' + '1. You may be adding a ref to a function component\n' + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + '3. You have multiple copies of React loaded\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.
                // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== 'object' || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== 'string') break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== 'function') throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                if (!didWarnAboutGenerators) error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error('An iterable object provided no iterator.');
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                    // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error('Resuming work not yet implemented.');
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var concurrentQueues = null;
    function pushConcurrentUpdateQueue(queue) {
        if (concurrentQueues === null) concurrentQueues = [
            queue
        ];
        else concurrentQueues.push(queue);
    }
    function finishQueueingConcurrentUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (concurrentQueues !== null) {
            for(var i = 0; i < concurrentQueues.length; i++){
                var queue = concurrentQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            concurrentQueues = null;
        }
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
    }
    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    } // Calling this function outside this module should only be done for backwards
    // compatibility and should always be accompanied by a warning.
    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
        if (isUnsafeClassRenderPhaseUpdate()) {
            // This is an unsafe render phase update. Add directly to the update
            // queue so we can process it immediately during the current render.
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
            // this fiber. This is for backwards compatibility in the case where you
            // update a different component during render phase than the one that is
            // currently renderings (a pattern that is accompanied by a warning).
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null); // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // If the update was already committed, we should not queue its
                    // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true);
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if (typeof callback !== 'function') throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
            }
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = '';
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += ' ';
                    row += newHookName + '\n';
                    table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass);
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error('Rendered more hooks than during the previous render.');
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === 'function' ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer;
        var current = currentHook; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first);
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved);
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error('The result of getServerSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error('The result of getSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error('The result of getSnapshot should be cached to avoid an infinite loop');
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === 'function') // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === 'function') {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty('current')) error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += 'H' + localId.toString(32);
            id += ':';
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) {
                            // Fast path. We can bail out without scheduling React to re-render.
                            // It's still possible that we'll need to rebase this update later,
                            // if the component re-renders for a different reason and by that
                            // time the reducer has changed.
                            // TODO: Do we still need to entangle transitions in this case?
                            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                            return;
                        }
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    } // TODO: Move to ReactFiberConcurrentUpdates?
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime;
    }
    function recordCommitTime() {
        commitTime = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    var didWarnAboutLegacyContext$1;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    didWarnAboutLegacyContext$1 = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === 'function') return;
        var key = callerName + '_' + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || 'Component';
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'replaceState');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'forceUpdate');
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === 'function') {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || 'Component');
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || 'Component';
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === 'function') error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (ctor.childContextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() instead\n\n.Learn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (ctor.contextTypes && !didWarnAboutLegacyContext$1.has(ctor) && // Strict Mode has its own warning for legacy context, so we can skip
        // this one.
        (workInProgress.mode & StrictLegacyMode) === NoMode) {
            didWarnAboutLegacyContext$1.add(ctor);
            error("%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext() with static contextType instead.\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", name);
        }
        if (instance.contextTypes) error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === 'function') error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || 'A pure component');
        if (typeof instance.componentDidUnmount === 'function') error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === 'function') error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === 'function') error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === 'function') error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === 'function') error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === 'function') error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== 'object' || isArray(_state))) error('%s.state: must be set to an object or null', name);
        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ('contextType' in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== 'object') addendum = ' However, it is set to a ' + typeof contextType + '.';
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = ' Did you accidentally pass the Context.Provider instead?';
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = ' Did you accidentally pass the Context.Consumer instead?';
                else addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || 'Component', addendum);
            }
        }
        if (typeof contextType === 'object' && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? 'null' : 'undefined', componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = 'componentWillMount';
            else if (typeof instance.UNSAFE_componentWillMount === 'function') foundWillMountName = 'UNSAFE_componentWillMount';
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = 'componentWillReceiveProps';
            else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = 'componentWillUpdate';
            else if (typeof instance.UNSAFE_componentWillUpdate === 'function') foundWillUpdateName = 'UNSAFE_componentWillUpdate';
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || 'Component');
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === 'function') instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || 'Component';
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = {};
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === 'object' && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === 'function') {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
                if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
                if (typeof instance.componentWillUpdate === 'function') instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === 'function') workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === 'function') workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    function createCapturedValueAtFiber(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
        };
    }
    function createCapturedValue(value, digest, stack) {
        return {
            value: value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console['error'](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === 'function') {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === 'function') update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== 'function') // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ''
            });
            if (typeof getDerivedStateFromError !== 'function') // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || 'Unknown');
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null);
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update, SyncLane);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
            }
        }
        value = createCapturedValueAtFiber(value, sourceFiber);
        renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null);
    }
    function getSuspendedCache() {
        return null;
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    didWarnAboutDefaultPropsOnFunctionComponent = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(type));
            if (Component.defaultProps !== undefined) {
                var componentName = getComponentNameFromType(type) || 'Unknown';
                if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                    error("%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.", componentName);
                    didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
                }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === 'hidden' || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    function updateFragment(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error('Simulated error coming from DevTools');
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || 'a component');
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error('Should have a current fiber. This is a bug in React.');
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = '';
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) hint = ' Did you wrap a component in React.lazy() more than once?';
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === 'function') {
            var componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
            var warningKey = ownerName || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (Component.defaultProps !== undefined) {
            var componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
                error("%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.", componentName);
                didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
            }
        }
        if (typeof Component.getDerivedStateFromProps === 'function') {
            var _componentName3 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error('%s: Function components do not support contextType.', _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // Special path for hydration
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // Special path for hydration
            var prevState = current.memoizedState;
            if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
            }
            if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                var _primaryChildFragment2 = workInProgress.child;
                var prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment3;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: 'visible',
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
        if (!didSuspend) {
            // This is the first render pass. Attempt to hydrate.
            // We should never be hydrating at this point because it is the first pass,
            // but after we've already committed once.
            warnIfHydrating();
            if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null);
            if (isSuspenseInstanceFallback(suspenseInstance)) {
                // This boundary is in a permanent fallback state. In this case, we'll never
                // get an update and we'll never be able to hydrate the final content. Let's just try the
                // client side render instead.
                var digest, message, stack;
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
                var error;
                if (message) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error(message);
                else error = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                var capturedValue = createCapturedValue(error, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
            }
            // any context has changed, we need to treat is as if the input might have changed.
            var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
            if (didReceiveUpdate || hasContextChanged) {
                // This boundary has changed since the first render. This means that we are now unable to
                // hydrate it. We might still be able to hydrate it using a higher priority lane.
                var root = getWorkInProgressRoot();
                if (root !== null) {
                    var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                    if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                        // Intentionally mutating since this render will get interrupted. This
                        // is one of the very rare times where we mutate the current tree
                        // during the render phase.
                        suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                        var eventTime = NoTimestamp;
                        enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
                        scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
                    }
                } // If we have scheduled higher pri work above, this will probably just abort the render
                // since we now have higher priority work, but in case it doesn't, we need to prepare to
                // render something, if we time out. Even if that requires us to delete everything and
                // skip hydration.
                // Delay having to do this as long as the suspense timeout allows us.
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
                // This component is still pending more data from the server, so we can't hydrate its
                // content. We treat it as if this component suspended itself. It might seem as if
                // we could just try to render it client-side instead. However, this will perform a
                // lot of unnecessary work and is unlikely to complete since it often will suspend
                // on missing data anyway. Additionally, the server might be able to render more
                // than we can on the client yet. In that case we'd end up with more fallback states
                // on the client than if we just leave it alone. If the server times out or errors
                // these should update this boundary to the permanent Fallback state instead.
                // Mark it as having captured (i.e. suspended).
                workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
                workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
                var retry = retryDehydratedSuspenseBoundary.bind(null, current);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
            } else {
                // This is the first attempt.
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
            }
        } else {
            // This is the second render pass. We already attempted to hydrated, but
            // something either suspended or errored.
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during hydration. Try again without hydrating.
                workInProgress.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
            } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.
                workInProgress.flags |= DidCapture;
                return null;
            } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback.
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment4 = workInProgress.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            }
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === 'string') switch(revealOrder.toLowerCase()){
                case 'together':
                case 'forwards':
                case 'backwards':
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case 'forward':
                case 'backward':
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';
        if (isAnArray || isIterable) {
            var type = isAnArray ? 'array' : 'iterable';
            error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === 'function') {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case 'forwards':
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case 'backwards':
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case 'together':
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!('value' in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== 'function') error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            if (current !== null) {
                // A lazy component only mounts if it suspended inside a non-
                // concurrent tree, in an inconsistent state. We want to treat it like
                // a new mount, even though an empty version of it already committed.
                // Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            }
        }
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error('Cannot swap the root fiber.');
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error('Expected parent to have a child.');
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error('Expected to find the previous sibling.');
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case 'hidden':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case 'collapsed':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress);
            resetHydrationState();
            workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
        }
        var wasHydrated = popHydrationState(workInProgress);
        if (nextState !== null && nextState.dehydrated !== null) {
            // We might be inside a hydration state the first time we're picking up this
            // Suspense boundary, and also after we've reentered it for further hydration.
            if (current === null) {
                if (!wasHydrated) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                prepareToHydrateHostSuspenseInstance(workInProgress);
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            } else {
                // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                resetHydrationState();
                if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
                 // If nothing suspended, we need to schedule an effect to mark this boundary
                // as having hydrated so events know that they're free to be invoked.
                // It's also a signal to replay events and the suspense callback.
                // If something suspended, schedule an effect to attach retry listeners.
                // So we might as well always mark this.
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment = workInProgress.child;
                        if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            }
        } else {
            // Successfully completed this tree. If this was a forced client render,
            // there may have been recoverable errors during first hydration
            // attempt. If so, add them to a queue so we can log them in the
            // commit phase.
            upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path
            return true;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                        (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== 'string') {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
                // to its own fiber type so that we can add other kinds of hydration
                // boundaries that aren't associated with a Suspense tree. In anticipation
                // of such a refactor, all the hydration logic is contained in
                // this branch.
                if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
                    var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);
                    if (!fallthroughToNormalSuspensePath) {
                        if (workInProgress.flags & ShouldCapture) // Special case. There were remaining unhydrated nodes. We treat
                        // this as a mismatch. Revert to client rendering.
                        return workInProgress;
                        else // Did not finish hydrating, either because this is the initial
                        // render or because something suspended.
                        return null;
                    } // Continue with the normal Suspense path.
                }
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === 'function') {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === 'function') error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== 'function') {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = 'useLayoutEffect';
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = 'useInsertionEffect';
                        else hookName = 'useEffect';
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === 'function') addendum = '\n\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + hookName + '(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
                        else addendum = ' You returned: ' + destroy;
                        error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onPostCommit === 'function') onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onRender === 'function') onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === 'function') onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === 'function') safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === 'function') {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === 'function') error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty('current')) error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect);
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error('Expected finished root and lanes to be set. This is a bug in React.');
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var offscreenInstance = offscreenFiber.stateNode;
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    offscreenInstance.isHidden = isHidden;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _offscreenInstance = finishedWork.stateNode;
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    _offscreenInstance.isHidden = _isHidden;
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null);
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor('selector.component');
        HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');
        ROLE_TYPE = symbolFor('selector.role');
        TEST_NAME_TYPE = symbolFor('selector.test_id');
        TEXT_TYPE = symbolFor('selector.text');
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== 'undefined';
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error('useInsertionEffect must not schedule updates.');
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    }
    function isUnsafeClassRenderPhaseUpdate(fiber) {
        // Check if this is a render phase update. Only called by class components,
        // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
        return(// decided not to enable it.
        (executionContext & RenderContext) !== NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if ((executionContext & (RenderContext | CommitContext)) === NoContext) // Note that this would still prematurely flush the callbacks
                // if this happens outside render or commit phase (e.g. in an event).
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error('Root did not complete. This is a bug in React.');
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error('Unknown root exit status.');
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error('Root did not complete. This is a bug in React.');
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
        subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress = erroredWork;
                } else erroredWork = workInProgress;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true);
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress !== null)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress !== null && !shouldYield())performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress = completedWork;
        }while (completedWork !== null); // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                    componentStack: componentStack,
                    digest: digest
                });
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Cannot flush passive effects while already rendering.');
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        var root = enqueueUpdate(rootFiber, update, SyncLane);
        var eventTime = requestEventTime();
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    var root = enqueueUpdate(fiber, update, SyncLane);
                    var eventTime = requestEventTime();
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current;
        try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') // Don't replay promises.
            // Don't replay errors if we are hydrating and have already suspended or handled an error
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === 'function') {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== 'function') return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error('Expected resolveFamily to be set during hot reload.');
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (_root !== null) scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
        }
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error('Expected to reach root first.');
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === 'function') return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === 'string') fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === 'object' && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = '';
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== 'string') error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {
            isHidden: false
        };
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = 'DELETED';
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? 'hydrate()' : 'render()';
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = '18.3.1';
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get(component);
        if (fiber === undefined) {
            if (typeof component.render === 'function') throw new Error('Unable to find node on an unmounted component.');
            else {
                var keys = Object.keys(component).join(',');
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || 'Component';
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update, lane);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || 'Unknown');
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== 'function') error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        var root = enqueueUpdate(current$1, update, lane);
        if (root !== null) {
            scheduleUpdateOnFiber(root, current$1, lane, eventTime);
            entangleTransitions(root, current$1, lane);
        }
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                flushSync(function() {
                    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                    if (root !== null) {
                        var eventTime = requestEventTime();
                        scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
                    }
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var lane = SelectiveHydrationLane;
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var lane = requestUpdateLane(fiber);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn('copyWithRename() expects paths of the same length');
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn('copyWithRename() expects paths to be the same except for the deepest key');
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === 'function' ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console['error'](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error('Cannot update an unmounted root.');
        if (typeof arguments[1] === 'function') error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== 'undefined') error("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === 'function') error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error('createRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');
            else if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error('hydrateRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== 'function') error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    var didWarnAboutFindDOMNode = false;
    function findDOMNode(componentOrElement) {
        if (!didWarnAboutFindDOMNode) {
            didWarnAboutFindDOMNode = true;
            error("findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node");
        }
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || 'A component');
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    function hydrate(element, container, callback) {
        error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render(element, container, callback) {
        error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error('Target container is not a DOM element.');
        if (parentComponent == null || !has(parentComponent)) throw new Error('parentComponent must be a valid React Component');
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    var didWarnAboutUnmountComponentAtNode = false;
    function unmountComponentAtNode(container) {
        if (!didWarnAboutUnmountComponentAtNode) {
            didWarnAboutUnmountComponentAtNode = true;
            error("unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot");
        }
        if (!isValidContainerLegacy(container)) throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error('Target container is not a DOM element.');
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: 'react-dom'
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === 'file:' ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ''), 'font-weight:bold');
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"6f0162e9ab224cd4":"jMk1U","8ad4ca65319d28a7":"4OQ2m"}],"4OQ2m":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"j5hep"}],"j5hep":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === 'function') {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === 'function') currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === 'object' && options !== null) {
            var delay = options.delay;
            if (typeof delay === 'number' && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console['error']("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === 'function') // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== 'undefined') {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"3VLq5":[function(require,module,exports,__globalThis) {
var $parcel$ReactRefreshHelpers$161e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
$parcel$ReactRefreshHelpers$161e.init();
var prevRefreshReg = globalThis.$RefreshReg$;
var prevRefreshSig = globalThis.$RefreshSig$;
$parcel$ReactRefreshHelpers$161e.prelude(module);

try {
/* App.tsx generated by @compiled/babel-plugin v0.38.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _cssReset = require("@atlaskit/css-reset");
// Import Atlaskit components
var _new = require("@atlaskit/button/new");
var _newDefault = parcelHelpers.interopDefault(_new);
var _tabs = require("@atlaskit/tabs");
var _tabsDefault = parcelHelpers.interopDefault(_tabs);
var _textfield = require("@atlaskit/textfield");
var _textfieldDefault = parcelHelpers.interopDefault(_textfield);
var _dynamicTable = require("@atlaskit/dynamic-table");
var _dynamicTableDefault = parcelHelpers.interopDefault(_dynamicTable);
var _modalDialog = require("@atlaskit/modal-dialog");
var _modalDialogDefault = parcelHelpers.interopDefault(_modalDialog);
// Import Atlaskit icons
var _notification = require("@atlaskit/icon/glyph/notification");
var _notificationDefault = parcelHelpers.interopDefault(_notification);
var _question = require("@atlaskit/icon/glyph/question");
var _questionDefault = parcelHelpers.interopDefault(_question);
var _trash = require("@atlaskit/icon/glyph/trash");
var _trashDefault = parcelHelpers.interopDefault(_trash);
var _edit = require("@atlaskit/icon/glyph/edit");
var _editDefault = parcelHelpers.interopDefault(_edit);
// Import Atlaskit logos
var _logo = require("@atlaskit/logo");
// Import navigation system components for top nav only
var _topNavItems = require("@atlaskit/navigation-system/top-nav-items");
var _s = $RefreshSig$();
// Main app layout with top navigation
const _113 = "._irr3i1yw:hover{background-color:var(--ds-background-selected-hovered,#cce0ff)}";
const _112 = "._syazaqb7{color:var(--ds-text-selected,#0c66e4)}";
const _111 = "._bfhkfg4m{background-color:var(--ds-background-selected,#e9f2ff)}";
const _110 = "._1di61dty:active{background-color:var(--ds-background-neutral-subtle-pressed,#091e4224)}";
const _109 = "._y3gn1e5h{text-align:left}";
const _108 = "._bfhk1j28{background-color:transparent}";
const _107 = "._otyr1b66{margin-bottom:var(--ds-space-050,4px)}";
const _106 = "._v564mfn2{transition:background-color .2s ease}";
const _105 = "._2rkoiti9{border-radius:var(--ds-border-radius-100,4px)}";
const _104 = "._19itglyw{border:none}";
const _103 = "._1yt49l6b{padding:var(--ds-space-150,9pt) var(--ds-space-200,1pc)}";
const _102 = "._1bsb1178{width:280px}";
const _101 = "._1s7zzgxb{border-right:1px solid var(--ds-border,#091e4224)}";
const _100 = "._18m91wug{overflow-y:auto}";
const _99 = "._1reo1wug{overflow-x:auto}";
const _98 = "._4t3i1wtj{height:calc(100vh - 56px)}";
const _97 = "._bfhk1j89{background-color:var(--ds-background-accent-blue-subtle,#579dff)}";
const _96 = "._4t3izwfg{height:2pc}";
const _95 = "._1bsbzwfg{width:2pc}";
const _94 = "._2rko1ssb{border-radius:50%}";
const _93 = "._1bahesu3{justify-content:flex-end}";
const _92 = "._1ouw1h90>*{min-width:auto!important}";
const _91 = "._1rfz1h90>*{width:auto!important}";
const _90 = "._1bsb1wug{width:auto}";
const _89 = "._1rfzdgin>*{width:500px}";
const _88 = "._1ouwdgin>*{min-width:500px}";
const _87 = "._5hv91e6m input{width:450px!important}";
const _86 = "._w5k41e6m input{min-width:450px!important}";
const _85 = "._1bsbdgin{width:500px}";
const _84 = "._1ul9dgin{min-width:500px}";
const _83 = "._agtsdgin>*>:first-child{min-width:500px}";
const _82 = "._1bah1h6o{justify-content:center}";
const _81 = "._i0dl1wug{flex-basis:auto}";
const _80 = "._1o9zidpf{flex-shrink:0}";
const _79 = "._16jlidpf{flex-grow:0}";
const _78 = "._1ul9uuw1{min-width:200px}";
const _77 = "._1bah1y6m{justify-content:flex-start}";
const _76 = "._1wybf6fq{font-size:18px}";
const _75 = "._syaz1fxt{color:var(--ds-text,#172b4d)}";
const _74 = "._i0dlf1ug{flex-basis:0%}";
const _73 = "._1o9zkb7n{flex-shrink:1}";
const _72 = "._16jlkb7n{flex-grow:1}";
const _71 = "._1pbyzo7u{z-index:10}";
const _70 = "._bfhkvuon{background-color:var(--ds-surface,#fff)}";
const _69 = "._4t3i8vuz{height:56px}";
const _68 = "._1yt41e2i{padding:0 var(--ds-space-300,24px)}";
const _67 = "._ect41vce{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,sans-serif}";
const _66 = "._4t3i1kxc{height:100vh}";
const _65 = "._2lx21bp4{flex-direction:column}";
const _64 = "._2hwxu2gc{margin-right:var(--ds-space-100,8px)}";
const _63 = "._otyrpxbi{margin-bottom:var(--ds-space-200,1pc)}";
const _62 = "._1e0c1ule{display:block}";
const _61 = "._18u01wug{margin-left:auto}";
const _60 = "._2hwx1wug{margin-right:auto}";
const _59 = "._otyr1ejb{margin-bottom:var(--ds-space-300,24px)}";
const _58 = "._zulppxbi{gap:var(--ds-space-200,1pc)}";
const _57 = "._irr31j28:hover{background-color:transparent}";
const _56 = "._jf4cnqa1:hover{text-decoration-style:solid}";
const _55 = "._1bnx8stv:hover{text-decoration-line:underline}";
const _54 = "._9oik1r31:hover{text-decoration-color:currentColor}";
const _53 = "._syaz14q2{color:var(--ds-link,#0c66e4)}";
const _52 = "._ajmmnqa1{text-decoration-style:solid}";
const _51 = "._1hmsglyw{text-decoration-line:none}";
const _50 = "._4bfu1r31{text-decoration-color:currentColor}";
const _49 = "._otyrxy5q{margin-bottom:var(--ds-space-400,2pc)}";
const _48 = "._zulpu2gc{gap:var(--ds-space-100,8px)}";
const _47 = "._1ul91wug{min-width:auto}";
const _46 = "._19bvftgi{padding-left:8px}";
const _45 = "._n3td1y44{padding-bottom:4px}";
const _44 = "._u5f3ftgi{padding-right:8px}";
const _43 = "._ca0q1y44{padding-top:4px}";
const _42 = "._k48pbfng{font-weight:500}";
const _41 = "._syazy73q{color:var(--ds-text-success,#216e4e)}";
const _40 = "._irr3166n:hover{background-color:var(--ds-background-neutral-subtle-hovered,#091e420f)}";
const _39 = "._80omtlke{cursor:pointer}";
const _38 = "._p12f9336{max-width:735px}";
const _37 = "._1ul99336{min-width:735px}";
const _36 = "._1wyb7vkz{font-size:1pc}";
const _35 = "._syaz1gjq{color:var(--ds-text-subtle,#44546f)}";
const _34 = "._y3gn1h6o{text-align:center}";
const _33 = "._1yt4xy5q{padding:var(--ds-space-400,2pc)}";
const _32 = "._1eax1c3h table{min-width:50pc}";
const _31 = "._f800aq80 table{width:100%!important}";
const _30 = "._1bsb1osq{width:100%}";
const _29 = "._19pk1crf{margin-top:9pt}";
const _28 = "._otyr1crf{margin-bottom:9pt}";
const _27 = "._k48p8n31{font-weight:bold}";
const _26 = "._1wybdlk8{font-size:14px}";
const _25 = "._18u0idpf{margin-left:0}";
const _24 = "._otyridpf{margin-bottom:0}";
const _23 = "._2hwxidpf{margin-right:0}";
const _22 = "._19pkidpf{margin-top:0}";
const _21 = "._otyr1tcg{margin-bottom:24px}";
const _20 = "._1bah1yb4{justify-content:space-between}";
const _19 = "._4cvr1h6o{align-items:center}";
const _18 = "._1e0c1txw{display:flex}";
const _17 = "._19pk1ejb{margin-top:var(--ds-space-300,24px)}";
const _16 = "._n7zlzgxb{border-bottom:1px solid var(--ds-border,#091e4224)}";
const _15 = "._1yt4pxbi{padding:var(--ds-space-200,1pc)}";
const _14 = "._19bvidpf{padding-left:0}";
const _13 = "._n3tdidpf{padding-bottom:0}";
const _12 = "._u5f3idpf{padding-right:0}";
const _11 = "._ca0qidpf{padding-top:0}";
const _10 = "._qtt8glyw{list-style:none}";
const _1 = "._k48pni7l{font-weight:600}";
const _0 = "._1wyb1tcg{font-size:24px}";
const _9 = "._bfhkhp5a{background-color:var(--ds-surface-raised,#fff)}";
const _8 = "._19itzgxb{border:1px solid var(--ds-border,#091e4224)}";
const _7 = "._2rkopd34{border-radius:var(--ds-border-radius-200,8px)}";
const _6 = "._1yt41ejb{padding:var(--ds-space-300,24px)}";
const _5 = "._19pkxy5q{margin-top:var(--ds-space-400,2pc)}";
const _4 = "._yv0ekmtq{grid-template-columns:repeat(auto-fit,minmax(250px,1fr))}";
const _3 = "._1e0c11p5{display:grid}";
const _2 = "._zulp1ejb{gap:var(--ds-space-300,24px)}";
const appStyles = null;
// Top navigation styles
const topNavStyles = null;
const topNavBrandStyles = null;
const topNavMiddleStyles = null;
const searchStyles = null;
const createButtonStyles = null;
const topNavUserAreaStyles = null;
const avatarStyles = null;
// Main content area with sidebar
const mainLayoutStyles = null;
const sidebarStyles = null;
const sidebarNavStyles = null;
const navItemStyles = null;
const activeNavItemStyles = null;
const contentStyles = null;
const cardStyles = null;
const gridStyles = null;
const listStyles = null;
const listItemStyles = null;
const App = ()=>{
    _s();
    const [selectedItem, setSelectedItem] = (0, _react.useState)('home');
    const [editingUrlId, setEditingUrlId] = (0, _react.useState)(null);
    const [selectedSiteForEdit, setSelectedSiteForEdit] = (0, _react.useState)(null);
    const [isRevertModalOpen, setIsRevertModalOpen] = (0, _react.useState)(false);
    const [siteIndexToRevert, setSiteIndexToRevert] = (0, _react.useState)(null);
    const [defaultUrls, setDefaultUrls] = (0, _react.useState)([
        'https://api.github.com',
        'https://api.atlassian.com',
        'https://jsonplaceholder.typicode.com',
        'https://httpbin.org',
        'https://api.openweathermap.org',
        'https://api.stripe.com',
        'https://api.twilio.com',
        'https://api.slack.com',
        'https://graph.microsoft.com',
        'https://api.dropbox.com',
        'https://api.spotify.com',
        'https://api.twitter.com',
        'https://api.linkedin.com',
        'https://api.facebook.com',
        'https://api.instagram.com',
        'https://api.youtube.com',
        'https://api.google.com',
        'https://api.amazon.com',
        'https://api.salesforce.com',
        'https://api.hubspot.com'
    ]);
    // Site-specific URL lists for each site
    const [siteUrls, setSiteUrls] = (0, _react.useState)({
        0: [
            ...defaultUrls
        ],
        1: [
            ...defaultUrls
        ],
        2: [
            ...defaultUrls
        ],
        3: [
            ...defaultUrls
        ]
    });
    const [editingSiteUrlId, setEditingSiteUrlId] = (0, _react.useState)(null);
    const [siteLists, setSiteLists] = (0, _react.useState)([
        {
            name: 'Production Site',
            url: 'prod.example.com',
            servers: 3,
            status: 'Active',
            product: 'confluence'
        },
        {
            name: 'Staging Site',
            url: 'staging.example.com',
            servers: 2,
            status: 'Active',
            product: 'jira'
        },
        {
            name: 'Development Site',
            url: 'dev.example.com',
            servers: 1,
            status: 'Active',
            product: 'bitbucket'
        },
        {
            name: 'Testing Site',
            url: 'test.example.com',
            servers: 2,
            status: 'Inactive',
            product: 'trello'
        }
    ]);
    // Debug modal state changes
    (0, _react.useEffect)(()=>{
        console.log('Modal state changed - isRevertModalOpen:', isRevertModalOpen);
    }, [
        isRevertModalOpen
    ]);
    // Helper function to get the appropriate logo for each product
    const getProductLogo = (product)=>{
        switch(product){
            case 'confluence':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.ConfluenceIcon), {
                    appearance: "brand",
                    size: "small"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 218,
                    columnNumber: 16
                }, undefined);
            case 'jira':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.JiraIcon), {
                    appearance: "brand",
                    size: "small"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 220,
                    columnNumber: 16
                }, undefined);
            case 'bitbucket':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.BitbucketIcon), {
                    appearance: "brand",
                    size: "small"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 222,
                    columnNumber: 16
                }, undefined);
            case 'trello':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.TrelloIcon), {
                    appearance: "brand",
                    size: "small"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 224,
                    columnNumber: 16
                }, undefined);
            default:
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.ConfluenceIcon), {
                    appearance: "brand",
                    size: "small"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 226,
                    columnNumber: 16
                }, undefined);
        }
    };
    const handleUrlClick = (index)=>{
        setEditingUrlId(index);
    };
    const handleUrlChange = (index, newValue)=>{
        const updatedUrls = [
            ...defaultUrls
        ];
        updatedUrls[index] = newValue;
        setDefaultUrls(updatedUrls);
    };
    const handleUrlSave = ()=>{
        setEditingUrlId(null);
    };
    const handleUrlKeyPress = (e)=>{
        if (e.key === 'Enter') handleUrlSave();
        if (e.key === 'Escape') setEditingUrlId(null);
    };
    const handleTextfieldChange = (e, index)=>{
        const target = e.target;
        handleUrlChange(index, target.value);
    };
    const handleAddUrl = ()=>{
        const newUrls = [
            ...defaultUrls,
            ''
        ];
        setDefaultUrls(newUrls);
        setEditingUrlId(newUrls.length - 1);
    };
    const handleDeleteUrl = (index)=>{
        const newUrls = defaultUrls.filter((_, i)=>i !== index);
        setDefaultUrls(newUrls);
        // If we were editing the deleted row, clear the editing state
        if (editingUrlId === index) setEditingUrlId(null);
        // If we were editing a row after the deleted one, adjust the index
        if (editingUrlId !== null && editingUrlId > index) setEditingUrlId(editingUrlId - 1);
    };
    // Site list handler for navigation
    const handleEditSite = (index)=>{
        setSelectedSiteForEdit(index);
        setSelectedItem('site-edit');
    };
    const handleBackToMCPSettings = ()=>{
        setSelectedSiteForEdit(null);
        setSelectedItem('mcp-settings');
        // Set the tab to Site Overrides when returning
        setTimeout(()=>{
            const tabs = document.querySelectorAll('[role="tab"]');
            if (tabs && tabs.length > 1) tabs[1].click();
        }, 0);
    };
    const handleAddSite = ()=>{
        const newSite = {
            name: '',
            url: '',
            servers: 0,
            status: 'Active',
            product: 'confluence'
        };
        const newSites = [
            ...siteLists,
            newSite
        ];
        setSiteLists(newSites);
    };
    // Site-specific URL handlers
    const handleSiteUrlClick = (siteIndex, urlIndex)=>{
        setEditingSiteUrlId(siteIndex * 1000 + urlIndex); // Use unique ID for each site+url combo
    };
    const handleSiteUrlChange = (siteIndex, urlIndex, newValue)=>{
        const updatedSiteUrls = {
            ...siteUrls
        };
        if (!updatedSiteUrls[siteIndex]) updatedSiteUrls[siteIndex] = [];
        updatedSiteUrls[siteIndex] = [
            ...updatedSiteUrls[siteIndex]
        ];
        updatedSiteUrls[siteIndex][urlIndex] = newValue;
        setSiteUrls(updatedSiteUrls);
    };
    const handleSiteUrlSave = ()=>{
        setEditingSiteUrlId(null);
    };
    const handleSiteUrlKeyPress = (e)=>{
        if (e.key === 'Enter') setEditingSiteUrlId(null);
        else if (e.key === 'Escape') setEditingSiteUrlId(null);
    };
    const handleSiteTextfieldChange = (siteIndex, urlIndex)=>(e)=>{
            const target = e.target;
            handleSiteUrlChange(siteIndex, urlIndex, target.value);
        };
    const handleAddSiteUrl = (siteIndex)=>{
        const updatedSiteUrls = {
            ...siteUrls
        };
        if (!updatedSiteUrls[siteIndex]) updatedSiteUrls[siteIndex] = [];
        const newUrls = [
            ...updatedSiteUrls[siteIndex],
            'https://'
        ];
        updatedSiteUrls[siteIndex] = newUrls;
        setSiteUrls(updatedSiteUrls);
        // Set editing mode for the new URL
        setEditingSiteUrlId(siteIndex * 1000 + (newUrls.length - 1));
    };
    const handleDeleteSiteUrl = (siteIndex, urlIndex)=>{
        const updatedSiteUrls = {
            ...siteUrls
        };
        if (updatedSiteUrls[siteIndex]) {
            updatedSiteUrls[siteIndex] = updatedSiteUrls[siteIndex].filter((_, i)=>i !== urlIndex);
            setSiteUrls(updatedSiteUrls);
        }
    };
    const handleRevertToOrgDefaults = (siteIndex)=>{
        setSiteIndexToRevert(siteIndex);
        setIsRevertModalOpen(true);
    };
    const handleConfirmRevert = ()=>{
        if (siteIndexToRevert !== null) {
            const updatedSiteUrls = {
                ...siteUrls
            };
            updatedSiteUrls[siteIndexToRevert] = [
                ...defaultUrls
            ];
            setSiteUrls(updatedSiteUrls);
        }
        setIsRevertModalOpen(false);
        setSiteIndexToRevert(null);
    };
    const handleCancelRevert = ()=>{
        setIsRevertModalOpen(false);
        setSiteIndexToRevert(null);
    };
    // Helper to check if a site is inherited from org
    const isSiteInherited = (siteIndex)=>{
        const siteUrlsForIndex = siteUrls[siteIndex] || [];
        return siteUrlsForIndex.length === defaultUrls.length && siteUrlsForIndex.every((url, i)=>url === defaultUrls[i]);
    };
    // Update all inherited site lists when org allow list changes
    (0, _react.useEffect)(()=>{
        setSiteUrls((prevSiteUrls)=>{
            const updated = {
                ...prevSiteUrls
            };
            Object.keys(updated).forEach((key)=>{
                const idx = Number(key);
                const urls = prevSiteUrls[idx] || [];
                // Only update if the site is currently inherited from org (matches the previous org list exactly)
                if (urls.length === prevSiteUrls[0].length && urls.every((url, i)=>url === prevSiteUrls[0][i])) updated[idx] = [
                    ...defaultUrls
                ];
            });
            return updated;
        });
    }, [
        defaultUrls
    ]);
    const navItems = [
        {
            id: 'home',
            label: 'Dashboard'
        },
        {
            id: 'users',
            label: 'Users'
        },
        {
            id: 'mcp-settings',
            label: 'MCP Server Settings'
        },
        {
            id: 'settings',
            label: 'Settings'
        },
        {
            id: 'reports',
            label: 'Reports'
        }
    ];
    const renderContent = ()=>{
        switch(selectedItem){
            case 'home':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                            children: "Dashboard"
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 414,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            children: "Welcome to your admin dashboard. Here you can manage all aspects of your application."
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 415,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _2,
                                        _3,
                                        _4,
                                        _5
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 417,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_zulp1ejb _1e0c11p5 _yv0ekmtq _19pkxy5q"
                                    ]),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _6,
                                                        _7,
                                                        _8,
                                                        _9
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 420,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                                            children: "Total Users"
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 422,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _0,
                                                                        _1
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 424,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1wyb1tcg _k48pni7l"
                                                                    ]),
                                                                    children: "1,234"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 425,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 423,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 421,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 419,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _6,
                                                        _7,
                                                        _8,
                                                        _9
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 430,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                                            children: "Active Sessions"
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 432,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _0,
                                                                        _1
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 434,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1wyb1tcg _k48pni7l"
                                                                    ]),
                                                                    children: "567"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 435,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 433,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 431,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 429,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _6,
                                                        _7,
                                                        _8,
                                                        _9
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 440,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                                            children: "Active Projects"
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 442,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _0,
                                                                        _1
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 444,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1wyb1tcg _k48pni7l"
                                                                    ]),
                                                                    children: "23"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 445,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 443,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 441,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 439,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 418,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 416,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 413,
                    columnNumber: 16
                }, undefined);
            case 'users':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                            children: "User Management"
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 454,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            children: "Manage users, roles, and permissions from this section."
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 455,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _5
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 457,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_19pkxy5q"
                                    ]),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                            children: "Recent Users"
                                        }, void 0, false, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 459,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _10,
                                                        _11,
                                                        _12,
                                                        _13,
                                                        _14
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 461,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                                                    className: (0, _runtime.ax)([
                                                        "_qtt8glyw _ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _15,
                                                                        _16
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 464,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt4pxbi _n7zlzgxb"
                                                                    ]),
                                                                    children: "John Doe - john@example.com - Project Manager"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 465,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 463,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _15,
                                                                        _16
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 470,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt4pxbi _n7zlzgxb"
                                                                    ]),
                                                                    children: "Jane Smith - jane@example.com - Developer"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 471,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 469,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _15,
                                                                        _16
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 476,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt4pxbi _n7zlzgxb"
                                                                    ]),
                                                                    children: "Bob Johnson - bob@example.com - Designer"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 477,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 475,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 462,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 460,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 458,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 456,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 453,
                    columnNumber: 16
                }, undefined);
            case 'mcp-settings':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                            children: "MCP Server Settings"
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 488,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            children: "Configure and manage Model Context Protocol server settings and connections."
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 489,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _5
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 491,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_19pkxy5q"
                                    ]),
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabsDefault.default), {
                                        id: "mcp-settings-tabs",
                                        defaultSelected: selectedSiteForEdit !== null ? 1 : 0,
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabs.TabList), {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabs.Tab), {
                                                        children: "Org allow list"
                                                    }, void 0, false, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 495,
                                                        columnNumber: 19
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabs.Tab), {
                                                        children: "Site Overrides"
                                                    }, void 0, false, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 496,
                                                        columnNumber: 19
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 494,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabs.TabPanel), {
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                            children: [
                                                                _17
                                                            ]
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 500,
                                                            columnNumber: 3
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: (0, _runtime.ax)([
                                                                "_19pk1ejb"
                                                            ]),
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _18,
                                                                                _19,
                                                                                _20,
                                                                                _21
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 503,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_1e0c1txw _4cvr1h6o _1bah1yb4 _otyr1tcg"
                                                                            ]),
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                            children: [
                                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                    children: [
                                                                                                        _22,
                                                                                                        _23,
                                                                                                        _24,
                                                                                                        _25,
                                                                                                        _26,
                                                                                                        _27,
                                                                                                        _28
                                                                                                    ]
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 507,
                                                                                                    columnNumber: 3
                                                                                                }, undefined),
                                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
                                                                                                    className: (0, _runtime.ax)([
                                                                                                        "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1wybdlk8 _k48p8n31 _otyr1crf"
                                                                                                    ]),
                                                                                                    children: "Org allow list"
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 508,
                                                                                                    columnNumber: 4
                                                                                                }, undefined)
                                                                                            ]
                                                                                        }, void 0, true, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 506,
                                                                                            columnNumber: 25
                                                                                        }, undefined),
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                            children: [
                                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                    children: [
                                                                                                        _22,
                                                                                                        _23,
                                                                                                        _24,
                                                                                                        _25,
                                                                                                        _29
                                                                                                    ]
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 511,
                                                                                                    columnNumber: 3
                                                                                                }, undefined),
                                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                                                    className: (0, _runtime.ax)([
                                                                                                        "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _19pk1crf"
                                                                                                    ]),
                                                                                                    children: "Below is the list of allowed sites set by default in your organisation."
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 512,
                                                                                                    columnNumber: 4
                                                                                                }, undefined)
                                                                                            ]
                                                                                        }, void 0, true, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 510,
                                                                                            columnNumber: 25
                                                                                        }, undefined)
                                                                                    ]
                                                                                }, void 0, true, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 505,
                                                                                    columnNumber: 23
                                                                                }, undefined),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                                    appearance: "default",
                                                                                    onClick: handleAddUrl,
                                                                                    children: "Add URL"
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 515,
                                                                                    columnNumber: 23
                                                                                }, undefined)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 504,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 502,
                                                                    columnNumber: 21
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _30,
                                                                                _31,
                                                                                _32
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 519,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_1bsb1osq _f800aq80 _1eax1c3h"
                                                                            ]),
                                                                            children: defaultUrls.length === 0 ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                        children: [
                                                                                            _33,
                                                                                            _8,
                                                                                            _7,
                                                                                            _34,
                                                                                            _35,
                                                                                            _36,
                                                                                            _9,
                                                                                            _37,
                                                                                            _38
                                                                                        ]
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/App.tsx",
                                                                                        lineNumber: 522,
                                                                                        columnNumber: 3
                                                                                    }, undefined),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                                        className: (0, _runtime.ax)([
                                                                                            "_1yt4xy5q _19itzgxb _2rkopd34 _y3gn1h6o _syaz1gjq _1wyb7vkz _bfhkhp5a _1ul99336 _p12f9336"
                                                                                        ]),
                                                                                        children: "No URLs have been added"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/App.tsx",
                                                                                        lineNumber: 523,
                                                                                        columnNumber: 4
                                                                                    }, undefined)
                                                                                ]
                                                                            }, void 0, true, {
                                                                                fileName: "src/App.tsx",
                                                                                lineNumber: 521,
                                                                                columnNumber: 51
                                                                            }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dynamicTableDefault.default), {
                                                                                head: {
                                                                                    cells: [
                                                                                        {
                                                                                            key: 'url',
                                                                                            content: 'URL',
                                                                                            isSortable: false,
                                                                                            width: 45
                                                                                        },
                                                                                        {
                                                                                            key: 'status',
                                                                                            content: 'Status',
                                                                                            isSortable: false,
                                                                                            width: 20
                                                                                        },
                                                                                        {
                                                                                            key: 'lastUpdated',
                                                                                            content: 'Last Updated',
                                                                                            isSortable: false,
                                                                                            width: 25
                                                                                        },
                                                                                        {
                                                                                            key: 'actions',
                                                                                            content: '',
                                                                                            isSortable: false,
                                                                                            width: 10
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                rows: defaultUrls.map((url, index)=>({
                                                                                        key: `url-${index}`,
                                                                                        cells: [
                                                                                            {
                                                                                                key: 'url',
                                                                                                content: editingUrlId === index ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _textfieldDefault.default), {
                                                                                                    value: url,
                                                                                                    onChange: (e)=>handleTextfieldChange(e, index),
                                                                                                    onBlur: handleUrlSave,
                                                                                                    onKeyDown: handleUrlKeyPress,
                                                                                                    autoFocus: true,
                                                                                                    isCompact: true
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 552,
                                                                                                    columnNumber: 65
                                                                                                }, void 0) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _39,
                                                                                                                _40
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 553,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                                            onClick: ()=>handleUrlClick(index),
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_80omtlke _irr3166n"
                                                                                                            ]),
                                                                                                            children: url
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 554,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 552,
                                                                                                    columnNumber: 214
                                                                                                }, void 0)
                                                                                            },
                                                                                            {
                                                                                                key: 'status',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _41,
                                                                                                                _42
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 561,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_syazy73q _k48pbfng"
                                                                                                            ]),
                                                                                                            children: "Active"
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 562,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 560,
                                                                                                    columnNumber: 40
                                                                                                }, void 0)
                                                                                            },
                                                                                            {
                                                                                                key: 'lastUpdated',
                                                                                                content: new Date(Date.now() - Math.random() * 604800000).toLocaleDateString()
                                                                                            },
                                                                                            {
                                                                                                key: 'actions',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _43,
                                                                                                                _44,
                                                                                                                _45,
                                                                                                                _46,
                                                                                                                _47
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 572,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                                                            appearance: "default",
                                                                                                            iconBefore: (0, _trashDefault.default),
                                                                                                            onClick: ()=>handleDeleteUrl(index),
                                                                                                            "aria-label": "Delete URL",
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_ca0q1y44 _u5f3ftgi _n3td1y44 _19bvftgi _1ul91wug"
                                                                                                            ]),
                                                                                                            children: "\xa0"
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 573,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 571,
                                                                                                    columnNumber: 40
                                                                                                }, void 0)
                                                                                            }
                                                                                        ]
                                                                                    })),
                                                                                testId: "default-urls-table"
                                                                            }, void 0, false, {
                                                                                fileName: "src/App.tsx",
                                                                                lineNumber: 526,
                                                                                columnNumber: 35
                                                                            }, undefined)
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 520,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 518,
                                                                    columnNumber: 21
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 501,
                                                            columnNumber: 4
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 499,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 498,
                                                columnNumber: 17
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _tabs.TabPanel), {
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                            children: [
                                                                _17
                                                            ]
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 586,
                                                            columnNumber: 3
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            className: (0, _runtime.ax)([
                                                                "_19pk1ejb"
                                                            ]),
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _21
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 589,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_otyr1tcg"
                                                                            ]),
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                            children: [
                                                                                                _22,
                                                                                                _23,
                                                                                                _24,
                                                                                                _25,
                                                                                                _26,
                                                                                                _27,
                                                                                                _28
                                                                                            ]
                                                                                        }, void 0, false, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 592,
                                                                                            columnNumber: 3
                                                                                        }, undefined),
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
                                                                                            className: (0, _runtime.ax)([
                                                                                                "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1wybdlk8 _k48p8n31 _otyr1crf"
                                                                                            ]),
                                                                                            children: "Site Overrides"
                                                                                        }, void 0, false, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 593,
                                                                                            columnNumber: 4
                                                                                        }, undefined)
                                                                                    ]
                                                                                }, void 0, true, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 591,
                                                                                    columnNumber: 23
                                                                                }, undefined),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                            children: [
                                                                                                _22,
                                                                                                _23,
                                                                                                _24,
                                                                                                _25,
                                                                                                _29
                                                                                            ]
                                                                                        }, void 0, false, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 596,
                                                                                            columnNumber: 3
                                                                                        }, undefined),
                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                                            className: (0, _runtime.ax)([
                                                                                                "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _19pk1crf"
                                                                                            ]),
                                                                                            children: "Set allow lists at a site level, these override your organisation's defaults."
                                                                                        }, void 0, false, {
                                                                                            fileName: "src/App.tsx",
                                                                                            lineNumber: 597,
                                                                                            columnNumber: 4
                                                                                        }, undefined)
                                                                                    ]
                                                                                }, void 0, true, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 595,
                                                                                    columnNumber: 23
                                                                                }, undefined)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 590,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 588,
                                                                    columnNumber: 21
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _30,
                                                                                _31,
                                                                                _32
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 602,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_1bsb1osq _f800aq80 _1eax1c3h"
                                                                            ]),
                                                                            children: siteLists.length === 0 ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                        children: [
                                                                                            _33,
                                                                                            _8,
                                                                                            _7,
                                                                                            _34,
                                                                                            _35,
                                                                                            _36,
                                                                                            _9,
                                                                                            _37,
                                                                                            _38
                                                                                        ]
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/App.tsx",
                                                                                        lineNumber: 605,
                                                                                        columnNumber: 3
                                                                                    }, undefined),
                                                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                                        className: (0, _runtime.ax)([
                                                                                            "_1yt4xy5q _19itzgxb _2rkopd34 _y3gn1h6o _syaz1gjq _1wyb7vkz _bfhkhp5a _1ul99336 _p12f9336"
                                                                                        ]),
                                                                                        children: "No sites have been added"
                                                                                    }, void 0, false, {
                                                                                        fileName: "src/App.tsx",
                                                                                        lineNumber: 606,
                                                                                        columnNumber: 4
                                                                                    }, undefined)
                                                                                ]
                                                                            }, void 0, true, {
                                                                                fileName: "src/App.tsx",
                                                                                lineNumber: 604,
                                                                                columnNumber: 49
                                                                            }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dynamicTableDefault.default), {
                                                                                head: {
                                                                                    cells: [
                                                                                        {
                                                                                            key: 'name',
                                                                                            content: 'Site Name',
                                                                                            isSortable: false,
                                                                                            width: 25
                                                                                        },
                                                                                        {
                                                                                            key: 'url',
                                                                                            content: 'URL',
                                                                                            isSortable: false,
                                                                                            width: 30
                                                                                        },
                                                                                        {
                                                                                            key: 'status',
                                                                                            content: 'Status',
                                                                                            isSortable: false,
                                                                                            width: 20
                                                                                        },
                                                                                        {
                                                                                            key: 'actions',
                                                                                            content: '',
                                                                                            isSortable: false,
                                                                                            width: 10
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                rows: siteLists.map((site, index)=>{
                                                                                    // Determine if siteUrls for this site matches defaultUrls
                                                                                    const siteUrlsForIndex = siteUrls[index] || [];
                                                                                    const isCustom = siteUrlsForIndex.length !== defaultUrls.length || siteUrlsForIndex.some((url, i)=>url !== defaultUrls[i]);
                                                                                    return {
                                                                                        key: `site-${index}`,
                                                                                        cells: [
                                                                                            {
                                                                                                key: 'name',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _48,
                                                                                                                _18,
                                                                                                                _19
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 640,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_zulpu2gc _1e0c1txw _4cvr1h6o"
                                                                                                            ]),
                                                                                                            children: [
                                                                                                                getProductLogo(site.product),
                                                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                                                    children: site.name
                                                                                                                }, void 0, false, {
                                                                                                                    fileName: "src/App.tsx",
                                                                                                                    lineNumber: 643,
                                                                                                                    columnNumber: 39
                                                                                                                }, void 0)
                                                                                                            ]
                                                                                                        }, void 0, true, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 641,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 639,
                                                                                                    columnNumber: 42
                                                                                                }, void 0)
                                                                                            },
                                                                                            {
                                                                                                key: 'url',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                                    children: site.url
                                                                                                }, void 0, false, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 648,
                                                                                                    columnNumber: 42
                                                                                                }, void 0)
                                                                                            },
                                                                                            {
                                                                                                key: 'status',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _42
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 652,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_k48pbfng"
                                                                                                            ]),
                                                                                                            children: isCustom ? 'Custom' : 'Inherited from org'
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 653,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 651,
                                                                                                    columnNumber: 42
                                                                                                }, void 0)
                                                                                            },
                                                                                            {
                                                                                                key: 'actions',
                                                                                                content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                                            children: [
                                                                                                                _43,
                                                                                                                _44,
                                                                                                                _45,
                                                                                                                _46,
                                                                                                                _47
                                                                                                            ]
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 660,
                                                                                                            columnNumber: 3
                                                                                                        }, void 0),
                                                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                                                            appearance: "default",
                                                                                                            iconBefore: (0, _editDefault.default),
                                                                                                            onClick: ()=>handleEditSite(index),
                                                                                                            "aria-label": "Edit Site",
                                                                                                            className: (0, _runtime.ax)([
                                                                                                                "_ca0q1y44 _u5f3ftgi _n3td1y44 _19bvftgi _1ul91wug"
                                                                                                            ]),
                                                                                                            children: "\xa0"
                                                                                                        }, void 0, false, {
                                                                                                            fileName: "src/App.tsx",
                                                                                                            lineNumber: 661,
                                                                                                            columnNumber: 4
                                                                                                        }, void 0)
                                                                                                    ]
                                                                                                }, void 0, true, {
                                                                                                    fileName: "src/App.tsx",
                                                                                                    lineNumber: 659,
                                                                                                    columnNumber: 42
                                                                                                }, void 0)
                                                                                            }
                                                                                        ]
                                                                                    };
                                                                                }),
                                                                                testId: "site-lists-table"
                                                                            }, void 0, false, {
                                                                                fileName: "src/App.tsx",
                                                                                lineNumber: 609,
                                                                                columnNumber: 35
                                                                            }, undefined)
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 603,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 601,
                                                                    columnNumber: 21
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 587,
                                                            columnNumber: 4
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 585,
                                                    columnNumber: 19
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 584,
                                                columnNumber: 17
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 493,
                                        columnNumber: 15
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 492,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 490,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 487,
                    columnNumber: 16
                }, undefined);
            case 'site-edit':
                const siteToEdit = selectedSiteForEdit !== null ? siteLists[selectedSiteForEdit] : null;
                if (!siteToEdit) return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: "Site not found"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 680,
                    columnNumber: 18
                }, undefined);
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _49
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 684,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_otyrxy5q"
                                    ]),
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _11,
                                                    _12,
                                                    _13,
                                                    _14,
                                                    _50,
                                                    _51,
                                                    _52,
                                                    _26,
                                                    _53,
                                                    _54,
                                                    _55,
                                                    _56,
                                                    _57
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 687,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                appearance: "subtle",
                                                onClick: handleBackToMCPSettings,
                                                className: (0, _runtime.ax)([
                                                    "_ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf _4bfu1r31 _1hmsglyw _ajmmnqa1 _1wybdlk8 _syaz14q2 _9oik1r31 _1bnx8stv _jf4cnqa1 _irr31j28"
                                                ]),
                                                children: "\u2190 Back to MCP Server Settings"
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 688,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 686,
                                        columnNumber: 15
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 685,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 683,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _58,
                                        _18,
                                        _19,
                                        _59
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 695,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_zulppxbi _1e0c1txw _4cvr1h6o _otyr1ejb"
                                    ]),
                                    children: [
                                        getProductLogo(siteToEdit.product),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _22,
                                                        _23,
                                                        _24,
                                                        _25
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 699,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                                                    className: (0, _runtime.ax)([
                                                        "_19pkidpf _2hwxidpf _otyridpf _18u0idpf"
                                                    ]),
                                                    children: [
                                                        "Edit ",
                                                        siteToEdit.name
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 700,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 698,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 696,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 694,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _17
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 705,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_19pk1ejb"
                                    ]),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _18,
                                                        _19,
                                                        _20,
                                                        _21
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 708,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1e0c1txw _4cvr1h6o _1bah1yb4 _otyr1tcg"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _22,
                                                                                _23,
                                                                                _24,
                                                                                _25,
                                                                                _26,
                                                                                _27,
                                                                                _28
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 712,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h4", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1wybdlk8 _k48p8n31 _otyr1crf"
                                                                            ]),
                                                                            children: "Site Overrides"
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 713,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 711,
                                                                    columnNumber: 19
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _22,
                                                                                _23,
                                                                                _24,
                                                                                _25,
                                                                                _29
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 716,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                                                            className: (0, _runtime.ax)([
                                                                                "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _19pk1crf"
                                                                            ]),
                                                                            children: [
                                                                                "Configure the allowed URLs specifically for ",
                                                                                siteToEdit.name,
                                                                                "."
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 717,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 715,
                                                                    columnNumber: 19
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 710,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _58,
                                                                        _18
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 721,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_zulppxbi _1e0c1txw"
                                                                    ]),
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                            appearance: "subtle",
                                                                            type: "button",
                                                                            onClick: ()=>handleRevertToOrgDefaults(selectedSiteForEdit),
                                                                            children: "Revert to org defaults"
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 723,
                                                                            columnNumber: 19
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                            appearance: "default",
                                                                            onClick: ()=>handleAddSiteUrl(selectedSiteForEdit),
                                                                            children: "Add URL"
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 726,
                                                                            columnNumber: 19
                                                                        }, undefined)
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 722,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 720,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 709,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 707,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _30,
                                                        _31,
                                                        _32
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 732,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1bsb1osq _f800aq80 _1eax1c3h"
                                                    ]),
                                                    children: !siteUrls[selectedSiteForEdit] || siteUrls[selectedSiteForEdit].length === 0 ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                children: [
                                                                    _33,
                                                                    _8,
                                                                    _7,
                                                                    _22,
                                                                    _60,
                                                                    _24,
                                                                    _61,
                                                                    _34,
                                                                    _35,
                                                                    _36,
                                                                    _9,
                                                                    _37,
                                                                    _38
                                                                ]
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 735,
                                                                columnNumber: 3
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: (0, _runtime.ax)([
                                                                    "_1yt4xy5q _19itzgxb _2rkopd34 _19pkidpf _2hwx1wug _otyridpf _18u01wug _y3gn1h6o _syaz1gjq _1wyb7vkz _bfhkhp5a _1ul99336 _p12f9336"
                                                                ]),
                                                                children: "No URLs have been added"
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 736,
                                                                columnNumber: 4
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 734,
                                                        columnNumber: 99
                                                    }, undefined) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _dynamicTableDefault.default), {
                                                        head: {
                                                            cells: [
                                                                {
                                                                    key: 'url',
                                                                    content: 'URL',
                                                                    isSortable: false,
                                                                    width: 60
                                                                },
                                                                {
                                                                    key: 'status',
                                                                    content: 'Status',
                                                                    isSortable: false,
                                                                    width: 15
                                                                },
                                                                {
                                                                    key: 'lastUpdated',
                                                                    content: 'Last Updated',
                                                                    isSortable: false,
                                                                    width: 15
                                                                },
                                                                {
                                                                    key: 'actions',
                                                                    content: '',
                                                                    isSortable: false,
                                                                    width: 10
                                                                }
                                                            ]
                                                        },
                                                        rows: (siteUrls[selectedSiteForEdit] || []).map((url, index)=>({
                                                                key: `site-url-${selectedSiteForEdit}-${index}`,
                                                                cells: [
                                                                    {
                                                                        key: 'url',
                                                                        content: editingSiteUrlId === selectedSiteForEdit * 1000 + index ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _30
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 766,
                                                                                    columnNumber: 3
                                                                                }, void 0),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _textfieldDefault.default), {
                                                                                    value: url,
                                                                                    onChange: handleSiteTextfieldChange(selectedSiteForEdit, index),
                                                                                    onKeyDown: handleSiteUrlKeyPress,
                                                                                    onBlur: handleSiteUrlSave,
                                                                                    autoFocus: true,
                                                                                    placeholder: "Enter URL",
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_1bsb1osq"
                                                                                    ])
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 767,
                                                                                    columnNumber: 4
                                                                                }, void 0)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 765,
                                                                            columnNumber: 91
                                                                        }, void 0) : /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _39,
                                                                                        _54,
                                                                                        _55,
                                                                                        _56
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 769,
                                                                                    columnNumber: 3
                                                                                }, void 0),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                    onClick: ()=>handleSiteUrlClick(selectedSiteForEdit, index),
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_80omtlke _9oik1r31 _1bnx8stv _jf4cnqa1"
                                                                                    ]),
                                                                                    children: url
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 770,
                                                                                    columnNumber: 4
                                                                                }, void 0)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 768,
                                                                            columnNumber: 31
                                                                        }, void 0)
                                                                    },
                                                                    {
                                                                        key: 'status',
                                                                        content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _41,
                                                                                        _42
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 777,
                                                                                    columnNumber: 3
                                                                                }, void 0),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("span", {
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_syazy73q _k48pbfng"
                                                                                    ]),
                                                                                    children: "Active"
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 778,
                                                                                    columnNumber: 4
                                                                                }, void 0)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 776,
                                                                            columnNumber: 32
                                                                        }, void 0)
                                                                    },
                                                                    {
                                                                        key: 'lastUpdated',
                                                                        content: new Date(Date.now() - Math.random() * 604800000).toLocaleDateString()
                                                                    },
                                                                    {
                                                                        key: 'actions',
                                                                        content: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _43,
                                                                                        _44,
                                                                                        _45,
                                                                                        _46,
                                                                                        _47
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 788,
                                                                                    columnNumber: 3
                                                                                }, void 0),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                                                    appearance: "default",
                                                                                    iconBefore: (0, _trashDefault.default),
                                                                                    onClick: ()=>handleDeleteSiteUrl(selectedSiteForEdit, index),
                                                                                    "aria-label": "Delete URL",
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_ca0q1y44 _u5f3ftgi _n3td1y44 _19bvftgi _1ul91wug"
                                                                                    ]),
                                                                                    children: "\xa0"
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 789,
                                                                                    columnNumber: 4
                                                                                }, void 0)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 787,
                                                                            columnNumber: 32
                                                                        }, void 0)
                                                                    }
                                                                ]
                                                            })),
                                                        testId: "site-urls-table"
                                                    }, void 0, false, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 739,
                                                        columnNumber: 27
                                                    }, undefined)
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 733,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 731,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 706,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 704,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 682,
                    columnNumber: 16
                }, undefined);
            case 'settings':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                            children: "Settings"
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 802,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            children: "Configure application settings and preferences."
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 803,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _5
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 805,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_19pkxy5q"
                                    ]),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                            children: "Application Settings"
                                        }, void 0, false, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 807,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _6,
                                                        _7,
                                                        _8,
                                                        _9
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 809,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                    className: (0, _runtime.ax)([
                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _62,
                                                                        _63
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 812,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1e0c1ule _otyrpxbi"
                                                                    ]),
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _64
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 815,
                                                                                    columnNumber: 3
                                                                                }, undefined),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                                                                    type: "checkbox",
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_2hwxu2gc"
                                                                                    ])
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 816,
                                                                                    columnNumber: 4
                                                                                }, undefined)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 814,
                                                                            columnNumber: 19
                                                                        }, undefined),
                                                                        "Enable notifications"
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 813,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 811,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _62,
                                                                        _63
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 822,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1e0c1ule _otyrpxbi"
                                                                    ]),
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _64
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 825,
                                                                                    columnNumber: 3
                                                                                }, undefined),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                                                                    type: "checkbox",
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_2hwxu2gc"
                                                                                    ])
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 826,
                                                                                    columnNumber: 4
                                                                                }, undefined)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 824,
                                                                            columnNumber: 19
                                                                        }, undefined),
                                                                        "Auto-save changes"
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 823,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 821,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _62
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 832,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("label", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1e0c1ule"
                                                                    ]),
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                                    children: [
                                                                                        _64
                                                                                    ]
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 835,
                                                                                    columnNumber: 3
                                                                                }, undefined),
                                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("input", {
                                                                                    type: "checkbox",
                                                                                    className: (0, _runtime.ax)([
                                                                                        "_2hwxu2gc"
                                                                                    ])
                                                                                }, void 0, false, {
                                                                                    fileName: "src/App.tsx",
                                                                                    lineNumber: 836,
                                                                                    columnNumber: 4
                                                                                }, undefined)
                                                                            ]
                                                                        }, void 0, true, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 834,
                                                                            columnNumber: 19
                                                                        }, undefined),
                                                                        "Dark mode"
                                                                    ]
                                                                }, void 0, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 833,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 831,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 810,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 808,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 806,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 804,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 801,
                    columnNumber: 16
                }, undefined);
            case 'reports':
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h1", {
                            children: "Reports"
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 848,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            children: "View analytics and generate reports."
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 849,
                            columnNumber: 13
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                    children: [
                                        _5
                                    ]
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 851,
                                    columnNumber: 3
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: (0, _runtime.ax)([
                                        "_19pkxy5q"
                                    ]),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("h3", {
                                            children: "Available Reports"
                                        }, void 0, false, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 853,
                                            columnNumber: 15
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                    children: [
                                                        _10,
                                                        _11,
                                                        _12,
                                                        _13,
                                                        _14
                                                    ]
                                                }, void 0, false, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 855,
                                                    columnNumber: 3
                                                }, undefined),
                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("ul", {
                                                    className: (0, _runtime.ax)([
                                                        "_qtt8glyw _ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf"
                                                    ]),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _6,
                                                                        _7,
                                                                        _8,
                                                                        _9,
                                                                        _63
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 858,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a _otyrpxbi"
                                                                    ]),
                                                                    children: "\uD83D\uDCC8 User Activity Report"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 859,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 857,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _6,
                                                                        _7,
                                                                        _8,
                                                                        _9,
                                                                        _63
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 864,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a _otyrpxbi"
                                                                    ]),
                                                                    children: "\uD83D\uDCB0 Revenue Report"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 865,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 863,
                                                            columnNumber: 17
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                    children: [
                                                                        _6,
                                                                        _7,
                                                                        _8,
                                                                        _9
                                                                    ]
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 870,
                                                                    columnNumber: 3
                                                                }, undefined),
                                                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("li", {
                                                                    className: (0, _runtime.ax)([
                                                                        "_1yt41ejb _2rkopd34 _19itzgxb _bfhkhp5a"
                                                                    ]),
                                                                    children: "\uD83D\uDD0D System Performance Report"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 871,
                                                                    columnNumber: 4
                                                                }, undefined)
                                                            ]
                                                        }, void 0, true, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 869,
                                                            columnNumber: 17
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 856,
                                                    columnNumber: 4
                                                }, undefined)
                                            ]
                                        }, void 0, true, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 854,
                                            columnNumber: 15
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 852,
                                    columnNumber: 4
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/App.tsx",
                            lineNumber: 850,
                            columnNumber: 13
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/App.tsx",
                    lineNumber: 847,
                    columnNumber: 16
                }, undefined);
            default:
                return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    children: "Page not found"
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 881,
                    columnNumber: 16
                }, undefined);
        }
    };
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                children: [
                    _18,
                    _65,
                    _66,
                    _67
                ]
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 885,
                columnNumber: 3
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: (0, _runtime.ax)([
                    "_1e0c1txw _2lx21bp4 _4t3i1kxc _ect41vce"
                ]),
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                children: [
                                    _68,
                                    _16,
                                    _69,
                                    _70,
                                    _18,
                                    _19,
                                    _71,
                                    _20
                                ]
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 889,
                                columnNumber: 3
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: (0, _runtime.ax)([
                                    "_1yt41e2i _n7zlzgxb _4t3i8vuz _bfhkvuon _1e0c1txw _4cvr1h6o _1pbyzo7u _1bah1yb4"
                                ]),
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _72,
                                                    _73,
                                                    _74,
                                                    _75,
                                                    _76,
                                                    _1,
                                                    _18,
                                                    _77,
                                                    _78
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 892,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: (0, _runtime.ax)([
                                                    "_16jlkb7n _1o9zkb7n _i0dlf1ug _syaz1fxt _1wybf6fq _k48pni7l _1e0c1txw _1bah1y6m _1ul9uuw1"
                                                ]),
                                                children: "Admin MCP"
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 893,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 891,
                                        columnNumber: 9
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _58,
                                                    _79,
                                                    _80,
                                                    _81,
                                                    _18,
                                                    _82,
                                                    _19,
                                                    _83
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 900,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: (0, _runtime.ax)([
                                                    "_zulppxbi _16jlidpf _1o9zidpf _i0dl1wug _1e0c1txw _1bah1h6o _4cvr1h6o _agtsdgin"
                                                ]),
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                children: [
                                                                    _84,
                                                                    _85,
                                                                    _86,
                                                                    _87,
                                                                    _88,
                                                                    _89
                                                                ]
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 903,
                                                                columnNumber: 3
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: (0, _runtime.ax)([
                                                                    "_1ul9dgin _1bsbdgin _w5k41e6m _5hv91e6m _1ouwdgin _1rfzdgin"
                                                                ]),
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _topNavItems.Search), {
                                                                    label: "Search"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 905,
                                                                    columnNumber: 13
                                                                }, undefined)
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 904,
                                                                columnNumber: 4
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 902,
                                                        columnNumber: 11
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                children: [
                                                                    _80,
                                                                    _79,
                                                                    _90,
                                                                    _91,
                                                                    _92
                                                                ]
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 909,
                                                                columnNumber: 3
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: (0, _runtime.ax)([
                                                                    "_1o9zidpf _16jlidpf _1bsb1wug _1rfz1h90 _1ouw1h90"
                                                                ]),
                                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _topNavItems.CreateButton), {
                                                                    children: "Create"
                                                                }, void 0, false, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 911,
                                                                    columnNumber: 13
                                                                }, undefined)
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 910,
                                                                columnNumber: 4
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 908,
                                                        columnNumber: 11
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 901,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 899,
                                        columnNumber: 9
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _72,
                                                    _73,
                                                    _74,
                                                    _58,
                                                    _18,
                                                    _19,
                                                    _93,
                                                    _78
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 918,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: (0, _runtime.ax)([
                                                    "_16jlkb7n _1o9zkb7n _i0dlf1ug _zulppxbi _1e0c1txw _4cvr1h6o _1bahesu3 _1ul9uuw1"
                                                ]),
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                        appearance: "subtle",
                                                        iconBefore: (0, _notificationDefault.default),
                                                        "aria-label": "Notifications",
                                                        children: "\xa0"
                                                    }, void 0, false, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 920,
                                                        columnNumber: 11
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                                        appearance: "subtle",
                                                        iconBefore: (0, _questionDefault.default),
                                                        "aria-label": "Help",
                                                        children: "\xa0"
                                                    }, void 0, false, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 923,
                                                        columnNumber: 11
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                children: [
                                                                    _94,
                                                                    _95,
                                                                    _96,
                                                                    _97,
                                                                    _18,
                                                                    _19,
                                                                    _82,
                                                                    _75,
                                                                    _26,
                                                                    _1
                                                                ]
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 927,
                                                                columnNumber: 3
                                                            }, undefined),
                                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                                className: (0, _runtime.ax)([
                                                                    "_2rko1ssb _1bsbzwfg _4t3izwfg _bfhk1j89 _1e0c1txw _4cvr1h6o _1bah1h6o _syaz1fxt _1wybdlk8 _k48pni7l"
                                                                ]),
                                                                children: "AF"
                                                            }, void 0, false, {
                                                                fileName: "src/App.tsx",
                                                                lineNumber: 928,
                                                                columnNumber: 4
                                                            }, undefined)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "src/App.tsx",
                                                        lineNumber: 926,
                                                        columnNumber: 11
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 919,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 917,
                                        columnNumber: 9
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 890,
                                columnNumber: 4
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/App.tsx",
                        lineNumber: 888,
                        columnNumber: 7
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                children: [
                                    _72,
                                    _73,
                                    _74,
                                    _18,
                                    _98
                                ]
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 939,
                                columnNumber: 3
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: (0, _runtime.ax)([
                                    "_16jlkb7n _1o9zkb7n _i0dlf1ug _1e0c1txw _4t3i1wtj"
                                ]),
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _99,
                                                    _100,
                                                    _101,
                                                    _102,
                                                    _70,
                                                    _18,
                                                    _65
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 943,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: (0, _runtime.ax)([
                                                    "_1reo1wug _18m91wug _1s7zzgxb _1bsb1178 _bfhkvuon _1e0c1txw _2lx21bp4"
                                                ]),
                                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                            children: [
                                                                _15,
                                                                _72,
                                                                _73,
                                                                _74
                                                            ]
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 946,
                                                            columnNumber: 3
                                                        }, undefined),
                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("nav", {
                                                            className: (0, _runtime.ax)([
                                                                "_1yt4pxbi _16jlkb7n _1o9zkb7n _i0dlf1ug"
                                                            ]),
                                                            children: navItems.map((item)=>/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                                            children: [
                                                                                _103,
                                                                                _104,
                                                                                _105,
                                                                                _106,
                                                                                _62,
                                                                                _30,
                                                                                _107,
                                                                                _108,
                                                                                _75,
                                                                                _26,
                                                                                _42,
                                                                                _109,
                                                                                _39,
                                                                                _40,
                                                                                _110,
                                                                                _111,
                                                                                _112,
                                                                                _1,
                                                                                _113
                                                                            ]
                                                                        }, void 0, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 949,
                                                                            columnNumber: 3
                                                                        }, undefined),
                                                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                                                                            onClick: ()=>setSelectedItem(item.id),
                                                                            className: (0, _runtime.ax)([
                                                                                "_1yt49l6b _19itglyw _2rkoiti9 _v564mfn2 _1e0c1ule _1bsb1osq _otyr1b66 _bfhk1j28 _syaz1fxt _1wybdlk8 _k48pbfng _y3gn1e5h _80omtlke _irr3166n _1di61dty",
                                                                                selectedItem === item.id && "_bfhkfg4m _syazaqb7 _k48pni7l _irr3i1yw"
                                                                            ]),
                                                                            children: item.label
                                                                        }, item.id, false, {
                                                                            fileName: "src/App.tsx",
                                                                            lineNumber: 950,
                                                                            columnNumber: 4
                                                                        }, undefined)
                                                                    ]
                                                                }, item.id, true, {
                                                                    fileName: "src/App.tsx",
                                                                    lineNumber: 948,
                                                                    columnNumber: 35
                                                                }, undefined))
                                                        }, void 0, false, {
                                                            fileName: "src/App.tsx",
                                                            lineNumber: 947,
                                                            columnNumber: 4
                                                        }, undefined)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "src/App.tsx",
                                                    lineNumber: 945,
                                                    columnNumber: 11
                                                }, undefined)
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 944,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 942,
                                        columnNumber: 9
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CC), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _runtime.CS), {
                                                children: [
                                                    _72,
                                                    _73,
                                                    _74,
                                                    _33,
                                                    _99,
                                                    _100,
                                                    _70
                                                ]
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 961,
                                                columnNumber: 3
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: (0, _runtime.ax)([
                                                    "_16jlkb7n _1o9zkb7n _i0dlf1ug _1yt4xy5q _1reo1wug _18m91wug _bfhkvuon"
                                                ]),
                                                children: renderContent()
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 962,
                                                columnNumber: 4
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 960,
                                        columnNumber: 9
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 940,
                                columnNumber: 4
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/App.tsx",
                        lineNumber: 938,
                        columnNumber: 7
                    }, undefined),
                    isRevertModalOpen && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _modalDialogDefault.default), {
                        onClose: handleCancelRevert,
                        width: "small",
                        testId: "danger-modal",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _modalDialog.ModalHeader), {
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _modalDialog.ModalTitle), {
                                    children: "Revert to organization defaults?"
                                }, void 0, false, {
                                    fileName: "src/App.tsx",
                                    lineNumber: 972,
                                    columnNumber: 13
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 971,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _modalDialog.ModalBody), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        children: "This will replace all site-specific URLs with your organization's default URL list. Any custom URLs configured for this site will be lost."
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 975,
                                        columnNumber: 13
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("strong", {
                                            children: "This action cannot be undone."
                                        }, void 0, false, {
                                            fileName: "src/App.tsx",
                                            lineNumber: 980,
                                            columnNumber: 15
                                        }, undefined)
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 979,
                                        columnNumber: 13
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 974,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _modalDialog.ModalFooter), {
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                        appearance: "subtle",
                                        onClick: handleCancelRevert,
                                        children: "Cancel"
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 984,
                                        columnNumber: 13
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _newDefault.default), {
                                        appearance: "danger",
                                        onClick: handleConfirmRevert,
                                        children: "Revert to defaults"
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 987,
                                        columnNumber: 13
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 983,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/App.tsx",
                        lineNumber: 970,
                        columnNumber: 29
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/App.tsx",
                lineNumber: 886,
                columnNumber: 4
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/App.tsx",
        lineNumber: 884,
        columnNumber: 10
    }, undefined);
};
_s(App, "vl9UYy3MT6CUBI74j9pZXH3UwqQ=");
_c = App;
exports.default = App;
var _c;
$RefreshReg$(_c, "App");

  $parcel$ReactRefreshHelpers$161e.postlude(module);
} finally {
  globalThis.$RefreshReg$ = prevRefreshReg;
  globalThis.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"dVPUn","@compiled/react/runtime":"eGy18","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"7h6Pi","@atlaskit/icon/glyph/notification":"bi0Pb","@atlaskit/icon/glyph/question":"cVWXB","@atlaskit/navigation-system/top-nav-items":"hmaM5","@atlaskit/button/new":"jGwqc","@atlaskit/css-reset":"94cat","@atlaskit/tabs":"8E01h","@atlaskit/textfield":"iWm4W","@atlaskit/dynamic-table":"dbg8K","@atlaskit/modal-dialog":"1Upub","@atlaskit/icon/glyph/trash":"gfSKs","@atlaskit/icon/glyph/edit":"kgNUm","@atlaskit/logo":"4T6WN"}],"eGy18":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"dHzI4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dHzI4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"fZO1T","./style-cache":"6YW1f","./ax":"3EkRO","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZO1T":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"6Q8yD","./is-server-environment":"9Rpd9","./sheet":"jPBF2","./style-cache":"6YW1f","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6Q8yD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jnFvT":[function(require,module,exports,__globalThis) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"9Rpd9":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jPBF2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
const styleBucketOrdering = [
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everythin else will make their way to the catch all style bucket.
 * We reduce the pseduo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th character could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) // We send through a subset of the string instead of the full pseudo name.
    // For example `"focus-visible"` name would instead of `"us-visible"`.
    // Return a mapped pseudo else the default catch all bucket.
    return pseudosMap[sheet.slice(14, sheet.indexOf('{'))] || '';
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"rHHAz","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"rHHAz":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6YW1f":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
{
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"rHHAz","./is-server-environment":"9Rpd9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3EkRO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    if (classNames.length <= 1 && (!classNames[0] || classNames[0].indexOf(' ') === -1)) // short circuit if there's no custom class names.
    return classNames[0] || undefined;
    const atomicGroups = {};
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        const groups = cls.split(' ');
        for(let x = 0; x < groups.length; x++){
            const atomic = groups[x];
            const atomicGroupName = atomic.slice(0, atomic.charCodeAt(0) === UNDERSCORE_UNICODE ? ATOMIC_GROUP_LENGTH : undefined);
            atomicGroups[atomicGroupName] = atomic;
        }
    }
    let str = '';
    for(const key in atomicGroups){
        const value = atomicGroups[key];
        str += value + ' ';
    }
    return str.slice(0, -1);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7h6Pi":[function(require,module,exports,__globalThis) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
module.exports.init = function() {
    if (!globalThis.$RefreshReg$) {
        Refresh.injectIntoGlobalHook(globalThis);
        globalThis.$RefreshReg$ = function() {};
        globalThis.$RefreshSig$ = function() {
            return function(type) {
                return type;
            };
        };
        if (typeof window !== 'undefined') {
            let ErrorOverlay = require("e4d875b7642f9496");
            ErrorOverlay.setEditorHandler(function(errorLocation) {
                let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
                fetch(module.bundle.devServer + `/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
            });
            ErrorOverlay.startReportingRuntimeErrors({
                onError: function() {}
            });
            window.addEventListener('parcelhmraccept', ()=>{
                ErrorOverlay.dismissRuntimeErrors();
            });
        }
    }
};
// Everything below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    globalThis.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + ' ' + id);
    };
    globalThis.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (typeof window === 'undefined') return;
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + ' %exports% ' + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"hpiFP","e4d875b7642f9496":"gnoim"}],"hpiFP":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("96622d495519d4e");

},{"96622d495519d4e":"7AD9f"}],"7AD9f":[function(require,module,exports,__globalThis) {
/**
 * @license React
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    function computeFullKey(signature) {
        if (null !== signature.fullKey) return signature.fullKey;
        var fullKey = signature.ownKey;
        try {
            var hooks = signature.getCustomHooks();
        } catch (err) {
            return signature.forceReset = !0, signature.fullKey = fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if ("function" !== typeof hook) return signature.forceReset = !0, signature.fullKey = fullKey;
            hook = allSignaturesByType.get(hook);
            if (void 0 !== hook) {
                var nestedHookKey = computeFullKey(hook);
                hook.forceReset && (signature.forceReset = !0);
                fullKey += "\n---\n" + nestedHookKey;
            }
        }
        return signature.fullKey = fullKey;
    }
    function resolveFamily(type) {
        return updatedFamiliesByType.get(type);
    }
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function getProperty(object, property) {
        try {
            return object[property];
        } catch (err) {}
    }
    function register(type, id) {
        if (!(null === type || "function" !== typeof type && "object" !== typeof type || allFamiliesByType.has(type))) {
            var family = allFamiliesByID.get(id);
            void 0 === family ? (family = {
                current: type
            }, allFamiliesByID.set(id, family)) : pendingUpdates.push([
                family,
                type
            ]);
            allFamiliesByType.set(type, family);
            if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
                case REACT_FORWARD_REF_TYPE:
                    register(type.render, id + "$render");
                    break;
                case REACT_MEMO_TYPE:
                    register(type.type, id + "$type");
            }
        }
    }
    function setSignature(type, key) {
        var forceReset = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : !1, getCustomHooks = 3 < arguments.length ? arguments[3] : void 0;
        allSignaturesByType.has(type) || allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
        if ("object" === typeof type && null !== type) switch(getProperty(type, "$$typeof")){
            case REACT_FORWARD_REF_TYPE:
                setSignature(type.render, key, forceReset, getCustomHooks);
                break;
            case REACT_MEMO_TYPE:
                setSignature(type.type, key, forceReset, getCustomHooks);
        }
    }
    function collectCustomHooksForSignature(type) {
        type = allSignaturesByType.get(type);
        void 0 !== type && computeFullKey(type);
    }
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_MEMO_TYPE = Symbol.for("react.memo"), PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map, allFamiliesByID = new Map(), allFamiliesByType = new PossiblyWeakMap(), allSignaturesByType = new PossiblyWeakMap(), updatedFamiliesByType = new PossiblyWeakMap(), pendingUpdates = [], helpersByRendererID = new Map(), helpersByRoot = new Map(), mountedRoots = new Set(), failedRoots = new Set(), rootElements = "function" === typeof WeakMap ? new WeakMap() : null, isPerformingRefresh = !1;
    exports._getMountedRootCount = function() {
        return mountedRoots.size;
    };
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = function() {
        var savedType, hasCustomHooks, didCollectHooks = !1;
        return function(type, key, forceReset, getCustomHooks) {
            if ("string" === typeof key) return savedType || (savedType = type, hasCustomHooks = "function" === typeof getCustomHooks), null == type || "function" !== typeof type && "object" !== typeof type || setSignature(type, key, forceReset, getCustomHooks), type;
            !didCollectHooks && hasCustomHooks && (didCollectHooks = !0, collectCustomHooksForSignature(savedType));
        };
    };
    exports.getFamilyByID = function(id) {
        return allFamiliesByID.get(id);
    };
    exports.getFamilyByType = function(type) {
        return allFamiliesByType.get(type);
    };
    exports.hasUnrecoverableErrors = function() {
        return !1;
    };
    exports.injectIntoGlobalHook = function(globalObject) {
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (void 0 === hook) {
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: !0,
                inject: function() {
                    return nextID++;
                },
                onScheduleFiberRoot: function() {},
                onCommitFiberRoot: function() {},
                onCommitFiberUnmount: function() {}
            };
        }
        if (hook.isDisabled) console.warn("Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). Fast Refresh is not compatible with this shim and will be disabled.");
        else {
            var oldInject = hook.inject;
            hook.inject = function(injected) {
                var id = oldInject.apply(this, arguments);
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
                return id;
            };
            hook.renderers.forEach(function(injected, id) {
                "function" === typeof injected.scheduleRefresh && "function" === typeof injected.setRefreshHandler && helpersByRendererID.set(id, injected);
            });
            var oldOnCommitFiberRoot = hook.onCommitFiberRoot, oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
            hook.onScheduleFiberRoot = function(id, root, children) {
                isPerformingRefresh || (failedRoots.delete(root), null !== rootElements && rootElements.set(root, children));
                return oldOnScheduleFiberRoot.apply(this, arguments);
            };
            hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
                var helpers = helpersByRendererID.get(id);
                if (void 0 !== helpers) {
                    helpersByRoot.set(root, helpers);
                    helpers = root.current;
                    var alternate = helpers.alternate;
                    null !== alternate ? (alternate = null != alternate.memoizedState && null != alternate.memoizedState.element && mountedRoots.has(root), helpers = null != helpers.memoizedState && null != helpers.memoizedState.element, !alternate && helpers ? (mountedRoots.add(root), failedRoots.delete(root)) : alternate && helpers || (alternate && !helpers ? (mountedRoots.delete(root), didError ? failedRoots.add(root) : helpersByRoot.delete(root)) : alternate || helpers || didError && failedRoots.add(root))) : mountedRoots.add(root);
                }
                return oldOnCommitFiberRoot.apply(this, arguments);
            };
        }
    };
    exports.isLikelyComponentType = function(type) {
        switch(typeof type){
            case "function":
                if (null != type.prototype) {
                    if (type.prototype.isReactComponent) return !0;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (1 < ownNames.length || "constructor" !== ownNames[0] || type.prototype.__proto__ !== Object.prototype) return !1;
                }
                type = type.name || type.displayName;
                return "string" === typeof type && /^[A-Z]/.test(type);
            case "object":
                if (null != type) switch(getProperty(type, "$$typeof")){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        return !0;
                }
                return !1;
            default:
                return !1;
        }
    };
    exports.performReactRefresh = function() {
        if (0 === pendingUpdates.length || isPerformingRefresh) return null;
        isPerformingRefresh = !0;
        try {
            var staleFamilies = new Set(), updatedFamilies = new Set(), updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0];
                _ref = _ref[1];
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(_ref, family);
                family.current = _ref;
                prevType.prototype && prevType.prototype.isReactComponent || _ref.prototype && _ref.prototype.isReactComponent ? _ref = !1 : (prevType = allSignaturesByType.get(prevType), _ref = allSignaturesByType.get(_ref), _ref = void 0 === prevType && void 0 === _ref || void 0 !== prevType && void 0 !== _ref && computeFullKey(prevType) === computeFullKey(_ref) && !_ref.forceReset ? !0 : !1);
                _ref ? updatedFamilies.add(family) : staleFamilies.add(family);
            });
            var update = {
                updatedFamilies: updatedFamilies,
                staleFamilies: staleFamilies
            };
            helpersByRendererID.forEach(function(helpers) {
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = !1, firstError = null, failedRootsSnapshot = cloneSet(failedRoots), mountedRootsSnapshot = cloneSet(mountedRoots), helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (null !== rootElements && rootElements.has(root)) {
                    var element = rootElements.get(root);
                    try {
                        helpers.scheduleRoot(root, element);
                    } catch (err) {
                        didError || (didError = !0, firstError = err);
                    }
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (void 0 === helpers) throw Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    didError || (didError = !0, firstError = err);
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = !1;
        }
    };
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"gnoim":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setEditorHandler", ()=>$da9882e673ac146b$export$25a22ac46f1bd016);
parcelHelpers.export(exports, "reportRuntimeError", ()=>$da9882e673ac146b$export$74e9101ce4078c0);
parcelHelpers.export(exports, "startReportingRuntimeErrors", ()=>$da9882e673ac146b$export$cda2c88a41631c16);
parcelHelpers.export(exports, "dismissRuntimeErrors", ()=>$da9882e673ac146b$export$1cfa6d161ca81bd9);
parcelHelpers.export(exports, "stopReportingRuntimeErrors", ()=>$da9882e673ac146b$export$25ba7d9a816639e7);
function $parcel$interopDefault(a) {
    return a && a.__esModule ? a.default : a;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /* eslint-disable react/react-in-jsx-scope, no-console */ var $b6c7f0288a15c619$var$n, $b6c7f0288a15c619$export$41c562ebe57d11e2, $b6c7f0288a15c619$var$u, $b6c7f0288a15c619$export$a8257692ac88316c, $b6c7f0288a15c619$var$i, $b6c7f0288a15c619$var$r, $b6c7f0288a15c619$var$o, $b6c7f0288a15c619$var$e, $b6c7f0288a15c619$var$f, $b6c7f0288a15c619$var$c, $b6c7f0288a15c619$var$s, $b6c7f0288a15c619$var$a, $b6c7f0288a15c619$var$h, $b6c7f0288a15c619$var$p = {}, $b6c7f0288a15c619$var$y = [], $b6c7f0288a15c619$var$v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $b6c7f0288a15c619$var$w = Array.isArray;
function $b6c7f0288a15c619$var$d(n, l) {
    for(var u in l)n[u] = l[u];
    return n;
}
function $b6c7f0288a15c619$var$g(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
}
function $b6c7f0288a15c619$export$c8a8987d4410bf2d(l, u, t) {
    var i, r, o, e = {};
    for(o in u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : e[o] = u[o];
    if (arguments.length > 2 && (e.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), "function" == typeof l && null != l.defaultProps) for(o in l.defaultProps)null == e[o] && (e[o] = l.defaultProps[o]);
    return $b6c7f0288a15c619$var$m(l, e, i, r, null);
}
function $b6c7f0288a15c619$var$m(n, t, i, r, o) {
    var e = {
        type: n,
        props: t,
        key: i,
        ref: r,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: null == o ? ++$b6c7f0288a15c619$var$u : o,
        __i: -1,
        __u: 0
    };
    return null == o && null != $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(e), e;
}
function $b6c7f0288a15c619$export$7d1e3a5e95ceca43() {
    return {
        current: null
    };
}
function $b6c7f0288a15c619$export$ffb0004e005737fa(n) {
    return n.children;
}
function $b6c7f0288a15c619$export$16fa2f45be04daa8(n, l) {
    this.props = n, this.context = l;
}
function $b6c7f0288a15c619$var$S(n, l) {
    if (null == l) return n.__ ? $b6c7f0288a15c619$var$S(n.__, n.__i + 1) : null;
    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
    return "function" == typeof n.type ? $b6c7f0288a15c619$var$S(n) : null;
}
function $b6c7f0288a15c619$var$C(n) {
    var l, u;
    if (null != (n = n.__) && null != n.__c) {
        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {
            n.__e = n.__c.base = u.__e;
            break;
        }
        return $b6c7f0288a15c619$var$C(n);
    }
}
function $b6c7f0288a15c619$var$M(n) {
    (!n.__d && (n.__d = !0) && $b6c7f0288a15c619$var$i.push(n) && !$b6c7f0288a15c619$var$$.__r++ || $b6c7f0288a15c619$var$r != $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) && (($b6c7f0288a15c619$var$r = $b6c7f0288a15c619$export$41c562ebe57d11e2.debounceRendering) || $b6c7f0288a15c619$var$o)($b6c7f0288a15c619$var$$);
}
function $b6c7f0288a15c619$var$$() {
    for(var n, u, t, r, o, f, c, s = 1; $b6c7f0288a15c619$var$i.length;)$b6c7f0288a15c619$var$i.length > s && $b6c7f0288a15c619$var$i.sort($b6c7f0288a15c619$var$e), n = $b6c7f0288a15c619$var$i.shift(), s = $b6c7f0288a15c619$var$i.length, n.__d && (t = void 0, o = (r = (u = n).__v).__e, f = [], c = [], u.__P && ((t = $b6c7f0288a15c619$var$d({}, r)).__v = r.__v + 1, $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(t), $b6c7f0288a15c619$var$O(u.__P, t, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [
        o
    ] : null, f, null == o ? $b6c7f0288a15c619$var$S(r) : o, !!(32 & r.__u), c), t.__v = r.__v, t.__.__k[t.__i] = t, $b6c7f0288a15c619$var$z(f, t, c), t.__e != o && $b6c7f0288a15c619$var$C(t)));
    $b6c7f0288a15c619$var$$.__r = 0;
}
function $b6c7f0288a15c619$var$I(n, l, u, t, i, r, o, e, f, c, s) {
    var a, h, v, w, d, g, _ = t && t.__k || $b6c7f0288a15c619$var$y, m = l.length;
    for(f = $b6c7f0288a15c619$var$P(u, l, _, f, m), a = 0; a < m; a++)null != (v = u.__k[a]) && (h = -1 == v.__i ? $b6c7f0288a15c619$var$p : _[v.__i] || $b6c7f0288a15c619$var$p, v.__i = a, g = $b6c7f0288a15c619$var$O(n, v, h, i, r, o, e, f, c, s), w = v.__e, v.ref && h.ref != v.ref && (h.ref && $b6c7f0288a15c619$var$q(h.ref, null, v), s.push(v.ref, v.__c || w, v)), null == d && null != w && (d = w), 4 & v.__u || h.__k === v.__k ? f = $b6c7f0288a15c619$var$A(v, f, n) : "function" == typeof v.type && void 0 !== g ? f = g : w && (f = w.nextSibling), v.__u &= -7);
    return u.__e = d, f;
}
function $b6c7f0288a15c619$var$P(n, l, u, t, i) {
    var r, o, e, f, c, s = u.length, a = s, h = 0;
    for(n.__k = new Array(i), r = 0; r < i; r++)null != (o = l[r]) && "boolean" != typeof o && "function" != typeof o ? (f = r + h, (o = n.__k[r] = "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String ? $b6c7f0288a15c619$var$m(null, o, null, null, null) : $b6c7f0288a15c619$var$w(o) ? $b6c7f0288a15c619$var$m($b6c7f0288a15c619$export$ffb0004e005737fa, {
        children: o
    }, null, null, null) : null == o.constructor && o.__b > 0 ? $b6c7f0288a15c619$var$m(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v) : o).__ = n, o.__b = n.__b + 1, e = null, -1 != (c = o.__i = $b6c7f0288a15c619$var$L(o, u, f, a)) && (a--, (e = u[c]) && (e.__u |= 2)), null == e || null == e.__v ? (-1 == c && (i > s ? h-- : i < s && h++), "function" != typeof o.type && (o.__u |= 4)) : c != f && (c == f - 1 ? h-- : c == f + 1 ? h++ : (c > f ? h-- : h++, o.__u |= 4))) : n.__k[r] = null;
    if (a) for(r = 0; r < s; r++)null != (e = u[r]) && 0 == (2 & e.__u) && (e.__e == t && (t = $b6c7f0288a15c619$var$S(e)), $b6c7f0288a15c619$var$B(e, e));
    return t;
}
function $b6c7f0288a15c619$var$A(n, l, u) {
    var t, i;
    if ("function" == typeof n.type) {
        for(t = n.__k, i = 0; t && i < t.length; i++)t[i] && (t[i].__ = n, l = $b6c7f0288a15c619$var$A(t[i], l, u));
        return l;
    }
    n.__e != l && (l && n.type && !u.contains(l) && (l = $b6c7f0288a15c619$var$S(n)), u.insertBefore(n.__e, l || null), l = n.__e);
    do l = l && l.nextSibling;
    while (null != l && 8 == l.nodeType);
    return l;
}
function $b6c7f0288a15c619$export$47e4c5b300681277(n, l) {
    return l = l || [], null == n || "boolean" == typeof n || ($b6c7f0288a15c619$var$w(n) ? n.some(function(n) {
        $b6c7f0288a15c619$export$47e4c5b300681277(n, l);
    }) : l.push(n)), l;
}
function $b6c7f0288a15c619$var$L(n, l, u, t) {
    var i, r, o = n.key, e = n.type, f = l[u];
    if (null === f && null == n.key || f && o == f.key && e == f.type && 0 == (2 & f.__u)) return u;
    if (t > (null != f && 0 == (2 & f.__u) ? 1 : 0)) for(i = u - 1, r = u + 1; i >= 0 || r < l.length;){
        if (i >= 0) {
            if ((f = l[i]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return i;
            i--;
        }
        if (r < l.length) {
            if ((f = l[r]) && 0 == (2 & f.__u) && o == f.key && e == f.type) return r;
            r++;
        }
    }
    return -1;
}
function $b6c7f0288a15c619$var$T(n, l, u) {
    "-" == l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || $b6c7f0288a15c619$var$v.test(l) ? u : u + "px";
}
function $b6c7f0288a15c619$var$j(n, l, u, t, i) {
    var r;
    n: if ("style" == l) {
        if ("string" == typeof u) n.style.cssText = u;
        else {
            if ("string" == typeof t && (n.style.cssText = t = ""), t) for(l in t)u && l in u || $b6c7f0288a15c619$var$T(n.style, l, "");
            if (u) for(l in u)t && u[l] == t[l] || $b6c7f0288a15c619$var$T(n.style, l, u[l]);
        }
    } else if ("o" == l[0] && "n" == l[1]) r = l != (l = l.replace($b6c7f0288a15c619$var$f, "$1")), l = l.toLowerCase() in n || "onFocusOut" == l || "onFocusIn" == l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? t ? u.u = t.u : (u.u = $b6c7f0288a15c619$var$c, n.addEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r)) : n.removeEventListener(l, r ? $b6c7f0288a15c619$var$a : $b6c7f0288a15c619$var$s, r);
    else {
        if ("http://www.w3.org/2000/svg" == i) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
        else if ("width" != l && "height" != l && "href" != l && "list" != l && "form" != l && "tabIndex" != l && "download" != l && "rowSpan" != l && "colSpan" != l && "role" != l && "popover" != l && l in n) try {
            n[l] = null == u ? "" : u;
            break n;
        } catch (n) {}
        "function" == typeof u || (null == u || !1 === u && "-" != l[4] ? n.removeAttribute(l) : n.setAttribute(l, "popover" == l && 1 == u ? "" : u));
    }
}
function $b6c7f0288a15c619$var$F(n) {
    return function(u) {
        if (this.l) {
            var t = this.l[u.type + n];
            if (null == u.t) u.t = $b6c7f0288a15c619$var$c++;
            else if (u.t < t.u) return;
            return t($b6c7f0288a15c619$export$41c562ebe57d11e2.event ? $b6c7f0288a15c619$export$41c562ebe57d11e2.event(u) : u);
        }
    };
}
function $b6c7f0288a15c619$var$O(n, u, t, i, r, o, e, f, c, s) {
    var a, h, p, y, v, _, m, b, S, C, M, $, P, A, H, L, T, j = u.type;
    if (null != u.constructor) return null;
    128 & t.__u && (c = !!(32 & t.__u), o = [
        f = u.__e = t.__e
    ]), (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.__b) && a(u);
    n: if ("function" == typeof j) try {
        if (b = u.props, S = "prototype" in j && j.prototype.render, C = (a = j.contextType) && i[a.__c], M = a ? C ? C.props.value : a.__ : i, t.__c ? m = (h = u.__c = t.__c).__ = h.__E : (S ? u.__c = h = new j(b, M) : (u.__c = h = new $b6c7f0288a15c619$export$16fa2f45be04daa8(b, M), h.constructor = j, h.render = $b6c7f0288a15c619$var$D), C && C.sub(h), h.props = b, h.state || (h.state = {}), h.context = M, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), S && null == h.__s && (h.__s = h.state), S && null != j.getDerivedStateFromProps && (h.__s == h.state && (h.__s = $b6c7f0288a15c619$var$d({}, h.__s)), $b6c7f0288a15c619$var$d(h.__s, j.getDerivedStateFromProps(b, h.__s))), y = h.props, v = h.state, h.__v = u, p) S && null == j.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), S && null != h.componentDidMount && h.__h.push(h.componentDidMount);
        else {
            if (S && null == j.getDerivedStateFromProps && b !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(b, M), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(b, h.__s, M) || u.__v == t.__v) {
                for(u.__v != t.__v && (h.props = b, h.state = h.__s, h.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.some(function(n) {
                    n && (n.__ = u);
                }), $ = 0; $ < h._sb.length; $++)h.__h.push(h._sb[$]);
                h._sb = [], h.__h.length && e.push(h);
                break n;
            }
            null != h.componentWillUpdate && h.componentWillUpdate(b, h.__s, M), S && null != h.componentDidUpdate && h.__h.push(function() {
                h.componentDidUpdate(y, v, _);
            });
        }
        if (h.context = M, h.props = b, h.__P = n, h.__e = !1, P = $b6c7f0288a15c619$export$41c562ebe57d11e2.__r, A = 0, S) {
            for(h.state = h.__s, h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++)h.__h.push(h._sb[H]);
            h._sb = [];
        } else do h.__d = !1, P && P(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;
        while (h.__d && ++A < 25);
        h.state = h.__s, null != h.getChildContext && (i = $b6c7f0288a15c619$var$d($b6c7f0288a15c619$var$d({}, i), h.getChildContext())), S && !p && null != h.getSnapshotBeforeUpdate && (_ = h.getSnapshotBeforeUpdate(y, v)), L = a, null != a && a.type === $b6c7f0288a15c619$export$ffb0004e005737fa && null == a.key && (L = $b6c7f0288a15c619$var$N(a.props.children)), f = $b6c7f0288a15c619$var$I(n, $b6c7f0288a15c619$var$w(L) ? L : [
            L
        ], u, t, i, r, o, e, f, c, s), h.base = u.__e, u.__u &= -161, h.__h.length && e.push(h), m && (h.__E = h.__ = null);
    } catch (n) {
        if (u.__v = null, c || null != o) {
            if (n.then) {
                for(u.__u |= c ? 160 : 128; f && 8 == f.nodeType && f.nextSibling;)f = f.nextSibling;
                o[o.indexOf(f)] = null, u.__e = f;
            } else for(T = o.length; T--;)$b6c7f0288a15c619$var$g(o[T]);
        } else u.__e = t.__e, u.__k = t.__k;
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u, t);
    }
    else null == o && u.__v == t.__v ? (u.__k = t.__k, u.__e = t.__e) : f = u.__e = $b6c7f0288a15c619$var$V(t.__e, u, t, i, r, o, e, c, s);
    return (a = $b6c7f0288a15c619$export$41c562ebe57d11e2.diffed) && a(u), 128 & u.__u ? void 0 : f;
}
function $b6c7f0288a15c619$var$z(n, u, t) {
    for(var i = 0; i < t.length; i++)$b6c7f0288a15c619$var$q(t[i], t[++i], t[++i]);
    $b6c7f0288a15c619$export$41c562ebe57d11e2.__c && $b6c7f0288a15c619$export$41c562ebe57d11e2.__c(u, n), n.some(function(u) {
        try {
            n = u.__h, u.__h = [], n.some(function(n) {
                n.call(u);
            });
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u.__v);
        }
    });
}
function $b6c7f0288a15c619$var$N(n) {
    return "object" != typeof n || null == n || n.__b && n.__b > 0 ? n : $b6c7f0288a15c619$var$w(n) ? n.map($b6c7f0288a15c619$var$N) : $b6c7f0288a15c619$var$d({}, n);
}
function $b6c7f0288a15c619$var$V(u, t, i, r, o, e, f, c, s) {
    var a, h, y, v, d, _, m, b = i.props, k = t.props, x = t.type;
    if ("svg" == x ? o = "http://www.w3.org/2000/svg" : "math" == x ? o = "http://www.w3.org/1998/Math/MathML" : o || (o = "http://www.w3.org/1999/xhtml"), null != e) {
        for(a = 0; a < e.length; a++)if ((d = e[a]) && "setAttribute" in d == !!x && (x ? d.localName == x : 3 == d.nodeType)) {
            u = d, e[a] = null;
            break;
        }
    }
    if (null == u) {
        if (null == x) return document.createTextNode(k);
        u = document.createElementNS(o, x, k.is && k), c && ($b6c7f0288a15c619$export$41c562ebe57d11e2.__m && $b6c7f0288a15c619$export$41c562ebe57d11e2.__m(t, e), c = !1), e = null;
    }
    if (null == x) b === k || c && u.data == k || (u.data = k);
    else {
        if (e = e && $b6c7f0288a15c619$var$n.call(u.childNodes), b = i.props || $b6c7f0288a15c619$var$p, !c && null != e) for(b = {}, a = 0; a < u.attributes.length; a++)b[(d = u.attributes[a]).name] = d.value;
        for(a in b)if (d = b[a], "children" == a) ;
        else if ("dangerouslySetInnerHTML" == a) y = d;
        else if (!(a in k)) {
            if ("value" == a && "defaultValue" in k || "checked" == a && "defaultChecked" in k) continue;
            $b6c7f0288a15c619$var$j(u, a, null, d, o);
        }
        for(a in k)d = k[a], "children" == a ? v = d : "dangerouslySetInnerHTML" == a ? h = d : "value" == a ? _ = d : "checked" == a ? m = d : c && "function" != typeof d || b[a] === d || $b6c7f0288a15c619$var$j(u, a, d, b[a], o);
        if (h) c || y && (h.__html == y.__html || h.__html == u.innerHTML) || (u.innerHTML = h.__html), t.__k = [];
        else if (y && (u.innerHTML = ""), $b6c7f0288a15c619$var$I("template" == t.type ? u.content : u, $b6c7f0288a15c619$var$w(v) ? v : [
            v
        ], t, i, r, "foreignObject" == x ? "http://www.w3.org/1999/xhtml" : o, e, f, e ? e[0] : i.__k && $b6c7f0288a15c619$var$S(i, 0), c, s), null != e) for(a = e.length; a--;)$b6c7f0288a15c619$var$g(e[a]);
        c || (a = "value", "progress" == x && null == _ ? u.removeAttribute("value") : null != _ && (_ !== u[a] || "progress" == x && !_ || "option" == x && _ != b[a]) && $b6c7f0288a15c619$var$j(u, a, _, b[a], o), a = "checked", null != m && m != u[a] && $b6c7f0288a15c619$var$j(u, a, m, b[a], o));
    }
    return u;
}
function $b6c7f0288a15c619$var$q(n, u, t) {
    try {
        if ("function" == typeof n) {
            var i = "function" == typeof n.__u;
            i && n.__u(), i && null == u || (n.__u = n(u));
        } else n.current = u;
    } catch (n) {
        $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, t);
    }
}
function $b6c7f0288a15c619$var$B(n, u, t) {
    var i, r;
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.unmount && $b6c7f0288a15c619$export$41c562ebe57d11e2.unmount(n), (i = n.ref) && (i.current && i.current != n.__e || $b6c7f0288a15c619$var$q(i, null, u)), null != (i = n.__c)) {
        if (i.componentWillUnmount) try {
            i.componentWillUnmount();
        } catch (n) {
            $b6c7f0288a15c619$export$41c562ebe57d11e2.__e(n, u);
        }
        i.base = i.__P = null;
    }
    if (i = n.__k) for(r = 0; r < i.length; r++)i[r] && $b6c7f0288a15c619$var$B(i[r], u, t || "function" != typeof n.type);
    t || $b6c7f0288a15c619$var$g(n.__e), n.__c = n.__ = n.__e = void 0;
}
function $b6c7f0288a15c619$var$D(n, l, u) {
    return this.constructor(n, u);
}
function $b6c7f0288a15c619$export$b3890eb0ae9dca99(u, t, i) {
    var r, o, e, f;
    t == document && (t = document.documentElement), $b6c7f0288a15c619$export$41c562ebe57d11e2.__ && $b6c7f0288a15c619$export$41c562ebe57d11e2.__(u, t), o = (r = "function" == typeof i) ? null : i && i.__k || t.__k, e = [], f = [], $b6c7f0288a15c619$var$O(t, u = (!r && i || t).__k = $b6c7f0288a15c619$export$c8a8987d4410bf2d($b6c7f0288a15c619$export$ffb0004e005737fa, null, [
        u
    ]), o || $b6c7f0288a15c619$var$p, $b6c7f0288a15c619$var$p, t.namespaceURI, !r && i ? [
        i
    ] : o ? null : t.firstChild ? $b6c7f0288a15c619$var$n.call(t.childNodes) : null, e, !r && i ? i : o ? o.__e : t.firstChild, r, f), $b6c7f0288a15c619$var$z(e, u, f);
}
function $b6c7f0288a15c619$export$fa8d919ba61d84db(n, l) {
    $b6c7f0288a15c619$export$b3890eb0ae9dca99(n, l, $b6c7f0288a15c619$export$fa8d919ba61d84db);
}
function $b6c7f0288a15c619$export$e530037191fcd5d7(l, u, t) {
    var i, r, o, e, f = $b6c7f0288a15c619$var$d({}, l.props);
    for(o in l.type && l.type.defaultProps && (e = l.type.defaultProps), u)"key" == o ? i = u[o] : "ref" == o ? r = u[o] : f[o] = null == u[o] && null != e ? e[o] : u[o];
    return arguments.length > 2 && (f.children = arguments.length > 3 ? $b6c7f0288a15c619$var$n.call(arguments, 2) : t), $b6c7f0288a15c619$var$m(l.type, f, i || l.key, r || l.ref, null);
}
function $b6c7f0288a15c619$export$fd42f52fd3ae1109(n) {
    function l(n) {
        var u, t;
        return this.getChildContext || (u = new Set, (t = {})[l.__c] = this, this.getChildContext = function() {
            return t;
        }, this.componentWillUnmount = function() {
            u = null;
        }, this.shouldComponentUpdate = function(n) {
            this.props.value != n.value && u.forEach(function(n) {
                n.__e = !0, $b6c7f0288a15c619$var$M(n);
            });
        }, this.sub = function(n) {
            u.add(n);
            var l = n.componentWillUnmount;
            n.componentWillUnmount = function() {
                u && u.delete(n), l && l.call(n);
            };
        }), n.children;
    }
    return l.__c = "__cC" + $b6c7f0288a15c619$var$h++, l.__ = n, l.Provider = l.__l = (l.Consumer = function(n, l) {
        return n.children(l);
    }).contextType = l, l;
}
$b6c7f0288a15c619$var$n = $b6c7f0288a15c619$var$y.slice, $b6c7f0288a15c619$export$41c562ebe57d11e2 = {
    __e: function(n, l, u, t) {
        for(var i, r, o; l = l.__;)if ((i = l.__c) && !i.__) try {
            if ((r = i.constructor) && null != r.getDerivedStateFromError && (i.setState(r.getDerivedStateFromError(n)), o = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), o = i.__d), o) return i.__E = i;
        } catch (l) {
            n = l;
        }
        throw n;
    }
}, $b6c7f0288a15c619$var$u = 0, $b6c7f0288a15c619$export$a8257692ac88316c = function(n) {
    return null != n && null == n.constructor;
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.setState = function(n, l) {
    var u;
    u = null != this.__s && this.__s != this.state ? this.__s : this.__s = $b6c7f0288a15c619$var$d({}, this.state), "function" == typeof n && (n = n($b6c7f0288a15c619$var$d({}, u), this.props)), n && $b6c7f0288a15c619$var$d(u, n), null != n && this.__v && (l && this._sb.push(l), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.forceUpdate = function(n) {
    this.__v && (this.__e = !0, n && this.__h.push(n), $b6c7f0288a15c619$var$M(this));
}, $b6c7f0288a15c619$export$16fa2f45be04daa8.prototype.render = $b6c7f0288a15c619$export$ffb0004e005737fa, $b6c7f0288a15c619$var$i = [], $b6c7f0288a15c619$var$o = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $b6c7f0288a15c619$var$e = function(n, l) {
    return n.__v.__b - l.__v.__b;
}, $b6c7f0288a15c619$var$$.__r = 0, $b6c7f0288a15c619$var$f = /(PointerCapture)$|Capture$/i, $b6c7f0288a15c619$var$c = 0, $b6c7f0288a15c619$var$s = $b6c7f0288a15c619$var$F(!1), $b6c7f0288a15c619$var$a = $b6c7f0288a15c619$var$F(!0), $b6c7f0288a15c619$var$h = 0;
var $23b7c1cb98b19658$var$t = /["&<]/;
function $23b7c1cb98b19658$var$n(r) {
    if (0 === r.length || !1 === $23b7c1cb98b19658$var$t.test(r)) return r;
    for(var e = 0, n = 0, o = "", f = ""; n < r.length; n++){
        switch(r.charCodeAt(n)){
            case 34:
                f = "&quot;";
                break;
            case 38:
                f = "&amp;";
                break;
            case 60:
                f = "&lt;";
                break;
            default:
                continue;
        }
        n !== e && (o += r.slice(e, n)), o += f, e = n + 1;
    }
    return n !== e && (o += r.slice(e, n)), o;
}
var $23b7c1cb98b19658$var$o = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, $23b7c1cb98b19658$var$f = 0, $23b7c1cb98b19658$var$i = Array.isArray;
function $23b7c1cb98b19658$export$34b9dba7ce09269b(e, t, n, o, i, u) {
    t || (t = {});
    var a, c, p = t;
    if ("ref" in p) for(c in p = {}, t)"ref" == c ? a = t[c] : p[c] = t[c];
    var l = {
        type: e,
        props: p,
        key: n,
        ref: a,
        __k: null,
        __: null,
        __b: 0,
        __e: null,
        __c: null,
        constructor: void 0,
        __v: --$23b7c1cb98b19658$var$f,
        __i: -1,
        __u: 0,
        __source: i,
        __self: u
    };
    if ("function" == typeof e && (a = e.defaultProps)) for(c in a)void 0 === p[c] && (p[c] = a[c]);
    return $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode && $b6c7f0288a15c619$export$41c562ebe57d11e2.vnode(l), l;
}
function $23b7c1cb98b19658$export$45700d561b2268ac(r) {
    var t = $23b7c1cb98b19658$export$34b9dba7ce09269b($b6c7f0288a15c619$export$ffb0004e005737fa, {
        tpl: r,
        exprs: [].slice.call(arguments, 1)
    });
    return t.key = t.__v, t;
}
var $23b7c1cb98b19658$var$c = {}, $23b7c1cb98b19658$var$p = /[A-Z]/g;
function $23b7c1cb98b19658$export$991f6ffe102e5bac(e, t) {
    if ($b6c7f0288a15c619$export$41c562ebe57d11e2.attr) {
        var f = $b6c7f0288a15c619$export$41c562ebe57d11e2.attr(e, t);
        if ("string" == typeof f) return f;
    }
    if ("ref" === e || "key" === e) return "";
    if ("style" === e && "object" == typeof t) {
        var i = "";
        for(var u in t){
            var a = t[u];
            if (null != a && "" !== a) {
                var l = "-" == u[0] ? u : $23b7c1cb98b19658$var$c[u] || ($23b7c1cb98b19658$var$c[u] = u.replace($23b7c1cb98b19658$var$p, "-$&").toLowerCase()), s = ";";
                "number" != typeof a || l.startsWith("--") || $23b7c1cb98b19658$var$o.test(l) || (s = "px;"), i = i + l + ":" + a + s;
            }
        }
        return e + '="' + i + '"';
    }
    return null == t || !1 === t || "function" == typeof t || "object" == typeof t ? "" : !0 === t ? e : e + '="' + $23b7c1cb98b19658$var$n(t) + '"';
}
function $23b7c1cb98b19658$export$40e96e718441efeb(r) {
    if (null == r || "boolean" == typeof r || "function" == typeof r) return null;
    if ("object" == typeof r) {
        if (void 0 === r.constructor) return r;
        if ($23b7c1cb98b19658$var$i(r)) {
            for(var e = 0; e < r.length; e++)r[e] = $23b7c1cb98b19658$export$40e96e718441efeb(r[e]);
            return r;
        }
    }
    return $23b7c1cb98b19658$var$n("" + r);
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $883a43040cbd0629$var$boundErrorHandler = null;
function $883a43040cbd0629$var$errorHandler(callback, e) {
    // $FlowFixMe
    if (!e.error) return;
    // $FlowFixMe
    const { error: error } = e;
    if (error instanceof Error) callback(error);
    else // Look in your browser's devtools for more information
    callback(new Error(error));
}
function $883a43040cbd0629$export$6503ec6e8aabbaf(target, callback) {
    if ($883a43040cbd0629$var$boundErrorHandler !== null) return;
    $883a43040cbd0629$var$boundErrorHandler = $883a43040cbd0629$var$errorHandler.bind(undefined, callback);
    target.addEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
}
function $883a43040cbd0629$export$d07f55d4c15c0440(target) {
    if ($883a43040cbd0629$var$boundErrorHandler === null) return;
    target.removeEventListener('error', $883a43040cbd0629$var$boundErrorHandler);
    $883a43040cbd0629$var$boundErrorHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $900f8c32b7484e20$var$boundRejectionHandler = null;
function $900f8c32b7484e20$var$rejectionHandler(callback, e) {
    if (e == null || e.reason == null) return callback(new Error('Unknown'));
    let { reason: reason } = e;
    if (reason instanceof Error) return callback(reason);
    // A non-error was rejected, we don't have a trace :(
    // Look in your browser's devtools for more information
    return callback(new Error(reason));
}
function $900f8c32b7484e20$export$6503ec6e8aabbaf(target, callback) {
    if ($900f8c32b7484e20$var$boundRejectionHandler !== null) return;
    $900f8c32b7484e20$var$boundRejectionHandler = $900f8c32b7484e20$var$rejectionHandler.bind(undefined, callback);
    // $FlowFixMe
    target.addEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
}
function $900f8c32b7484e20$export$d07f55d4c15c0440(target) {
    if ($900f8c32b7484e20$var$boundRejectionHandler === null) return;
    // $FlowFixMe
    target.removeEventListener('unhandledrejection', $900f8c32b7484e20$var$boundRejectionHandler);
    $900f8c32b7484e20$var$boundRejectionHandler = null;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ let $5f72ade198404e99$var$stackTraceRegistered = false;
// Default: https://docs.microsoft.com/en-us/scripting/javascript/reference/stacktracelimit-property-error-javascript
let $5f72ade198404e99$var$restoreStackTraceValue = 10;
const $5f72ade198404e99$var$MAX_STACK_LENGTH = 50;
function $5f72ade198404e99$export$6503ec6e8aabbaf(limit = $5f72ade198404e99$var$MAX_STACK_LENGTH) {
    if ($5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        $5f72ade198404e99$var$restoreStackTraceValue = Error.stackTraceLimit;
        Error.stackTraceLimit = limit;
        $5f72ade198404e99$var$stackTraceRegistered = true;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
function $5f72ade198404e99$export$d07f55d4c15c0440() {
    if (!$5f72ade198404e99$var$stackTraceRegistered) return;
    try {
        Error.stackTraceLimit = $5f72ade198404e99$var$restoreStackTraceValue;
        $5f72ade198404e99$var$stackTraceRegistered = false;
    } catch (e) {
    // Not all browsers support this so we don't care if it errors
    }
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * A representation of a stack frame.
 */ class $d35756f426c25812$export$8949fddf10447898 {
    constructor(functionName = null, fileName = null, lineNumber = null, columnNumber = null, scriptCode = null, sourceFunctionName = null, sourceFileName = null, sourceLineNumber = null, sourceColumnNumber = null, sourceScriptCode = null){
        if (functionName && functionName.indexOf('Object.') === 0) functionName = functionName.slice(7);
        if (// https://github.com/facebook/create-react-app/issues/2097
        // Let's ignore a meaningless name we get for top-level modules.
        functionName === 'friendlySyntaxErrorLabel' || functionName === 'exports.__esModule' || functionName === '<anonymous>' || !functionName) functionName = null;
        this.functionName = functionName;
        this.fileName = fileName;
        this.lineNumber = lineNumber;
        this.columnNumber = columnNumber;
        this._originalFunctionName = sourceFunctionName;
        this._originalFileName = sourceFileName;
        this._originalLineNumber = sourceLineNumber;
        this._originalColumnNumber = sourceColumnNumber;
        this._scriptCode = scriptCode;
        this._originalScriptCode = sourceScriptCode;
    }
    /**
   * Returns the name of this function.
   */ getFunctionName() {
        return this.functionName || '(anonymous function)';
    }
    /**
   * Returns the source of the frame.
   * This contains the file name, line number, and column number when available.
   */ getSource() {
        let str = '';
        if (this.fileName != null) str += this.fileName + ':';
        if (this.lineNumber != null) str += this.lineNumber + ':';
        if (this.columnNumber != null) str += this.columnNumber + ':';
        return str.slice(0, -1);
    }
    /**
   * Returns a pretty version of this stack frame.
   */ toString() {
        const functionName = this.getFunctionName();
        const source = this.getSource();
        return `${functionName}${source ? ` (${source})` : ``}`;
    }
}
var $d35756f426c25812$export$2e2bcd8739ae039 = $d35756f426c25812$export$8949fddf10447898;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $865b9ffc545cb441$var$regexExtractLocation = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
function $865b9ffc545cb441$var$extractLocation(token) {
    return $865b9ffc545cb441$var$regexExtractLocation.exec(token) // $FlowFixMe
    .slice(1).map((v)=>{
        const p = Number(v);
        if (!isNaN(p)) return p;
        return v;
    });
}
const $865b9ffc545cb441$var$regexValidFrame_Chrome = /^\s*(at|in)\s.+(:\d+)/;
const $865b9ffc545cb441$var$regexValidFrame_FireFox = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
function $865b9ffc545cb441$var$parseStack(stack) {
    let frames = stack.filter((e)=>$865b9ffc545cb441$var$regexValidFrame_Chrome.test(e) || $865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)).map((e)=>{
        if ($865b9ffc545cb441$var$regexValidFrame_FireFox.test(e)) {
            // Strip eval, we don't care about it
            let isEval = false;
            if (/ > (eval|Function)/.test(e)) {
                e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ':$1');
                isEval = true;
            }
            const data = e.split(/[@]/g);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join('@') || (isEval ? 'eval' : null), ...$865b9ffc545cb441$var$extractLocation(last));
        } else {
            // Strip eval, we don't care about it
            if (e.indexOf('(eval ') !== -1) e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
            if (e.indexOf('(at ') !== -1) e = e.replace(/\(at /, '(');
            const data = e.trim().split(/\s+/g).slice(1);
            const last = data.pop();
            return new $d35756f426c25812$export$2e2bcd8739ae039(data.join(' ') || null, ...$865b9ffc545cb441$var$extractLocation(last));
        }
    });
    let index = frames.findIndex((frame)=>frame.getFunctionName().includes('react-stack-bottom-frame'));
    if (index >= 0) frames = frames.slice(0, index);
    return frames;
}
/**
 * Turns an <code>Error</code>, or similar object, into a set of <code>StackFrame</code>s.
 * @alias parse
 */ function $865b9ffc545cb441$export$98e6a39c04603d36(error) {
    if (error == null) throw new Error('You cannot pass a null object.');
    if (typeof error === 'string') return $865b9ffc545cb441$var$parseStack(error.split('\n'));
    if (Array.isArray(error)) return $865b9ffc545cb441$var$parseStack(error);
    if (typeof error.stack === 'string') return $865b9ffc545cb441$var$parseStack(error.stack.split('\n'));
    throw new Error('The error you provided does not contain a stack trace.');
}
var $865b9ffc545cb441$export$2e2bcd8739ae039 = $865b9ffc545cb441$export$98e6a39c04603d36;
/**
 * Enhances a set of <code>StackFrame</code>s with their original positions and code (when available).
 * @param {StackFrame[]} frames A set of <code>StackFrame</code>s which contain (generated) code positions.
 * @param {number} [contextLines=3] The number of lines to provide before and after the line specified in the <code>StackFrame</code>.
 */ async function $df495b51087c401c$export$35b6448019ed80b8(error, contextLines = 3) {
    const frames = $865b9ffc545cb441$export$98e6a39c04603d36(error);
    // $FlowFixMe
    let res = await fetch(module.bundle.devServer + '/__parcel_code_frame', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            contextLines: contextLines,
            frames: frames.map((f)=>({
                    fileName: f.fileName,
                    lineNumber: f.lineNumber,
                    columnNumber: f.columnNumber
                }))
        })
    });
    let json = await res.json();
    return json.map((f, i)=>new $d35756f426c25812$export$8949fddf10447898(frames[i].functionName, f.fileName, f.lineNumber, f.columnNumber, f.compiledLines, frames[i].functionName, f.sourceFileName, f.sourceLineNumber, f.sourceColumnNumber, f.sourceLines));
}
var $df495b51087c401c$export$2e2bcd8739ae039 = $df495b51087c401c$export$35b6448019ed80b8;
const $6d40ebe8356580e0$var$CONTEXT_SIZE = 3;
function $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash) {
    return (error, unhandledRejection = false)=>{
        $df495b51087c401c$export$2e2bcd8739ae039(error, $6d40ebe8356580e0$var$CONTEXT_SIZE).then((stackFrames)=>{
            if (stackFrames == null) return;
            crash({
                error: error,
                unhandledRejection: unhandledRejection,
                contextSize: $6d40ebe8356580e0$var$CONTEXT_SIZE,
                stackFrames: stackFrames
            });
        }).catch((e)=>{
            // eslint-disable-next-line no-console
            console.log('Could not get the stack frames of error:', e);
        });
    };
}
function $6d40ebe8356580e0$var$patchConsole(method, onError) {
    /* eslint-disable no-console */ let original = console[method];
    console[method] = (...args)=>{
        let error = null;
        if (typeof args[0] === 'string') {
            let format = args[0].match(/%[oOdisfc]/g);
            if (format) {
                let errorIndex = format.findIndex((match)=>match === '%o' || match === '%O');
                if (errorIndex < 0) errorIndex = format.findIndex((match)=>match === '%s');
                if (errorIndex >= 0) error = args[errorIndex + 1];
                else error = args[1];
                if (!(error instanceof Error)) {
                    let index = 1;
                    let message = args[0].replace(/%[oOdisfc]/g, (match)=>{
                        switch(match){
                            case '%s':
                                return String(args[index++]);
                            case '%f':
                                return parseFloat(args[index++]);
                            case '%d':
                            case '%i':
                                return parseInt(args[index++], 10);
                            case '%o':
                            case '%O':
                                if (args[index] instanceof Error) return String(args[index++]);
                                else return JSON.stringify(args[index++]);
                            case '%c':
                                index++;
                                return '';
                        }
                    });
                    error = new Error(message);
                }
            } else error = new Error(args[0]);
        } else error = args.find((arg)=>arg instanceof Error);
        if (error && !error.message.includes('[parcel]') && typeof window !== 'undefined' && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {
            // Attempt to append the React component stack
            // TODO: use React.captureOwnerStack once stable.
            let hook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (hook.renderers instanceof Map) {
                for (let renderer of hook.renderers.values())if (typeof renderer?.currentDispatcherRef?.getCurrentStack === 'function') {
                    let stack = renderer.currentDispatcherRef.getCurrentStack();
                    if (stack) {
                        error.stack += stack;
                        break;
                    }
                }
            }
            onError(error);
        }
        original.apply(console, args);
    };
/* eslint-enable no-console */ }
function $6d40ebe8356580e0$export$38ec23daa6e8dcdf(crash) {
    const crashWithFramesRunTime = $6d40ebe8356580e0$export$9123e6c9c0ac21ed(crash);
    $883a43040cbd0629$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, false));
    $900f8c32b7484e20$export$6503ec6e8aabbaf(window, (error)=>crashWithFramesRunTime(error, true));
    $5f72ade198404e99$export$6503ec6e8aabbaf();
    $6d40ebe8356580e0$var$patchConsole('error', (error)=>crashWithFramesRunTime(error, false));
    return function() {
        $5f72ade198404e99$export$d07f55d4c15c0440();
        $900f8c32b7484e20$export$d07f55d4c15c0440(window);
        $883a43040cbd0629$export$d07f55d4c15c0440(window);
    };
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /* eslint-env browser */ var $10ecac3e4062713a$var$t, $10ecac3e4062713a$var$r, $10ecac3e4062713a$var$u, $10ecac3e4062713a$var$i, $10ecac3e4062713a$var$o = 0, $10ecac3e4062713a$var$f = [], $10ecac3e4062713a$var$c = $b6c7f0288a15c619$export$41c562ebe57d11e2, $10ecac3e4062713a$var$e = $10ecac3e4062713a$var$c.__b, $10ecac3e4062713a$var$a = $10ecac3e4062713a$var$c.__r, $10ecac3e4062713a$var$v = $10ecac3e4062713a$var$c.diffed, $10ecac3e4062713a$var$l = $10ecac3e4062713a$var$c.__c, $10ecac3e4062713a$var$m = $10ecac3e4062713a$var$c.unmount, $10ecac3e4062713a$var$s = $10ecac3e4062713a$var$c.__;
function $10ecac3e4062713a$var$p(n, t) {
    $10ecac3e4062713a$var$c.__h && $10ecac3e4062713a$var$c.__h($10ecac3e4062713a$var$r, n, $10ecac3e4062713a$var$o || t), $10ecac3e4062713a$var$o = 0;
    var u = $10ecac3e4062713a$var$r.__H || ($10ecac3e4062713a$var$r.__H = {
        __: [],
        __h: []
    });
    return n >= u.__.length && u.__.push({}), u.__[n];
}
function $10ecac3e4062713a$export$60241385465d0a34(n) {
    return $10ecac3e4062713a$var$o = 1, $10ecac3e4062713a$export$13e3392192263954($10ecac3e4062713a$var$D, n);
}
function $10ecac3e4062713a$export$13e3392192263954(n, u, i) {
    var o = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 2);
    if (o.t = n, !o.__c && (o.__ = [
        i ? i(u) : $10ecac3e4062713a$var$D(void 0, u),
        function(n) {
            var t = o.__N ? o.__N[0] : o.__[0], r = o.t(t, n);
            t !== r && (o.__N = [
                r,
                o.__[1]
            ], o.__c.setState({}));
        }
    ], o.__c = $10ecac3e4062713a$var$r, !$10ecac3e4062713a$var$r.__f)) {
        var f = function(n, t, r) {
            if (!o.__c.__H) return !0;
            var u = o.__c.__H.__.filter(function(n) {
                return !!n.__c;
            });
            if (u.every(function(n) {
                return !n.__N;
            })) return !c || c.call(this, n, t, r);
            var i = o.__c.props !== n;
            return u.forEach(function(n) {
                if (n.__N) {
                    var t = n.__[0];
                    n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
                }
            }), c && c.call(this, n, t, r) || i;
        };
        $10ecac3e4062713a$var$r.__f = !0;
        var c = $10ecac3e4062713a$var$r.shouldComponentUpdate, e = $10ecac3e4062713a$var$r.componentWillUpdate;
        $10ecac3e4062713a$var$r.componentWillUpdate = function(n, t, r) {
            if (this.__e) {
                var u = c;
                c = void 0, f(n, t, r), c = u;
            }
            e && e.call(this, n, t, r);
        }, $10ecac3e4062713a$var$r.shouldComponentUpdate = f;
    }
    return o.__N || o.__;
}
function $10ecac3e4062713a$export$6d9c69b0de29b591(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 3);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__H.__h.push(i));
}
function $10ecac3e4062713a$export$e5c5a5f917a5871c(n, u) {
    var i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 4);
    !$10ecac3e4062713a$var$c.__s && $10ecac3e4062713a$var$C(i.__H, u) && (i.__ = n, i.u = u, $10ecac3e4062713a$var$r.__h.push(i));
}
function $10ecac3e4062713a$export$b8f5890fc79d6aca(n) {
    return $10ecac3e4062713a$var$o = 5, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return {
            current: n
        };
    }, []);
}
function $10ecac3e4062713a$export$d5a552a76deda3c2(n, t, r) {
    $10ecac3e4062713a$var$o = 6, $10ecac3e4062713a$export$e5c5a5f917a5871c(function() {
        if ("function" == typeof n) {
            var r = n(t());
            return function() {
                n(null), r && "function" == typeof r && r();
            };
        }
        if (n) return n.current = t(), function() {
            return n.current = null;
        };
    }, null == r ? r : r.concat(n));
}
function $10ecac3e4062713a$export$1538c33de8887b59(n, r) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 7);
    return $10ecac3e4062713a$var$C(u.__H, r) && (u.__ = n(), u.__H = r, u.__h = n), u.__;
}
function $10ecac3e4062713a$export$35808ee640e87ca7(n, t) {
    return $10ecac3e4062713a$var$o = 8, $10ecac3e4062713a$export$1538c33de8887b59(function() {
        return n;
    }, t);
}
function $10ecac3e4062713a$export$fae74005e78b1a27(n) {
    var u = $10ecac3e4062713a$var$r.context[n.__c], i = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 9);
    return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub($10ecac3e4062713a$var$r)), u.props.value) : n.__;
}
function $10ecac3e4062713a$export$dc8fbce3eb94dc1e(n, t) {
    $10ecac3e4062713a$var$c.useDebugValue && $10ecac3e4062713a$var$c.useDebugValue(t ? t(n) : n);
}
function $10ecac3e4062713a$export$c052f6604b7d51fe(n) {
    var u = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 10), i = $10ecac3e4062713a$export$60241385465d0a34();
    return u.__ = n, $10ecac3e4062713a$var$r.componentDidCatch || ($10ecac3e4062713a$var$r.componentDidCatch = function(n, t) {
        u.__ && u.__(n, t), i[1](n);
    }), [
        i[0],
        function() {
            i[1](void 0);
        }
    ];
}
function $10ecac3e4062713a$export$f680877a34711e37() {
    var n = $10ecac3e4062713a$var$p($10ecac3e4062713a$var$t++, 11);
    if (!n.__) {
        for(var u = $10ecac3e4062713a$var$r.__v; null !== u && !u.__m && null !== u.__;)u = u.__;
        var i = u.__m || (u.__m = [
            0,
            0
        ]);
        n.__ = "P" + i[0] + "-" + i[1]++;
    }
    return n.__;
}
function $10ecac3e4062713a$var$j() {
    for(var n; n = $10ecac3e4062713a$var$f.shift();)if (n.__P && n.__H) try {
        n.__H.__h.forEach($10ecac3e4062713a$var$z), n.__H.__h.forEach($10ecac3e4062713a$var$B), n.__H.__h = [];
    } catch (t) {
        n.__H.__h = [], $10ecac3e4062713a$var$c.__e(t, n.__v);
    }
}
$10ecac3e4062713a$var$c.__b = function(n) {
    $10ecac3e4062713a$var$r = null, $10ecac3e4062713a$var$e && $10ecac3e4062713a$var$e(n);
}, $10ecac3e4062713a$var$c.__ = function(n, t) {
    n && t.__k && t.__k.__m && (n.__m = t.__k.__m), $10ecac3e4062713a$var$s && $10ecac3e4062713a$var$s(n, t);
}, $10ecac3e4062713a$var$c.__r = function(n) {
    $10ecac3e4062713a$var$a && $10ecac3e4062713a$var$a(n), $10ecac3e4062713a$var$t = 0;
    var i = ($10ecac3e4062713a$var$r = n.__c).__H;
    i && ($10ecac3e4062713a$var$u === $10ecac3e4062713a$var$r ? (i.__h = [], $10ecac3e4062713a$var$r.__h = [], i.__.forEach(function(n) {
        n.__N && (n.__ = n.__N), n.u = n.__N = void 0;
    })) : (i.__h.forEach($10ecac3e4062713a$var$z), i.__h.forEach($10ecac3e4062713a$var$B), i.__h = [], $10ecac3e4062713a$var$t = 0)), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r;
}, $10ecac3e4062713a$var$c.diffed = function(n) {
    $10ecac3e4062713a$var$v && $10ecac3e4062713a$var$v(n);
    var t = n.__c;
    t && t.__H && (t.__H.__h.length && (1 !== $10ecac3e4062713a$var$f.push(t) && $10ecac3e4062713a$var$i === $10ecac3e4062713a$var$c.requestAnimationFrame || (($10ecac3e4062713a$var$i = $10ecac3e4062713a$var$c.requestAnimationFrame) || $10ecac3e4062713a$var$w)($10ecac3e4062713a$var$j)), t.__H.__.forEach(function(n) {
        n.u && (n.__H = n.u), n.u = void 0;
    })), $10ecac3e4062713a$var$u = $10ecac3e4062713a$var$r = null;
}, $10ecac3e4062713a$var$c.__c = function(n, t) {
    t.some(function(n) {
        try {
            n.__h.forEach($10ecac3e4062713a$var$z), n.__h = n.__h.filter(function(n) {
                return !n.__ || $10ecac3e4062713a$var$B(n);
            });
        } catch (r) {
            t.some(function(n) {
                n.__h && (n.__h = []);
            }), t = [], $10ecac3e4062713a$var$c.__e(r, n.__v);
        }
    }), $10ecac3e4062713a$var$l && $10ecac3e4062713a$var$l(n, t);
}, $10ecac3e4062713a$var$c.unmount = function(n) {
    $10ecac3e4062713a$var$m && $10ecac3e4062713a$var$m(n);
    var t, r = n.__c;
    r && r.__H && (r.__H.__.forEach(function(n) {
        try {
            $10ecac3e4062713a$var$z(n);
        } catch (n) {
            t = n;
        }
    }), r.__H = void 0, t && $10ecac3e4062713a$var$c.__e(t, r.__v));
};
var $10ecac3e4062713a$var$k = "function" == typeof requestAnimationFrame;
function $10ecac3e4062713a$var$w(n) {
    var t, r = function() {
        clearTimeout(u), $10ecac3e4062713a$var$k && cancelAnimationFrame(t), setTimeout(n);
    }, u = setTimeout(r, 100);
    $10ecac3e4062713a$var$k && (t = requestAnimationFrame(r));
}
function $10ecac3e4062713a$var$z(n) {
    var t = $10ecac3e4062713a$var$r, u = n.__c;
    "function" == typeof u && (n.__c = void 0, u()), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$B(n) {
    var t = $10ecac3e4062713a$var$r;
    n.__c = n.__(), $10ecac3e4062713a$var$r = t;
}
function $10ecac3e4062713a$var$C(n, t) {
    return !n || n.length !== t.length || t.some(function(t, r) {
        return t !== n[r];
    });
}
function $10ecac3e4062713a$var$D(n, t) {
    return "function" == typeof t ? t(n) : t;
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $74bb4be6e9b78681$export$f30cb9bc4f736419 = {
    // Colors for components styles
    background: 'white',
    color: 'black',
    headerColor: '#ce1126',
    primaryPreBackground: 'rgba(206, 17, 38, 0.05)',
    primaryPreColor: 'inherit',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.3)',
    secondaryPreColor: 'inherit',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#293238',
    navBackground: 'rgba(206, 17, 38, 0.05)',
    navArrow: '#ce1126',
    diffAdded: 'green',
    diffRemoved: '#ce1126',
    // Light color scheme inspired by https://chriskempson.github.io/base16/css/base16-github.css
    // base00: '#ffffff',
    base01: '#f5f5f5',
    // base02: '#c8c8fa',
    base03: '#6e6e6e',
    // base04: '#e8e8e8',
    base05: '#333333',
    // base06: '#ffffff',
    // base07: '#ffffff',
    base08: '#881280',
    // base09: '#0086b3',
    // base0A: '#795da3',
    base0B: '#1155cc',
    base0C: '#994500',
    // base0D: '#795da3',
    base0E: '#c80000'
};
const $74bb4be6e9b78681$export$3e936a8db52a10a0 = {
    // Colors for components styles
    background: '#353535',
    color: 'white',
    headerColor: '#e83b46',
    primaryPreBackground: 'rgba(206, 17, 38, 0.1)',
    primaryPreColor: '#fccfcf',
    secondaryPreBackground: 'rgba(251, 245, 180, 0.1)',
    secondaryPreColor: '#fbf5b4',
    footer: '#878e91',
    anchorColor: '#878e91',
    toggleBackground: 'transparent',
    toggleColor: '#878e91',
    closeColor: '#ffffff',
    navBackground: 'rgba(206, 17, 38, 0.2)',
    navArrow: '#ce1126',
    diffAdded: '#85e285',
    diffRemoved: '#ff5459',
    // Dark color scheme inspired by https://github.com/atom/base16-tomorrow-dark-theme/blob/master/styles/colors.less
    // base00: '#1d1f21',
    base01: '#282a2e',
    // base02: '#373b41',
    base03: '#969896',
    // base04: '#b4b7b4',
    base05: '#c5c8c6',
    // base06: '#e0e0e0',
    // base07: '#ffffff',
    base08: '#cc6666',
    // base09: '#de935f',
    // base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    // base0D: '#81a2be',
    base0E: '#b294bb'
};
const $74bb4be6e9b78681$export$bca14c5b3b88a9c9 = Object.fromEntries(Object.keys($74bb4be6e9b78681$export$f30cb9bc4f736419).map((key)=>[
        key,
        `light-dark(${$74bb4be6e9b78681$export$f30cb9bc4f736419[key]}, ${$74bb4be6e9b78681$export$3e936a8db52a10a0[key]})`
    ]));
const $74bb4be6e9b78681$export$7ef984671d1853d7 = {
    width: '100vw',
    height: '100vh',
    maxWidth: 'none',
    maxHeight: 'none',
    border: 0,
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    textAlign: 'center',
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    outline: 'none',
    colorScheme: 'light dark'
};
const $20d888b381d18c6c$var$overlayStyle = {
    position: 'relative',
    display: 'inline-flex',
    flexDirection: 'column',
    height: '100%',
    width: '1024px',
    maxWidth: '100%',
    overflowX: 'hidden',
    overflowY: 'auto',
    padding: '0.5rem',
    boxSizing: 'border-box',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '11px',
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word',
    lineHeight: 1.5,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color
};
function $20d888b381d18c6c$var$ErrorOverlay(props) {
    const { shortcutHandler: shortcutHandler } = props;
    $10ecac3e4062713a$export$6d9c69b0de29b591(()=>{
        const onKeyDown = (e)=>{
            if (shortcutHandler) shortcutHandler(e.key);
        };
        window.addEventListener('keydown', onKeyDown);
        return ()=>{
            window.removeEventListener('keydown', onKeyDown);
        };
    }, [
        shortcutHandler
    ]);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $20d888b381d18c6c$var$overlayStyle,
        children: props.children
    });
}
var $20d888b381d18c6c$export$2e2bcd8739ae039 = $20d888b381d18c6c$var$ErrorOverlay;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7aae0c9ea64fc08c$var$closeButtonStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.closeColor,
    lineHeight: '1rem',
    fontSize: '1.5rem',
    padding: '1rem',
    cursor: 'pointer',
    position: 'absolute',
    right: 0,
    top: 0
};
function $7aae0c9ea64fc08c$var$CloseButton({ close: close }) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        title: "Click or press Escape to dismiss.",
        onClick: close,
        style: $7aae0c9ea64fc08c$var$closeButtonStyle,
        children: "\xd7"
    });
}
var $7aae0c9ea64fc08c$export$2e2bcd8739ae039 = $7aae0c9ea64fc08c$var$CloseButton;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $1adc179a826c5dd2$var$navigationBarStyle = {
    marginBottom: '0.5rem'
};
const $1adc179a826c5dd2$var$buttonContainerStyle = {
    marginRight: '1em'
};
const $1adc179a826c5dd2$var$_navButtonStyle = {
    border: 'none',
    borderRadius: '4px',
    padding: '3px 6px',
    cursor: 'pointer'
};
const $1adc179a826c5dd2$var$leftButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    marginRight: '1px'
};
const $1adc179a826c5dd2$var$rightButtonStyle = {
    ...$1adc179a826c5dd2$var$_navButtonStyle,
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.navArrow,
    borderTopLeftRadius: '0px',
    borderBottomLeftRadius: '0px'
};
function $1adc179a826c5dd2$var$NavigationBar(props) {
    const { currentError: currentError, totalErrors: totalErrors, previous: previous, next: next } = props;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $1adc179a826c5dd2$var$navigationBarStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                style: $1adc179a826c5dd2$var$buttonContainerStyle,
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: previous,
                        style: $1adc179a826c5dd2$var$leftButtonStyle,
                        children: "\u2190"
                    }),
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: next,
                        style: $1adc179a826c5dd2$var$rightButtonStyle,
                        children: "\u2192"
                    })
                ]
            }),
            `${currentError} of ${totalErrors} errors on the page`
        ]
    });
}
var $1adc179a826c5dd2$export$2e2bcd8739ae039 = $1adc179a826c5dd2$var$NavigationBar;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $c306e3a42547c8c2$var$headerStyle = {
    fontSize: '2em',
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.headerColor,
    whiteSpace: 'pre-wrap',
    // Top bottom margin spaces header
    // Right margin revents overlap with close button
    margin: '0 2rem 0.75rem 0',
    flex: '0 0 auto'
};
function $c306e3a42547c8c2$var$Header(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $c306e3a42547c8c2$var$headerStyle,
        children: props.headerText
    });
}
var $c306e3a42547c8c2$export$2e2bcd8739ae039 = $c306e3a42547c8c2$var$Header;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $97c30df7f5c364f7$var$_preStyle = {
    position: 'relative',
    display: 'block',
    padding: '0.5em',
    marginTop: '0.5em',
    marginBottom: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
const $97c30df7f5c364f7$var$codeStyle = {
    fontFamily: 'Consolas, Menlo, monospace'
};
function $97c30df7f5c364f7$var$CodeBlock({ main: main, codeHTML: codeHTML }) {
    const primaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor
    };
    const secondaryPreStyle = {
        ...$97c30df7f5c364f7$var$_preStyle,
        backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreBackground,
        color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.secondaryPreColor
    };
    const preStyle = main ? primaryPreStyle : secondaryPreStyle;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: preStyle,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b("code", {
            style: $97c30df7f5c364f7$var$codeStyle,
            dangerouslySetInnerHTML: {
                __html: codeHTML
            }
        })
    });
}
var $97c30df7f5c364f7$export$2e2bcd8739ae039 = $97c30df7f5c364f7$var$CodeBlock;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled) {
    let prettyURL;
    if (!compiled && sourceFileName && typeof sourceLineNumber === 'number') {
        // Remove everything up to the first /src/ or /node_modules/
        const trimMatch = /^[/|\\].*?[/|\\]((src|node_modules)[/|\\].*)/.exec(sourceFileName);
        if (trimMatch && trimMatch[1]) prettyURL = trimMatch[1];
        else prettyURL = sourceFileName;
        prettyURL += ':' + sourceLineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (sourceColumnNumber) prettyURL += ':' + sourceColumnNumber;
    } else if (fileName && typeof lineNumber === 'number') {
        prettyURL = fileName + ':' + lineNumber;
        // Note: we intentionally skip 0's because they're produced by cheap webpack maps
        if (columnNumber) prettyURL += ':' + columnNumber;
    } else prettyURL = 'unknown';
    return prettyURL.replace('webpack://', '.');
}
var $f78f50d61026cdc5$export$2e2bcd8739ae039 = $f78f50d61026cdc5$export$44b1e5ee7f53eae1;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $cdea3ae92bef6910$exports = {};
'use strict';
$cdea3ae92bef6910$exports = $cdea3ae92bef6910$var$ansiHTML;
// Reference to https://github.com/sindresorhus/ansi-regex
var $cdea3ae92bef6910$var$_regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var $cdea3ae92bef6910$var$_defColors = {
    reset: [
        'fff',
        '000'
    ],
    black: '000',
    red: 'ff0000',
    green: '209805',
    yellow: 'e8bf03',
    blue: '0000ff',
    magenta: 'ff00ff',
    cyan: '00ffee',
    lightgrey: 'f0f0f0',
    darkgrey: '888'
};
var $cdea3ae92bef6910$var$_styles = {
    30: 'black',
    31: 'red',
    32: 'green',
    33: 'yellow',
    34: 'blue',
    35: 'magenta',
    36: 'cyan',
    37: 'lightgrey'
};
var $cdea3ae92bef6910$var$_openTags = {
    '1': 'font-weight:bold',
    '2': 'opacity:0.5',
    '3': '<i>',
    '4': '<u>',
    '8': 'display:none',
    '9': '<del>' // delete
};
var $cdea3ae92bef6910$var$_closeTags = {
    '23': '</i>',
    '24': '</u>',
    '29': '</del>' // reset delete
};
[
    0,
    21,
    22,
    27,
    28,
    39,
    49
].forEach(function(n) {
    $cdea3ae92bef6910$var$_closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */ function $cdea3ae92bef6910$var$ansiHTML(text) {
    // Returns the text if the string has no ANSI escape code.
    if (!$cdea3ae92bef6910$var$_regANSI.test(text)) return text;
    // Cache opened sequence.
    var ansiCodes = [];
    // Replace with markup.
    var ret = text.replace(/\033\[(\d+)m/g, function(match, seq) {
        var ot = $cdea3ae92bef6910$var$_openTags[seq];
        if (ot) {
            // If current sequence has been opened, close it.
            if (!!~ansiCodes.indexOf(seq)) {
                ansiCodes.pop();
                return '</span>';
            }
            // Open tag.
            ansiCodes.push(seq);
            return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
        }
        var ct = $cdea3ae92bef6910$var$_closeTags[seq];
        if (ct) {
            // Pop sequence
            ansiCodes.pop();
            return ct;
        }
        return '';
    });
    // Make sure tags are closed.
    var l = ansiCodes.length;
    l > 0 && (ret += Array(l + 1).join('</span>'));
    return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */ $cdea3ae92bef6910$var$ansiHTML.setColors = function(colors) {
    if (typeof colors !== 'object') throw new Error('`colors` parameter must be an Object.');
    var _finalColors = {};
    for(var key in $cdea3ae92bef6910$var$_defColors){
        var hex = colors.hasOwnProperty(key) ? colors[key] : null;
        if (!hex) {
            _finalColors[key] = $cdea3ae92bef6910$var$_defColors[key];
            continue;
        }
        if ('reset' === key) {
            if (typeof hex === 'string') hex = [
                hex
            ];
            if (!Array.isArray(hex) || hex.length === 0 || hex.some(function(h) {
                return typeof h !== 'string';
            })) throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
            var defHexColor = $cdea3ae92bef6910$var$_defColors[key];
            if (!hex[0]) hex[0] = defHexColor[0];
            if (hex.length === 1 || !hex[1]) {
                hex = [
                    hex[0]
                ];
                hex.push(defHexColor[1]);
            }
            hex = hex.slice(0, 2);
        } else if (typeof hex !== 'string') throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
        _finalColors[key] = hex;
    }
    $cdea3ae92bef6910$var$_setTags(_finalColors);
};
/**
 * Reset colors.
 */ $cdea3ae92bef6910$var$ansiHTML.reset = function() {
    $cdea3ae92bef6910$var$_setTags($cdea3ae92bef6910$var$_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */ $cdea3ae92bef6910$var$ansiHTML.tags = {};
if (Object.defineProperty) {
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'open', {
        get: function() {
            return $cdea3ae92bef6910$var$_openTags;
        }
    });
    Object.defineProperty($cdea3ae92bef6910$var$ansiHTML.tags, 'close', {
        get: function() {
            return $cdea3ae92bef6910$var$_closeTags;
        }
    });
} else {
    $cdea3ae92bef6910$var$ansiHTML.tags.open = $cdea3ae92bef6910$var$_openTags;
    $cdea3ae92bef6910$var$ansiHTML.tags.close = $cdea3ae92bef6910$var$_closeTags;
}
function $cdea3ae92bef6910$var$_setTags(colors) {
    // reset all
    $cdea3ae92bef6910$var$_openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1];
    // inverse
    $cdea3ae92bef6910$var$_openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0];
    // dark grey
    $cdea3ae92bef6910$var$_openTags['90'] = 'color:#' + colors.darkgrey;
    for(var code in $cdea3ae92bef6910$var$_styles){
        var color = $cdea3ae92bef6910$var$_styles[code];
        var oriColor = colors[color] || '000';
        $cdea3ae92bef6910$var$_openTags[code] = 'color:#' + oriColor;
        code = parseInt(code);
        $cdea3ae92bef6910$var$_openTags[(code + 10).toString()] = 'background:#' + oriColor;
    }
}
$cdea3ae92bef6910$var$ansiHTML.reset();
// Map ANSI colors from what babel-code-frame uses to base16-github
// See: https://github.com/babel/babel/blob/e86f62b304d280d0bab52c38d61842b853848ba6/packages/babel-code-frame/src/index.js#L9-L22
const $b67e2a05a9c13039$var$colors = {
    reset: [
        $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
        'transparent'
    ],
    black: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base05,
    red: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* marker, bg-invalid */ ,
    green: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0B /* string */ ,
    yellow: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base08 /* capitalized, jsx_tag, punctuator */ ,
    blue: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C,
    magenta: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0C /* regex */ ,
    cyan: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base0E /* keyword */ ,
    gray: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03 /* comment, gutter */ ,
    lightgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base01,
    darkgrey: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.base03
};
/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).setColors($b67e2a05a9c13039$var$colors);
// $FlowFixMe
for(let tag in /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open)/*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag] = /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports).tags.open[tag].replace(/#light-dark/g, 'light-dark');
function $b67e2a05a9c13039$var$generateAnsiHTML(txt) {
    return /*@__PURE__*/ $parcel$interopDefault($cdea3ae92bef6910$exports)(txt.replace(/[&<>"']/g, (c)=>{
        switch(c){
            case '&':
                return '&amp';
            case '<':
                return '&lt;';
            case '>':
                return '&gt';
            case '"':
                return '&quot;';
            case "'":
                return '&#39;';
            default:
                return c;
        }
    }));
}
var $b67e2a05a9c13039$export$2e2bcd8739ae039 = $b67e2a05a9c13039$var$generateAnsiHTML;
const $e0e0fa52b83f95a9$var$linkStyle = {
    fontSize: '0.9em',
    marginBottom: '0.9em'
};
const $e0e0fa52b83f95a9$var$anchorStyle = {
    textDecoration: 'none',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.anchorColor,
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$codeAnchorStyle = {
    cursor: 'pointer'
};
const $e0e0fa52b83f95a9$var$toggleStyle = {
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleColor,
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.toggleBackground,
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
function $e0e0fa52b83f95a9$var$StackFrame(props) {
    const { frame: frame, critical: critical, showCode: showCode } = props;
    const { fileName: fileName, lineNumber: lineNumber, columnNumber: columnNumber, _scriptCode: scriptLines, _originalFileName: sourceFileName, _originalLineNumber: sourceLineNumber, _originalColumnNumber: sourceColumnNumber, _originalScriptCode: sourceLines } = frame;
    const functionName = frame.getFunctionName();
    const [compiled, setCompiled] = $10ecac3e4062713a$export$60241385465d0a34(!sourceLines);
    const getErrorLocation = ()=>{
        const { _originalFileName: fileName, _originalLineNumber: lineNumber } = props.frame;
        // Unknown file
        if (!fileName) return null;
        // e.g. "/path-to-my-app/webpack/bootstrap eaddeb46b67d75e4dfc1"
        const isInternalWebpackBootstrapCode = fileName.trim().indexOf(' ') !== -1;
        if (isInternalWebpackBootstrapCode) return null;
        // Code is in a real file
        return {
            fileName: fileName,
            lineNumber: lineNumber || 1
        };
    };
    const editorHandler = ()=>{
        const errorLoc = getErrorLocation();
        if (!errorLoc) return;
        props.editorHandler?.(errorLoc);
    };
    const url = $f78f50d61026cdc5$export$44b1e5ee7f53eae1(sourceFileName, sourceLineNumber, sourceColumnNumber, fileName, lineNumber, columnNumber, compiled);
    let codeBlockProps = null;
    if (showCode) {
        if (compiled && scriptLines && scriptLines.length !== 0 && lineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(scriptLines),
            main: critical
        };
        else if (!compiled && sourceLines && sourceLines.length !== 0 && sourceLineNumber != null) codeBlockProps = {
            codeHTML: $b67e2a05a9c13039$export$2e2bcd8739ae039(sourceLines),
            main: critical
        };
    }
    const canOpenInEditor = getErrorLocation() !== null && props.editorHandler !== null;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: functionName
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: $e0e0fa52b83f95a9$var$linkStyle,
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                    role: "link",
                    style: canOpenInEditor ? $e0e0fa52b83f95a9$var$anchorStyle : null,
                    onClick: canOpenInEditor ? editorHandler : null,
                    onKeyDown: canOpenInEditor ? (e)=>{
                        if (e.key === 'Enter') editorHandler();
                    } : null,
                    tabIndex: canOpenInEditor ? '0' : null,
                    children: url
                })
            }),
            codeBlockProps && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                style: {
                    marginBottom: '1.5em'
                },
                children: [
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
                        onClick: canOpenInEditor ? editorHandler : null,
                        style: canOpenInEditor ? $e0e0fa52b83f95a9$var$codeAnchorStyle : null,
                        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($97c30df7f5c364f7$export$2e2bcd8739ae039, {
                            ...codeBlockProps
                        })
                    }),
                    scriptLines && sourceLines && $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        style: $e0e0fa52b83f95a9$var$toggleStyle,
                        onClick: ()=>{
                            setCompiled(!compiled);
                        },
                        children: 'View ' + (compiled ? 'source' : 'compiled')
                    })
                ]
            })
        ]
    });
}
var $e0e0fa52b83f95a9$export$2e2bcd8739ae039 = $e0e0fa52b83f95a9$var$StackFrame;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $9a1abb59f5d10ec8$var$_collapsibleStyle = {
    cursor: 'pointer',
    border: 'none',
    display: 'block',
    width: '100%',
    textAlign: 'left',
    fontFamily: 'Consolas, Menlo, monospace',
    fontSize: '1em',
    padding: '0px',
    lineHeight: '1.5'
};
const $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '1.5em'
};
const $9a1abb59f5d10ec8$var$collapsibleExpandedStyle = {
    ...$9a1abb59f5d10ec8$var$_collapsibleStyle,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.color,
    background: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.background,
    marginBottom: '0.6em'
};
function $9a1abb59f5d10ec8$var$Collapsible(props) {
    const [collapsed, setCollapsed] = $10ecac3e4062713a$export$60241385465d0a34(true);
    const toggleCollapsed = ()=>{
        setCollapsed(!collapsed);
    };
    const count = props.children.length;
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("details", {
        open: !collapsed,
        onToggle: toggleCollapsed,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b("summary", {
                style: collapsed ? $9a1abb59f5d10ec8$var$collapsibleCollapsedStyle : $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                children: (collapsed ? "\u25B6" : "\u25BC") + ` ${count} stack frames were ` + (collapsed ? 'collapsed.' : 'expanded.')
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: [
                    props.children,
                    $23b7c1cb98b19658$export$34b9dba7ce09269b("button", {
                        onClick: toggleCollapsed,
                        style: $9a1abb59f5d10ec8$var$collapsibleExpandedStyle,
                        children: `\u{25B2} ${count} stack frames were expanded.`
                    })
                ]
            })
        ]
    });
}
var $9a1abb59f5d10ec8$export$2e2bcd8739ae039 = $9a1abb59f5d10ec8$var$Collapsible;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName) {
    return sourceFileName == null || sourceFileName === '' || sourceFileName.indexOf('~/') !== -1 || sourceFileName.indexOf('node_modules/') !== -1 || sourceFileName.indexOf('error-overlay') !== -1 || sourceFileName.trim().indexOf(' ') !== -1 || fileName == null || fileName === '';
}
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function $a5027556d7003a42$export$64794fcb05cf0bcf(errorName) {
    switch(errorName){
        case 'EvalError':
        case 'InternalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
            return true;
        default:
            return false;
    }
}
var $a5027556d7003a42$export$2e2bcd8739ae039 = $a5027556d7003a42$export$64794fcb05cf0bcf;
const $5ee7d2edb790dd06$var$traceStyle = {
    fontSize: '1em',
    flex: '0 1 auto',
    minHeight: '0px',
    overflow: 'auto'
};
function $5ee7d2edb790dd06$var$StackTrace(props) {
    const { stackFrames: stackFrames, errorName: errorName, contextSize: contextSize, editorHandler: editorHandler } = props;
    const renderedFrames = [];
    let hasReachedAppCode = false, currentBundle = [], bundleCount = 0;
    stackFrames.forEach((frame, index)=>{
        const { fileName: fileName, _originalFileName: sourceFileName } = frame;
        const isInternalUrl = $e95d7084caaf4e6d$export$723fa77eef12dd9f(sourceFileName, fileName);
        const isThrownIntentionally = !$a5027556d7003a42$export$64794fcb05cf0bcf(errorName);
        const shouldCollapse = isInternalUrl && (isThrownIntentionally || hasReachedAppCode);
        if (!isInternalUrl) hasReachedAppCode = true;
        const frameEle = $23b7c1cb98b19658$export$34b9dba7ce09269b($e0e0fa52b83f95a9$export$2e2bcd8739ae039, {
            frame: frame,
            contextSize: contextSize,
            critical: index === 0,
            showCode: !shouldCollapse,
            editorHandler: editorHandler
        }, 'frame-' + index);
        const lastElement = index === stackFrames.length - 1;
        if (shouldCollapse) currentBundle.push(frameEle);
        if (!shouldCollapse || lastElement) {
            if (currentBundle.length === 1) renderedFrames.push(currentBundle[0]);
            else if (currentBundle.length > 1) {
                bundleCount++;
                renderedFrames.push($23b7c1cb98b19658$export$34b9dba7ce09269b($9a1abb59f5d10ec8$export$2e2bcd8739ae039, {
                    children: currentBundle
                }, 'bundle-' + bundleCount));
            }
            currentBundle = [];
        }
        if (!shouldCollapse) renderedFrames.push(frameEle);
    });
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $5ee7d2edb790dd06$var$traceStyle,
        children: renderedFrames
    });
}
var $5ee7d2edb790dd06$export$2e2bcd8739ae039 = $5ee7d2edb790dd06$var$StackTrace;
const $2eeadf2892cff4e4$var$diffStyle = {
    backgroundColor: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreBackground,
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.primaryPreColor,
    padding: '0.5em',
    overflowX: 'auto',
    whiteSpace: 'pre-wrap',
    borderRadius: '0.25rem'
};
function $2eeadf2892cff4e4$export$2e2bcd8739ae039({ diff: diff }) {
    let lines = diff.split('\n').flatMap((line, i)=>[
            $2eeadf2892cff4e4$var$formatLine(line, i),
            '\n'
        ]).slice(0, -1);
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
        style: $2eeadf2892cff4e4$var$diffStyle,
        children: lines
    });
}
function $2eeadf2892cff4e4$var$formatLine(line, index) {
    if (line.startsWith('+')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffAdded,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else if (line.startsWith('-') || line.startsWith('>')) return $23b7c1cb98b19658$export$34b9dba7ce09269b("span", {
        style: {
            color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.diffRemoved,
            fontWeight: 'bold'
        },
        children: line
    }, index);
    else return line;
}
const $4baa71cb4cecc0ea$var$wrapperStyle = {
    display: 'flex',
    flexDirection: 'column'
};
function $4baa71cb4cecc0ea$var$RuntimeError({ errorRecord: errorRecord, editorHandler: editorHandler }) {
    const { error: error, unhandledRejection: unhandledRejection, contextSize: contextSize, stackFrames: stackFrames } = errorRecord;
    const errorName = unhandledRejection ? 'Unhandled Rejection (' + error.name + ')' : error.name;
    // Make header prettier
    const message = error.message;
    let headerText = message.match(/^\w*:/) || !errorName ? message : errorName + ': ' + message;
    headerText = headerText // TODO: maybe remove this prefix from fbjs?
    // It's just scaring people
    .replace(/^Invariant Violation:\s*/, '') // This is not helpful either:
    .replace(/^Warning:\s*/, '') // Break the actionable part to the next line.
    // AFAIK React 16+ should already do this.
    .replace(' Check the render method', '\n\nCheck the render method').replace(' Check your code at', '\n\nCheck your code at');
    let link, diff;
    if (headerText.includes('https://react.dev/link/hydration-mismatch')) {
        [headerText, diff] = headerText.split('https://react.dev/link/hydration-mismatch');
        link = 'https://react.dev/link/hydration-mismatch';
    } else if (headerText.includes('This will cause a hydration error.')) {
        [headerText, diff] = headerText.split('This will cause a hydration error.');
        headerText += 'This will cause a hydration error.';
    }
    let lines = headerText.split('\n');
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $4baa71cb4cecc0ea$var$wrapperStyle,
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($c306e3a42547c8c2$export$2e2bcd8739ae039, {
                headerText: lines[0]
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b("pre", {
                children: lines.slice(1).join('\n').trim()
            }),
            link && $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
                children: $23b7c1cb98b19658$export$34b9dba7ce09269b("a", {
                    href: link,
                    target: "_blank",
                    rel: "noreferrer",
                    children: link
                })
            }),
            diff && $23b7c1cb98b19658$export$34b9dba7ce09269b($2eeadf2892cff4e4$export$2e2bcd8739ae039, {
                diff: diff.trim()
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($5ee7d2edb790dd06$export$2e2bcd8739ae039, {
                stackFrames: stackFrames,
                errorName: errorName,
                contextSize: contextSize,
                editorHandler: editorHandler
            })
        ]
    });
}
var $4baa71cb4cecc0ea$export$2e2bcd8739ae039 = $4baa71cb4cecc0ea$var$RuntimeError;
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ const $7606db210182b733$var$footerStyle = {
    fontFamily: 'sans-serif',
    color: $74bb4be6e9b78681$export$bca14c5b3b88a9c9.footer,
    marginTop: '0.5rem',
    flex: '0 0 auto'
};
function $7606db210182b733$var$Footer(props) {
    return $23b7c1cb98b19658$export$34b9dba7ce09269b("div", {
        style: $7606db210182b733$var$footerStyle,
        children: [
            props.line1,
            $23b7c1cb98b19658$export$34b9dba7ce09269b("br", {}),
            props.line2
        ]
    });
}
var $7606db210182b733$export$2e2bcd8739ae039 = $7606db210182b733$var$Footer;
function $d0eac8b125ed15e2$var$RuntimeErrorContainer(props) {
    const { errorRecords: errorRecords, close: close } = props;
    const totalErrors = errorRecords.length;
    let [currentIndex, setCurrentIndex] = $10ecac3e4062713a$export$60241385465d0a34(0);
    let previous = ()=>{
        setCurrentIndex(currentIndex > 0 ? currentIndex - 1 : totalErrors - 1);
    };
    let next = ()=>{
        setCurrentIndex(currentIndex < totalErrors - 1 ? currentIndex + 1 : 0);
    };
    return $23b7c1cb98b19658$export$34b9dba7ce09269b($20d888b381d18c6c$export$2e2bcd8739ae039, {
        shortcutHandler: (key)=>{
            if (key === 'Escape') props.close();
            else if (key === 'ArrowLeft') previous();
            else if (key === 'ArrowRight') next();
        },
        children: [
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7aae0c9ea64fc08c$export$2e2bcd8739ae039, {
                close: close
            }),
            totalErrors > 1 && $23b7c1cb98b19658$export$34b9dba7ce09269b($1adc179a826c5dd2$export$2e2bcd8739ae039, {
                currentError: currentIndex + 1,
                totalErrors: totalErrors,
                previous: previous,
                next: next
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($4baa71cb4cecc0ea$export$2e2bcd8739ae039, {
                errorRecord: errorRecords[currentIndex],
                editorHandler: props.editorHandler
            }),
            $23b7c1cb98b19658$export$34b9dba7ce09269b($7606db210182b733$export$2e2bcd8739ae039, {
                line1: "This screen is visible only in development. It will not appear if the app crashes in production.",
                line2: "Open your browser\u2019s developer console to further inspect this error.  Click the 'X' or hit ESC to dismiss this message."
            })
        ]
    });
}
var $d0eac8b125ed15e2$export$2e2bcd8739ae039 = $d0eac8b125ed15e2$var$RuntimeErrorContainer;
let $da9882e673ac146b$var$iframe = null;
let $da9882e673ac146b$var$editorHandler = null;
let $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
let $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
function $da9882e673ac146b$export$25a22ac46f1bd016(handler) {
    $da9882e673ac146b$var$editorHandler = handler;
    if ($da9882e673ac146b$var$iframe) $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$74e9101ce4078c0(error, options) {
    $6d40ebe8356580e0$export$9123e6c9c0ac21ed($da9882e673ac146b$var$handleRuntimeError(options))(error, false);
}
function $da9882e673ac146b$export$cda2c88a41631c16(options) {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors !== null) throw new Error('Already listening');
    $da9882e673ac146b$var$stopListeningToRuntimeErrors = $6d40ebe8356580e0$export$38ec23daa6e8dcdf($da9882e673ac146b$var$handleRuntimeError(options));
}
const $da9882e673ac146b$var$handleRuntimeError = (options)=>(errorRecord)=>{
        try {
            if (typeof options.onError === 'function') options.onError.call(null);
        } finally{
            if ($da9882e673ac146b$var$currentRuntimeErrorRecords.some(({ error: error })=>error === errorRecord.error)) // This fixes https://github.com/facebook/create-react-app/issues/3011.
            // eslint-disable-next-line no-unsafe-finally
            return;
            $da9882e673ac146b$var$currentRuntimeErrorRecords = $da9882e673ac146b$var$currentRuntimeErrorRecords.concat([
                errorRecord
            ]);
            $da9882e673ac146b$var$update();
        }
    };
function $da9882e673ac146b$export$1cfa6d161ca81bd9() {
    $da9882e673ac146b$var$currentRuntimeErrorRecords = [];
    $da9882e673ac146b$var$update();
}
function $da9882e673ac146b$export$25ba7d9a816639e7() {
    if ($da9882e673ac146b$var$stopListeningToRuntimeErrors === null) throw new Error('Not currently listening');
    try {
        $da9882e673ac146b$var$stopListeningToRuntimeErrors();
    } finally{
        $da9882e673ac146b$var$stopListeningToRuntimeErrors = null;
    }
}
let $da9882e673ac146b$var$rootNode, $da9882e673ac146b$var$shadow;
function $da9882e673ac146b$var$update() {
    if (!$da9882e673ac146b$var$rootNode) {
        $da9882e673ac146b$var$rootNode = document.createElement('parcel-error-overlay');
        $da9882e673ac146b$var$shadow = $da9882e673ac146b$var$rootNode.attachShadow({
            mode: 'open'
        });
        if ($da9882e673ac146b$var$rootNode) document.body?.appendChild($da9882e673ac146b$var$rootNode);
    }
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0 && $da9882e673ac146b$var$shadow) $b6c7f0288a15c619$export$b3890eb0ae9dca99($23b7c1cb98b19658$export$34b9dba7ce09269b("dialog", {
        ref: (d)=>d?.showModal(),
        style: $74bb4be6e9b78681$export$7ef984671d1853d7,
        onClose: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        children: $23b7c1cb98b19658$export$34b9dba7ce09269b($da9882e673ac146b$var$ErrorOverlay, {})
    }), $da9882e673ac146b$var$shadow);
    else {
        $da9882e673ac146b$var$rootNode?.remove();
        $da9882e673ac146b$var$rootNode = null;
    }
}
function $da9882e673ac146b$var$ErrorOverlay() {
    if ($da9882e673ac146b$var$currentRuntimeErrorRecords.length > 0) return $23b7c1cb98b19658$export$34b9dba7ce09269b($d0eac8b125ed15e2$export$2e2bcd8739ae039, {
        errorRecords: $da9882e673ac146b$var$currentRuntimeErrorRecords,
        close: $da9882e673ac146b$export$1cfa6d161ca81bd9,
        editorHandler: $da9882e673ac146b$var$editorHandler
    });
    return null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bi0Pb":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("48e428f9c23cfc07"));
var _base = require("42c8501b026ac17e");
var _notification = _interopRequireDefault(require("40fb3ceceb7a7996"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const NotificationIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.UNSAFE_IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M6.49 17.67a2 2 0 0 0 2.83 0l-2.83-2.83a2 2 0 0 0 0 2.83m4.89-12.19-.72.73c-.78.78-2.21 1.81-3.21 2.31l-3.02 1.51c-.49.25-.58.77-.19 1.17l8.56 8.56c.4.4.92.31 1.17-.19l1.51-3.02c.49-.99 1.53-2.42 2.31-3.21l.73-.73a5.05 5.05 0 0 0 .64-6.36 1.01 1.01 0 1 0-1.35-1.49q-.04.04-.07.08A5.04 5.04 0 0 0 14.95 4a5.04 5.04 0 0 0-3.57 1.48"/></svg>`
    }, props, {
        newIcon: _notification.default
    }));
NotificationIcon.displayName = 'NotificationIcon';
var _default = exports.default = NotificationIcon;

},{"48e428f9c23cfc07":"jMk1U","42c8501b026ac17e":"iJoYh","40fb3ceceb7a7996":"99lIX"}],"iJoYh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _icon.Icon));
parcelHelpers.export(exports, "UNSAFE_IconFacade", ()=>(0, _iconFacade.IconFacade));
var _icon = require("../components/icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);
var _iconFacade = require("../components/icon-facade");

},{"../components/icon":"1ltmN","../components/icon-facade":"iplU6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1ltmN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
/**
 * @jsxRuntime classic
 * @jsx jsx
 */ var _react = require("react");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react1 = require("@emotion/react");
var _styles = require("./styles");
var _utils = require("./utils");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */ var iconStyles = (0, _react1.css)({
    display: 'inline-block',
    flexShrink: 0,
    lineHeight: 1,
    // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    '> svg': _objectSpread(_objectSpread({}, (0, _styles.commonSVGStyles)), {}, {
        maxWidth: '100%',
        maxHeight: '100%',
        color: 'var(--icon-primary-color)',
        fill: 'var(--icon-secondary-color)',
        verticalAlign: 'bottom'
    })
});
/**
 * For windows high contrast mode
 */ var baseHcmStyles = (0, _react1.css)({
    '@media screen and (forced-colors: active)': {
        // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
        '> svg': {
            filter: 'grayscale(1)',
            '--icon-primary-color': 'CanvasText',
            // foreground
            '--icon-secondary-color': 'Canvas' // background
        }
    }
});
var primaryEqualsSecondaryHcmStyles = (0, _react1.css)({
    '@media screen and (forced-colors: active)': {
        // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
        '> svg': {
            // if the primaryColor is the same as the secondaryColor we
            // set the --icon-primary-color to Canvas
            // this is usually to convey state i.e. Checkbox checked -> not checked
            '--icon-primary-color': 'Canvas' // foreground
        }
    }
});
var secondaryTransparentHcmStyles = (0, _react1.css)({
    '@media screen and (forced-colors: active)': {
        // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
        '> svg': {
            '--icon-secondary-color': 'transparent' // background
        }
    }
});
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _ref = props, Glyph = _ref.glyph, dangerouslySetGlyph = _ref.dangerouslySetGlyph, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor, secondaryColor = _ref.secondaryColor, size = _ref.size, testId = _ref.testId, label = _ref.label, width = _ref.width, height = _ref.height, UNSAFE_margin = _ref.UNSAFE_margin;
    var glyphProps = dangerouslySetGlyph ? {
        dangerouslySetInnerHTML: {
            __html: dangerouslySetGlyph
        }
    } : {
        children: Glyph ? (0, _react1.jsx)(Glyph, {
            role: "presentation"
        }) : null
    };
    var dimensions = (0, _styles.getIconSize)({
        width: width,
        height: height,
        size: size
    });
    return (0, _react1.jsx)("span", (0, _extendsDefault.default)({
        "data-testid": testId,
        "data-vc": "icon-".concat(testId),
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            '--icon-primary-color': primaryColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            '--icon-secondary-color': secondaryColor || (0, _utils.getBackground)(),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            margin: UNSAFE_margin
        }
    }, glyphProps, {
        css: [
            iconStyles,
            baseHcmStyles,
            primaryColor === secondaryColor && primaryEqualsSecondaryHcmStyles,
            secondaryColor === 'transparent' && secondaryTransparentHcmStyles,
            // NB: This can be resolved if this component, composes base SVG / and/or skeleton
            // We could then simplify how common styles are dealt with simply by encapsulating them
            // at their appropriate level and/or having a singular approach to css variables in the package
            dimensions && // eslint-disable-next-line @atlaskit/design-system/consistent-css-prop-usage, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            (0, _react1.css)({
                // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
                width: dimensions.width,
                // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
                height: dimensions.height,
                // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
                '> svg': dimensions
            })
        ]
    }));
});
exports.default = Icon;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@emotion/react":"cLTfV","./styles":"a1qkT","./utils":"4dIMB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lKa0J":[function(require,module,exports,__globalThis) {
function _extends() {
    return module.exports = _extends = Object.assign ? Object.assign.bind() : function(n) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e];
            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _extends.apply(null, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"azbUC":[function(require,module,exports,__globalThis) {
var toPropertyKey = require("29ac19868e7f119");
function _defineProperty(e, r, t) {
    return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"29ac19868e7f119":"9dbMY"}],"9dbMY":[function(require,module,exports,__globalThis) {
var _typeof = require("a14bd529aa4ac1cd")["default"];
var toPrimitive = require("2713647ce51d8c75");
function toPropertyKey(t) {
    var i = toPrimitive(t, "string");
    return "symbol" == _typeof(i) ? i : i + "";
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a14bd529aa4ac1cd":"7EL9t","2713647ce51d8c75":"i9rZS"}],"7EL9t":[function(require,module,exports,__globalThis) {
function _typeof(o) {
    "@babel/helpers - typeof";
    return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"i9rZS":[function(require,module,exports,__globalThis) {
var _typeof = require("e0211298897b2d31")["default"];
function toPrimitive(t, r) {
    if ("object" != _typeof(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != _typeof(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"e0211298897b2d31":"7EL9t"}],"cLTfV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CacheProvider", ()=>(0, _emotionElementD59E098FEsmJs.C));
parcelHelpers.export(exports, "ThemeContext", ()=>(0, _emotionElementD59E098FEsmJs.T));
parcelHelpers.export(exports, "ThemeProvider", ()=>(0, _emotionElementD59E098FEsmJs.b));
parcelHelpers.export(exports, "__unsafe_useEmotionCache", ()=>(0, _emotionElementD59E098FEsmJs._));
parcelHelpers.export(exports, "useTheme", ()=>(0, _emotionElementD59E098FEsmJs.u));
parcelHelpers.export(exports, "withEmotionCache", ()=>(0, _emotionElementD59E098FEsmJs.w));
parcelHelpers.export(exports, "withTheme", ()=>(0, _emotionElementD59E098FEsmJs.d));
parcelHelpers.export(exports, "ClassNames", ()=>ClassNames);
parcelHelpers.export(exports, "Global", ()=>Global);
parcelHelpers.export(exports, "createElement", ()=>jsx);
parcelHelpers.export(exports, "css", ()=>css);
parcelHelpers.export(exports, "jsx", ()=>jsx);
parcelHelpers.export(exports, "keyframes", ()=>keyframes);
var _emotionElementD59E098FEsmJs = require("./emotion-element-d59e098f.esm.js");
var _react = require("react");
var _utils = require("@emotion/utils");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var _serialize = require("@emotion/serialize");
var _cache = require("@emotion/cache");
var _extends = require("@babel/runtime/helpers/extends");
var _weakMemoize = require("@emotion/weak-memoize");
var _emotionReactIsolatedHnrsEsmJs = require("../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js");
var _hoistNonReactStatics = require("hoist-non-react-statics");
var jsx = function jsx(type, props) {
    // eslint-disable-next-line prefer-rest-params
    var args = arguments;
    if (props == null || !(0, _emotionElementD59E098FEsmJs.h).call(props, 'css')) return _react.createElement.apply(undefined, args);
    var argsLength = args.length;
    var createElementArgArray = new Array(argsLength);
    createElementArgArray[0] = (0, _emotionElementD59E098FEsmJs.E);
    createElementArgArray[1] = (0, _emotionElementD59E098FEsmJs.c)(type, props);
    for(var i = 2; i < argsLength; i++)createElementArgArray[i] = args[i];
    return _react.createElement.apply(null, createElementArgArray);
};
(function(_jsx) {
    var JSX;
    JSX || (JSX = _jsx.JSX || (_jsx.JSX = {}));
})(jsx || (jsx = {}));
// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild
// initial client-side render from SSR, use place of hydrating tag
var Global = /* #__PURE__ */ (0, _emotionElementD59E098FEsmJs.w)(function(props, cache) {
    var styles = props.styles;
    var serialized = (0, _serialize.serializeStyles)([
        styles
    ], undefined, _react.useContext((0, _emotionElementD59E098FEsmJs.T)));
    if (!(0, _emotionElementD59E098FEsmJs.i)) {
        var _ref;
        var serializedNames = serialized.name;
        var serializedStyles = serialized.styles;
        var next = serialized.next;
        while(next !== undefined){
            serializedNames += ' ' + next.name;
            serializedStyles += next.styles;
            next = next.next;
        }
        var shouldCache = cache.compat === true;
        var rules = cache.insert("", {
            name: serializedNames,
            styles: serializedStyles
        }, cache.sheet, shouldCache);
        if (shouldCache) return null;
        return /*#__PURE__*/ _react.createElement("style", (_ref = {}, _ref["data-emotion"] = cache.key + "-global " + serializedNames, _ref.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref.nonce = cache.sheet.nonce, _ref));
    } // yes, i know these hooks are used conditionally
    // but it is based on a constant that will never change at runtime
    // it's effectively like having two implementations and switching them out
    // so it's not actually breaking anything
    var sheetRef = _react.useRef();
    (0, _useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback)(function() {
        var key = cache.key + "-global"; // use case of https://github.com/emotion-js/emotion/issues/2675
        var sheet = new cache.sheet.constructor({
            key: key,
            nonce: cache.sheet.nonce,
            container: cache.sheet.container,
            speedy: cache.sheet.isSpeedy
        });
        var rehydrating = false;
        var node = document.querySelector("style[data-emotion=\"" + key + " " + serialized.name + "\"]");
        if (cache.sheet.tags.length) sheet.before = cache.sheet.tags[0];
        if (node !== null) {
            rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s
            node.setAttribute('data-emotion', key);
            sheet.hydrate([
                node
            ]);
        }
        sheetRef.current = [
            sheet,
            rehydrating
        ];
        return function() {
            sheet.flush();
        };
    }, [
        cache
    ]);
    (0, _useInsertionEffectWithFallbacks.useInsertionEffectWithLayoutFallback)(function() {
        var sheetRefCurrent = sheetRef.current;
        var sheet = sheetRefCurrent[0], rehydrating = sheetRefCurrent[1];
        if (rehydrating) {
            sheetRefCurrent[1] = false;
            return;
        }
        if (serialized.next !== undefined) // insert keyframes
        (0, _utils.insertStyles)(cache, serialized.next, true);
        if (sheet.tags.length) {
            // if this doesn't exist then it will be null so the style element will be appended
            var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;
            sheet.before = element;
            sheet.flush();
        }
        cache.insert("", serialized, sheet, false);
    }, [
        cache,
        serialized.name
    ]);
    return null;
});
function css() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    return (0, _serialize.serializeStyles)(args);
}
function keyframes() {
    var insertable = css.apply(void 0, arguments);
    var name = "animation-" + insertable.name;
    return {
        name: name,
        styles: "@keyframes " + name + "{" + insertable.styles + "}",
        anim: 1,
        toString: function toString() {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
        }
    };
}
var classnames = function classnames(args) {
    var len = args.length;
    var i = 0;
    var cls = '';
    for(; i < len; i++){
        var arg = args[i];
        if (arg == null) continue;
        var toAdd = void 0;
        switch(typeof arg){
            case 'boolean':
                break;
            case 'object':
                if (Array.isArray(arg)) toAdd = classnames(arg);
                else {
                    toAdd = '';
                    for(var k in arg)if (arg[k] && k) {
                        toAdd && (toAdd += ' ');
                        toAdd += k;
                    }
                }
                break;
            default:
                toAdd = arg;
        }
        if (toAdd) {
            cls && (cls += ' ');
            cls += toAdd;
        }
    }
    return cls;
};
function merge(registered, css, className) {
    var registeredStyles = [];
    var rawClassName = (0, _utils.getRegisteredStyles)(registered, registeredStyles, className);
    if (registeredStyles.length < 2) return className;
    return rawClassName + css(registeredStyles);
}
var Insertion = function Insertion(_ref) {
    var cache = _ref.cache, serializedArr = _ref.serializedArr;
    var rules = (0, _useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback)(function() {
        var rules = '';
        for(var i = 0; i < serializedArr.length; i++){
            var res = (0, _utils.insertStyles)(cache, serializedArr[i], false);
            if (!(0, _emotionElementD59E098FEsmJs.i) && res !== undefined) rules += res;
        }
        if (!(0, _emotionElementD59E098FEsmJs.i)) return rules;
    });
    if (!(0, _emotionElementD59E098FEsmJs.i) && rules.length !== 0) {
        var _ref2;
        return /*#__PURE__*/ _react.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedArr.map(function(serialized) {
            return serialized.name;
        }).join(' '), _ref2.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref2.nonce = cache.sheet.nonce, _ref2));
    }
    return null;
};
var ClassNames = /* #__PURE__ */ (0, _emotionElementD59E098FEsmJs.w)(function(props, cache) {
    var hasRendered = false;
    var serializedArr = [];
    var css = function css() {
        if (hasRendered && (0, _emotionElementD59E098FEsmJs.a)) throw new Error('css can only be used during render');
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        var serialized = (0, _serialize.serializeStyles)(args, cache.registered);
        serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`
        (0, _utils.registerStyles)(cache, serialized, false);
        return cache.key + "-" + serialized.name;
    };
    var cx = function cx() {
        if (hasRendered && (0, _emotionElementD59E098FEsmJs.a)) throw new Error('cx can only be used during render');
        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
        return merge(cache.registered, css, classnames(args));
    };
    var content = {
        css: css,
        cx: cx,
        theme: _react.useContext((0, _emotionElementD59E098FEsmJs.T))
    };
    var ele = props.children(content);
    hasRendered = true;
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(Insertion, {
        cache: cache,
        serializedArr: serializedArr
    }), ele);
});

},{"./emotion-element-d59e098f.esm.js":"9DJEV","react":"jMk1U","@emotion/utils":"cQ0xH","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@emotion/serialize":"4vIHo","@emotion/cache":"4A5M2","@babel/runtime/helpers/extends":"lKa0J","@emotion/weak-memoize":"hrHkX","../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js":"d7gCT","hoist-non-react-statics":"h7WK5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9DJEV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "C", ()=>CacheProvider);
parcelHelpers.export(exports, "E", ()=>Emotion$1);
parcelHelpers.export(exports, "T", ()=>ThemeContext);
parcelHelpers.export(exports, "_", ()=>__unsafe_useEmotionCache);
parcelHelpers.export(exports, "a", ()=>isDevelopment);
parcelHelpers.export(exports, "b", ()=>ThemeProvider);
parcelHelpers.export(exports, "c", ()=>createEmotionProps);
parcelHelpers.export(exports, "d", ()=>withTheme);
parcelHelpers.export(exports, "h", ()=>hasOwn);
parcelHelpers.export(exports, "i", ()=>isBrowser);
parcelHelpers.export(exports, "u", ()=>useTheme);
parcelHelpers.export(exports, "w", ()=>withEmotionCache);
var _react = require("react");
var _cache = require("@emotion/cache");
var _cacheDefault = parcelHelpers.interopDefault(_cache);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _weakMemoize = require("@emotion/weak-memoize");
var _weakMemoizeDefault = parcelHelpers.interopDefault(_weakMemoize);
var _emotionReactIsolatedHnrsEsmJs = require("../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js");
var _emotionReactIsolatedHnrsEsmJsDefault = parcelHelpers.interopDefault(_emotionReactIsolatedHnrsEsmJs);
var _utils = require("@emotion/utils");
var _serialize = require("@emotion/serialize");
var _useInsertionEffectWithFallbacks = require("@emotion/use-insertion-effect-with-fallbacks");
var isDevelopment = false;
var isBrowser = typeof document !== 'undefined';
var EmotionCacheContext = /* #__PURE__ */ _react.createContext(// because this module is primarily intended for the browser and node
// but it's also required in react native and similar environments sometimes
// and we could have a special build just for that
// but this is much easier and the native packages
// might use a different theme context in the future anyway
typeof HTMLElement !== 'undefined' ? /* #__PURE__ */ (0, _cacheDefault.default)({
    key: 'css'
}) : null);
var CacheProvider = EmotionCacheContext.Provider;
var __unsafe_useEmotionCache = function useEmotionCache() {
    return (0, _react.useContext)(EmotionCacheContext);
};
var withEmotionCache = function withEmotionCache(func) {
    return /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
        // the cache will never be null in the browser
        var cache = (0, _react.useContext)(EmotionCacheContext);
        return func(props, cache, ref);
    });
};
if (!isBrowser) withEmotionCache = function withEmotionCache(func) {
    return function(props) {
        var cache = (0, _react.useContext)(EmotionCacheContext);
        if (cache === null) {
            // yes, we're potentially creating this on every render
            // it doesn't actually matter though since it's only on the server
            // so there will only every be a single render
            // that could change in the future because of suspense and etc. but for now,
            // this works and i don't want to optimise for a future thing that we aren't sure about
            cache = (0, _cacheDefault.default)({
                key: 'css'
            });
            return /*#__PURE__*/ _react.createElement(EmotionCacheContext.Provider, {
                value: cache
            }, func(props, cache));
        } else return func(props, cache);
    };
};
var ThemeContext = /* #__PURE__ */ _react.createContext({});
var useTheme = function useTheme() {
    return _react.useContext(ThemeContext);
};
var getTheme = function getTheme(outerTheme, theme) {
    if (typeof theme === 'function') {
        var mergedTheme = theme(outerTheme);
        return mergedTheme;
    }
    return (0, _extendsDefault.default)({}, outerTheme, theme);
};
var createCacheWithTheme = /* #__PURE__ */ (0, _weakMemoizeDefault.default)(function(outerTheme) {
    return (0, _weakMemoizeDefault.default)(function(theme) {
        return getTheme(outerTheme, theme);
    });
});
var ThemeProvider = function ThemeProvider(props) {
    var theme = _react.useContext(ThemeContext);
    if (props.theme !== theme) theme = createCacheWithTheme(theme)(props.theme);
    return /*#__PURE__*/ _react.createElement(ThemeContext.Provider, {
        value: theme
    }, props.children);
};
function withTheme(Component) {
    var componentName = Component.displayName || Component.name || 'Component';
    var WithTheme = /*#__PURE__*/ _react.forwardRef(function render(props, ref) {
        var theme = _react.useContext(ThemeContext);
        return /*#__PURE__*/ _react.createElement(Component, (0, _extendsDefault.default)({
            theme: theme,
            ref: ref
        }, props));
    });
    WithTheme.displayName = "WithTheme(" + componentName + ")";
    return (0, _emotionReactIsolatedHnrsEsmJsDefault.default)(WithTheme, Component);
}
var hasOwn = {}.hasOwnProperty;
var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';
var createEmotionProps = function createEmotionProps(type, props) {
    var newProps = {};
    for(var _key in props)if (hasOwn.call(props, _key)) newProps[_key] = props[_key];
    newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:
    return newProps;
};
var Insertion = function Insertion(_ref) {
    var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;
    (0, _utils.registerStyles)(cache, serialized, isStringTag);
    var rules = (0, _useInsertionEffectWithFallbacks.useInsertionEffectAlwaysWithSyncFallback)(function() {
        return (0, _utils.insertStyles)(cache, serialized, isStringTag);
    });
    if (!isBrowser && rules !== undefined) {
        var _ref2;
        var serializedNames = serialized.name;
        var next = serialized.next;
        while(next !== undefined){
            serializedNames += ' ' + next.name;
            next = next.next;
        }
        return /*#__PURE__*/ _react.createElement("style", (_ref2 = {}, _ref2["data-emotion"] = cache.key + " " + serializedNames, _ref2.dangerouslySetInnerHTML = {
            __html: rules
        }, _ref2.nonce = cache.sheet.nonce, _ref2));
    }
    return null;
};
var Emotion = /* #__PURE__ */ withEmotionCache(function(props, cache, ref) {
    var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works
    // not passing the registered cache to serializeStyles because it would
    // make certain babel optimisations not possible
    if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) cssProp = cache.registered[cssProp];
    var WrappedComponent = props[typePropName];
    var registeredStyles = [
        cssProp
    ];
    var className = '';
    if (typeof props.className === 'string') className = (0, _utils.getRegisteredStyles)(cache.registered, registeredStyles, props.className);
    else if (props.className != null) className = props.className + " ";
    var serialized = (0, _serialize.serializeStyles)(registeredStyles, undefined, _react.useContext(ThemeContext));
    className += cache.key + "-" + serialized.name;
    var newProps = {};
    for(var _key2 in props)if (hasOwn.call(props, _key2) && _key2 !== 'css' && _key2 !== typePropName && !isDevelopment) newProps[_key2] = props[_key2];
    newProps.className = className;
    if (ref) newProps.ref = ref;
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(Insertion, {
        cache: cache,
        serialized: serialized,
        isStringTag: typeof WrappedComponent === 'string'
    }), /*#__PURE__*/ _react.createElement(WrappedComponent, newProps));
});
var Emotion$1 = Emotion;

},{"react":"jMk1U","@emotion/cache":"4A5M2","@babel/runtime/helpers/esm/extends":"20my9","@emotion/weak-memoize":"hrHkX","../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js":"d7gCT","@emotion/utils":"cQ0xH","@emotion/serialize":"4vIHo","@emotion/use-insertion-effect-with-fallbacks":"fImkp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4A5M2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>createCache);
var _sheet = require("@emotion/sheet");
var _stylis = require("stylis");
var _weakMemoize = require("@emotion/weak-memoize");
var _weakMemoizeDefault = parcelHelpers.interopDefault(_weakMemoize);
var _memoize = require("@emotion/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
var isBrowser = typeof document !== 'undefined';
var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
    var previous = 0;
    var character = 0;
    while(true){
        previous = character;
        character = (0, _stylis.peek)(); // &\f
        if (previous === 38 && character === 12) points[index] = 1;
        if ((0, _stylis.token)(character)) break;
        (0, _stylis.next)();
    }
    return (0, _stylis.slice)(begin, (0, _stylis.position));
};
var toRules = function toRules(parsed, points) {
    // pretend we've started with a comma
    var index = -1;
    var character = 44;
    do switch((0, _stylis.token)(character)){
        case 0:
            // &\f
            if (character === 38 && (0, _stylis.peek)() === 12) // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
            // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
            // and when it should just concatenate the outer and inner selectors
            // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
            points[index] = 1;
            parsed[index] += identifierWithPointTracking((0, _stylis.position) - 1, points, index);
            break;
        case 2:
            parsed[index] += (0, _stylis.delimit)(character);
            break;
        case 4:
            // comma
            if (character === 44) {
                // colon
                parsed[++index] = (0, _stylis.peek)() === 58 ? '&\f' : '';
                points[index] = parsed[index].length;
                break;
            }
        // fallthrough
        default:
            parsed[index] += (0, _stylis.from)(character);
    }
    while (character = (0, _stylis.next)());
    return parsed;
};
var getRules = function getRules(value, points) {
    return (0, _stylis.dealloc)(toRules((0, _stylis.alloc)(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11
var fixedElements = /* #__PURE__ */ new WeakMap();
var compat = function compat(element) {
    if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo
    // negative .length indicates that this rule has been already prefixed
    element.length < 1) return;
    var value = element.value;
    var parent = element.parent;
    var isImplicitRule = element.column === parent.column && element.line === parent.line;
    while(parent.type !== 'rule'){
        parent = parent.parent;
        if (!parent) return;
    } // short-circuit for the simplest case
    if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) return;
     // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
    // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"
    if (isImplicitRule) return;
    fixedElements.set(element, true);
    var points = [];
    var rules = getRules(value, points);
    var parentRules = parent.props;
    for(var i = 0, k = 0; i < rules.length; i++)for(var j = 0; j < parentRules.length; j++, k++)element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
};
var removeLabel = function removeLabel(element) {
    if (element.type === 'decl') {
        var value = element.value;
        if (value.charCodeAt(0) === 108 && // charcode for b
        value.charCodeAt(2) === 98) {
            // this ignores label
            element["return"] = '';
            element.value = '';
        }
    }
};
/* eslint-disable no-fallthrough */ function prefix(value, length) {
    switch((0, _stylis.hash)(value, length)){
        // color-adjust
        case 5103:
            return (0, _stylis.WEBKIT) + 'print-' + value + value;
        // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
        case 5737:
        case 4201:
        case 3177:
        case 3433:
        case 1641:
        case 4457:
        case 2921:
        case 5572:
        case 6356:
        case 5844:
        case 3191:
        case 6645:
        case 3005:
        case 6391:
        case 5879:
        case 5623:
        case 6135:
        case 4599:
        case 4855:
        case 4215:
        case 6389:
        case 5109:
        case 5365:
        case 5621:
        case 3829:
            return (0, _stylis.WEBKIT) + value + value;
        // appearance, user-select, transform, hyphens, text-size-adjust
        case 5349:
        case 4246:
        case 4810:
        case 6968:
        case 2756:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MOZ) + value + (0, _stylis.MS) + value + value;
        // flex, flex-direction
        case 6828:
        case 4268:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + value + value;
        // order
        case 6165:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-' + value + value;
        // align-items
        case 5187:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.replace)(value, /(\w+).+(:[^]+)/, (0, _stylis.WEBKIT) + 'box-$1$2' + (0, _stylis.MS) + 'flex-$1$2') + value;
        // align-self
        case 5443:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-item-' + (0, _stylis.replace)(value, /flex-|-self/, '') + value;
        // align-content
        case 4675:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + 'flex-line-pack' + (0, _stylis.replace)(value, /align-content|flex-|-self/, '') + value;
        // flex-shrink
        case 5548:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'shrink', 'negative') + value;
        // flex-basis
        case 5292:
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'basis', 'preferred-size') + value;
        // flex-grow
        case 6060:
            return (0, _stylis.WEBKIT) + 'box-' + (0, _stylis.replace)(value, '-grow', '') + (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, 'grow', 'positive') + value;
        // transition
        case 4554:
            return (0, _stylis.WEBKIT) + (0, _stylis.replace)(value, /([^-])(transform)/g, '$1' + (0, _stylis.WEBKIT) + '$2') + value;
        // cursor
        case 6187:
            return (0, _stylis.replace)((0, _stylis.replace)((0, _stylis.replace)(value, /(zoom-|grab)/, (0, _stylis.WEBKIT) + '$1'), /(image-set)/, (0, _stylis.WEBKIT) + '$1'), value, '') + value;
        // background, background-image
        case 5495:
        case 3959:
            return (0, _stylis.replace)(value, /(image-set\([^]*)/, (0, _stylis.WEBKIT) + '$1' + '$`$1');
        // justify-content
        case 4968:
            return (0, _stylis.replace)((0, _stylis.replace)(value, /(.+:)(flex-)?(.*)/, (0, _stylis.WEBKIT) + 'box-pack:$3' + (0, _stylis.MS) + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + (0, _stylis.WEBKIT) + value + value;
        // (margin|padding)-inline-(start|end)
        case 4095:
        case 3583:
        case 4068:
        case 2532:
            return (0, _stylis.replace)(value, /(.+)-inline(.+)/, (0, _stylis.WEBKIT) + '$1$2') + value;
        // (min|max)?(width|height|inline-size|block-size)
        case 8116:
        case 7059:
        case 5753:
        case 5535:
        case 5445:
        case 5701:
        case 4933:
        case 4677:
        case 5533:
        case 5789:
        case 5021:
        case 4765:
            // stretch, max-content, min-content, fill-available
            if ((0, _stylis.strlen)(value) - 1 - length > 6) switch((0, _stylis.charat)(value, length + 1)){
                // (m)ax-content, (m)in-content
                case 109:
                    // -
                    if ((0, _stylis.charat)(value, length + 4) !== 45) break;
                // (f)ill-available, (f)it-content
                case 102:
                    return (0, _stylis.replace)(value, /(.+:)(.+)-([^]+)/, '$1' + (0, _stylis.WEBKIT) + '$2-$3' + '$1' + (0, _stylis.MOZ) + ((0, _stylis.charat)(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;
                // (s)tretch
                case 115:
                    return ~(0, _stylis.indexof)(value, 'stretch') ? prefix((0, _stylis.replace)(value, 'stretch', 'fill-available'), length) + value : value;
            }
            break;
        // position: sticky
        case 4949:
            // (s)ticky?
            if ((0, _stylis.charat)(value, length + 1) !== 115) break;
        // display: (flex|inline-flex)
        case 6444:
            switch((0, _stylis.charat)(value, (0, _stylis.strlen)(value) - 3 - (~(0, _stylis.indexof)(value, '!important') && 10))){
                // stic(k)y
                case 107:
                    return (0, _stylis.replace)(value, ':', ':' + (0, _stylis.WEBKIT)) + value;
                // (inline-)?fl(e)x
                case 101:
                    return (0, _stylis.replace)(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + (0, _stylis.WEBKIT) + ((0, _stylis.charat)(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + (0, _stylis.WEBKIT) + '$2$3' + '$1' + (0, _stylis.MS) + '$2box$3') + value;
            }
            break;
        // writing-mode
        case 5936:
            switch((0, _stylis.charat)(value, length + 11)){
                // vertical-l(r)
                case 114:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb') + value;
                // vertical-r(l)
                case 108:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value;
                // horizontal(-)tb
                case 45:
                    return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + (0, _stylis.replace)(value, /[svh]\w+-[tblr]{2}/, 'lr') + value;
            }
            return (0, _stylis.WEBKIT) + value + (0, _stylis.MS) + value + value;
    }
    return value;
}
var prefixer = function prefixer(element, index, children, callback) {
    if (element.length > -1) {
        if (!element["return"]) switch(element.type){
            case 0, _stylis.DECLARATION:
                element["return"] = prefix(element.value, element.length);
                break;
            case 0, _stylis.KEYFRAMES:
                return (0, _stylis.serialize)([
                    (0, _stylis.copy)(element, {
                        value: (0, _stylis.replace)(element.value, '@', '@' + (0, _stylis.WEBKIT))
                    })
                ], callback);
            case 0, _stylis.RULESET:
                if (element.length) return (0, _stylis.combine)(element.props, function(value) {
                    switch((0, _stylis.match)(value, /(::plac\w+|:read-\w+)/)){
                        // :read-(only|write)
                        case ':read-only':
                        case ':read-write':
                            return (0, _stylis.serialize)([
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(read-\w+)/, ':' + (0, _stylis.MOZ) + '$1')
                                    ]
                                })
                            ], callback);
                        // :placeholder
                        case '::placeholder':
                            return (0, _stylis.serialize)([
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, ':' + (0, _stylis.WEBKIT) + 'input-$1')
                                    ]
                                }),
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, ':' + (0, _stylis.MOZ) + '$1')
                                    ]
                                }),
                                (0, _stylis.copy)(element, {
                                    props: [
                                        (0, _stylis.replace)(value, /:(plac\w+)/, (0, _stylis.MS) + 'input-$1')
                                    ]
                                })
                            ], callback);
                    }
                    return '';
                });
        }
    }
};
var getServerStylisCache = isBrowser ? undefined : (0, _weakMemoizeDefault.default)(function() {
    return (0, _memoizeDefault.default)(function() {
        return {};
    });
});
var defaultStylisPlugins = [
    prefixer
];
var createCache = function createCache(options) {
    var key = options.key;
    if (isBrowser && key === 'css') {
        var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
        // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
        // note this very very intentionally targets all style elements regardless of the key to ensure
        // that creating a cache works inside of render of a React component
        Array.prototype.forEach.call(ssrStyles, function(node) {
            // we want to only move elements which have a space in the data-emotion attribute value
            // because that indicates that it is an Emotion 11 server-side rendered style elements
            // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
            // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
            // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
            // will not result in the Emotion 10 styles being destroyed
            var dataEmotionAttribute = node.getAttribute('data-emotion');
            if (dataEmotionAttribute.indexOf(' ') === -1) return;
            document.head.appendChild(node);
            node.setAttribute('data-s', '');
        });
    }
    var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
    var inserted = {};
    var container;
    var nodesToHydrate = [];
    if (isBrowser) {
        container = options.container || document.head;
        Array.prototype.forEach.call(// means that the style elements we're looking at are only Emotion 11 server-rendered style elements
        document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function(node) {
            var attrib = node.getAttribute("data-emotion").split(' ');
            for(var i = 1; i < attrib.length; i++)inserted[attrib[i]] = true;
            nodesToHydrate.push(node);
        });
    }
    var _insert;
    var omnipresentPlugins = [
        compat,
        removeLabel
    ];
    if (!getServerStylisCache) {
        var currentSheet;
        var finalizingPlugins = [
            (0, _stylis.stringify),
            (0, _stylis.rulesheet)(function(rule) {
                currentSheet.insert(rule);
            })
        ];
        var serializer = (0, _stylis.middleware)(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
        var stylis = function stylis(styles) {
            return (0, _stylis.serialize)((0, _stylis.compile)(styles), serializer);
        };
        _insert = function insert(selector, serialized, sheet, shouldCache) {
            currentSheet = sheet;
            stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
            if (shouldCache) cache.inserted[serialized.name] = true;
        };
    } else {
        var _finalizingPlugins = [
            (0, _stylis.stringify)
        ];
        var _serializer = (0, _stylis.middleware)(omnipresentPlugins.concat(stylisPlugins, _finalizingPlugins));
        var _stylis1 = function _stylis1(styles) {
            return (0, _stylis.serialize)((0, _stylis.compile)(styles), _serializer);
        };
        var serverStylisCache = getServerStylisCache(stylisPlugins)(key);
        var getRules = function getRules(selector, serialized) {
            var name = serialized.name;
            if (serverStylisCache[name] === undefined) serverStylisCache[name] = _stylis1(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
            return serverStylisCache[name];
        };
        _insert = function _insert(selector, serialized, sheet, shouldCache) {
            var name = serialized.name;
            var rules = getRules(selector, serialized);
            if (cache.compat === undefined) {
                // in regular mode, we don't set the styles on the inserted cache
                // since we don't need to and that would be wasting memory
                // we return them so that they are rendered in a style tag
                if (shouldCache) cache.inserted[name] = true;
                return rules;
            } else {
                // in compat mode, we put the styles on the inserted cache so
                // that emotion-server can pull out the styles
                // except when we don't want to cache it which was in Global but now
                // is nowhere but we don't want to do a major right now
                // and just in case we're going to leave the case here
                // it's also not affecting client side bundle size
                // so it's really not a big deal
                if (shouldCache) cache.inserted[name] = rules;
                else return rules;
            }
        };
    }
    var cache = {
        key: key,
        sheet: new (0, _sheet.StyleSheet)({
            key: key,
            container: container,
            nonce: options.nonce,
            speedy: options.speedy,
            prepend: options.prepend,
            insertionPoint: options.insertionPoint
        }),
        nonce: options.nonce,
        inserted: inserted,
        registered: {},
        insert: _insert
    };
    cache.sheet.hydrate(nodesToHydrate);
    return cache;
};

},{"@emotion/sheet":"5xfHB","stylis":"jLaPU","@emotion/weak-memoize":"hrHkX","@emotion/memoize":"a2LeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5xfHB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleSheet", ()=>StyleSheet);
var isDevelopment = false;
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/ function sheetForTag(tag) {
    if (tag.sheet) return tag.sheet;
     // this weirdness brought to you by firefox
    /* istanbul ignore next */ for(var i = 0; i < document.styleSheets.length; i++){
        if (document.styleSheets[i].ownerNode === tag) return document.styleSheets[i];
    } // this function should always return with a value
    // TS can't understand it though so we make it stop complaining here
    return undefined;
}
function createStyleElement(options) {
    var tag = document.createElement('style');
    tag.setAttribute('data-emotion', options.key);
    if (options.nonce !== undefined) tag.setAttribute('nonce', options.nonce);
    tag.appendChild(document.createTextNode(''));
    tag.setAttribute('data-s', '');
    return tag;
}
var StyleSheet = /*#__PURE__*/ function() {
    // Using Node instead of HTMLElement since container may be a ShadowRoot
    function StyleSheet(options) {
        var _this = this;
        this._insertTag = function(tag) {
            var before;
            if (_this.tags.length === 0) {
                if (_this.insertionPoint) before = _this.insertionPoint.nextSibling;
                else if (_this.prepend) before = _this.container.firstChild;
                else before = _this.before;
            } else before = _this.tags[_this.tags.length - 1].nextSibling;
            _this.container.insertBefore(tag, before);
            _this.tags.push(tag);
        };
        this.isSpeedy = options.speedy === undefined ? !isDevelopment : options.speedy;
        this.tags = [];
        this.ctr = 0;
        this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets
        this.key = options.key;
        this.container = options.container;
        this.prepend = options.prepend;
        this.insertionPoint = options.insertionPoint;
        this.before = null;
    }
    var _proto = StyleSheet.prototype;
    _proto.hydrate = function hydrate(nodes) {
        nodes.forEach(this._insertTag);
    };
    _proto.insert = function insert(rule) {
        // the max length is how many rules we have per style tag, it's 65000 in speedy mode
        // it's 1 in dev because we insert source maps that map a single rule to a location
        // and you can only have one source map per style tag
        if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) this._insertTag(createStyleElement(this));
        var tag = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
            var sheet = sheetForTag(tag);
            try {
                // this is the ultrafast version, works across browsers
                // the big drawback is that the css won't be editable in devtools
                sheet.insertRule(rule, sheet.cssRules.length);
            } catch (e) {}
        } else tag.appendChild(document.createTextNode(rule));
        this.ctr++;
    };
    _proto.flush = function flush() {
        this.tags.forEach(function(tag) {
            var _tag$parentNode;
            return (_tag$parentNode = tag.parentNode) == null ? void 0 : _tag$parentNode.removeChild(tag);
        });
        this.tags = [];
        this.ctr = 0;
    };
    return StyleSheet;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jLaPU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CHARSET", ()=>f);
parcelHelpers.export(exports, "COMMENT", ()=>n);
parcelHelpers.export(exports, "COUNTER_STYLE", ()=>w);
parcelHelpers.export(exports, "DECLARATION", ()=>s);
parcelHelpers.export(exports, "DOCUMENT", ()=>v);
parcelHelpers.export(exports, "FONT_FACE", ()=>b);
parcelHelpers.export(exports, "FONT_FEATURE_VALUES", ()=>d);
parcelHelpers.export(exports, "IMPORT", ()=>i);
parcelHelpers.export(exports, "KEYFRAMES", ()=>h);
parcelHelpers.export(exports, "LAYER", ()=>$);
parcelHelpers.export(exports, "MEDIA", ()=>u);
parcelHelpers.export(exports, "MOZ", ()=>r);
parcelHelpers.export(exports, "MS", ()=>e);
parcelHelpers.export(exports, "NAMESPACE", ()=>p);
parcelHelpers.export(exports, "PAGE", ()=>t);
parcelHelpers.export(exports, "RULESET", ()=>c);
parcelHelpers.export(exports, "SUPPORTS", ()=>l);
parcelHelpers.export(exports, "VIEWPORT", ()=>o);
parcelHelpers.export(exports, "WEBKIT", ()=>a);
parcelHelpers.export(exports, "abs", ()=>g);
parcelHelpers.export(exports, "alloc", ()=>V);
parcelHelpers.export(exports, "append", ()=>q);
parcelHelpers.export(exports, "assign", ()=>m);
parcelHelpers.export(exports, "caret", ()=>R);
parcelHelpers.export(exports, "char", ()=>L);
parcelHelpers.export(exports, "character", ()=>H);
parcelHelpers.export(exports, "characters", ()=>I);
parcelHelpers.export(exports, "charat", ()=>O);
parcelHelpers.export(exports, "column", ()=>E);
parcelHelpers.export(exports, "combine", ()=>B);
parcelHelpers.export(exports, "comment", ()=>ue);
parcelHelpers.export(exports, "commenter", ()=>ae);
parcelHelpers.export(exports, "compile", ()=>ce);
parcelHelpers.export(exports, "copy", ()=>K);
parcelHelpers.export(exports, "dealloc", ()=>W);
parcelHelpers.export(exports, "declaration", ()=>ie);
parcelHelpers.export(exports, "delimit", ()=>X);
parcelHelpers.export(exports, "delimiter", ()=>re);
parcelHelpers.export(exports, "escaping", ()=>ee);
parcelHelpers.export(exports, "from", ()=>k);
parcelHelpers.export(exports, "hash", ()=>x);
parcelHelpers.export(exports, "identifier", ()=>ne);
parcelHelpers.export(exports, "indexof", ()=>C);
parcelHelpers.export(exports, "length", ()=>F);
parcelHelpers.export(exports, "line", ()=>D);
parcelHelpers.export(exports, "match", ()=>j);
parcelHelpers.export(exports, "middleware", ()=>ve);
parcelHelpers.export(exports, "namespace", ()=>be);
parcelHelpers.export(exports, "next", ()=>P);
parcelHelpers.export(exports, "node", ()=>J);
parcelHelpers.export(exports, "parse", ()=>se);
parcelHelpers.export(exports, "peek", ()=>Q);
parcelHelpers.export(exports, "position", ()=>G);
parcelHelpers.export(exports, "prefix", ()=>fe);
parcelHelpers.export(exports, "prefixer", ()=>he);
parcelHelpers.export(exports, "prev", ()=>N);
parcelHelpers.export(exports, "replace", ()=>z);
parcelHelpers.export(exports, "ruleset", ()=>te);
parcelHelpers.export(exports, "rulesheet", ()=>pe);
parcelHelpers.export(exports, "serialize", ()=>oe);
parcelHelpers.export(exports, "sizeof", ()=>S);
parcelHelpers.export(exports, "slice", ()=>T);
parcelHelpers.export(exports, "stringify", ()=>le);
parcelHelpers.export(exports, "strlen", ()=>M);
parcelHelpers.export(exports, "substr", ()=>A);
parcelHelpers.export(exports, "token", ()=>U);
parcelHelpers.export(exports, "tokenize", ()=>Y);
parcelHelpers.export(exports, "tokenizer", ()=>_);
parcelHelpers.export(exports, "trim", ()=>y);
parcelHelpers.export(exports, "whitespace", ()=>Z);
var e = "-ms-";
var r = "-moz-";
var a = "-webkit-";
var n = "comm";
var c = "rule";
var s = "decl";
var t = "@page";
var u = "@media";
var i = "@import";
var f = "@charset";
var o = "@viewport";
var l = "@supports";
var v = "@document";
var p = "@namespace";
var h = "@keyframes";
var b = "@font-face";
var w = "@counter-style";
var d = "@font-feature-values";
var $ = "@layer";
var g = Math.abs;
var k = String.fromCharCode;
var m = Object.assign;
function x(e, r) {
    return O(e, 0) ^ 45 ? (((r << 2 ^ O(e, 0)) << 2 ^ O(e, 1)) << 2 ^ O(e, 2)) << 2 ^ O(e, 3) : 0;
}
function y(e) {
    return e.trim();
}
function j(e, r) {
    return (e = r.exec(e)) ? e[0] : e;
}
function z(e, r, a) {
    return e.replace(r, a);
}
function C(e, r) {
    return e.indexOf(r);
}
function O(e, r) {
    return e.charCodeAt(r) | 0;
}
function A(e, r, a) {
    return e.slice(r, a);
}
function M(e) {
    return e.length;
}
function S(e) {
    return e.length;
}
function q(e, r) {
    return r.push(e), e;
}
function B(e, r) {
    return e.map(r).join("");
}
var D = 1;
var E = 1;
var F = 0;
var G = 0;
var H = 0;
var I = "";
function J(e, r, a, n, c, s, t) {
    return {
        value: e,
        root: r,
        parent: a,
        type: n,
        props: c,
        children: s,
        line: D,
        column: E,
        length: t,
        return: ""
    };
}
function K(e, r) {
    return m(J("", null, null, "", null, null, 0), e, {
        length: -e.length
    }, r);
}
function L() {
    return H;
}
function N() {
    H = G > 0 ? O(I, --G) : 0;
    if (E--, H === 10) E = 1, D--;
    return H;
}
function P() {
    H = G < F ? O(I, G++) : 0;
    if (E++, H === 10) E = 1, D++;
    return H;
}
function Q() {
    return O(I, G);
}
function R() {
    return G;
}
function T(e, r) {
    return A(I, e, r);
}
function U(e) {
    switch(e){
        case 0:
        case 9:
        case 10:
        case 13:
        case 32:
            return 5;
        case 33:
        case 43:
        case 44:
        case 47:
        case 62:
        case 64:
        case 126:
        case 59:
        case 123:
        case 125:
            return 4;
        case 58:
            return 3;
        case 34:
        case 39:
        case 40:
        case 91:
            return 2;
        case 41:
        case 93:
            return 1;
    }
    return 0;
}
function V(e) {
    return D = E = 1, F = M(I = e), G = 0, [];
}
function W(e) {
    return I = "", e;
}
function X(e) {
    return y(T(G - 1, re(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function Y(e) {
    return W(_(V(e)));
}
function Z(e) {
    while(H = Q())if (H < 33) P();
    else break;
    return U(e) > 2 || U(H) > 3 ? "" : " ";
}
function _(e) {
    while(P())switch(U(H)){
        case 0:
            q(ne(G - 1), e);
            break;
        case 2:
            q(X(H), e);
            break;
        default:
            q(k(H), e);
    }
    return e;
}
function ee(e, r) {
    while(--r && P())if (H < 48 || H > 102 || H > 57 && H < 65 || H > 70 && H < 97) break;
    return T(e, R() + (r < 6 && Q() == 32 && P() == 32));
}
function re(e) {
    while(P())switch(H){
        case e:
            return G;
        case 34:
        case 39:
            if (e !== 34 && e !== 39) re(H);
            break;
        case 40:
            if (e === 41) re(e);
            break;
        case 92:
            P();
            break;
    }
    return G;
}
function ae(e, r) {
    while(P())if (e + H === 57) break;
    else if (e + H === 84 && Q() === 47) break;
    return "/*" + T(r, G - 1) + "*" + k(e === 47 ? e : P());
}
function ne(e) {
    while(!U(Q()))P();
    return T(e, G);
}
function ce(e) {
    return W(se("", null, null, null, [
        ""
    ], e = V(e), 0, [
        0
    ], e));
}
function se(e, r, a, n, c, s, t, u, i) {
    var f = 0;
    var o = 0;
    var l = t;
    var v = 0;
    var p = 0;
    var h = 0;
    var b = 1;
    var w = 1;
    var d = 1;
    var $ = 0;
    var g = "";
    var m = c;
    var x = s;
    var y = n;
    var j = g;
    while(w)switch(h = $, $ = P()){
        case 40:
            if (h != 108 && O(j, l - 1) == 58) {
                if (C(j += z(X($), "&", "&\f"), "&\f") != -1) d = -1;
                break;
            }
        case 34:
        case 39:
        case 91:
            j += X($);
            break;
        case 9:
        case 10:
        case 13:
        case 32:
            j += Z(h);
            break;
        case 92:
            j += ee(R() - 1, 7);
            continue;
        case 47:
            switch(Q()){
                case 42:
                case 47:
                    q(ue(ae(P(), R()), r, a), i);
                    break;
                default:
                    j += "/";
            }
            break;
        case 123 * b:
            u[f++] = M(j) * d;
        case 125 * b:
        case 59:
        case 0:
            switch($){
                case 0:
                case 125:
                    w = 0;
                case 59 + o:
                    if (d == -1) j = z(j, /\f/g, "");
                    if (p > 0 && M(j) - l) q(p > 32 ? ie(j + ";", n, a, l - 1) : ie(z(j, " ", "") + ";", n, a, l - 2), i);
                    break;
                case 59:
                    j += ";";
                default:
                    q(y = te(j, r, a, f, o, c, u, g, m = [], x = [], l), s);
                    if ($ === 123) {
                        if (o === 0) se(j, r, y, y, m, s, l, u, x);
                        else switch(v === 99 && O(j, 3) === 110 ? 100 : v){
                            case 100:
                            case 108:
                            case 109:
                            case 115:
                                se(e, y, y, n && q(te(e, y, y, 0, 0, c, u, g, c, m = [], l), x), c, x, l, u, n ? m : x);
                                break;
                            default:
                                se(j, y, y, y, [
                                    ""
                                ], x, 0, u, x);
                        }
                    }
            }
            f = o = p = 0, b = d = 1, g = j = "", l = t;
            break;
        case 58:
            l = 1 + M(j), p = h;
        default:
            if (b < 1) {
                if ($ == 123) --b;
                else if ($ == 125 && b++ == 0 && N() == 125) continue;
            }
            switch(j += k($), $ * b){
                case 38:
                    d = o > 0 ? 1 : (j += "\f", -1);
                    break;
                case 44:
                    u[f++] = (M(j) - 1) * d, d = 1;
                    break;
                case 64:
                    if (Q() === 45) j += X(P());
                    v = Q(), o = l = M(g = j += ne(R())), $++;
                    break;
                case 45:
                    if (h === 45 && M(j) == 2) b = 0;
            }
    }
    return s;
}
function te(e, r, a, n, s, t, u, i, f, o, l) {
    var v = s - 1;
    var p = s === 0 ? t : [
        ""
    ];
    var h = S(p);
    for(var b = 0, w = 0, d = 0; b < n; ++b)for(var $ = 0, k = A(e, v + 1, v = g(w = u[b])), m = e; $ < h; ++$)if (m = y(w > 0 ? p[$] + " " + k : z(k, /&\f/g, p[$]))) f[d++] = m;
    return J(e, r, a, s === 0 ? c : i, f, o, l);
}
function ue(e, r, a) {
    return J(e, r, a, n, k(L()), A(e, 2, -2), 0);
}
function ie(e, r, a, n) {
    return J(e, r, a, s, A(e, 0, n), A(e, n + 1, -1), n);
}
function fe(n, c, s) {
    switch(x(n, c)){
        case 5103:
            return a + "print-" + n + n;
        case 5737:
        case 4201:
        case 3177:
        case 3433:
        case 1641:
        case 4457:
        case 2921:
        case 5572:
        case 6356:
        case 5844:
        case 3191:
        case 6645:
        case 3005:
        case 6391:
        case 5879:
        case 5623:
        case 6135:
        case 4599:
        case 4855:
        case 4215:
        case 6389:
        case 5109:
        case 5365:
        case 5621:
        case 3829:
            return a + n + n;
        case 4789:
            return r + n + n;
        case 5349:
        case 4246:
        case 4810:
        case 6968:
        case 2756:
            return a + n + r + n + e + n + n;
        case 5936:
            switch(O(n, c + 11)){
                case 114:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "tb") + n;
                case 108:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "tb-rl") + n;
                case 45:
                    return a + n + e + z(n, /[svh]\w+-[tblr]{2}/, "lr") + n;
            }
        case 6828:
        case 4268:
        case 2903:
            return a + n + e + n + n;
        case 6165:
            return a + n + e + "flex-" + n + n;
        case 5187:
            return a + n + z(n, /(\w+).+(:[^]+)/, a + "box-$1$2" + e + "flex-$1$2") + n;
        case 5443:
            return a + n + e + "flex-item-" + z(n, /flex-|-self/g, "") + (!j(n, /flex-|baseline/) ? e + "grid-row-" + z(n, /flex-|-self/g, "") : "") + n;
        case 4675:
            return a + n + e + "flex-line-pack" + z(n, /align-content|flex-|-self/g, "") + n;
        case 5548:
            return a + n + e + z(n, "shrink", "negative") + n;
        case 5292:
            return a + n + e + z(n, "basis", "preferred-size") + n;
        case 6060:
            return a + "box-" + z(n, "-grow", "") + a + n + e + z(n, "grow", "positive") + n;
        case 4554:
            return a + z(n, /([^-])(transform)/g, "$1" + a + "$2") + n;
        case 6187:
            return z(z(z(n, /(zoom-|grab)/, a + "$1"), /(image-set)/, a + "$1"), n, "") + n;
        case 5495:
        case 3959:
            return z(n, /(image-set\([^]*)/, a + "$1" + "$`$1");
        case 4968:
            return z(z(n, /(.+:)(flex-)?(.*)/, a + "box-pack:$3" + e + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + a + n + n;
        case 4200:
            if (!j(n, /flex-|baseline/)) return e + "grid-column-align" + A(n, c) + n;
            break;
        case 2592:
        case 3360:
            return e + z(n, "template-", "") + n;
        case 4384:
        case 3616:
            if (s && s.some(function(e, r) {
                return c = r, j(e.props, /grid-\w+-end/);
            })) return ~C(n + (s = s[c].value), "span") ? n : e + z(n, "-start", "") + n + e + "grid-row-span:" + (~C(s, "span") ? j(s, /\d+/) : +j(s, /\d+/) - +j(n, /\d+/)) + ";";
            return e + z(n, "-start", "") + n;
        case 4896:
        case 4128:
            return s && s.some(function(e) {
                return j(e.props, /grid-\w+-start/);
            }) ? n : e + z(z(n, "-end", "-span"), "span ", "") + n;
        case 4095:
        case 3583:
        case 4068:
        case 2532:
            return z(n, /(.+)-inline(.+)/, a + "$1$2") + n;
        case 8116:
        case 7059:
        case 5753:
        case 5535:
        case 5445:
        case 5701:
        case 4933:
        case 4677:
        case 5533:
        case 5789:
        case 5021:
        case 4765:
            if (M(n) - 1 - c > 6) switch(O(n, c + 1)){
                case 109:
                    if (O(n, c + 4) !== 45) break;
                case 102:
                    return z(n, /(.+:)(.+)-([^]+)/, "$1" + a + "$2-$3" + "$1" + r + (O(n, c + 3) == 108 ? "$3" : "$2-$3")) + n;
                case 115:
                    return ~C(n, "stretch") ? fe(z(n, "stretch", "fill-available"), c, s) + n : n;
            }
            break;
        case 5152:
        case 5920:
            return z(n, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function(r, a, c, s, t, u, i) {
                return e + a + ":" + c + i + (s ? e + a + "-span:" + (t ? u : +u - +c) + i : "") + n;
            });
        case 4949:
            if (O(n, c + 6) === 121) return z(n, ":", ":" + a) + n;
            break;
        case 6444:
            switch(O(n, O(n, 14) === 45 ? 18 : 11)){
                case 120:
                    return z(n, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, "$1" + a + (O(n, 14) === 45 ? "inline-" : "") + "box$3" + "$1" + a + "$2$3" + "$1" + e + "$2box$3") + n;
                case 100:
                    return z(n, ":", ":" + e) + n;
            }
            break;
        case 5719:
        case 2647:
        case 2135:
        case 3927:
        case 2391:
            return z(n, "scroll-", "scroll-snap-") + n;
    }
    return n;
}
function oe(e, r) {
    var a = "";
    var n = S(e);
    for(var c = 0; c < n; c++)a += r(e[c], c, e, r) || "";
    return a;
}
function le(e, r, a, t) {
    switch(e.type){
        case $:
            if (e.children.length) break;
        case i:
        case s:
            return e.return = e.return || e.value;
        case n:
            return "";
        case h:
            return e.return = e.value + "{" + oe(e.children, t) + "}";
        case c:
            e.value = e.props.join(",");
    }
    return M(a = oe(e.children, t)) ? e.return = e.value + "{" + a + "}" : "";
}
function ve(e) {
    var r = S(e);
    return function(a, n, c, s) {
        var t = "";
        for(var u = 0; u < r; u++)t += e[u](a, n, c, s) || "";
        return t;
    };
}
function pe(e) {
    return function(r) {
        if (!r.root) {
            if (r = r.return) e(r);
        }
    };
}
function he(n, t, u, i) {
    if (n.length > -1) {
        if (!n.return) switch(n.type){
            case s:
                n.return = fe(n.value, n.length, u);
                return;
            case h:
                return oe([
                    K(n, {
                        value: z(n.value, "@", "@" + a)
                    })
                ], i);
            case c:
                if (n.length) return B(n.props, function(c) {
                    switch(j(c, /(::plac\w+|:read-\w+)/)){
                        case ":read-only":
                        case ":read-write":
                            return oe([
                                K(n, {
                                    props: [
                                        z(c, /:(read-\w+)/, ":" + r + "$1")
                                    ]
                                })
                            ], i);
                        case "::placeholder":
                            return oe([
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, ":" + a + "input-$1")
                                    ]
                                }),
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, ":" + r + "$1")
                                    ]
                                }),
                                K(n, {
                                    props: [
                                        z(c, /:(plac\w+)/, e + "input-$1")
                                    ]
                                })
                            ], i);
                    }
                    return "";
                });
        }
    }
}
function be(e) {
    switch(e.type){
        case c:
            e.props = e.props.map(function(r) {
                return B(Y(r), function(r, a, n) {
                    switch(O(r, 0)){
                        case 12:
                            return A(r, 1, M(r));
                        case 0:
                        case 40:
                        case 43:
                        case 62:
                        case 126:
                            return r;
                        case 58:
                            if (n[++a] === "global") n[a] = "", n[++a] = "\f" + A(n[a], a = 1, -1);
                        case 32:
                            return a === 1 ? "" : r;
                        default:
                            switch(a){
                                case 0:
                                    e = r;
                                    return S(n) > 1 ? "" : r;
                                case a = S(n) - 1:
                                case 2:
                                    return a === 2 ? r + e + e : r + e;
                                default:
                                    return r;
                            }
                    }
                });
            });
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrHkX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>weakMemoize);
var weakMemoize = function weakMemoize(func) {
    var cache = new WeakMap();
    return function(arg) {
        if (cache.has(arg)) // Use non-null assertion because we just checked that the cache `has` it
        // This allows us to remove `undefined` from the return value
        return cache.get(arg);
        var ret = func(arg);
        cache.set(arg, ret);
        return ret;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a2LeB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>memoize);
function memoize(fn) {
    var cache = Object.create(null);
    return function(arg) {
        if (cache[arg] === undefined) cache[arg] = fn(arg);
        return cache[arg];
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"20my9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_extends);
function _extends() {
    return _extends = Object.assign ? Object.assign.bind() : function(n) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e];
            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
        }
        return n;
    }, _extends.apply(null, arguments);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d7gCT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>hoistNonReactStatics);
var _hoistNonReactStatics = require("hoist-non-react-statics");
var _hoistNonReactStaticsDefault = parcelHelpers.interopDefault(_hoistNonReactStatics);
// this file isolates this package that is not tree-shakeable
// and if this module doesn't actually contain any logic of its own
// then Rollup just use 'hoist-non-react-statics' directly in other chunks
var hoistNonReactStatics = function(targetComponent, sourceComponent) {
    return (0, _hoistNonReactStaticsDefault.default)(targetComponent, sourceComponent);
};

},{"hoist-non-react-statics":"h7WK5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h7WK5":[function(require,module,exports,__globalThis) {
'use strict';
var reactIs = require("c03b486d83967636");
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */ var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
};
var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
};
var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
};
var MEMO_STATICS = {
    '$$typeof': true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
function getStatics(component) {
    // React v16.11 and below
    if (reactIs.isMemo(component)) return MEMO_STATICS;
     // React v16.12 and above
    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}
var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
        // don't hoist over string (html) components
        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        var targetStatics = getStatics(targetComponent);
        var sourceStatics = getStatics(sourceComponent);
        for(var i = 0; i < keys.length; ++i){
            var key = keys[i];
            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                    // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }
    }
    return targetComponent;
}
module.exports = hoistNonReactStatics;

},{"c03b486d83967636":"59S9B"}],"59S9B":[function(require,module,exports,__globalThis) {
'use strict';
module.exports = require("2255125a8e8b1051");

},{"2255125a8e8b1051":"dFjTC"}],"dFjTC":[function(require,module,exports,__globalThis) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    'use strict';
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"cQ0xH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getRegisteredStyles", ()=>getRegisteredStyles);
parcelHelpers.export(exports, "insertStyles", ()=>insertStyles);
parcelHelpers.export(exports, "registerStyles", ()=>registerStyles);
var isBrowser = typeof document !== 'undefined';
function getRegisteredStyles(registered, registeredStyles, classNames) {
    var rawClassName = '';
    classNames.split(' ').forEach(function(className) {
        if (registered[className] !== undefined) registeredStyles.push(registered[className] + ";");
        else if (className) rawClassName += className + " ";
    });
    return rawClassName;
}
var registerStyles = function registerStyles(cache, serialized, isStringTag) {
    var className = cache.key + "-" + serialized.name;
    if (// class name could be used further down
    // the tree but if it's a string tag, we know it won't
    // so we don't have to add it to registered cache.
    // this improves memory usage since we can avoid storing the whole style string
    (isStringTag === false || // we need to always store it if we're in compat mode and
    // in node since emotion-server relies on whether a style is in
    // the registered cache to know whether a style is global or not
    // also, note that this check will be dead code eliminated in the browser
    isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) cache.registered[className] = serialized.styles;
};
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
    registerStyles(cache, serialized, isStringTag);
    var className = cache.key + "-" + serialized.name;
    if (cache.inserted[serialized.name] === undefined) {
        var stylesForSSR = '';
        var current = serialized;
        do {
            var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);
            if (!isBrowser && maybeStyles !== undefined) stylesForSSR += maybeStyles;
            current = current.next;
        }while (current !== undefined);
        if (!isBrowser && stylesForSSR.length !== 0) return stylesForSSR;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4vIHo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "serializeStyles", ()=>serializeStyles);
var _hash = require("@emotion/hash");
var _hashDefault = parcelHelpers.interopDefault(_hash);
var _unitless = require("@emotion/unitless");
var _unitlessDefault = parcelHelpers.interopDefault(_unitless);
var _memoize = require("@emotion/memoize");
var _memoizeDefault = parcelHelpers.interopDefault(_memoize);
var isDevelopment = false;
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty(property) {
    return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue(value) {
    return value != null && typeof value !== 'boolean';
};
var processStyleName = /* #__PURE__ */ (0, _memoizeDefault.default)(function(styleName) {
    return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});
var processStyleValue = function processStyleValue(key, value) {
    switch(key){
        case 'animation':
        case 'animationName':
            if (typeof value === 'string') return value.replace(animationRegex, function(match, p1, p2) {
                cursor = {
                    name: p1,
                    styles: p2,
                    next: cursor
                };
                return p1;
            });
    }
    if ((0, _unitlessDefault.default)[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) return value + 'px';
    return value;
};
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
    if (interpolation == null) return '';
    var componentSelector = interpolation;
    if (componentSelector.__emotion_styles !== undefined) return componentSelector;
    switch(typeof interpolation){
        case 'boolean':
            return '';
        case 'object':
            var keyframes = interpolation;
            if (keyframes.anim === 1) {
                cursor = {
                    name: keyframes.name,
                    styles: keyframes.styles,
                    next: cursor
                };
                return keyframes.name;
            }
            var serializedStyles = interpolation;
            if (serializedStyles.styles !== undefined) {
                var next = serializedStyles.next;
                if (next !== undefined) // not the most efficient thing ever but this is a pretty rare case
                // and there will be very few iterations of this generally
                while(next !== undefined){
                    cursor = {
                        name: next.name,
                        styles: next.styles,
                        next: cursor
                    };
                    next = next.next;
                }
                var styles = serializedStyles.styles + ";";
                return styles;
            }
            return createStringFromObject(mergedProps, registered, interpolation);
        case 'function':
            if (mergedProps !== undefined) {
                var previousCursor = cursor;
                var result = interpolation(mergedProps);
                cursor = previousCursor;
                return handleInterpolation(mergedProps, registered, result);
            }
            break;
    } // finalize string values (regular strings and functions interpolated into css calls)
    var asString = interpolation;
    if (registered == null) return asString;
    var cached = registered[asString];
    return cached !== undefined ? cached : asString;
}
function createStringFromObject(mergedProps, registered, obj) {
    var string = '';
    if (Array.isArray(obj)) for(var i = 0; i < obj.length; i++)string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    else for(var key in obj){
        var value = obj[key];
        if (typeof value !== 'object') {
            var asString = value;
            if (registered != null && registered[asString] !== undefined) string += key + "{" + registered[asString] + "}";
            else if (isProcessableValue(asString)) string += processStyleName(key) + ":" + processStyleValue(key, asString) + ";";
        } else {
            if (key === 'NO_COMPONENT_SELECTOR' && isDevelopment) throw new Error(noComponentSelectorMessage);
            if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
                for(var _i = 0; _i < value.length; _i++)if (isProcessableValue(value[_i])) string += processStyleName(key) + ":" + processStyleValue(key, value[_i]) + ";";
            } else {
                var interpolated = handleInterpolation(mergedProps, registered, value);
                switch(key){
                    case 'animation':
                    case 'animationName':
                        string += processStyleName(key) + ":" + interpolated + ";";
                        break;
                    default:
                        string += key + "{" + interpolated + "}";
                }
            }
        }
    }
    return string;
}
var labelPattern = /label:\s*([^\s;{]+)\s*(;|$)/g; // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list
var cursor;
function serializeStyles(args, registered, mergedProps) {
    if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) return args[0];
    var stringMode = true;
    var styles = '';
    cursor = undefined;
    var strings = args[0];
    if (strings == null || strings.raw === undefined) {
        stringMode = false;
        styles += handleInterpolation(mergedProps, registered, strings);
    } else {
        var asTemplateStringsArr = strings;
        styles += asTemplateStringsArr[0];
    } // we start at 1 since we've already handled the first arg
    for(var i = 1; i < args.length; i++){
        styles += handleInterpolation(mergedProps, registered, args[i]);
        if (stringMode) {
            var templateStringsArr = strings;
            styles += templateStringsArr[i];
        }
    } // using a global regex with .exec is stateful so lastIndex has to be reset each time
    labelPattern.lastIndex = 0;
    var identifierName = '';
    var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5
    while((match = labelPattern.exec(styles)) !== null)identifierName += '-' + match[1];
    var name = (0, _hashDefault.default)(styles) + identifierName;
    return {
        name: name,
        styles: styles,
        next: cursor
    };
}

},{"@emotion/hash":"45L46","@emotion/unitless":"kL23J","@emotion/memoize":"a2LeB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"45L46":[function(require,module,exports,__globalThis) {
/* eslint-disable */ // Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>murmur2);
function murmur2(str) {
    // 'm' and 'r' are mixing constants generated offline.
    // They're not really 'magic', they just happen to work well.
    // const m = 0x5bd1e995;
    // const r = 24;
    // Initialize the hash
    var h = 0; // Mix 4 bytes at a time into the hash
    var k, i = 0, len = str.length;
    for(; len >= 4; ++i, len -= 4){
        k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
        k = /* Math.imul(k, m): */ (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
        k ^= /* k >>> r: */ k >>> 24;
        h = /* Math.imul(k, m): */ (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^ /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    } // Handle the last few bytes of the input array
    switch(len){
        case 3:
            h ^= (str.charCodeAt(i + 2) & 0xff) << 16;
        case 2:
            h ^= (str.charCodeAt(i + 1) & 0xff) << 8;
        case 1:
            h ^= str.charCodeAt(i) & 0xff;
            h = /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    } // Do a few final mixes of the hash to ensure the last few
    // bytes are well-incorporated.
    h ^= h >>> 13;
    h = /* Math.imul(h, m): */ (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
    return ((h ^ h >>> 15) >>> 0).toString(36);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kL23J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>unitlessKeys);
var unitlessKeys = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    scale: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fImkp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useInsertionEffectAlwaysWithSyncFallback", ()=>useInsertionEffectAlwaysWithSyncFallback);
parcelHelpers.export(exports, "useInsertionEffectWithLayoutFallback", ()=>useInsertionEffectWithLayoutFallback);
var _react = require("react");
var isBrowser = typeof document !== 'undefined';
var syncFallback = function syncFallback(create) {
    return create();
};
var useInsertionEffect = _react["useInsertionEffect"] ? _react["useInsertionEffect"] : false;
var useInsertionEffectAlwaysWithSyncFallback = !isBrowser ? syncFallback : useInsertionEffect || syncFallback;
var useInsertionEffectWithLayoutFallback = useInsertionEffect || _react.useLayoutEffect;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a1qkT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "commonSVGStyles", ()=>commonSVGStyles);
parcelHelpers.export(exports, "sizeStyleMap", ()=>sizeStyleMap);
parcelHelpers.export(exports, "getIconSize", ()=>getIconSize);
var _constants = require("../constants");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react = require("@emotion/react");
var commonSVGStyles = {
    overflow: 'hidden',
    pointerEvents: 'none',
    /**
   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.
   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS
   * rule) and then override it with currentColor for the color changes to be picked up.
   */ stop: {
        stopColor: 'currentColor'
    }
};
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var smallStyles = (0, _react.css)((0, _constants.dimensions).small);
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var mediumStyles = (0, _react.css)((0, _constants.dimensions).medium);
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var largeStyles = (0, _react.css)((0, _constants.dimensions).large);
// eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
var xlargeStyles = (0, _react.css)((0, _constants.dimensions).xlarge);
var sizeStyleMap = {
    small: smallStyles,
    medium: mediumStyles,
    large: largeStyles,
    xlarge: xlargeStyles
};
var getIconSize = function getIconSize(_ref) {
    var width = _ref.width, height = _ref.height, size = _ref.size;
    if (width && height) return {
        width: width,
        height: height
    };
    if (size) return (0, _constants.dimensions)[size];
    return undefined;
};

},{"../constants":"cYOAg","@emotion/react":"cLTfV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cYOAg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sizes", ()=>sizes);
parcelHelpers.export(exports, "sizeMap", ()=>sizeMap);
parcelHelpers.export(exports, "dimensions", ()=>dimensions);
var sizes = {
    small: '16px',
    medium: '24px',
    large: '32px',
    xlarge: '48px'
};
var sizeMap = {
    small: 'small',
    medium: 'medium',
    large: 'large',
    xlarge: 'xlarge'
};
var dimensions = {
    small: {
        width: sizes.small,
        height: sizes.small
    },
    medium: {
        width: sizes.medium,
        height: sizes.medium
    },
    large: {
        width: sizes.large,
        height: sizes.large
    },
    xlarge: {
        width: sizes.xlarge,
        height: sizes.xlarge
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4dIMB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getBackground", ()=>getBackground);
var getBackground = function getBackground() {
    return "var(--ds-surface, #FFFFFF)";
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iplU6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconFacade", ()=>IconFacade);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _icon = require("./icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);
var _excluded = [
    "dangerouslySetGlyph"
];
var sizeSpacingMap = {
    utility: {
        small: 'compact',
        medium: 'spacious'
    },
    core: {
        small: 'none',
        medium: 'spacious'
    }
};
var IconFacade = /*#__PURE__*/ (0, _react.memo)(function IconFacade(_ref) {
    var _props$size;
    var dangerouslySetGlyph = _ref.dangerouslySetGlyph, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var NewIcon = props.newIcon;
    // By default, the icon size will be medium for core icons and small for utility icons
    var size = (_props$size = props.size) !== null && _props$size !== void 0 ? _props$size : 'medium';
    var useNewIcon = !props.isFacadeDisabled && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-legacy-facade');
    if (useNewIcon && NewIcon && (size === 'small' || size === 'medium')) {
        if (props.iconType === 'utility') {
            var Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, (0, _extendsDefault.default)({}, props, {
                spacing: (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-facade-button-fix') ? sizeSpacingMap['utility'][size] : 'none',
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        } else {
            var _Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(_Icon, (0, _extendsDefault.default)({}, props, {
                spacing: sizeSpacingMap['core'][size],
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        }
    }
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconDefault.default), (0, _extendsDefault.default)({
        dangerouslySetGlyph: dangerouslySetGlyph
    }, props));
});
exports.default = IconFacade;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/platform-feature-flags":"7V0sZ","./icon":"1ltmN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j8lr0":[function(require,module,exports,__globalThis) {
var objectWithoutPropertiesLoose = require("424c8dc91f0a14f9");
function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o, r, i = objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
}
module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"424c8dc91f0a14f9":"17jFf"}],"17jFf":[function(require,module,exports,__globalThis) {
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"7V0sZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's
 * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.
 *
 * @param flagResolver
 */ parcelHelpers.export(exports, "setBooleanFeatureFlagResolver", ()=>setBooleanFeatureFlagResolver);
/**
 * Returns the value of a feature flag. If the flag does not resolve, it returns the "false" as a default value.
 *
 * @deprecated Use {@link fg} function instead.
 * @param name
 */ parcelHelpers.export(exports, "getBooleanFF", ()=>getBooleanFF);
/**
 * Returns the value of a feature flag. If the flag does not resolve, it returns the "false" as a default value.
 *
 * @param name
 */ parcelHelpers.export(exports, "fg", ()=>fg);
var _resolvers = require("./resolvers");
function setBooleanFeatureFlagResolver(flagResolver) {
    (0, _resolvers.setBooleanResolver)(flagResolver);
}
function getBooleanFF(name) {
    return (0, _resolvers.resolveBooleanFlag)(name);
}
function fg(name) {
    return (0, _resolvers.resolveBooleanFlag)(name);
}

},{"./resolvers":"l7LnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l7LnN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PFF_GLOBAL_KEY", ()=>PFF_GLOBAL_KEY);
parcelHelpers.export(exports, "setBooleanResolver", ()=>setBooleanResolver);
parcelHelpers.export(exports, "resolveBooleanFlag", ()=>resolveBooleanFlag);
var _debug = require("./debug");
var pkgName = '@atlaskit/platform-feature-flags';
var PFF_GLOBAL_KEY = '__PLATFORM_FEATURE_FLAGS__';
var hasProcessEnv = false;
// FF global overrides can be configured by test runners or Storybook
var ENV_ENABLE_PLATFORM_FF = hasProcessEnv ? // Use global "process" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin
false : false;
// STORYBOOK_ENABLE_PLATFORM_FF is included as storybook only allows env vars prefixed with STORYBOOK
// https://github.com/storybookjs/storybook/issues/12270
var ENV_STORYBOOK_ENABLE_PLATFORM_FF = hasProcessEnv ? // Use global "process" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin
false : false;
var ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE = ENV_ENABLE_PLATFORM_FF || ENV_STORYBOOK_ENABLE_PLATFORM_FF;
var DEFAULT_PFF_GLOBAL = {
    // In development mode we want to capture any feature flag checks that happen using the default resolver and log this result when the resolver is replaced.
    // This is because evaluating feature flags when the resolver/FF client is loaded asynchronously could cause unexpected issues.
    earlyResolvedFlags: new Map(),
    booleanResolver: function booleanResolver(flagKey) {
        var unresolvedFlagCount = this.earlyResolvedFlags.get(flagKey) || 0;
        this.earlyResolvedFlags.set(flagKey, unresolvedFlagCount + 1);
        return false;
    }
};
var globalVar = typeof window !== 'undefined' ? window : globalThis;
globalVar[PFF_GLOBAL_KEY] = globalVar[PFF_GLOBAL_KEY] || DEFAULT_PFF_GLOBAL;
function setBooleanResolver(resolver) {
    globalVar[PFF_GLOBAL_KEY].booleanResolver = resolver;
    var _globalVar$PFF_GLOBAL;
    if (((_globalVar$PFF_GLOBAL = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL === void 0 || (_globalVar$PFF_GLOBAL = _globalVar$PFF_GLOBAL.earlyResolvedFlags) === null || _globalVar$PFF_GLOBAL === void 0 ? void 0 : _globalVar$PFF_GLOBAL.size) > 0) {
        (0, _debug.debug)("[%s]: The following list of Feature Flags were called, the following number of times, before setBooleanResolver.", pkgName, Array.from(globalVar[PFF_GLOBAL_KEY].earlyResolvedFlags.entries()));
        globalVar[PFF_GLOBAL_KEY].earlyResolvedFlags.clear();
    }
}
function resolveBooleanFlag(flagKey) {
    if (ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE) {
        (0, _debug.debug)('[%s]: The feature flags were enabled while running tests. The flag "%s" will be always enabled.', pkgName, flagKey);
        return true;
    }
    try {
        var _globalVar$PFF_GLOBAL2;
        var result = (_globalVar$PFF_GLOBAL2 = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL2 === void 0 ? void 0 : _globalVar$PFF_GLOBAL2.booleanResolver(flagKey);
        if (typeof result !== 'boolean') {
            // eslint-disable-next-line no-console
            console.warn("".concat(flagKey, " resolved to a non-boolean value, returning false for safety"));
            return false;
        }
        return result;
    } catch (e) {
        return false;
    }
}

},{"./debug":"5Jyk7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Jyk7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "debug", ()=>debug);
var _ref, _process, _process2;
// We can't rely on NODE_ENV === 'test' if its value is already configured by the consumer to some other value, so better to use JEST_WORKER_ID
// https://jestjs.io/docs/environment-variables#jest_worker_id
var TESTS_MODE = (_ref = (globalThis === null || globalThis === void 0 || (_process = globalThis.process) === null || _process === void 0 || (_process = _process.env) === null || _process === void 0 ? void 0 : _process.JEST_WORKER_ID) !== undefined, _ref !== void 0) ? _ref : false;
var DEBUG_MODE = !TESTS_MODE && (globalThis === null || globalThis === void 0 || (_process2 = globalThis.process) === null || _process2 === void 0 || (_process2 = _process2.env) === null || _process2 === void 0 ? void 0 : _process2.NODE_ENV) !== 'production';
var debug = function debug() {
    var _console;
    if (!DEBUG_MODE) return;
    // eslint-disable-next-line no-console
    (_console = console).debug.apply(_console, arguments);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"99lIX":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::8b08dd8b52bcbb9a433f2fc665f1c81b>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("ba5a3491b7a9c708"));
var _UNSAFE_baseNew = _interopRequireDefault(require("5939c4bd0b61d808"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * ⚠️ EXPERIMENTAL ⚠️ - New icons are in alpha - and subject to change or removal in future minor or patch releases.
 * Please reach out in #icon-contributions before using these in production.
 *
 * Icon: "Notification".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Single purpose - Reserved for notifications within global product navigation and within product screens.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const NotificationIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_UNSAFE_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path stroke="currentcolor" stroke-linejoin="round" stroke-width="1.5" d="M10.5 12.75a2.5 2.5 0 0 1-5 0m6.75-4.114V5a4.25 4.25 0 0 0-8.5 0v3.636a.4.4 0 0 1-.06.21l-1.842 2.948a.625.625 0 0 0 .53.956h11.244c.491 0 .79-.54.53-.956l-1.841-2.947a.4.4 0 0 1-.061-.211Z"/>`
    }, props));
NotificationIcon.displayName = 'NotificationIcon';
var _default = exports.default = NotificationIcon;

},{"ba5a3491b7a9c708":"jMk1U","5939c4bd0b61d808":"4oZdW"}],"4oZdW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconNewDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconNew.Icon));
var _iconNew = require("../components/icon-new");
var _iconNewDefault = parcelHelpers.interopDefault(_iconNew);

},{"../components/icon-new":"4K9kL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4K9kL":[function(require,module,exports,__globalThis) {
/**
 * @jsxRuntime classic
 * @jsx jsx
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _react = require("react");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react1 = require("@emotion/react");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
/**
 * We are hiding this props from consumers as it's reserved
 * for use by Icon Tile.
 */ var commonSVGStyles = (0, _react1.css)({
    overflow: 'hidden',
    pointerEvents: 'none',
    /**
   * Stop-color doesn't properly apply in chrome when the inherited/current color changes.
   * We have to initially set stop-color to inherit (either via DOM attribute or an initial CSS
   * rule) and then override it with currentColor for the color changes to be picked up.
   */ // eslint-disable-next-line @atlaskit/design-system/no-nested-styles, @atlaskit/ui-styling-standard/no-nested-selectors -- Ignored via go/DSP-18766
    stop: {
        stopColor: 'currentColor'
    }
});
var svgStyles = (0, _react1.css)({
    color: 'currentColor',
    verticalAlign: 'bottom'
});
var iconStyles = (0, _react1.css)({
    display: 'inline-block',
    boxSizing: 'border-box',
    flexShrink: 0,
    lineHeight: 1,
    paddingInlineEnd: 'var(--ds--button--new-icon-padding-end, 0)',
    paddingInlineStart: 'var(--ds--button--new-icon-padding-start, 0)'
});
var utilityIconStyles = (0, _react1.css)({
    lineHeight: "var(--ds-space-150, 12px)"
});
var scaleStyles = (0, _react1.css)({
    width: 'inherit',
    height: 'inherit'
});
/**
 * For windows high contrast mode
 */ var baseHcmStyles = (0, _react1.css)({
    '@media screen and (forced-colors: active)': {
        color: 'CanvasText',
        filter: 'grayscale(1)'
    }
});
var scaleSize = (0, _react1.css)({
    width: 'inherit',
    height: 'inherit'
});
var sizeMap = {
    core: {
        none: (0, _react1.css)({
            width: "var(--ds-space-200, 16px)",
            height: "var(--ds-space-200, 16px)"
        }),
        spacious: (0, _react1.css)({
            width: "var(--ds-space-300, 24px)",
            height: "var(--ds-space-300, 24px)"
        })
    },
    utility: {
        none: (0, _react1.css)({
            width: "var(--ds-space-150, 12px)",
            height: "var(--ds-space-150, 12px)"
        }),
        compact: (0, _react1.css)({
            width: "var(--ds-space-200, 16px)",
            height: "var(--ds-space-200, 16px)"
        }),
        spacious: (0, _react1.css)({
            width: "var(--ds-space-300, 24px)",
            height: "var(--ds-space-300, 24px)"
        })
    }
};
var baseSizeMap = {
    core: 16,
    utility: 12
};
var paddingMap = {
    core: {
        none: 0,
        spacious: 4
    },
    utility: {
        none: 0,
        compact: 2,
        spacious: 6
    }
};
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _props$type, _props$spacing3, _props$spacing4;
    var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin;
    var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
    } : undefined;
    // Fall back to old icon
    if (FallbackIcon && !(0, _platformFeatureFlags.fg)('platform-visual-refresh-icons')) // parse out unnecessary props
    return (0, _react1.jsx)(FallbackIcon, {
        primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
        secondaryColor: LEGACY_secondaryColor,
        size: LEGACY_size,
        label: label,
        testId: testId,
        UNSAFE_margin: LEGACY_margin
    });
    var baseSize = baseSizeMap[(_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core'];
    var viewBoxPadding;
    if (props.type === 'utility') {
        var _props$spacing;
        viewBoxPadding = paddingMap[props.type][(_props$spacing = props.spacing) !== null && _props$spacing !== void 0 ? _props$spacing : 'none'];
    } else {
        var _props$spacing2;
        viewBoxPadding = paddingMap['core'][(_props$spacing2 = props.spacing) !== null && _props$spacing2 !== void 0 ? _props$spacing2 : 'none'];
    }
    var viewBoxSize = baseSize + 2 * viewBoxPadding;
    // Workaround for the transparency in our disabled icon token.
    // Because we have multiple strokes in icons, opacities overlap
    // This filter has an impact on render performance, but this is
    // acceptable as icons aren't commonly disabled en-masse
    var iconColor = color;
    if (dangerouslySetInnerHTML && color === "var(--ds-icon-disabled, #091E424F)") {
        dangerouslySetInnerHTML.__html = "\n<filter id=\"ds-newIconOpacityFilter\">\n  <feFlood flood-color=\"var(--ds-icon-disabled)\" />\n  <feComposite in2=\"SourceGraphic\" operator=\"in\" />\n</filter>\n<g filter=\"url(#ds-newIconOpacityFilter)\">\n  ".concat(dangerouslySetInnerHTML.__html, "\n</g>");
        iconColor = "var(--ds-icon, #44546F)";
    }
    return (0, _react1.jsx)("span", {
        "data-testid": testId,
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            color: iconColor
        },
        css: [
            iconStyles,
            baseHcmStyles,
            shouldScale && scaleStyles,
            props.type === 'utility' && utilityIconStyles
        ]
    }, (0, _react1.jsx)("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        css: [
            commonSVGStyles,
            svgStyles,
            shouldScale ? scaleSize : props.type === 'utility' ? sizeMap[props.type][(_props$spacing3 = props.spacing) !== null && _props$spacing3 !== void 0 ? _props$spacing3 : 'none'] : sizeMap['core'][(_props$spacing4 = props.spacing) !== null && _props$spacing4 !== void 0 ? _props$spacing4 : 'none']
        ],
        dangerouslySetInnerHTML: dangerouslySetInnerHTML
    }));
});
exports.default = Icon;

},{"react":"jMk1U","@emotion/react":"cLTfV","@atlaskit/platform-feature-flags":"7V0sZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cVWXB":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("f3348fa8fa86a5c"));
var _base = require("b008db407cd7f7c7");
var _questionCircle = _interopRequireDefault(require("9b7cd28aff1c1aa7"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const QuestionIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.UNSAFE_IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill="currentcolor" fill-rule="evenodd"><path d="M12 18a1 1 0 0 1 0-2 1 1 0 0 1 0 2m-2-9a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/><path d="M15.89 8.048a3.97 3.97 0 0 0-2.951-2.94A4.005 4.005 0 0 0 8 9.087l.009.008 1.878.022.112-.116A2 2 0 0 1 12 7c1.103 0 2 .897 2 2s-.897 2-2 2h.008a1 1 0 0 0-.998.987v2.014a1 1 0 1 0 2 0v-.782c0-.217.145-.399.349-.472a3.99 3.99 0 0 0 2.53-4.699"/></g></svg>`
    }, props, {
        newIcon: _questionCircle.default
    }));
QuestionIcon.displayName = 'QuestionIcon';
var _default = exports.default = QuestionIcon;

},{"f3348fa8fa86a5c":"jMk1U","b008db407cd7f7c7":"iJoYh","9b7cd28aff1c1aa7":"wpPOD"}],"wpPOD":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::10497e41582acb6b3539681c38bd8368>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("2cc12bc01f319eaa"));
var _UNSAFE_baseNew = _interopRequireDefault(require("f7a66bb89109690e"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * ⚠️ EXPERIMENTAL ⚠️ - New icons are in alpha - and subject to change or removal in future minor or patch releases.
 * Please reach out in #icon-contributions before using these in production.
 *
 * Icon: "QuestionCircle".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Multi purpose - Known uses: help, tip.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const QuestionCircleIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_UNSAFE_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path stroke="currentcolor" stroke-linejoin="round" stroke-width="1.5" d="M6.25 6C6.25 5 7 4.25 8 4.25S9.75 5 9.75 6C9.75 7.5 8 7.5 8 8.75v.75M15.25 8A7.25 7.25 0 1 1 .75 8a7.25 7.25 0 0 1 14.5 0Z"/><path fill="currentcolor" d="M9 11.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>`
    }, props));
QuestionCircleIcon.displayName = 'QuestionCircleIcon';
var _default = exports.default = QuestionCircleIcon;

},{"2cc12bc01f319eaa":"jMk1U","f7a66bb89109690e":"4oZdW"}],"hmaM5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppSwitcher", ()=>(0, _appSwitcher.AppSwitcher));
parcelHelpers.export(exports, "NavLogo", ()=>(0, _navLogo.NavLogo));
parcelHelpers.export(exports, "AppLogo", ()=>(0, _appLogo.AppLogo));
parcelHelpers.export(exports, "Search", ()=>(0, _search.Search));
parcelHelpers.export(exports, "ChatButton", ()=>(0, _chatButton.ChatButton));
parcelHelpers.export(exports, "EndItem", ()=>(0, _endItem.EndItem));
parcelHelpers.export(exports, "Notifications", ()=>(0, _notifications.Notifications));
parcelHelpers.export(exports, "CreateButton", ()=>(0, _createButton.CreateButton));
parcelHelpers.export(exports, "Help", ()=>(0, _help.Help));
parcelHelpers.export(exports, "Profile", ()=>(0, _profile.Profile));
parcelHelpers.export(exports, "Settings", ()=>(0, _settings.Settings));
parcelHelpers.export(exports, "LogIn", ()=>(0, _logIn.LogIn));
parcelHelpers.export(exports, "CustomTitle", ()=>(0, _customTitle.CustomTitle));
parcelHelpers.export(exports, "MenuListItem", ()=>(0, _menuListItem.MenuListItem));
var _appSwitcher = require("../../ui/top-nav-items/app-switcher");
var _navLogo = require("../../ui/top-nav-items/nav-logo/nav-logo");
var _appLogo = require("../../ui/top-nav-items/nav-logo/app-logo");
var _search = require("../../ui/top-nav-items/search");
var _chatButton = require("../../ui/top-nav-items/chat-button");
var _endItem = require("../../ui/top-nav-items/end-item");
var _notifications = require("../../ui/top-nav-items/notifications");
var _createButton = require("../../ui/top-nav-items/create-button");
var _help = require("../../ui/top-nav-items/help");
var _profile = require("../../ui/top-nav-items/profile");
var _settings = require("../../ui/top-nav-items/settings");
var _logIn = require("../../ui/top-nav-items/log-in");
var _customTitle = require("../../ui/top-nav-items/custom-title");
var _menuListItem = require("../../ui/menu-item/menu-list-item");

},{"../../ui/top-nav-items/app-switcher":false,"../../ui/top-nav-items/nav-logo/nav-logo":false,"../../ui/top-nav-items/nav-logo/app-logo":false,"../../ui/top-nav-items/search":"1J2c3","../../ui/top-nav-items/chat-button":false,"../../ui/top-nav-items/end-item":false,"../../ui/top-nav-items/notifications":false,"../../ui/top-nav-items/create-button":"fmgsv","../../ui/top-nav-items/help":false,"../../ui/top-nav-items/profile":false,"../../ui/top-nav-items/settings":false,"../../ui/top-nav-items/log-in":false,"../../ui/top-nav-items/custom-title":false,"../../ui/menu-item/menu-list-item":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1J2c3":[function(require,module,exports,__globalThis) {
/* search.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Search", ()=>Search);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _search = require("@atlaskit/icon/core/search");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _compiled = require("@atlaskit/primitives/compiled");
var _migration = require("./themed/migration");
var styles = {
    root: "_2rkoiti9 _1rjcze3t _18zr12x7 _yv0e1mfv _4cvr1h6o _bfhk1j9a _vchhusvi _80om1kdv _1e0cglyw _4t3izwfg _p12f1kvu _1bsb1osq _irr31d5g _1di6r01l _114b11p5",
    buttonText: "_yyhyjvu9 _1ii7kb7n",
    iconBefore: "_yyhykb7n _1ii7kb7n _1e0c1txw",
    elemAfter: "_yyhy11wp _1ii7kb7n _1e0c1txw"
};
var Search = function Search(_ref) {
    var label = _ref.label, onClick = _ref.onClick, _ref$iconBefore = _ref.iconBefore, IconBefore = _ref$iconBefore === void 0 ? (0, _searchDefault.default) : _ref$iconBefore, elemAfter = _ref.elemAfter, interactionName = _ref.interactionName, ariaHaspopup = _ref['aria-haspopup'];
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Fragment), null, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Pressable), {
        style: {
            // To win the specificity war against Emotion we move this into inline styles
            // When Emotion has been stripped from the Design System move this to Compiled.
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
            cursor: 'text',
            border: "var(--ds-border-width, 1px)".concat(" solid ", "var(--ds-border-input, #8590A2)")
        },
        onClick: onClick,
        xcss: styles.root,
        interactionName: interactionName,
        "aria-haspopup": ariaHaspopup
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            styles.iconBefore
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(IconBefore, {
        color: "var(--ds-icon-subtle, #626F86)",
        spacing: "spacious",
        label: ""
    })), /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        className: (0, _runtime.ax)([
            styles.buttonText
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Text), {
        color: "color.text.subtlest"
    }, label)), elemAfter && /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            styles.elemAfter
        ])
    }, elemAfter)), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Show), {
        below: "xs"
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _migration.IconButton), {
        label: label,
        appearance: "subtle",
        icon: (0, _searchDefault.default),
        onClick: onClick,
        interactionName: interactionName,
        "aria-haspopup": ariaHaspopup
    })));
};

},{"@compiled/react/runtime":"1aoKn","react":"jMk1U","@atlaskit/icon/core/search":"i6uQW","@atlaskit/primitives/compiled":"29Id4","./themed/migration":"5ACd9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1aoKn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"6ZRjg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6ZRjg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"o6E23","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"o6E23":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i6uQW":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::17c2ea3862f75cebada30b1178c22cdb>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("73a56c97d2341960"));
var _baseNew = _interopRequireDefault(require("1d26d425e9d06dad"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Search".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Single purpose - Reserved for searching objects.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const SearchIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M7 2.5a4.5 4.5 0 1 0 0 9 4.5 4.5 0 0 0 0-9M1 7a6 6 0 1 1 10.74 3.68l3.29 3.29-1.06 1.06-3.29-3.29A6 6 0 0 1 1 7" clip-rule="evenodd"/>`
    }, props));
SearchIcon.displayName = 'SearchIcon';
var _default = exports.default = SearchIcon;

},{"73a56c97d2341960":"jMk1U","1d26d425e9d06dad":"7XBhL"}],"7XBhL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconNewDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconNew.Icon));
var _iconNew = require("../components/icon-new");
var _iconNewDefault = parcelHelpers.interopDefault(_iconNew);

},{"../components/icon-new":"iwI8F","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iwI8F":[function(require,module,exports,__globalThis) {
/* icon-new.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
/**
 * We are hiding this props from consumers as it's reserved
 * for use by Icon Tile.
 */ var svgStyles = null;
var iconStyles = null;
var utilityIconStyles = null;
var scaleStyles = null;
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var scaleSize = null;
var coreSizeMedium = {
    none: "_1bsbpxbi _4t3ipxbi",
    compact: "_1bsb1ejb _4t3i1ejb",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var coreSizeSmall = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var utilSizes = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var baseSizeMap = {
    core: 16,
    utility: 12
};
var paddingMap = {
    core: {
        medium: {
            none: 0,
            compact: 4,
            spacious: 4
        },
        small: {
            none: 0,
            compact: 2.66,
            spacious: 8
        }
    },
    utility: {
        medium: {
            none: 0,
            compact: 2,
            spacious: 6
        },
        small: {
            none: 0,
            compact: 2,
            spacious: 6
        }
    }
};
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _props$type;
    var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing;
    var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
    } : undefined;
    // Fall back to old icon
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    if (FallbackIcon && !(0, _platformFeatureFlags.fg)('platform-visual-refresh-icons')) // parse out unnecessary props
    return /*#__PURE__*/ _react.createElement(FallbackIcon, {
        primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
        secondaryColor: LEGACY_secondaryColor,
        size: LEGACY_size,
        label: label,
        testId: testId,
        UNSAFE_margin: LEGACY_margin
    });
    var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core';
    var size = 'size' in props && props.size !== undefined && // This prevents invalid sizes being passed in, which is required
    // for handling unsupported legacy icon sizes which can
    // cause errors.
    (props.size === 'small' || props.size === 'medium') ? props.size : 'medium';
    var baseSize = baseSizeMap[type];
    var viewBoxPadding = paddingMap[type][size][spacing];
    var viewBoxSize = baseSize + 2 * viewBoxPadding;
    return /*#__PURE__*/ _react.createElement("span", {
        "data-testid": testId,
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            color: color
        },
        className: (0, _runtime.ax)([
            "_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9",
            "_12va1onz _jcxd1r8n",
            shouldScale && "_1bsb1kw7 _4t3i1kw7",
            (type === 'utility' || size === 'small') && "_vwz4utpp"
        ])
    }, /*#__PURE__*/ _react.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML: dangerouslySetInnerHTML,
        className: (0, _runtime.ax)([
            "_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31",
            shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === 'utility' ? utilSizes[spacing] : size === 'small' ? coreSizeSmall[spacing] : coreSizeMedium[spacing]
        ])
    }));
});
exports.default = Icon;

},{"react":"jMk1U","@compiled/react/runtime":"1aoKn","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3H8e6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * This creates a boolean flag resolver that allows calls to `getBooleanFF` inside of Platform components to use a Product's
 * feature flag client and LD project, rather than installing a feature flag client of their own, or passing those flags in via props.
 *
 * @param flagResolver
 */ parcelHelpers.export(exports, "setBooleanFeatureFlagResolver", ()=>setBooleanFeatureFlagResolver);
/**
 * Returns the value of a feature flag. If the flag does not resolve, it returns the "false" as a default value.
 *
 * @deprecated Use {@link fg} function instead.
 * @param name
 */ parcelHelpers.export(exports, "getBooleanFF", ()=>getBooleanFF);
/**
 * Returns the value of a feature flag. If the flag does not resolve, it returns the "false" as a default value.
 *
 * @param name
 */ parcelHelpers.export(exports, "fg", ()=>fg);
var _resolvers = require("./resolvers");
function setBooleanFeatureFlagResolver(flagResolver) {
    (0, _resolvers.setBooleanResolver)(flagResolver);
}
function getBooleanFF(name) {
    return (0, _resolvers.resolveBooleanFlag)(name);
}
function fg(name) {
    return (0, _resolvers.resolveBooleanFlag)(name);
}

},{"./resolvers":"eNiO2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eNiO2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PFF_GLOBAL_KEY", ()=>PFF_GLOBAL_KEY);
parcelHelpers.export(exports, "setBooleanResolver", ()=>setBooleanResolver);
parcelHelpers.export(exports, "resolveBooleanFlag", ()=>resolveBooleanFlag);
var _featureGateJsClient = require("@atlaskit/feature-gate-js-client");
var _featureGateJsClientDefault = parcelHelpers.interopDefault(_featureGateJsClient);
var _debug = require("./debug");
var pkgName = '@atlaskit/platform-feature-flags';
var PFF_GLOBAL_KEY = '__PLATFORM_FEATURE_FLAGS__';
var hasProcessEnv = false;
// FF global overrides can be configured by test runners or Storybook
var ENV_ENABLE_PLATFORM_FF = hasProcessEnv ? // Use global "process" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin
false : false;
// STORYBOOK_ENABLE_PLATFORM_FF is included as storybook only allows env vars prefixed with STORYBOOK
// https://github.com/storybookjs/storybook/issues/12270
var ENV_STORYBOOK_ENABLE_PLATFORM_FF = hasProcessEnv ? // Use global "process" variable and process.env['FLAG_NAME'] syntax, so it can be replaced by webpack DefinePlugin
false : false;
var ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE = ENV_ENABLE_PLATFORM_FF || ENV_STORYBOOK_ENABLE_PLATFORM_FF;
var DEFAULT_PFF_GLOBAL = {
    booleanResolver: undefined
};
var globalVar = typeof window !== 'undefined' ? window : globalThis;
globalVar[PFF_GLOBAL_KEY] = globalVar[PFF_GLOBAL_KEY] || DEFAULT_PFF_GLOBAL;
function setBooleanResolver(resolver) {
    globalVar[PFF_GLOBAL_KEY].booleanResolver = resolver;
}
function resolveBooleanFlag(flagKey) {
    if (ENABLE_GLOBAL_PLATFORM_FF_OVERRIDE) {
        (0, _debug.debug)('[%s]: The feature flags were enabled while running tests. The flag "%s" will be always enabled.', pkgName, flagKey);
        return true;
    }
    try {
        var _globalVar$PFF_GLOBAL, _globalVar$PFF_GLOBAL2, _globalVar$PFF_GLOBAL3;
        // booleanResolver will be empty for products like Trello, Elevate, Recruit etc.
        // Currently only Confluence, Jira and Bitbucket has set it.
        if (((_globalVar$PFF_GLOBAL = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL === void 0 ? void 0 : _globalVar$PFF_GLOBAL.booleanResolver) === undefined || ((_globalVar$PFF_GLOBAL2 = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL2 === void 0 ? void 0 : _globalVar$PFF_GLOBAL2.booleanResolver) === null) // eslint-disable-next-line @atlaskit/platform/use-recommended-utils
        return (0, _featureGateJsClientDefault.default).checkGate(flagKey);
        var result = (_globalVar$PFF_GLOBAL3 = globalVar[PFF_GLOBAL_KEY]) === null || _globalVar$PFF_GLOBAL3 === void 0 ? void 0 : _globalVar$PFF_GLOBAL3.booleanResolver(flagKey);
        if (typeof result !== 'boolean') {
            // eslint-disable-next-line no-console
            console.warn("".concat(flagKey, " resolved to a non-boolean value, returning false for safety"));
            return false;
        }
        return result;
    } catch (e) {
        return false;
    }
}

},{"@atlaskit/feature-gate-js-client":"idJRA","./debug":"kBi3H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"idJRA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _featureGatesDefault.default));
parcelHelpers.export(exports, "FeatureGateEnvironment", ()=>(0, _featureGates.FeatureGateEnvironment));
parcelHelpers.export(exports, "PerimeterType", ()=>(0, _featureGates.PerimeterType));
parcelHelpers.export(exports, "CLIENT_VERSION", ()=>(0, _featureGates.CLIENT_VERSION));
parcelHelpers.export(exports, "DynamicConfig", ()=>(0, _dynamicConfig.DynamicConfig));
parcelHelpers.export(exports, "Layer", ()=>(0, _layer.Layer));
parcelHelpers.export(exports, "EvaluationReason", ()=>(0, _types.EvaluationReason));
var _featureGates = require("./client/FeatureGates");
var _featureGatesDefault = parcelHelpers.interopDefault(_featureGates);
var _dynamicConfig = require("./client/compat/DynamicConfig");
var _layer = require("./client/compat/Layer");
var _types = require("./client/compat/types");

},{"./client/FeatureGates":"io8KB","./client/compat/DynamicConfig":false,"./client/compat/Layer":false,"./client/compat/types":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"io8KB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EvaluationReason", ()=>(0, _types.EvaluationReason));
parcelHelpers.export(exports, "DynamicConfig", ()=>(0, _dynamicConfig.DynamicConfig));
parcelHelpers.export(exports, "FeatureGateEnvironment", ()=>(0, _types1.FeatureGateEnvironment));
parcelHelpers.export(exports, "PerimeterType", ()=>(0, _types1.PerimeterType));
parcelHelpers.export(exports, "CLIENT_VERSION", ()=>(0, _version.CLIENT_VERSION));
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _client = require("./Client");
var _version = require("./version");
var _types = require("./compat/types");
var _dynamicConfig = require("./compat/DynamicConfig");
var _types1 = require("./types");
var _FeatureGates;
/**
 * Access the FeatureGates object via the default export.
 * ```ts
 * import FeatureGates from '@atlaskit/feature-gate-js-client';
 * ```
 */ var FeatureGates = /*#__PURE__*/ function() {
    function FeatureGates() {
        (0, _classCallCheckDefault.default)(this, FeatureGates);
    }
    return (0, _createClassDefault.default)(FeatureGates, null, [
        {
            key: "isGateExists",
            value: function isGateExists(gateName) {
                return this.client.isGateExist(gateName);
            }
        },
        {
            key: "isExperimentExists",
            value: function isExperimentExists(experimentName) {
                return this.client.isExperimentExist(experimentName);
            }
        }
    ]);
}();
_FeatureGates = FeatureGates;
(0, _definePropertyDefault.default)(FeatureGates, "client", new (0, _client.Client)());
(0, _definePropertyDefault.default)(FeatureGates, "hasCheckGateErrorOccurred", false);
(0, _definePropertyDefault.default)(FeatureGates, "hasGetExperimentValueErrorOccurred", false);
(0, _definePropertyDefault.default)(FeatureGates, "checkGate", function(gateName, options) {
    try {
        // Check if the CRITERION override mechanism is available
        if (typeof window !== 'undefined' && window.__CRITERION__ && typeof window.__CRITERION__.getFeatureFlagOverride === 'function') {
            // Attempt to retrieve an override value for the feature gate
            var overrideValue = window.__CRITERION__.getFeatureFlagOverride(gateName);
            // If an override value is found, return it immediately
            if (overrideValue !== undefined) return overrideValue;
        }
    } catch (error) {
        // Log the first occurrence of the error
        if (!_FeatureGates.hasCheckGateErrorOccurred) {
            // eslint-disable-next-line no-console
            console.warn({
                msg: 'An error has occurred checking the feature gate from criterion override. Only the first occurrence of this error is logged.',
                gateName: gateName,
                error: error
            });
            _FeatureGates.hasCheckGateErrorOccurred = true;
        }
    }
    // Proceed with the main logic if no override is found
    return _FeatureGates.client.checkGate(gateName, options);
});
(0, _definePropertyDefault.default)(FeatureGates, "getExperimentValue", function(experimentName, parameterName, defaultValue, options) {
    try {
        // Check if the CRITERION override mechanism is available
        if (typeof window !== 'undefined' && window.__CRITERION__ && typeof window.__CRITERION__.getExperimentValueOverride === 'function') {
            var overrideValue = window.__CRITERION__.getExperimentValueOverride(experimentName, parameterName);
            if (overrideValue !== undefined && overrideValue !== null) return overrideValue;
        }
    } catch (error) {
        // Log the first occurrence of the error
        if (!_FeatureGates.hasGetExperimentValueErrorOccurred) {
            // eslint-disable-next-line no-console
            console.warn({
                msg: 'An error has occurred getting the experiment value from criterion override. Only the first occurrence of this error is logged.',
                experimentName: experimentName,
                defaultValue: defaultValue,
                options: options,
                error: error
            });
            _FeatureGates.hasGetExperimentValueErrorOccurred = true;
        }
        return defaultValue;
    }
    // Proceed with the main logic if no override is found
    return _FeatureGates.client.getExperimentValue(experimentName, parameterName, defaultValue, options);
});
(0, _definePropertyDefault.default)(FeatureGates, "initializeCalled", _FeatureGates.client.initializeCalled.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "initializeCompleted", _FeatureGates.client.initializeCompleted.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "initialize", _FeatureGates.client.initialize.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "initializeWithProvider", _FeatureGates.client.initializeWithProvider.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "initializeFromValues", _FeatureGates.client.initializeFromValues.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "manuallyLogGateExposure", _FeatureGates.client.manuallyLogGateExposure.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "getExperiment", _FeatureGates.client.getExperiment.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "manuallyLogExperimentExposure", _FeatureGates.client.manuallyLogExperimentExposure.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "manuallyLogLayerExposure", _FeatureGates.client.manuallyLogLayerExposure.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "shutdownStatsig", _FeatureGates.client.shutdownStatsig.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "overrideGate", _FeatureGates.client.overrideGate.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "clearGateOverride", _FeatureGates.client.clearGateOverride.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "overrideConfig", _FeatureGates.client.overrideConfig.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "clearConfigOverride", _FeatureGates.client.clearConfigOverride.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "setOverrides", _FeatureGates.client.setOverrides.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "getOverrides", _FeatureGates.client.getOverrides.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "clearAllOverrides", _FeatureGates.client.clearAllOverrides.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "isCurrentUser", _FeatureGates.client.isCurrentUser.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "onGateUpdated", _FeatureGates.client.onGateUpdated.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "onExperimentValueUpdated", _FeatureGates.client.onExperimentValueUpdated.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "onAnyUpdated", _FeatureGates.client.onAnyUpdated.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "updateUser", _FeatureGates.client.updateUser.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "updateUserWithProvider", _FeatureGates.client.updateUserWithProvider.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "updateUserWithValues", _FeatureGates.client.updateUserWithValues.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "getPackageVersion", _FeatureGates.client.getPackageVersion.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "getLayer", _FeatureGates.client.getLayer.bind(_FeatureGates.client));
(0, _definePropertyDefault.default)(FeatureGates, "getLayerValue", _FeatureGates.client.getLayerValue.bind(_FeatureGates.client));
var boundFGJS = FeatureGates;
// This makes it possible to get a reference to the FeatureGates client at runtime.
// This is important for overriding values in Cypress tests, as there needs to be a
// way to get the exact instance for a window in order to mock some of its methods.
if (typeof window !== 'undefined') {
    if (window.__FEATUREGATES_JS__ === undefined) window.__FEATUREGATES_JS__ = FeatureGates;
    else {
        var _boundFGJS, _boundFGJS$getPackage;
        boundFGJS = window.__FEATUREGATES_JS__;
        var boundVersion = ((_boundFGJS = boundFGJS) === null || _boundFGJS === void 0 || (_boundFGJS$getPackage = _boundFGJS.getPackageVersion) === null || _boundFGJS$getPackage === void 0 ? void 0 : _boundFGJS$getPackage.call(_boundFGJS)) || '4.10.0 or earlier';
        if (boundVersion !== (0, _version.CLIENT_VERSION)) {
            var message = "Multiple versions of FeatureGateClients found on the current page.\n      The currently bound version is ".concat(boundVersion, " when module version ").concat((0, _version.CLIENT_VERSION), " was loading.");
            // eslint-disable-next-line no-console
            console.warn(message);
        }
    }
}
/**
 * @property {FeatureGates} FeatureGate default export
 */ exports.default = boundFGJS;

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/defineProperty":"azbUC","./Client":"jLpKv","./version":"fJ9fV","./compat/types":false,"./compat/DynamicConfig":false,"./types":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fbbZA":[function(require,module,exports,__globalThis) {
function _classCallCheck(a, n) {
    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"lr6gv":[function(require,module,exports,__globalThis) {
var toPropertyKey = require("b03a9e1e96a7e901");
function _defineProperties(e, r) {
    for(var t = 0; t < r.length; t++){
        var o = r[t];
        o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);
    }
}
function _createClass(e, r, t) {
    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"b03a9e1e96a7e901":"9dbMY"}],"jLpKv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Client", ()=>Client);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _asyncToGenerator = require("@babel/runtime/helpers/asyncToGenerator");
var _asyncToGeneratorDefault = parcelHelpers.interopDefault(_asyncToGenerator);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _regenerator = require("@babel/runtime/regenerator");
var _regeneratorDefault = parcelHelpers.interopDefault(_regenerator);
var _jsClient = require("@statsig/js-client");
var _subscriptions = require("../subscriptions");
var _subscriptionsDefault = parcelHelpers.interopDefault(_subscriptions);
var _dynamicConfig = require("./compat/DynamicConfig");
var _layer = require("./compat/Layer");
var _types = require("./compat/types");
var _fetcher = require("./fetcher");
var _fetcherDefault = parcelHelpers.interopDefault(_fetcher);
var _noFetchDataAdapter = require("./NoFetchDataAdapter");
var _persistentOverrideAdapter = require("./PersistentOverrideAdapter");
var _types1 = require("./types");
var _utils = require("./utils");
var _version = require("./version");
var _excluded = [
    "sdkKey",
    "environment",
    "updateUserCompletionCallback",
    "perimeter"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var DEFAULT_CLIENT_KEY = 'client-default-key';
// default event logging api is Atlassian proxy rather than Statsig's domain, to avoid ad blockers
var DEFAULT_EVENT_LOGGING_API = 'https://xp.atlassian.com/v1/rgstr';
var Client = /*#__PURE__*/ function() {
    function Client() {
        var _this = this;
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _ref$localStorageKey = _ref.localStorageKey, localStorageKey = _ref$localStorageKey === void 0 ? (0, _persistentOverrideAdapter.LOCAL_STORAGE_KEY) : _ref$localStorageKey, overrideAdapter = _ref.overrideAdapter;
        (0, _classCallCheckDefault.default)(this, Client);
        (0, _definePropertyDefault.default)(this, "initPromise", null);
        /** True if an initialize method was called and completed successfully. */ (0, _definePropertyDefault.default)(this, "initCompleted", false);
        /**
     * True if an initialize method was called and completed, meaning the client is now usable.
     * However if there was an error during initialization it may have initialized with default
     * values. Use {@link initCompleted} to check for this.
     */ (0, _definePropertyDefault.default)(this, "initWithDefaults", false);
        (0, _definePropertyDefault.default)(this, "hasCheckGateErrorOccurred", false);
        (0, _definePropertyDefault.default)(this, "hasGetExperimentErrorOccurred", false);
        (0, _definePropertyDefault.default)(this, "hasGetExperimentValueErrorOccurred", false);
        (0, _definePropertyDefault.default)(this, "hasGetLayerErrorOccurred", false);
        (0, _definePropertyDefault.default)(this, "hasGetLayerValueErrorOccurred", false);
        (0, _definePropertyDefault.default)(this, "subscriptions", new (0, _subscriptionsDefault.default)());
        (0, _definePropertyDefault.default)(this, "dataAdapter", new (0, _noFetchDataAdapter.NoFetchDataAdapter)());
        /**
     * Call this if modifying the values being served by the Statsig library since it has its own
     * memoization cache which will not be updated if the values are changed outside of the library.
     */ (0, _definePropertyDefault.default)(this, "statsigValuesUpdated", function() {
            if (_this.user) // Trigger a reset of the memoize cache
            _this.statsigClient.updateUserSync(_this.user, {
                disableBackgroundCacheRefresh: true
            });
            _this.subscriptions.anyUpdated();
        });
        this.overrideAdapter = overrideAdapter || new (0, _persistentOverrideAdapter.PersistentOverrideAdapter)(localStorageKey);
    }
    /**
   * @description
   * This method initializes the client using a network call to fetch the bootstrap values.
   * If the client is inialized with an `analyticsWebClient`, it will send an operational event
   * to GASv3 with the following attributes:
   * - targetApp: the target app of the client
   * - clientVersion: the version of the client
   * - success: whether the initialization was successful
   * - startTime: the time when the initialization started
   * - totalTime: the total time it took to initialize the client
   * - apiKey: the api key used to initialize the client
   * @param clientOptions {ClientOptions}
   * @param identifiers {Identifiers}
   * @param customAttributes {CustomAttributes}
   * @returns {Promise<void>}
   */ return (0, _createClassDefault.default)(Client, [
        {
            key: "initialize",
            value: function() {
                var _initialize = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee(clientOptions, identifiers, customAttributes) {
                    var _this2 = this;
                    var clientOptionsWithDefaults, startTime;
                    return (0, _regeneratorDefault.default).wrap(function _callee$(_context) {
                        while(true)switch(_context.prev = _context.next){
                            case 0:
                                clientOptionsWithDefaults = (0, _utils.getOptionsWithDefaults)(clientOptions);
                                if (!this.initPromise) {
                                    _context.next = 4;
                                    break;
                                }
                                if (!(0, _utils.shallowEquals)(clientOptionsWithDefaults, this.initOptions)) // eslint-disable-next-line no-console
                                console.warn('Feature Gates client already initialized with different options. New options were not applied.');
                                return _context.abrupt("return", this.initPromise);
                            case 4:
                                startTime = performance.now();
                                this.initOptions = clientOptionsWithDefaults;
                                this.initPromise = this.init(clientOptionsWithDefaults, identifiers, customAttributes).then(function() {
                                    _this2.initCompleted = true;
                                    _this2.initWithDefaults = true;
                                }).finally(function() {
                                    var endTime = performance.now();
                                    var totalTime = endTime - startTime;
                                    _this2.fireClientEvent(startTime, totalTime, 'initialize', _this2.initCompleted, clientOptionsWithDefaults.apiKey);
                                });
                                return _context.abrupt("return", this.initPromise);
                            case 8:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee, this);
                }));
                function initialize(_x, _x2, _x3) {
                    return _initialize.apply(this, arguments);
                }
                return initialize;
            }()
        },
        {
            key: "initializeWithProvider",
            value: function() {
                var _initializeWithProvider = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee2(clientOptions, provider, identifiers, customAttributes) {
                    var _this3 = this;
                    var clientOptionsWithDefaults, startTime;
                    return (0, _regeneratorDefault.default).wrap(function _callee2$(_context2) {
                        while(true)switch(_context2.prev = _context2.next){
                            case 0:
                                clientOptionsWithDefaults = (0, _utils.getOptionsWithDefaults)(clientOptions);
                                if (!this.initPromise) {
                                    _context2.next = 4;
                                    break;
                                }
                                if (!(0, _utils.shallowEquals)(clientOptionsWithDefaults, this.initOptions)) // eslint-disable-next-line no-console
                                console.warn('Feature Gates client already initialized with different options. New options were not applied.');
                                return _context2.abrupt("return", this.initPromise);
                            case 4:
                                startTime = performance.now();
                                this.initOptions = clientOptionsWithDefaults;
                                this.provider = provider;
                                this.provider.setClientVersion((0, _version.CLIENT_VERSION));
                                if (this.provider.setApplyUpdateCallback) this.provider.setApplyUpdateCallback(this.applyUpdateCallback.bind(this));
                                this.initPromise = this.initWithProvider(clientOptionsWithDefaults, provider, identifiers, customAttributes).then(function() {
                                    _this3.initCompleted = true;
                                    _this3.initWithDefaults = true;
                                }).finally(function() {
                                    var endTime = performance.now();
                                    var totalTime = endTime - startTime;
                                    _this3.fireClientEvent(startTime, totalTime, 'initializeWithProvider', _this3.initCompleted, provider.getApiKey ? provider.getApiKey() : undefined);
                                });
                                return _context2.abrupt("return", this.initPromise);
                            case 11:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this);
                }));
                function initializeWithProvider(_x4, _x5, _x6, _x7) {
                    return _initializeWithProvider.apply(this, arguments);
                }
                return initializeWithProvider;
            }()
        },
        {
            key: "applyUpdateCallback",
            value: function applyUpdateCallback(experimentsResult) {
                try {
                    if (this.initCompleted || this.initWithDefaults) {
                        this.assertInitialized(this.statsigClient);
                        this.dataAdapter.setBootstrapData(experimentsResult.experimentValues);
                        this.dataAdapter.setData(JSON.stringify(experimentsResult.experimentValues));
                        this.statsigValuesUpdated();
                    }
                } catch (error) {
                    // eslint-disable-next-line no-console
                    console.warn('Error when attempting to apply update', error);
                }
            }
        },
        {
            key: "fireClientEvent",
            value: function fireClientEvent(startTime, totalTime, action, success) {
                var _analyticsWebClient, _this4 = this;
                var apiKey = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;
                (_analyticsWebClient = this.initOptions.analyticsWebClient) === null || _analyticsWebClient === void 0 || _analyticsWebClient.then(function(analyticsWebClient) {
                    var attributes = _objectSpread({
                        targetApp: _this4.initOptions.targetApp,
                        clientVersion: (0, _version.CLIENT_VERSION),
                        success: success,
                        startTime: startTime,
                        totalTime: totalTime
                    }, apiKey && {
                        apiKey: apiKey
                    });
                    analyticsWebClient.sendOperationalEvent({
                        action: action,
                        actionSubject: 'featureGatesClient',
                        attributes: attributes,
                        tags: [
                            'measurement'
                        ],
                        source: '@atlaskit/feature-gate-js-client'
                    });
                }).catch(function(err) {
                    if (_this4.initOptions.environment !== (0, _types1.FeatureGateEnvironment).Production) // eslint-disable-next-line no-console
                    console.error('Analytics web client promise did not resolve', err);
                });
            }
        },
        {
            key: "initializeFromValues",
            value: function() {
                var _initializeFromValues = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee3(clientOptions, identifiers, customAttributes) {
                    var _this5 = this;
                    var initializeValues, clientOptionsWithDefaults, startTime, _args3 = arguments;
                    return (0, _regeneratorDefault.default).wrap(function _callee3$(_context3) {
                        while(true)switch(_context3.prev = _context3.next){
                            case 0:
                                initializeValues = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};
                                clientOptionsWithDefaults = (0, _utils.getOptionsWithDefaults)(clientOptions);
                                if (!this.initPromise) {
                                    _context3.next = 5;
                                    break;
                                }
                                if (!(0, _utils.shallowEquals)(clientOptionsWithDefaults, this.initOptions)) // eslint-disable-next-line no-console
                                console.warn('Feature Gates client already initialized with different options. New options were not applied.');
                                return _context3.abrupt("return", this.initPromise);
                            case 5:
                                // This makes sure the new Statsig client behaves like the old when bootstrap data is
                                // passed, and `has_updates` isn't specified (which happens a lot in product integration tests).
                                if (!Object.prototype.hasOwnProperty.call(initializeValues, 'has_updates')) initializeValues['has_updates'] = true;
                                startTime = performance.now();
                                this.initOptions = clientOptionsWithDefaults;
                                this.initPromise = this.initFromValues(clientOptionsWithDefaults, identifiers, customAttributes, initializeValues).then(function() {
                                    _this5.initCompleted = true;
                                    _this5.initWithDefaults = true;
                                }).finally(function() {
                                    var endTime = performance.now();
                                    var totalTime = endTime - startTime;
                                    _this5.fireClientEvent(startTime, totalTime, 'initializeFromValues', _this5.initCompleted);
                                });
                                return _context3.abrupt("return", this.initPromise);
                            case 10:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3, this);
                }));
                function initializeFromValues(_x8, _x9, _x0) {
                    return _initializeFromValues.apply(this, arguments);
                }
                return initializeFromValues;
            }()
        },
        {
            key: "assertInitialized",
            value: function assertInitialized(statsigClient) {
                if (!statsigClient) throw new Error('Client must be initialized before using this method');
            }
        },
        {
            key: "updateUser",
            value: function() {
                var _updateUser = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee4(fetchOptions, identifiers, customAttributes) {
                    var fetchOptionsWithDefaults, initializeValuesProducer;
                    return (0, _regeneratorDefault.default).wrap(function _callee4$(_context4) {
                        while(true)switch(_context4.prev = _context4.next){
                            case 0:
                                this.assertInitialized(this.statsigClient);
                                fetchOptionsWithDefaults = (0, _utils.getOptionsWithDefaults)(fetchOptions);
                                initializeValuesProducer = function initializeValuesProducer() {
                                    return (0, _fetcherDefault.default).fetchExperimentValues(fetchOptionsWithDefaults, identifiers, customAttributes).then(function(_ref2) {
                                        var experimentValues = _ref2.experimentValues, customAttributes = _ref2.customAttributes;
                                        return {
                                            experimentValues: experimentValues,
                                            customAttributesFromFetch: customAttributes
                                        };
                                    });
                                };
                                _context4.next = 5;
                                return this.updateUserUsingInitializeValuesProducer(initializeValuesProducer, identifiers, customAttributes);
                            case 5:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4, this);
                }));
                function updateUser(_x1, _x10, _x11) {
                    return _updateUser.apply(this, arguments);
                }
                return updateUser;
            }()
        },
        {
            key: "updateUserWithProvider",
            value: function() {
                var _updateUserWithProvider = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee5(identifiers, customAttributes) {
                    var _this6 = this;
                    return (0, _regeneratorDefault.default).wrap(function _callee5$(_context5) {
                        while(true)switch(_context5.prev = _context5.next){
                            case 0:
                                this.assertInitialized(this.statsigClient);
                                if (this.provider) {
                                    _context5.next = 3;
                                    break;
                                }
                                throw new Error('Cannot update user using provider as the client was not initialised with a provider');
                            case 3:
                                _context5.next = 5;
                                return this.provider.setProfile(this.initOptions, identifiers, customAttributes);
                            case 5:
                                _context5.next = 7;
                                return this.updateUserUsingInitializeValuesProducer(function() {
                                    return _this6.provider.getExperimentValues();
                                }, identifiers, customAttributes);
                            case 7:
                            case "end":
                                return _context5.stop();
                        }
                    }, _callee5, this);
                }));
                function updateUserWithProvider(_x12, _x13) {
                    return _updateUserWithProvider.apply(this, arguments);
                }
                return updateUserWithProvider;
            }()
        },
        {
            key: "updateUserWithValues",
            value: function() {
                var _updateUserWithValues = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee6(identifiers, customAttributes) {
                    var initializeValues, initializeValuesProducer, _args6 = arguments;
                    return (0, _regeneratorDefault.default).wrap(function _callee6$(_context6) {
                        while(true)switch(_context6.prev = _context6.next){
                            case 0:
                                initializeValues = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};
                                this.assertInitialized(this.statsigClient);
                                initializeValuesProducer = function initializeValuesProducer() {
                                    return Promise.resolve({
                                        experimentValues: initializeValues,
                                        customAttributesFromFetch: customAttributes
                                    });
                                };
                                _context6.next = 5;
                                return this.updateUserUsingInitializeValuesProducer(initializeValuesProducer, identifiers, customAttributes);
                            case 5:
                            case "end":
                                return _context6.stop();
                        }
                    }, _callee6, this);
                }));
                function updateUserWithValues(_x14, _x15) {
                    return _updateUserWithValues.apply(this, arguments);
                }
                return updateUserWithValues;
            }()
        },
        {
            key: "initializeCalled",
            value: function initializeCalled() {
                return this.initPromise != null;
            }
        },
        {
            key: "initializeCompleted",
            value: function initializeCompleted() {
                return this.initCompleted;
            }
        },
        {
            key: "checkGate",
            value: function checkGate(gateName) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                try {
                    this.assertInitialized(this.statsigClient);
                    var _options$fireGateExpo = options.fireGateExposure, fireGateExposure = _options$fireGateExpo === void 0 ? true : _options$fireGateExpo;
                    return this.statsigClient.checkGate(gateName, {
                        disableExposureLog: !fireGateExposure
                    });
                } catch (error) {
                    // Log the first occurrence of the error
                    if (!this.hasCheckGateErrorOccurred) {
                        // eslint-disable-next-line no-console
                        console.warn({
                            msg: 'An error has occurred checking the feature gate. Only the first occurrence of this error is logged.',
                            gateName: gateName,
                            error: error
                        });
                        this.hasCheckGateErrorOccurred = true;
                    }
                    return false;
                }
            }
        },
        {
            key: "isGateExist",
            value: function isGateExist(gateName) {
                try {
                    this.assertInitialized(this.statsigClient);
                    var gate = this.statsigClient.getFeatureGate(gateName, {
                        disableExposureLog: true
                    });
                    return !gate.details.reason.includes('Unrecognized');
                } catch (error) {
                    // eslint-disable-next-line no-console
                    console.error("Error occurred when trying to check FeatureGate: ".concat(error));
                    // in case of error report true to avoid false positives.
                    return true;
                }
            }
        },
        {
            key: "isExperimentExist",
            value: function isExperimentExist(experimentName) {
                try {
                    this.assertInitialized(this.statsigClient);
                    var config = this.statsigClient.getExperiment(experimentName, {
                        disableExposureLog: true
                    });
                    return !config.details.reason.includes('Unrecognized');
                } catch (error) {
                    // eslint-disable-next-line no-console
                    console.error("Error occurred when trying to check Experiment: ".concat(error));
                    // in case of error report true to avoid false positives.
                    return true;
                }
            }
        },
        {
            key: "manuallyLogGateExposure",
            value: function manuallyLogGateExposure(gateName) {
                this.assertInitialized(this.statsigClient);
                // This is the approach recommended in the docs
                // https://docs.statsig.com/client/javascript-sdk/#manual-exposures-
                this.statsigClient.checkGate(gateName);
            }
        },
        {
            key: "getExperiment",
            value: function getExperiment(experimentName) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                try {
                    this.assertInitialized(this.statsigClient);
                    var _options$fireExperime = options.fireExperimentExposure, fireExperimentExposure = _options$fireExperime === void 0 ? true : _options$fireExperime;
                    return (0, _dynamicConfig.DynamicConfig).fromExperiment(this.statsigClient.getExperiment(experimentName, {
                        disableExposureLog: !fireExperimentExposure
                    }));
                } catch (error) {
                    // Log the first occurrence of the error
                    if (!this.hasGetExperimentErrorOccurred) {
                        // eslint-disable-next-line no-console
                        console.warn({
                            msg: 'An error has occurred getting the experiment. Only the first occurrence of this error is logged.',
                            experimentName: experimentName,
                            error: error
                        });
                        this.hasGetExperimentErrorOccurred = true;
                    }
                    // Return a default value
                    return new (0, _dynamicConfig.DynamicConfig)(experimentName, {}, '', {
                        time: Date.now(),
                        reason: (0, _types.EvaluationReason).Error
                    });
                }
            }
        },
        {
            key: "getExperimentValue",
            value: function getExperimentValue(experimentName, parameterName, defaultValue) {
                var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
                var experiment = this.getExperiment(experimentName, options);
                try {
                    var typeGuard = options.typeGuard;
                    return experiment.get(parameterName, defaultValue, typeGuard);
                } catch (error) {
                    // Log the first occurrence of the error
                    if (!this.hasGetExperimentValueErrorOccurred) {
                        // eslint-disable-next-line no-console
                        console.warn({
                            msg: 'An error has occurred getting the experiment value. Only the first occurrence of this error is logged.',
                            experimentName: experimentName,
                            defaultValue: defaultValue,
                            options: options,
                            error: error
                        });
                        this.hasGetExperimentValueErrorOccurred = true;
                    }
                    return defaultValue;
                }
            }
        },
        {
            key: "manuallyLogExperimentExposure",
            value: function manuallyLogExperimentExposure(experimentName) {
                this.assertInitialized(this.statsigClient);
                // This is the approach recommended in the docs
                // https://docs.statsig.com/client/javascript-sdk/#manual-exposures-
                this.statsigClient.getExperiment(experimentName);
            }
        },
        {
            key: "manuallyLogLayerExposure",
            value: function manuallyLogLayerExposure(layerName, parameterName) {
                var _this$statsigClient$g;
                this.assertInitialized(this.statsigClient);
                // This is the approach recommended in the docs
                // https://docs.statsig.com/client/javascript-sdk/#manual-exposures-
                (_this$statsigClient$g = this.statsigClient.getLayer(layerName)) === null || _this$statsigClient$g === void 0 || _this$statsigClient$g.get(parameterName);
            }
        },
        {
            key: "shutdownStatsig",
            value: function shutdownStatsig() {
                this.assertInitialized(this.statsigClient);
                this.statsigClient.shutdown();
            }
        },
        {
            key: "overrideGate",
            value: function overrideGate(gateName, value) {
                this.overrideAdapter.overrideGate(gateName, value);
                // Trigger a reset of the memoized gate value
                if (this.user) {
                    var _this$statsigClient;
                    (_this$statsigClient = this.statsigClient) === null || _this$statsigClient === void 0 || _this$statsigClient.updateUserSync(this.user, {
                        disableBackgroundCacheRefresh: true
                    });
                }
                this.statsigValuesUpdated();
            }
        },
        {
            key: "clearGateOverride",
            value: function clearGateOverride(gateName) {
                this.overrideAdapter.removeGateOverride(gateName);
                this.statsigValuesUpdated();
            }
        },
        {
            key: "overrideConfig",
            value: function overrideConfig(experimentName, values) {
                this.overrideAdapter.overrideDynamicConfig(experimentName, values);
                this.statsigValuesUpdated();
            }
        },
        {
            key: "clearConfigOverride",
            value: function clearConfigOverride(experimentName) {
                this.overrideAdapter.removeDynamicConfigOverride(experimentName);
                this.statsigValuesUpdated();
            }
        },
        {
            key: "setOverrides",
            value: function setOverrides(overrides) {
                this.overrideAdapter.setOverrides(overrides);
                this.statsigValuesUpdated();
            }
        },
        {
            key: "getOverrides",
            value: function getOverrides() {
                return this.overrideAdapter.getOverrides();
            }
        },
        {
            key: "clearAllOverrides",
            value: function clearAllOverrides() {
                this.overrideAdapter.removeAllOverrides();
                this.statsigValuesUpdated();
            }
        },
        {
            key: "isCurrentUser",
            value: function isCurrentUser(identifiers, customAttributes) {
                return (0, _utils.shallowEquals)(this.currentIdentifiers, identifiers) && (0, _utils.shallowEquals)(this.currentAttributes, customAttributes);
            }
        },
        {
            key: "onGateUpdated",
            value: function onGateUpdated(gateName, callback) {
                var _this7 = this;
                var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var wrapCallback = function wrapCallback(value) {
                    var _options$fireGateExpo2 = options.fireGateExposure, fireGateExposure = _options$fireGateExpo2 === void 0 ? true : _options$fireGateExpo2;
                    if (fireGateExposure) _this7.manuallyLogGateExposure(gateName);
                    try {
                        callback(value);
                    } catch (error) {
                        // eslint-disable-next-line no-console
                        console.warn("Error calling callback for gate ".concat(gateName, " with value ").concat(value), error);
                    }
                };
                return this.subscriptions.onGateUpdated(gateName, wrapCallback, this.checkGate.bind(this), options);
            }
        },
        {
            key: "onExperimentValueUpdated",
            value: function onExperimentValueUpdated(experimentName, parameterName, defaultValue, callback) {
                var _this8 = this;
                var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
                var wrapCallback = function wrapCallback(value) {
                    var _options$fireExperime2 = options.fireExperimentExposure, fireExperimentExposure = _options$fireExperime2 === void 0 ? true : _options$fireExperime2;
                    if (fireExperimentExposure) _this8.manuallyLogExperimentExposure(experimentName);
                    try {
                        callback(value);
                    } catch (error) {
                        // eslint-disable-next-line no-console
                        console.warn("Error calling callback for experiment ".concat(experimentName, " with value ").concat(value), error);
                    }
                };
                return this.subscriptions.onExperimentValueUpdated(experimentName, parameterName, defaultValue, wrapCallback, this.getExperimentValue.bind(this), options);
            }
        },
        {
            key: "onAnyUpdated",
            value: function onAnyUpdated(callback) {
                return this.subscriptions.onAnyUpdated(callback);
            }
        },
        {
            key: "init",
            value: function() {
                var _init = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee7(clientOptions, identifiers, customAttributes) {
                    var fromValuesClientOptions, experimentValues, customAttributesFromResult, clientSdkKeyPromise, experimentValuesPromise, _yield$Promise$all, _yield$Promise$all2, experimentValuesResult;
                    return (0, _regeneratorDefault.default).wrap(function _callee7$(_context7) {
                        while(true)switch(_context7.prev = _context7.next){
                            case 0:
                                fromValuesClientOptions = _objectSpread({}, clientOptions);
                                _context7.prev = 1;
                                // If client sdk key fetch fails, an error would be thrown and handled instead of waiting for
                                // the experiment values request to be settled, and it will fall back to use default values.
                                clientSdkKeyPromise = (0, _fetcherDefault.default).fetchClientSdk(clientOptions).then(function(value) {
                                    return fromValuesClientOptions.sdkKey = value.clientSdkKey;
                                });
                                experimentValuesPromise = (0, _fetcherDefault.default).fetchExperimentValues(clientOptions, identifiers, customAttributes); // Only wait for the experiment values request to finish and try to initialise the client
                                // with experiment values if both requests are successful. Else an error would be thrown and
                                // handled by the catch
                                _context7.next = 6;
                                return Promise.all([
                                    clientSdkKeyPromise,
                                    experimentValuesPromise
                                ]);
                            case 6:
                                _yield$Promise$all = _context7.sent;
                                _yield$Promise$all2 = (0, _slicedToArrayDefault.default)(_yield$Promise$all, 2);
                                experimentValuesResult = _yield$Promise$all2[1];
                                experimentValues = experimentValuesResult.experimentValues;
                                customAttributesFromResult = experimentValuesResult.customAttributes;
                                _context7.next = 20;
                                break;
                            case 13:
                                _context7.prev = 13;
                                _context7.t0 = _context7["catch"](1);
                                if (_context7.t0 instanceof Error) // eslint-disable-next-line no-console
                                console.error("Error occurred when trying to fetch the Feature Gates client values, error: ".concat(_context7.t0 === null || _context7.t0 === void 0 ? void 0 : _context7.t0.message));
                                // eslint-disable-next-line no-console
                                console.warn("Initialising Statsig client without values");
                                _context7.next = 19;
                                return this.initFromValues(fromValuesClientOptions, identifiers, customAttributes);
                            case 19:
                                throw _context7.t0;
                            case 20:
                                return _context7.abrupt("return", this.initFromValues(fromValuesClientOptions, identifiers, customAttributesFromResult, experimentValues));
                            case 21:
                            case "end":
                                return _context7.stop();
                        }
                    }, _callee7, this, [
                        [
                            1,
                            13
                        ]
                    ]);
                }));
                function init(_x16, _x17, _x18) {
                    return _init.apply(this, arguments);
                }
                return init;
            }()
        },
        {
            key: "initWithProvider",
            value: function() {
                var _initWithProvider = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee8(baseClientOptions, provider, identifiers, customAttributes) {
                    var fromValuesClientOptions, experimentValues, customAttributesFromResult, clientSdkKeyPromise, experimentValuesPromise, _yield$Promise$all3, _yield$Promise$all4, experimentValuesResult;
                    return (0, _regeneratorDefault.default).wrap(function _callee8$(_context8) {
                        while(true)switch(_context8.prev = _context8.next){
                            case 0:
                                fromValuesClientOptions = _objectSpread(_objectSpread({}, baseClientOptions), {}, {
                                    disableCurrentPageLogging: true
                                });
                                _context8.prev = 1;
                                _context8.next = 4;
                                return provider.setProfile(baseClientOptions, identifiers, customAttributes);
                            case 4:
                                // If client sdk key fetch fails, an error would be thrown and handled instead of waiting for
                                // the experiment values request to be settled, and it will fall back to use default values.
                                clientSdkKeyPromise = provider.getClientSdkKey().then(function(value) {
                                    return fromValuesClientOptions.sdkKey = value;
                                });
                                experimentValuesPromise = provider.getExperimentValues(); // Only wait for the experiment values request to finish and try to initialise the client
                                // with experiment values if both requests are successful. Else an error would be thrown and
                                // handled by the catch
                                _context8.next = 8;
                                return Promise.all([
                                    clientSdkKeyPromise,
                                    experimentValuesPromise
                                ]);
                            case 8:
                                _yield$Promise$all3 = _context8.sent;
                                _yield$Promise$all4 = (0, _slicedToArrayDefault.default)(_yield$Promise$all3, 2);
                                experimentValuesResult = _yield$Promise$all4[1];
                                experimentValues = experimentValuesResult.experimentValues;
                                customAttributesFromResult = experimentValuesResult.customAttributesFromFetch;
                                _context8.next = 22;
                                break;
                            case 15:
                                _context8.prev = 15;
                                _context8.t0 = _context8["catch"](1);
                                if (_context8.t0 instanceof Error) // eslint-disable-next-line no-console
                                console.error("Error occurred when trying to fetch the Feature Gates client values, error: ".concat(_context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.message));
                                // eslint-disable-next-line no-console
                                console.warn("Initialising Statsig client without values");
                                _context8.next = 21;
                                return this.initFromValues(fromValuesClientOptions, identifiers, customAttributes);
                            case 21:
                                throw _context8.t0;
                            case 22:
                                return _context8.abrupt("return", this.initFromValues(fromValuesClientOptions, identifiers, customAttributesFromResult, experimentValues));
                            case 23:
                            case "end":
                                return _context8.stop();
                        }
                    }, _callee8, this, [
                        [
                            1,
                            15
                        ]
                    ]);
                }));
                function initWithProvider(_x19, _x20, _x21, _x22) {
                    return _initWithProvider.apply(this, arguments);
                }
                return initWithProvider;
            }()
        },
        {
            key: "initFromValues",
            value: function() {
                var _initFromValues = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee9(clientOptions, identifiers, customAttributes) {
                    var _newClientOptions$net;
                    var initializeValues, newClientOptions, sdkKey, environment, _updateUserCompletionCallback, _perimeter, restClientOptions, statsigOptions, _args9 = arguments;
                    return (0, _regeneratorDefault.default).wrap(function _callee9$(_context9) {
                        while(true)switch(_context9.prev = _context9.next){
                            case 0:
                                initializeValues = _args9.length > 3 && _args9[3] !== undefined ? _args9[3] : {};
                                this.overrideAdapter.initFromStoredOverrides();
                                this.currentIdentifiers = identifiers;
                                this.currentAttributes = customAttributes;
                                newClientOptions = (0, _utils.migrateInitializationOptions)(clientOptions);
                                if (!newClientOptions.sdkKey) newClientOptions.sdkKey = DEFAULT_CLIENT_KEY;
                                if (!((_newClientOptions$net = newClientOptions.networkConfig) !== null && _newClientOptions$net !== void 0 && _newClientOptions$net.logEventUrl)) newClientOptions.networkConfig = _objectSpread(_objectSpread({}, newClientOptions.networkConfig), {}, {
                                    logEventUrl: DEFAULT_EVENT_LOGGING_API
                                });
                                if (newClientOptions.perimeter === (0, _types1.PerimeterType).FEDRAMP_MODERATE) // disable all logging in FedRAMP to prevent egress of sensitive data
                                newClientOptions.disableLogging = true;
                                sdkKey = newClientOptions.sdkKey, environment = newClientOptions.environment, _updateUserCompletionCallback = newClientOptions.updateUserCompletionCallback, _perimeter = newClientOptions.perimeter, restClientOptions = (0, _objectWithoutPropertiesDefault.default)(newClientOptions, _excluded);
                                this.user = (0, _utils.toStatsigUser)(identifiers, customAttributes);
                                statsigOptions = _objectSpread(_objectSpread({}, restClientOptions), {}, {
                                    environment: {
                                        tier: environment
                                    },
                                    includeCurrentPageUrlWithEvents: false,
                                    dataAdapter: this.dataAdapter,
                                    overrideAdapter: this.overrideAdapter,
                                    logEventCompressionMode: (0, _jsClient.LogEventCompressionMode).Forced
                                }); // Statsig validates the provided stableId against their own cookie, so we either need
                                // to update the cookie to match, or disable the validation completely.
                                if (identifiers.stableId) (0, _jsClient.StableID).setOverride(identifiers.stableId, sdkKey);
                                else statsigOptions.disableStableID = true;
                                _context9.prev = 12;
                                this.statsigClient = new (0, _jsClient.StatsigClient)(sdkKey, this.user, statsigOptions);
                                this.dataAdapter.setBootstrapData(initializeValues);
                                _context9.next = 17;
                                return this.statsigClient.initializeAsync();
                            case 17:
                                _context9.next = 29;
                                break;
                            case 19:
                                _context9.prev = 19;
                                _context9.t0 = _context9["catch"](12);
                                if (_context9.t0 instanceof Error) // eslint-disable-next-line no-console
                                console.error("Error occurred when trying to initialise the Statsig client, error: ".concat(_context9.t0 === null || _context9.t0 === void 0 ? void 0 : _context9.t0.message));
                                // eslint-disable-next-line no-console
                                console.warn("Initialising Statsig client with default sdk key and without values");
                                this.statsigClient = new (0, _jsClient.StatsigClient)(DEFAULT_CLIENT_KEY, this.user, statsigOptions);
                                this.dataAdapter.setBootstrapData();
                                _context9.next = 27;
                                return this.statsigClient.initializeAsync();
                            case 27:
                                this.initWithDefaults = true;
                                throw _context9.t0;
                            case 29:
                            case "end":
                                return _context9.stop();
                        }
                    }, _callee9, this, [
                        [
                            12,
                            19
                        ]
                    ]);
                }));
                function initFromValues(_x23, _x24, _x25) {
                    return _initFromValues.apply(this, arguments);
                }
                return initFromValues;
            }()
        },
        {
            key: "updateUserUsingInitializeValuesProducer",
            value: function() {
                var _updateUserUsingInitializeValuesProducer = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee1(getInitializeValues, identifiers, customAttributes) {
                    var _this9 = this;
                    var originalInitPromise, initializeValuesPromise, updateUserPromise;
                    return (0, _regeneratorDefault.default).wrap(function _callee1$(_context1) {
                        while(true)switch(_context1.prev = _context1.next){
                            case 0:
                                this.assertInitialized(this.statsigClient);
                                if (this.initPromise) {
                                    _context1.next = 3;
                                    break;
                                }
                                throw new Error('The client must be initialized before you can update the user.');
                            case 3:
                                if (!this.isCurrentUser(identifiers, customAttributes)) {
                                    _context1.next = 5;
                                    break;
                                }
                                return _context1.abrupt("return", this.initPromise);
                            case 5:
                                // Wait for the current initialize/update to finish
                                originalInitPromise = this.initPromise;
                                _context1.prev = 6;
                                _context1.next = 9;
                                return this.initPromise;
                            case 9:
                                _context1.next = 13;
                                break;
                            case 11:
                                _context1.prev = 11;
                                _context1.t0 = _context1["catch"](6);
                            case 13:
                                initializeValuesPromise = getInitializeValues();
                                updateUserPromise = this.updateStatsigClientUser(initializeValuesPromise, identifiers, customAttributes); // We replace the init promise here since we are essentially re-initializing the client at this
                                // point. Any subsequent calls to await client.initialize() or client.updateUser()
                                // will now also await this user update.
                                this.initPromise = updateUserPromise.catch(/*#__PURE__*/ (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee0() {
                                    return (0, _regeneratorDefault.default).wrap(function _callee0$(_context0) {
                                        while(true)switch(_context0.prev = _context0.next){
                                            case 0:
                                                // If the update failed then it changed nothing, so revert back to the original promise.
                                                _this9.initPromise = originalInitPromise;
                                                // Set the user profile again to revert back to the current user
                                                if (!_this9.provider) {
                                                    _context0.next = 4;
                                                    break;
                                                }
                                                _context0.next = 4;
                                                return _this9.provider.setProfile(_this9.initOptions, _this9.currentIdentifiers, _this9.currentAttributes);
                                            case 4:
                                            case "end":
                                                return _context0.stop();
                                        }
                                    }, _callee0);
                                })));
                                return _context1.abrupt("return", updateUserPromise);
                            case 17:
                            case "end":
                                return _context1.stop();
                        }
                    }, _callee1, this, [
                        [
                            6,
                            11
                        ]
                    ]);
                }));
                function updateUserUsingInitializeValuesProducer(_x26, _x27, _x28) {
                    return _updateUserUsingInitializeValuesProducer.apply(this, arguments);
                }
                return updateUserUsingInitializeValuesProducer;
            }()
        },
        {
            key: "updateStatsigClientUser",
            value: function() {
                var _updateStatsigClientUser = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee10(initializeValuesPromise, identifiers, customAttributes) {
                    var _this$initOptions, _this$initOptions$upd;
                    var initializeValues, user, _updateUserCompletion, _ref4, errMsg, success, errorMessage;
                    return (0, _regeneratorDefault.default).wrap(function _callee10$(_context10) {
                        while(true)switch(_context10.prev = _context10.next){
                            case 0:
                                this.assertInitialized(this.statsigClient);
                                _context10.prev = 1;
                                _context10.next = 4;
                                return initializeValuesPromise;
                            case 4:
                                initializeValues = _context10.sent;
                                user = (0, _utils.toStatsigUser)(identifiers, initializeValues.customAttributesFromFetch);
                                _context10.next = 13;
                                break;
                            case 8:
                                _context10.prev = 8;
                                _context10.t0 = _context10["catch"](1);
                                // Make sure the updateUserCompletionCallback is called for any errors in our custom code.
                                // This is not necessary for the updateUserWithValues call, because the Statsig client will
                                // already invoke the callback itself.
                                errMsg = _context10.t0 instanceof Error ? _context10.t0.message : JSON.stringify(_context10.t0);
                                (_updateUserCompletion = (_ref4 = this.initOptions).updateUserCompletionCallback) === null || _updateUserCompletion === void 0 || _updateUserCompletion.call(_ref4, false, errMsg);
                                throw _context10.t0;
                            case 13:
                                success = true;
                                errorMessage = null;
                                _context10.prev = 15;
                                this.dataAdapter.setBootstrapData(initializeValues.experimentValues);
                                this.user = user;
                                _context10.next = 20;
                                return this.statsigClient.updateUserAsync(this.user);
                            case 20:
                                _context10.next = 26;
                                break;
                            case 22:
                                _context10.prev = 22;
                                _context10.t1 = _context10["catch"](15);
                                success = false;
                                errorMessage = String(_context10.t1);
                            case 26:
                                (_this$initOptions = this.initOptions) === null || _this$initOptions === void 0 || (_this$initOptions$upd = _this$initOptions.updateUserCompletionCallback) === null || _this$initOptions$upd === void 0 || _this$initOptions$upd.call(_this$initOptions, success, errorMessage);
                                if (!success) {
                                    _context10.next = 33;
                                    break;
                                }
                                this.currentIdentifiers = identifiers;
                                this.currentAttributes = customAttributes;
                                this.subscriptions.anyUpdated();
                                _context10.next = 34;
                                break;
                            case 33:
                                throw new Error('Failed to update user. An unexpected error occured.');
                            case 34:
                            case "end":
                                return _context10.stop();
                        }
                    }, _callee10, this, [
                        [
                            1,
                            8
                        ],
                        [
                            15,
                            22
                        ]
                    ]);
                }));
                function updateStatsigClientUser(_x29, _x30, _x31) {
                    return _updateStatsigClientUser.apply(this, arguments);
                }
                return updateStatsigClientUser;
            }()
        },
        {
            key: "getPackageVersion",
            value: /**
     * @returns string version of the current package in semver style.
     */ function getPackageVersion() {
                return 0, _version.CLIENT_VERSION;
            }
        },
        {
            key: "getLayer",
            value: function getLayer(/** The name of the layer */ layerName) {
                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                try {
                    this.assertInitialized(this.statsigClient);
                    var _options$fireLayerExp = options.fireLayerExposure, fireLayerExposure = _options$fireLayerExp === void 0 ? true : _options$fireLayerExp;
                    return (0, _layer.Layer).fromLayer(this.statsigClient.getLayer(layerName, {
                        disableExposureLog: !fireLayerExposure
                    }));
                } catch (error) {
                    // Log the first occurrence of the error
                    if (!this.hasGetLayerErrorOccurred) {
                        // eslint-disable-next-line no-console
                        console.warn({
                            msg: 'An error has occurred getting the layer. Only the first occurrence of this error is logged.',
                            layerName: layerName,
                            error: error
                        });
                        this.hasGetLayerErrorOccurred = true;
                    }
                    // Return a default value
                    return (0, _layer.Layer).fromLayer((0, _jsClient._makeLayer)(layerName, {
                        reason: 'Error'
                    }, null));
                }
            }
        },
        {
            key: "getLayerValue",
            value: function getLayerValue(layerName, parameterName, defaultValue) {
                var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
                var layer = this.getLayer(layerName, options);
                try {
                    var typeGuard = options.typeGuard;
                    return layer.get(parameterName, defaultValue, typeGuard);
                } catch (error) {
                    // Log the first occurrence of the error
                    if (!this.hasGetLayerValueErrorOccurred) {
                        // eslint-disable-next-line no-console
                        console.warn({
                            msg: 'An error has occurred getting the layer value. Only the first occurrence of this error is logged.',
                            layerName: layerName,
                            defaultValue: defaultValue,
                            options: options,
                            error: error
                        });
                        this.hasGetLayerValueErrorOccurred = true;
                    }
                    return defaultValue;
                }
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/asyncToGenerator":"3sxrH","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/regenerator":"baIBJ","@statsig/js-client":"lSvZM","../subscriptions":"92EID","./compat/DynamicConfig":"Vnzkl","./compat/Layer":"feb7m","./compat/types":"dDwBP","./fetcher":"384GT","./NoFetchDataAdapter":"gSkHT","./PersistentOverrideAdapter":"hWZXl","./types":"1Lq9t","./utils":"gTacs","./version":"fJ9fV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lvO5K":[function(require,module,exports,__globalThis) {
var arrayWithHoles = require("a3af206dbd14b1b5");
var iterableToArrayLimit = require("c109e0e3b1a7ef05");
var unsupportedIterableToArray = require("6782568c4383bd49");
var nonIterableRest = require("1e06d43f4bd6e532");
function _slicedToArray(r, e) {
    return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a3af206dbd14b1b5":"ikHM3","c109e0e3b1a7ef05":"4M9hz","6782568c4383bd49":"klYG5","1e06d43f4bd6e532":"4xd1q"}],"ikHM3":[function(require,module,exports,__globalThis) {
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"4M9hz":[function(require,module,exports,__globalThis) {
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"klYG5":[function(require,module,exports,__globalThis) {
var arrayLikeToArray = require("f8ccc0353f5f3746");
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;
    }
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"f8ccc0353f5f3746":"J34FZ"}],"J34FZ":[function(require,module,exports,__globalThis) {
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"4xd1q":[function(require,module,exports,__globalThis) {
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"3sxrH":[function(require,module,exports,__globalThis) {
function asyncGeneratorStep(n, t, e, r, o, a, c) {
    try {
        var i = n[a](c), u = i.value;
    } catch (n) {
        return void e(n);
    }
    i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
    return function() {
        var t = this, e = arguments;
        return new Promise(function(r, o) {
            var a = n.apply(t, e);
            function _next(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
            }
            function _throw(n) {
                asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
            }
            _next(void 0);
        });
    };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"baIBJ":[function(require,module,exports,__globalThis) {
// TODO(Babel 8): Remove this file.
var runtime = require("1716bf03fd9b86cf")();
module.exports = runtime;
// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
    regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
    if (typeof globalThis === "object") globalThis.regeneratorRuntime = runtime;
    else Function("r", "regeneratorRuntime = r")(runtime);
}

},{"1716bf03fd9b86cf":"6RVg1"}],"6RVg1":[function(require,module,exports,__globalThis) {
var OverloadYield = require("61acb2ac3f7187ab");
var regenerator = require("5e9d7c3a48fd9533");
var regeneratorAsync = require("3fa61f8294c92c80");
var regeneratorAsyncGen = require("182d917df9e32b94");
var regeneratorAsyncIterator = require("c49e286be81159a8");
var regeneratorKeys = require("9ed91b3552d9acae");
var regeneratorValues = require("a57e9c129cc67fe");
function _regeneratorRuntime() {
    "use strict";
    var r = regenerator(), e = r.m(_regeneratorRuntime), t = (Object.getPrototypeOf ? Object.getPrototypeOf(e) : e.__proto__).constructor;
    function n(r) {
        var e = "function" == typeof r && r.constructor;
        return !!e && (e === t || "GeneratorFunction" === (e.displayName || e.name));
    }
    var o = {
        "throw": 1,
        "return": 2,
        "break": 3,
        "continue": 3
    };
    function a(r) {
        var e, t;
        return function(n) {
            e || (e = {
                stop: function stop() {
                    return t(n.a, 2);
                },
                "catch": function _catch() {
                    return n.v;
                },
                abrupt: function abrupt(r, e) {
                    return t(n.a, o[r], e);
                },
                delegateYield: function delegateYield(r, o, a) {
                    return e.resultName = o, t(n.d, regeneratorValues(r), a);
                },
                finish: function finish(r) {
                    return t(n.f, r);
                }
            }, t = function t(r, _t, o) {
                n.p = e.prev, n.n = e.next;
                try {
                    return r(_t, o);
                } finally{
                    e.next = n.n;
                }
            }), e.resultName && (e[e.resultName] = n.v, e.resultName = void 0), e.sent = n.v, e.next = n.n;
            try {
                return r.call(this, e);
            } finally{
                n.p = e.prev, n.n = e.next;
            }
        };
    }
    return (module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
        return {
            wrap: function wrap(e, t, n, o) {
                return r.w(a(e), t, n, o && o.reverse());
            },
            isGeneratorFunction: n,
            mark: r.m,
            awrap: function awrap(r, e) {
                return new OverloadYield(r, e);
            },
            AsyncIterator: regeneratorAsyncIterator,
            async: function async(r, e, t, o, u) {
                return (n(e) ? regeneratorAsyncGen : regeneratorAsync)(a(r), e, t, o, u);
            },
            keys: regeneratorKeys,
            values: regeneratorValues
        };
    }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"61acb2ac3f7187ab":"aPibL","5e9d7c3a48fd9533":"2VX0P","3fa61f8294c92c80":"cXtxC","182d917df9e32b94":"7h02f","c49e286be81159a8":"lxV2v","9ed91b3552d9acae":"5KxZS","a57e9c129cc67fe":"bnjgt"}],"aPibL":[function(require,module,exports,__globalThis) {
function _OverloadYield(e, d) {
    this.v = e, this.k = d;
}
module.exports = _OverloadYield, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"2VX0P":[function(require,module,exports,__globalThis) {
var regeneratorDefine = require("654617eba077ef34");
function _regenerator() {
    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag";
    function i(r, n, o, i) {
        var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype);
        return regeneratorDefine(u, "_invoke", function(r, n, o) {
            var i, c, u, f = 0, p = o || [], y = !1, G = {
                p: 0,
                n: 0,
                v: e,
                a: d,
                f: d.bind(e, 4),
                d: function d(t, r) {
                    return i = t, c = 0, u = e, G.n = r, a;
                }
            };
            function d(r, n) {
                for(c = r, u = n, t = 0; !y && f && !o && t < p.length; t++){
                    var o, i = p[t], d = G.p, l = i[2];
                    r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0));
                }
                if (o || r > 1) return a;
                throw y = !0, n;
            }
            return function(o, p, l) {
                if (f > 1) throw TypeError("Generator is already running");
                for(y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;){
                    i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u);
                    try {
                        if (f = 2, i) {
                            if (c || (o = "next"), t = i[o]) {
                                if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object");
                                if (!t.done) return t;
                                u = t.value, c < 2 && (c = 0);
                            } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1);
                            i = e;
                        } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break;
                    } catch (t) {
                        i = e, c = 1, u = t;
                    } finally{
                        f = 1;
                    }
                }
                return {
                    value: t,
                    done: y
                };
            };
        }(r, o, i), !0), u;
    }
    var a = {};
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}
    t = Object.getPrototypeOf;
    var c = [][n] ? t(t([][n]())) : (regeneratorDefine(t = {}, n, function() {
        return this;
    }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c);
    function f(e) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, regeneratorDefine(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e;
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, regeneratorDefine(u, "constructor", GeneratorFunctionPrototype), regeneratorDefine(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", regeneratorDefine(GeneratorFunctionPrototype, o, "GeneratorFunction"), regeneratorDefine(u), regeneratorDefine(u, o, "Generator"), regeneratorDefine(u, n, function() {
        return this;
    }), regeneratorDefine(u, "toString", function() {
        return "[object Generator]";
    }), (module.exports = _regenerator = function _regenerator() {
        return {
            w: i,
            m: f
        };
    }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _regenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"654617eba077ef34":"cv9UD"}],"cv9UD":[function(require,module,exports,__globalThis) {
function _regeneratorDefine(e, r, n, t) {
    var i = Object.defineProperty;
    try {
        i({}, "", {});
    } catch (e) {
        i = 0;
    }
    module.exports = _regeneratorDefine = function regeneratorDefine(e, r, n, t) {
        if (r) i ? i(e, r, {
            value: n,
            enumerable: !t,
            configurable: !t,
            writable: !t
        }) : e[r] = n;
        else {
            var o = function o(r, n) {
                _regeneratorDefine(e, r, function(e) {
                    return this._invoke(r, n, e);
                });
            };
            o("next", 0), o("throw", 1), o("return", 2);
        }
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _regeneratorDefine(e, r, n, t);
}
module.exports = _regeneratorDefine, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"cXtxC":[function(require,module,exports,__globalThis) {
var regeneratorAsyncGen = require("3dd28f42290e9f85");
function _regeneratorAsync(n, e, r, t, o) {
    var a = regeneratorAsyncGen(n, e, r, t, o);
    return a.next().then(function(n) {
        return n.done ? n.value : a.next();
    });
}
module.exports = _regeneratorAsync, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"3dd28f42290e9f85":"7h02f"}],"7h02f":[function(require,module,exports,__globalThis) {
var regenerator = require("2963c512bdc3a0d7");
var regeneratorAsyncIterator = require("10478ff4d7baede8");
function _regeneratorAsyncGen(r, e, t, o, n) {
    return new regeneratorAsyncIterator(regenerator().w(r, e, t, o), n || Promise);
}
module.exports = _regeneratorAsyncGen, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"2963c512bdc3a0d7":"2VX0P","10478ff4d7baede8":"lxV2v"}],"lxV2v":[function(require,module,exports,__globalThis) {
var OverloadYield = require("6eccba63b54c2969");
var regeneratorDefine = require("6150a943002fab63");
function AsyncIterator(t, e) {
    function n(r, o, i, f) {
        try {
            var c = t[r](o), u = c.value;
            return u instanceof OverloadYield ? e.resolve(u.v).then(function(t) {
                n("next", t, i, f);
            }, function(t) {
                n("throw", t, i, f);
            }) : e.resolve(u).then(function(t) {
                c.value = t, i(c);
            }, function(t) {
                return n("throw", t, i, f);
            });
        } catch (t) {
            f(t);
        }
    }
    var r;
    this.next || (regeneratorDefine(AsyncIterator.prototype), regeneratorDefine(AsyncIterator.prototype, "function" == typeof Symbol && Symbol.asyncIterator || "@asyncIterator", function() {
        return this;
    })), regeneratorDefine(this, "_invoke", function(t, o, i) {
        function f() {
            return new e(function(e, r) {
                n(t, i, e, r);
            });
        }
        return r = r ? r.then(f, f) : f();
    }, !0);
}
module.exports = AsyncIterator, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"6eccba63b54c2969":"aPibL","6150a943002fab63":"cv9UD"}],"5KxZS":[function(require,module,exports,__globalThis) {
function _regeneratorKeys(e) {
    var n = Object(e), r = [];
    for(var t in n)r.unshift(t);
    return function e() {
        for(; r.length;)if ((t = r.pop()) in n) return e.value = t, e.done = !1, e;
        return e.done = !0, e;
    };
}
module.exports = _regeneratorKeys, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"bnjgt":[function(require,module,exports,__globalThis) {
var _typeof = require("30bcd59bae7469f0")["default"];
function _regeneratorValues(e) {
    if (null != e) {
        var t = e["function" == typeof Symbol && Symbol.iterator || "@@iterator"], r = 0;
        if (t) return t.call(e);
        if ("function" == typeof e.next) return e;
        if (!isNaN(e.length)) return {
            next: function next() {
                return e && r >= e.length && (e = void 0), {
                    value: e && e[r++],
                    done: !e
                };
            }
        };
    }
    throw new TypeError(_typeof(e) + " is not iterable");
}
module.exports = _regeneratorValues, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"30bcd59bae7469f0":"7EL9t"}],"lSvZM":[function(require,module,exports,__globalThis) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StatsigClient = void 0;
const client_core_1 = require("c60301d36612bbc9");
const StatsigClient_1 = require("4d3479f51b18ca95");
exports.StatsigClient = StatsigClient_1.default;
__exportStar(require("c60301d36612bbc9"), exports);
const __STATSIG__ = Object.assign((0, client_core_1._getStatsigGlobal)(), {
    StatsigClient: StatsigClient_1.default
});
exports.default = __STATSIG__;

},{"c60301d36612bbc9":"7zaBN","4d3479f51b18ca95":"lgJSV"}],"7zaBN":[function(require,module,exports,__globalThis) {
"use strict";
var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var __exportStar = this && this.__exportStar || function(m, exports1) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Storage = exports.Log = exports.EventLogger = exports.Diagnostics = void 0;
/** Statsig Global should go first */ require("ff9ddc0b2ab43f2f");
const __StatsigGlobal_1 = require("ff9ddc0b2ab43f2f");
const Diagnostics_1 = require("57c4f975e9a55cd1");
Object.defineProperty(exports, "Diagnostics", {
    enumerable: true,
    get: function() {
        return Diagnostics_1.Diagnostics;
    }
});
const EventLogger_1 = require("10cde5689c6c86b8");
Object.defineProperty(exports, "EventLogger", {
    enumerable: true,
    get: function() {
        return EventLogger_1.EventLogger;
    }
});
const Log_1 = require("7d714c1c9f557dc9");
Object.defineProperty(exports, "Log", {
    enumerable: true,
    get: function() {
        return Log_1.Log;
    }
});
const StatsigMetadata_1 = require("f668be2779392a26");
const StorageProvider_1 = require("1ddd04c58576f51c");
Object.defineProperty(exports, "Storage", {
    enumerable: true,
    get: function() {
        return StorageProvider_1.Storage;
    }
});
__exportStar(require("ff9ddc0b2ab43f2f"), exports);
__exportStar(require("1ad2aaf92f90ed1e"), exports);
__exportStar(require("524295e1ce868518"), exports);
__exportStar(require("ac782bf1fa3da5fb"), exports);
__exportStar(require("57c4f975e9a55cd1"), exports);
__exportStar(require("190028c24ad98bb3"), exports);
__exportStar(require("bf87012ca116259a"), exports);
__exportStar(require("bd1e44f43d9c3318"), exports);
__exportStar(require("373cf19a288c652a"), exports);
__exportStar(require("8e4d38a647ff743b"), exports);
__exportStar(require("925ae469466814fb"), exports);
__exportStar(require("7d714c1c9f557dc9"), exports);
__exportStar(require("b6f23a8fff0847f3"), exports);
__exportStar(require("2ce3971e8fcafbe"), exports);
__exportStar(require("42c6ed9e68aa4911"), exports);
__exportStar(require("cb8cab2ab3f9c238"), exports);
__exportStar(require("bead789ae08588cb"), exports);
__exportStar(require("198271857af05972"), exports);
__exportStar(require("cd3e48a198d23dc5"), exports);
__exportStar(require("9f643dbbd78b3389"), exports);
__exportStar(require("ce583e968b4aecbe"), exports);
__exportStar(require("1f8d5cc805c3fb5f"), exports);
__exportStar(require("c61fe10246ea7fc2"), exports);
__exportStar(require("ea1a9f5742ec27ed"), exports);
__exportStar(require("58cef7e3dbee1a0e"), exports);
__exportStar(require("f668be2779392a26"), exports);
__exportStar(require("2d46d004e2a5773c"), exports);
__exportStar(require("735762b7714499e7"), exports);
__exportStar(require("456c3fbfaca98167"), exports);
__exportStar(require("d6877507e9c40829"), exports);
__exportStar(require("f39fabc915a5268c"), exports);
__exportStar(require("1ddd04c58576f51c"), exports);
__exportStar(require("5dc21840d921450f"), exports);
__exportStar(require("1ccf808630615ed8"), exports);
__exportStar(require("a4bfe290d84287d9"), exports);
__exportStar(require("2a30ac64a42ef6d8"), exports);
__exportStar(require("3868ed26701ecbbd"), exports);
__exportStar(require("61a884fce18fa18c"), exports);
__exportStar(require("88e3648771114d4d"), exports);
Object.assign((0, __StatsigGlobal_1._getStatsigGlobal)(), {
    Log: Log_1.Log,
    SDK_VERSION: StatsigMetadata_1.SDK_VERSION
});

},{"ff9ddc0b2ab43f2f":"l21J3","57c4f975e9a55cd1":"2lhs4","10cde5689c6c86b8":"ayrxs","7d714c1c9f557dc9":"2sUQY","f668be2779392a26":"3mMVR","1ddd04c58576f51c":"7xJdA","1ad2aaf92f90ed1e":"8znLo","524295e1ce868518":"5rYeP","ac782bf1fa3da5fb":"9fLXb","190028c24ad98bb3":"fT6LC","bf87012ca116259a":"eBOFf","bd1e44f43d9c3318":"huchd","373cf19a288c652a":"iJnkC","8e4d38a647ff743b":"afwdA","925ae469466814fb":"5wsee","b6f23a8fff0847f3":"aPml5","2ce3971e8fcafbe":"emeMp","42c6ed9e68aa4911":"8SBaf","cb8cab2ab3f9c238":"1v6Gy","bead789ae08588cb":"gdyoQ","198271857af05972":"cUsMd","cd3e48a198d23dc5":"bnSJa","9f643dbbd78b3389":"i6rQn","ce583e968b4aecbe":"5aiaP","1f8d5cc805c3fb5f":"BkT5X","c61fe10246ea7fc2":"jzVLg","ea1a9f5742ec27ed":"ecugS","58cef7e3dbee1a0e":"g1yPa","2d46d004e2a5773c":"lMDF6","735762b7714499e7":"dpiYQ","456c3fbfaca98167":"lfY55","d6877507e9c40829":"6eVmK","f39fabc915a5268c":"dHeC4","5dc21840d921450f":"kr5OI","1ccf808630615ed8":"aClg0","a4bfe290d84287d9":"h1zFS","2a30ac64a42ef6d8":"BRO32","3868ed26701ecbbd":"1T2CG","61a884fce18fa18c":"11Kc1","88e3648771114d4d":"3PH8C"}],"l21J3":[function(require,module,exports,__globalThis) {
var global = arguments[3];
"use strict";
/* eslint-disable @typescript-eslint/no-unsafe-assignment */ var _a, _b, _c;
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._getInstance = exports._getStatsigGlobalFlag = exports._getStatsigGlobal = void 0;
const Log_1 = require("32d1384d047f9097");
const _getStatsigGlobal = ()=>{
    // Avoid ReferenceError, which is happening with Cloudflare pages
    try {
        return typeof __STATSIG__ !== 'undefined' ? __STATSIG__ : statsigGlobal;
    } catch (e) {
        return statsigGlobal;
    }
};
exports._getStatsigGlobal = _getStatsigGlobal;
const _getStatsigGlobalFlag = (flag)=>{
    return (0, exports._getStatsigGlobal)()[flag];
};
exports._getStatsigGlobalFlag = _getStatsigGlobalFlag;
const _getInstance = (sdkKey)=>{
    const gbl = (0, exports._getStatsigGlobal)();
    if (!sdkKey) {
        if (gbl.instances && Object.keys(gbl.instances).length > 1) Log_1.Log.warn('Call made to Statsig global instance without an SDK key but there is more than one client instance. If you are using mulitple clients, please specify the SDK key.');
        return gbl.firstInstance;
    }
    return gbl.instances && gbl.instances[sdkKey];
};
exports._getInstance = _getInstance;
const GLOBAL_KEY = '__STATSIG__';
const _window = typeof window !== 'undefined' ? window : {};
const _global = typeof global !== 'undefined' ? global : {};
const _globalThis = typeof globalThis !== 'undefined' ? globalThis : {};
const statsigGlobal = (_c = (_b = (_a = _window[GLOBAL_KEY]) !== null && _a !== void 0 ? _a : _global[GLOBAL_KEY]) !== null && _b !== void 0 ? _b : _globalThis[GLOBAL_KEY]) !== null && _c !== void 0 ? _c : {
    instance: exports._getInstance
};
_window[GLOBAL_KEY] = statsigGlobal;
_global[GLOBAL_KEY] = statsigGlobal;
_globalThis[GLOBAL_KEY] = statsigGlobal;

},{"32d1384d047f9097":"2sUQY"}],"2sUQY":[function(require,module,exports,__globalThis) {
"use strict";
/* eslint-disable no-console */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Log = exports.LogLevel = void 0;
// intentionally spaced for formatting
const DEBUG = ' DEBUG ';
const _INFO = '  INFO ';
const _WARN = '  WARN ';
const ERROR = ' ERROR ';
function addTag(args) {
    args.unshift('[Statsig]');
    return args; // ['[Statsig]', ...args];
}
exports.LogLevel = {
    None: 0,
    Error: 1,
    Warn: 2,
    Info: 3,
    Debug: 4
};
class Log {
    static info(...args) {
        if (Log.level >= exports.LogLevel.Info) console.info(_INFO, ...addTag(args));
    }
    static debug(...args) {
        if (Log.level >= exports.LogLevel.Debug) console.debug(DEBUG, ...addTag(args));
    }
    static warn(...args) {
        if (Log.level >= exports.LogLevel.Warn) console.warn(_WARN, ...addTag(args));
    }
    static error(...args) {
        if (Log.level >= exports.LogLevel.Error) console.error(ERROR, ...addTag(args));
    }
}
exports.Log = Log;
Log.level = exports.LogLevel.Warn;

},{}],"2lhs4":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Diagnostics = void 0;
const MARKER_MAP = new Map();
const ACT_START = 'start';
const ACT_END = 'end';
const DIAGNOSTICS_EVENT = 'statsig::diagnostics';
exports.Diagnostics = {
    _getMarkers: (sdkKey)=>{
        return MARKER_MAP.get(sdkKey);
    },
    _markInitOverallStart: (sdkKey)=>{
        _addMarker(sdkKey, _createMarker({}, ACT_START, 'overall'));
    },
    _markInitOverallEnd: (sdkKey, success, evaluationDetails)=>{
        _addMarker(sdkKey, _createMarker({
            success,
            error: success ? undefined : {
                name: 'InitializeError',
                message: 'Failed to initialize'
            },
            evaluationDetails
        }, ACT_END, 'overall'));
    },
    _markInitNetworkReqStart: (sdkKey, data)=>{
        _addMarker(sdkKey, _createMarker(data, ACT_START, 'initialize', 'network_request'));
    },
    _markInitNetworkReqEnd: (sdkKey, data)=>{
        _addMarker(sdkKey, _createMarker(data, ACT_END, 'initialize', 'network_request'));
    },
    _markInitProcessStart: (sdkKey)=>{
        _addMarker(sdkKey, _createMarker({}, ACT_START, 'initialize', 'process'));
    },
    _markInitProcessEnd: (sdkKey, data)=>{
        _addMarker(sdkKey, _createMarker(data, ACT_END, 'initialize', 'process'));
    },
    _clearMarkers: (sdkKey)=>{
        MARKER_MAP.delete(sdkKey);
    },
    _formatError (e) {
        if (!(e && typeof e === 'object')) return;
        return {
            code: _safeGetField(e, 'code'),
            name: _safeGetField(e, 'name'),
            message: _safeGetField(e, 'message')
        };
    },
    _getDiagnosticsData (res, attempt, body, e) {
        var _a;
        return {
            success: (res === null || res === void 0 ? void 0 : res.ok) === true,
            statusCode: res === null || res === void 0 ? void 0 : res.status,
            sdkRegion: (_a = res === null || res === void 0 ? void 0 : res.headers) === null || _a === void 0 ? void 0 : _a.get('x-statsig-region'),
            isDelta: body.includes('"is_delta":true') === true ? true : undefined,
            attempt,
            error: exports.Diagnostics._formatError(e)
        };
    },
    _enqueueDiagnosticsEvent (user, logger, sdk, options) {
        const markers = exports.Diagnostics._getMarkers(sdk);
        if (markers == null || markers.length <= 0) return -1;
        const overallInitDuration = markers[markers.length - 1].timestamp - markers[0].timestamp;
        exports.Diagnostics._clearMarkers(sdk);
        const event = _makeDiagnosticsEvent(user, {
            context: 'initialize',
            markers: markers.slice(),
            statsigOptions: options
        });
        logger.enqueue(event);
        return overallInitDuration;
    }
};
function _createMarker(data, action, key, step) {
    return Object.assign({
        key: key,
        action: action,
        step: step,
        timestamp: Date.now()
    }, data);
}
function _makeDiagnosticsEvent(user, data) {
    const latencyEvent = {
        eventName: DIAGNOSTICS_EVENT,
        user,
        value: null,
        metadata: data,
        time: Date.now()
    };
    return latencyEvent;
}
function _addMarker(sdkKey, marker) {
    var _a;
    const markers = (_a = MARKER_MAP.get(sdkKey)) !== null && _a !== void 0 ? _a : [];
    markers.push(marker);
    MARKER_MAP.set(sdkKey, markers);
}
function _safeGetField(data, field) {
    if (field in data) return data[field];
    return undefined;
}

},{}],"ayrxs":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.EventLogger = void 0;
const CacheKey_1 = require("c87a3f7275148053");
const Hashing_1 = require("3093016de6bcfeec");
const Log_1 = require("6bcecf8057c82c8d");
const NetworkConfig_1 = require("3630d0dd9c19b120");
const SafeJs_1 = require("98b51f0e76997e56");
const StatsigEvent_1 = require("2e696c324067ca62");
const StatsigOptionsCommon_1 = require("cc9869a848e4adaa");
const StorageProvider_1 = require("f5d8bf29acbffdb6");
const UrlConfiguration_1 = require("446698e9a831b91d");
const VisibilityObserving_1 = require("7410c62f71b8248f");
const DEFAULT_QUEUE_SIZE = 100;
const DEFAULT_FLUSH_INTERVAL_MS = 10000;
const MAX_DEDUPER_KEYS = 1000;
const DEDUPER_WINDOW_DURATION_MS = 600000;
const MAX_FAILED_LOGS = 500;
const QUICK_FLUSH_WINDOW_MS = 200;
const EVENT_LOGGER_MAP = {};
const RetryFailedLogsTrigger = {
    Startup: 'startup',
    GainedFocus: 'gained_focus'
};
class EventLogger {
    static _safeFlushAndForget(sdkKey) {
        var _a;
        (_a = EVENT_LOGGER_MAP[sdkKey]) === null || _a === void 0 || _a.flush().catch(()=>{
        // noop
        });
    }
    static _safeRetryFailedLogs(sdkKey) {
        var _a;
        (_a = EVENT_LOGGER_MAP[sdkKey]) === null || _a === void 0 || _a._retryFailedLogs(RetryFailedLogsTrigger.GainedFocus);
    }
    constructor(_sdkKey, _emitter, _network, _options){
        var _a, _b;
        this._sdkKey = _sdkKey;
        this._emitter = _emitter;
        this._network = _network;
        this._options = _options;
        this._queue = [];
        this._lastExposureTimeMap = {};
        this._nonExposedChecks = {};
        this._hasRunQuickFlush = false;
        this._creationTime = Date.now();
        this._loggingEnabled = (_a = _options === null || _options === void 0 ? void 0 : _options.loggingEnabled) !== null && _a !== void 0 ? _a : (_options === null || _options === void 0 ? void 0 : _options.disableLogging) === true ? StatsigOptionsCommon_1.LoggingEnabledOption.disabled : StatsigOptionsCommon_1.LoggingEnabledOption.browserOnly;
        if ((_options === null || _options === void 0 ? void 0 : _options.loggingEnabled) && _options.disableLogging !== undefined) Log_1.Log.warn('Detected both loggingEnabled and disableLogging options. loggingEnabled takes precedence - please remove disableLogging.');
        this._maxQueueSize = (_b = _options === null || _options === void 0 ? void 0 : _options.loggingBufferMaxSize) !== null && _b !== void 0 ? _b : DEFAULT_QUEUE_SIZE;
        const config = _options === null || _options === void 0 ? void 0 : _options.networkConfig;
        this._logEventUrlConfig = new UrlConfiguration_1.UrlConfiguration(NetworkConfig_1.Endpoint._rgstr, config === null || config === void 0 ? void 0 : config.logEventUrl, config === null || config === void 0 ? void 0 : config.api, config === null || config === void 0 ? void 0 : config.logEventFallbackUrls);
    }
    setLogEventCompressionMode(mode) {
        this._network.setLogEventCompressionMode(mode);
    }
    setLoggingEnabled(loggingEnabled) {
        this._loggingEnabled = loggingEnabled;
    }
    enqueue(event) {
        if (!this._shouldLogEvent(event)) return;
        this._normalizeAndAppendEvent(event);
        this._quickFlushIfNeeded();
        if (this._queue.length > this._maxQueueSize) EventLogger._safeFlushAndForget(this._sdkKey);
    }
    incrementNonExposureCount(name) {
        var _a;
        const current = (_a = this._nonExposedChecks[name]) !== null && _a !== void 0 ? _a : 0;
        this._nonExposedChecks[name] = current + 1;
    }
    reset() {
        // attempt to flush any remaining events
        this.flush().catch(()=>{
        // noop
        });
        this._lastExposureTimeMap = {};
    }
    start() {
        var _a;
        const isServerEnv = (0, SafeJs_1._isServerEnv)();
        if (isServerEnv && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.loggingEnabled) !== 'always') return;
        EVENT_LOGGER_MAP[this._sdkKey] = this;
        if (!isServerEnv) (0, VisibilityObserving_1._subscribeToVisiblityChanged)((visibility)=>{
            if (visibility === 'background') EventLogger._safeFlushAndForget(this._sdkKey);
            else if (visibility === 'foreground') EventLogger._safeRetryFailedLogs(this._sdkKey);
        });
        this._retryFailedLogs(RetryFailedLogsTrigger.Startup);
        this._startBackgroundFlushInterval();
    }
    stop() {
        return __awaiter(this, void 0, void 0, function*() {
            if (this._flushIntervalId) {
                clearInterval(this._flushIntervalId);
                this._flushIntervalId = null;
            }
            delete EVENT_LOGGER_MAP[this._sdkKey];
            yield this.flush();
        });
    }
    flush() {
        return __awaiter(this, void 0, void 0, function*() {
            this._appendAndResetNonExposedChecks();
            if (this._queue.length === 0) return;
            const events = this._queue;
            this._queue = [];
            yield this._sendEvents(events);
        });
    }
    /**
     * We 'Quick Flush' following the very first event enqueued
     * within the quick flush window
     */ _quickFlushIfNeeded() {
        if (this._hasRunQuickFlush) return;
        this._hasRunQuickFlush = true;
        if (Date.now() - this._creationTime > QUICK_FLUSH_WINDOW_MS) return;
        setTimeout(()=>EventLogger._safeFlushAndForget(this._sdkKey), QUICK_FLUSH_WINDOW_MS);
    }
    _shouldLogEvent(event) {
        var _a;
        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.loggingEnabled) !== 'always' && (0, SafeJs_1._isServerEnv)()) return false;
        if (!(0, StatsigEvent_1._isExposureEvent)(event)) return true;
        const user = event.user ? event.user : {
            statsigEnvironment: undefined
        };
        const userKey = (0, CacheKey_1._getUserStorageKey)(this._sdkKey, user);
        const metadata = event.metadata ? event.metadata : {};
        const key = [
            event.eventName,
            userKey,
            metadata['gate'],
            metadata['config'],
            metadata['ruleID'],
            metadata['allocatedExperiment'],
            metadata['parameterName'],
            String(metadata['isExplicitParameter']),
            metadata['reason']
        ].join('|');
        const previous = this._lastExposureTimeMap[key];
        const now = Date.now();
        if (previous && now - previous < DEDUPER_WINDOW_DURATION_MS) return false;
        if (Object.keys(this._lastExposureTimeMap).length > MAX_DEDUPER_KEYS) this._lastExposureTimeMap = {};
        this._lastExposureTimeMap[key] = now;
        return true;
    }
    _sendEvents(events) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            if (this._loggingEnabled === 'disabled') {
                this._saveFailedLogsToStorage(events);
                return false;
            }
            try {
                const isClosing = (0, VisibilityObserving_1._isUnloading)();
                const shouldUseBeacon = isClosing && this._network.isBeaconSupported() && ((_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.networkConfig) === null || _b === void 0 ? void 0 : _b.networkOverrideFunc) == null;
                this._emitter({
                    name: 'pre_logs_flushed',
                    events
                });
                const response = shouldUseBeacon ? this._sendEventsViaBeacon(events) : yield this._sendEventsViaPost(events);
                if (response.success) {
                    this._emitter({
                        name: 'logs_flushed',
                        events
                    });
                    return true;
                } else {
                    Log_1.Log.warn('Failed to flush events.');
                    this._saveFailedLogsToStorage(events);
                    return false;
                }
            } catch (_c) {
                Log_1.Log.warn('Failed to flush events.');
                return false;
            }
        });
    }
    _sendEventsViaPost(events) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a;
            const result = yield this._network.post(this._getRequestData(events));
            const code = (_a = result === null || result === void 0 ? void 0 : result.code) !== null && _a !== void 0 ? _a : -1;
            return {
                success: code >= 200 && code < 300
            };
        });
    }
    _sendEventsViaBeacon(events) {
        return {
            success: this._network.beacon(this._getRequestData(events))
        };
    }
    _getRequestData(events) {
        return {
            sdkKey: this._sdkKey,
            data: {
                events
            },
            urlConfig: this._logEventUrlConfig,
            retries: 3,
            isCompressable: true,
            params: {
                [NetworkConfig_1.NetworkParam.EventCount]: String(events.length)
            },
            credentials: 'same-origin'
        };
    }
    _saveFailedLogsToStorage(events) {
        while(events.length > MAX_FAILED_LOGS)events.shift();
        const storageKey = this._getStorageKey();
        try {
            (0, StorageProvider_1._setObjectInStorage)(storageKey, events);
        } catch (_a) {
            Log_1.Log.warn('Unable to save failed logs to storage');
        }
    }
    _retryFailedLogs(trigger) {
        const storageKey = this._getStorageKey();
        (()=>__awaiter(this, void 0, void 0, function*() {
                if (!StorageProvider_1.Storage.isReady()) yield StorageProvider_1.Storage.isReadyResolver();
                const events = (0, StorageProvider_1._getObjectFromStorage)(storageKey);
                if (!events) return;
                if (trigger === RetryFailedLogsTrigger.Startup) StorageProvider_1.Storage.removeItem(storageKey);
                const isSuccess = yield this._sendEvents(events);
                if (isSuccess && trigger === RetryFailedLogsTrigger.GainedFocus) StorageProvider_1.Storage.removeItem(storageKey);
            }))().catch(()=>{
            Log_1.Log.warn('Failed to flush stored logs');
        });
    }
    _getStorageKey() {
        return `statsig.failed_logs.${(0, Hashing_1._DJB2)(this._sdkKey)}`;
    }
    _normalizeAndAppendEvent(event) {
        if (event.user) {
            event.user = Object.assign({}, event.user);
            delete event.user.privateAttributes;
        }
        const extras = {};
        const currentPage = this._getCurrentPageUrl();
        if (currentPage) extras.statsigMetadata = {
            currentPage
        };
        const final = Object.assign(Object.assign({}, event), extras);
        Log_1.Log.debug('Enqueued Event:', final);
        this._queue.push(final);
    }
    _appendAndResetNonExposedChecks() {
        if (Object.keys(this._nonExposedChecks).length === 0) return;
        this._normalizeAndAppendEvent({
            eventName: 'statsig::non_exposed_checks',
            user: null,
            time: Date.now(),
            metadata: {
                checks: Object.assign({}, this._nonExposedChecks)
            }
        });
        this._nonExposedChecks = {};
    }
    _getCurrentPageUrl() {
        var _a;
        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.includeCurrentPageUrlWithEvents) === false) return;
        return (0, SafeJs_1._getCurrentPageUrlSafe)();
    }
    _startBackgroundFlushInterval() {
        var _a, _b;
        const flushInterval = (_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.loggingIntervalMs) !== null && _b !== void 0 ? _b : DEFAULT_FLUSH_INTERVAL_MS;
        const intervalId = setInterval(()=>{
            const logger = EVENT_LOGGER_MAP[this._sdkKey];
            if (!logger || logger._flushIntervalId !== intervalId) clearInterval(intervalId);
            else EventLogger._safeFlushAndForget(this._sdkKey);
        }, flushInterval);
        this._flushIntervalId = intervalId;
    }
}
exports.EventLogger = EventLogger;

},{"c87a3f7275148053":"8znLo","3093016de6bcfeec":"afwdA","6bcecf8057c82c8d":"2sUQY","3630d0dd9c19b120":"emeMp","98b51f0e76997e56":"cUsMd","2e696c324067ca62":"g1yPa","cc9869a848e4adaa":"lMDF6","f5d8bf29acbffdb6":"7xJdA","446698e9a831b91d":"h1zFS","7410c62f71b8248f":"1T2CG"}],"8znLo":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._getStorageKey = exports._getUserStorageKey = void 0;
const Hashing_1 = require("fc2f590223f81479");
function _getUserStorageKey(sdkKey, user, customKeyGenerator) {
    var _a;
    if (customKeyGenerator) return customKeyGenerator(sdkKey, user);
    const cids = user && user.customIDs ? user.customIDs : {};
    const parts = [
        `uid:${(_a = user === null || user === void 0 ? void 0 : user.userID) !== null && _a !== void 0 ? _a : ''}`,
        `cids:${Object.keys(cids).sort((leftKey, rightKey)=>leftKey.localeCompare(rightKey)).map((key)=>`${key}-${cids[key]}`).join(',')}`,
        `k:${sdkKey}`
    ];
    return (0, Hashing_1._DJB2)(parts.join('|'));
}
exports._getUserStorageKey = _getUserStorageKey;
function _getStorageKey(sdkKey, user, customKeyGenerator) {
    if (user) return _getUserStorageKey(sdkKey, user, customKeyGenerator);
    return (0, Hashing_1._DJB2)(`k:${sdkKey}`);
}
exports._getStorageKey = _getStorageKey;

},{"fc2f590223f81479":"afwdA"}],"afwdA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._getSortedObject = exports._DJB2Object = exports._DJB2 = void 0;
const TypingUtils_1 = require("eeb5920bd493cfe");
const _DJB2 = (value)=>{
    let hash = 0;
    for(let i = 0; i < value.length; i++){
        const character = value.charCodeAt(i);
        hash = (hash << 5) - hash + character;
        hash = hash & hash; // Convert to 32bit integer
    }
    return String(hash >>> 0);
};
exports._DJB2 = _DJB2;
const _DJB2Object = (value, maxLevels)=>{
    return (0, exports._DJB2)(JSON.stringify((0, exports._getSortedObject)(value, maxLevels)));
};
exports._DJB2Object = _DJB2Object;
const _getSortedObject = (object, maxDepth)=>{
    if (object == null) return null;
    const keys = Object.keys(object).sort();
    const sortedObject = {};
    keys.forEach((key)=>{
        const value = object[key];
        if (maxDepth === 0 || (0, TypingUtils_1._typeOf)(value) !== 'object') {
            sortedObject[key] = value;
            return;
        }
        sortedObject[key] = (0, exports._getSortedObject)(value, maxDepth != null ? maxDepth - 1 : maxDepth);
    });
    return sortedObject;
};
exports._getSortedObject = _getSortedObject;

},{"eeb5920bd493cfe":"aClg0"}],"aClg0":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._isTypeMatch = exports._typeOf = void 0;
function _typeOf(input) {
    return Array.isArray(input) ? 'array' : typeof input;
}
exports._typeOf = _typeOf;
function _isTypeMatch(a, b) {
    const typeOf = (x)=>Array.isArray(x) ? 'array' : typeof x;
    return typeOf(a) === typeOf(b);
}
exports._isTypeMatch = _isTypeMatch;

},{}],"emeMp":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NetworkParam = exports.NetworkDefault = exports.Endpoint = void 0;
exports.Endpoint = {
    _initialize: 'initialize',
    _rgstr: 'rgstr',
    _download_config_specs: 'download_config_specs'
};
exports.NetworkDefault = {
    [exports.Endpoint._rgstr]: 'https://prodregistryv2.org/v1',
    [exports.Endpoint._initialize]: 'https://featureassets.org/v1',
    [exports.Endpoint._download_config_specs]: 'https://api.statsigcdn.com/v1'
};
exports.NetworkParam = {
    EventCount: 'ec',
    SdkKey: 'k',
    SdkType: 'st',
    SdkVersion: 'sv',
    Time: 't',
    SessionID: 'sid',
    StatsigEncoded: 'se',
    IsGzipped: 'gz'
};

},{}],"cUsMd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._getUnloadEvent = exports._getCurrentPageUrlSafe = exports._addDocumentEventListenerSafe = exports._addWindowEventListenerSafe = exports._isServerEnv = exports._getDocumentSafe = exports._getWindowSafe = void 0;
const _getWindowSafe = ()=>{
    return typeof window !== 'undefined' ? window : null;
};
exports._getWindowSafe = _getWindowSafe;
const _getDocumentSafe = ()=>{
    var _a;
    const win = (0, exports._getWindowSafe)();
    return (_a = win === null || win === void 0 ? void 0 : win.document) !== null && _a !== void 0 ? _a : null;
};
exports._getDocumentSafe = _getDocumentSafe;
const _isServerEnv = ()=>{
    if ((0, exports._getDocumentSafe)() !== null) return false;
    const isNode = false;
    const isVercel = typeof EdgeRuntime === 'string';
    return isVercel || isNode;
};
exports._isServerEnv = _isServerEnv;
const _addWindowEventListenerSafe = (key, listener)=>{
    const win = (0, exports._getWindowSafe)();
    if (typeof (win === null || win === void 0 ? void 0 : win.addEventListener) === 'function') win.addEventListener(key, listener);
};
exports._addWindowEventListenerSafe = _addWindowEventListenerSafe;
const _addDocumentEventListenerSafe = (key, listener)=>{
    const doc = (0, exports._getDocumentSafe)();
    if (typeof (doc === null || doc === void 0 ? void 0 : doc.addEventListener) === 'function') doc.addEventListener(key, listener);
};
exports._addDocumentEventListenerSafe = _addDocumentEventListenerSafe;
const _getCurrentPageUrlSafe = ()=>{
    var _a;
    try {
        return (_a = (0, exports._getWindowSafe)()) === null || _a === void 0 ? void 0 : _a.location.href.split(/[?#]/)[0];
    } catch (_b) {
        return;
    }
};
exports._getCurrentPageUrlSafe = _getCurrentPageUrlSafe;
const _getUnloadEvent = ()=>{
    const win = (0, exports._getWindowSafe)();
    if (!win) return 'beforeunload';
    const eventType = 'onpagehide' in win ? 'pagehide' : 'beforeunload';
    return eventType;
};
exports._getUnloadEvent = _getUnloadEvent;

},{}],"g1yPa":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._createLayerParameterExposure = exports._createConfigExposure = exports._mapExposures = exports._createGateExposure = exports._isExposureEvent = void 0;
const CONFIG_EXPOSURE_NAME = 'statsig::config_exposure';
const GATE_EXPOSURE_NAME = 'statsig::gate_exposure';
const LAYER_EXPOSURE_NAME = 'statsig::layer_exposure';
const _createExposure = (eventName, user, details, metadata, secondaryExposures)=>{
    if (details.bootstrapMetadata) metadata['bootstrapMetadata'] = details.bootstrapMetadata;
    return {
        eventName,
        user,
        value: null,
        metadata: _addEvaluationDetailsToMetadata(details, metadata),
        secondaryExposures,
        time: Date.now()
    };
};
const _isExposureEvent = ({ eventName })=>{
    return eventName === GATE_EXPOSURE_NAME || eventName === CONFIG_EXPOSURE_NAME || eventName === LAYER_EXPOSURE_NAME;
};
exports._isExposureEvent = _isExposureEvent;
const _createGateExposure = (user, gate, exposureMapping)=>{
    var _a, _b, _c;
    const metadata = {
        gate: gate.name,
        gateValue: String(gate.value),
        ruleID: gate.ruleID
    };
    if (((_a = gate.__evaluation) === null || _a === void 0 ? void 0 : _a.version) != null) metadata['configVersion'] = gate.__evaluation.version;
    return _createExposure(GATE_EXPOSURE_NAME, user, gate.details, metadata, _mapExposures((_c = (_b = gate.__evaluation) === null || _b === void 0 ? void 0 : _b.secondary_exposures) !== null && _c !== void 0 ? _c : [], exposureMapping));
};
exports._createGateExposure = _createGateExposure;
function _mapExposures(exposures, exposureMapping) {
    return exposures.map((exposure)=>{
        if (typeof exposure === 'string') return (exposureMapping !== null && exposureMapping !== void 0 ? exposureMapping : {})[exposure];
        return exposure;
    }).filter((exposure)=>exposure != null);
}
exports._mapExposures = _mapExposures;
const _createConfigExposure = (user, config, exposureMapping)=>{
    var _a, _b, _c, _d;
    const metadata = {
        config: config.name,
        ruleID: config.ruleID
    };
    if (((_a = config.__evaluation) === null || _a === void 0 ? void 0 : _a.version) != null) metadata['configVersion'] = config.__evaluation.version;
    if (((_b = config.__evaluation) === null || _b === void 0 ? void 0 : _b.passed) != null) metadata['rulePassed'] = String(config.__evaluation.passed);
    return _createExposure(CONFIG_EXPOSURE_NAME, user, config.details, metadata, _mapExposures((_d = (_c = config.__evaluation) === null || _c === void 0 ? void 0 : _c.secondary_exposures) !== null && _d !== void 0 ? _d : [], exposureMapping));
};
exports._createConfigExposure = _createConfigExposure;
const _createLayerParameterExposure = (user, layer, parameterName, exposureMapping)=>{
    var _a, _b, _c, _d, _e, _f, _g;
    const evaluation = layer.__evaluation;
    const isExplicit = ((_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.explicit_parameters) === null || _a === void 0 ? void 0 : _a.includes(parameterName)) === true;
    let allocatedExperiment = '';
    let secondaryExposures = (_b = evaluation === null || evaluation === void 0 ? void 0 : evaluation.undelegated_secondary_exposures) !== null && _b !== void 0 ? _b : [];
    if (isExplicit) {
        allocatedExperiment = (_c = evaluation.allocated_experiment_name) !== null && _c !== void 0 ? _c : '';
        secondaryExposures = (_d = evaluation.secondary_exposures) !== null && _d !== void 0 ? _d : [];
    }
    const parameterRuleIDs = (_e = layer.__evaluation) === null || _e === void 0 ? void 0 : _e.parameter_rule_ids;
    const metadata = {
        config: layer.name,
        parameterName,
        ruleID: (_f = parameterRuleIDs === null || parameterRuleIDs === void 0 ? void 0 : parameterRuleIDs[parameterName]) !== null && _f !== void 0 ? _f : layer.ruleID,
        allocatedExperiment,
        isExplicitParameter: String(isExplicit)
    };
    if (((_g = layer.__evaluation) === null || _g === void 0 ? void 0 : _g.version) != null) metadata['configVersion'] = layer.__evaluation.version;
    return _createExposure(LAYER_EXPOSURE_NAME, user, layer.details, metadata, _mapExposures(secondaryExposures, exposureMapping));
};
exports._createLayerParameterExposure = _createLayerParameterExposure;
const _addEvaluationDetailsToMetadata = (details, metadata)=>{
    metadata['reason'] = details.reason;
    if (details.lcut) metadata['lcut'] = String(details.lcut);
    if (details.receivedAt) metadata['receivedAt'] = String(details.receivedAt);
    return metadata;
};

},{}],"lMDF6":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LoggingEnabledOption = exports.LogEventCompressionMode = void 0;
exports.LogEventCompressionMode = {
    /** Do not compress request bodies */ Disabled: 'd',
    /** Compress request bodies unless a network proxy is configured */ Enabled: 'e',
    /** Always compress request bodies, even when a proxy is configured */ Forced: 'f'
};
exports.LoggingEnabledOption = {
    disabled: 'disabled',
    browserOnly: 'browser-only',
    always: 'always'
};

},{}],"7xJdA":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._setObjectInStorage = exports._getObjectFromStorage = exports.Storage = void 0;
const Log_1 = require("16d7b1d2b028631c");
const SafeJs_1 = require("bbb434ec1256deff");
const inMemoryStore = {};
const _inMemoryProvider = {
    isReady: ()=>true,
    isReadyResolver: ()=>null,
    getProviderName: ()=>'InMemory',
    getItem: (key)=>inMemoryStore[key] ? inMemoryStore[key] : null,
    setItem: (key, value)=>{
        inMemoryStore[key] = value;
    },
    removeItem: (key)=>{
        delete inMemoryStore[key];
    },
    getAllKeys: ()=>Object.keys(inMemoryStore)
};
let _localStorageProvider = null;
try {
    const win = (0, SafeJs_1._getWindowSafe)();
    if (win && win.localStorage && typeof win.localStorage.getItem === 'function') _localStorageProvider = {
        isReady: ()=>true,
        isReadyResolver: ()=>null,
        getProviderName: ()=>'LocalStorage',
        getItem: (key)=>win.localStorage.getItem(key),
        setItem: (key, value)=>win.localStorage.setItem(key, value),
        removeItem: (key)=>win.localStorage.removeItem(key),
        getAllKeys: ()=>Object.keys(win.localStorage)
    };
} catch (error) {
    Log_1.Log.warn('Failed to setup localStorageProvider.');
}
let _main = _localStorageProvider !== null && _localStorageProvider !== void 0 ? _localStorageProvider : _inMemoryProvider;
let _current = _main;
function _inMemoryBreaker(action) {
    try {
        return action();
    } catch (error) {
        if (error instanceof Error && error.name === 'SecurityError') {
            exports.Storage._setProvider(_inMemoryProvider);
            return null;
        }
        if (error instanceof Error && error.name === 'QuotaExceededError') {
            const allKeys = exports.Storage.getAllKeys();
            const statsigKeys = allKeys.filter((key)=>key.startsWith('statsig.'));
            error.message = `${error.message}. Statsig Keys: ${statsigKeys.length}`;
        }
        throw error;
    }
}
exports.Storage = {
    isReady: ()=>_current.isReady(),
    isReadyResolver: ()=>_current.isReadyResolver(),
    getProviderName: ()=>_current.getProviderName(),
    getItem: (key)=>_inMemoryBreaker(()=>_current.getItem(key)),
    setItem: (key, value)=>_inMemoryBreaker(()=>_current.setItem(key, value)),
    removeItem: (key)=>_current.removeItem(key),
    getAllKeys: ()=>_current.getAllKeys(),
    // StorageProviderManagment
    _setProvider: (newProvider)=>{
        _main = newProvider;
        _current = newProvider;
    },
    _setDisabled: (isDisabled)=>{
        if (isDisabled) _current = _inMemoryProvider;
        else _current = _main;
    }
};
function _getObjectFromStorage(key) {
    const value = exports.Storage.getItem(key);
    return JSON.parse(value !== null && value !== void 0 ? value : 'null');
}
exports._getObjectFromStorage = _getObjectFromStorage;
function _setObjectInStorage(key, obj) {
    exports.Storage.setItem(key, JSON.stringify(obj));
}
exports._setObjectInStorage = _setObjectInStorage;

},{"16d7b1d2b028631c":"2sUQY","bbb434ec1256deff":"cUsMd"}],"h1zFS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UrlConfiguration = void 0;
const Hashing_1 = require("d1b1973ef460c591");
const NetworkConfig_1 = require("5ace51cf09d94841");
const ENDPOINT_DNS_KEY_MAP = {
    [NetworkConfig_1.Endpoint._initialize]: 'i',
    [NetworkConfig_1.Endpoint._rgstr]: 'e',
    [NetworkConfig_1.Endpoint._download_config_specs]: 'd'
};
class UrlConfiguration {
    constructor(endpoint, customUrl, customApi, fallbackUrls){
        this.customUrl = null;
        this.fallbackUrls = null;
        this.endpoint = endpoint;
        this.endpointDnsKey = ENDPOINT_DNS_KEY_MAP[endpoint];
        if (customUrl) this.customUrl = customUrl;
        if (!customUrl && customApi) this.customUrl = customApi.endsWith('/') ? `${customApi}${endpoint}` : `${customApi}/${endpoint}`;
        if (fallbackUrls) this.fallbackUrls = fallbackUrls;
        const defaultApi = NetworkConfig_1.NetworkDefault[endpoint];
        this.defaultUrl = `${defaultApi}/${endpoint}`;
    }
    getUrl() {
        var _a;
        return (_a = this.customUrl) !== null && _a !== void 0 ? _a : this.defaultUrl;
    }
    getChecksum() {
        var _a;
        const fallbacks = ((_a = this.fallbackUrls) !== null && _a !== void 0 ? _a : []).sort().join(',');
        return (0, Hashing_1._DJB2)(this.customUrl + fallbacks);
    }
}
exports.UrlConfiguration = UrlConfiguration;

},{"d1b1973ef460c591":"afwdA","5ace51cf09d94841":"emeMp"}],"1T2CG":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._notifyVisibilityChanged = exports._subscribeToVisiblityChanged = exports._isUnloading = exports._isCurrentlyVisible = void 0;
const SafeJs_1 = require("eb6f8a7be720e74e");
const FOREGROUND = 'foreground';
const BACKGROUND = 'background';
const LISTENERS = [];
let current = FOREGROUND;
let isUnloading = false;
const _isCurrentlyVisible = ()=>{
    return current === FOREGROUND;
};
exports._isCurrentlyVisible = _isCurrentlyVisible;
const _isUnloading = ()=>isUnloading;
exports._isUnloading = _isUnloading;
const _subscribeToVisiblityChanged = (listener)=>{
    LISTENERS.unshift(listener);
};
exports._subscribeToVisiblityChanged = _subscribeToVisiblityChanged;
const _notifyVisibilityChanged = (visibility)=>{
    if (visibility === current) return;
    current = visibility;
    LISTENERS.forEach((l)=>l(visibility));
};
exports._notifyVisibilityChanged = _notifyVisibilityChanged;
(0, SafeJs_1._addWindowEventListenerSafe)('focus', ()=>{
    isUnloading = false;
    (0, exports._notifyVisibilityChanged)(FOREGROUND);
});
(0, SafeJs_1._addWindowEventListenerSafe)('blur', ()=>(0, exports._notifyVisibilityChanged)(BACKGROUND));
(0, SafeJs_1._addDocumentEventListenerSafe)('visibilitychange', ()=>{
    (0, exports._notifyVisibilityChanged)(document.visibilityState === 'visible' ? FOREGROUND : BACKGROUND);
});
(0, SafeJs_1._addWindowEventListenerSafe)((0, SafeJs_1._getUnloadEvent)(), ()=>{
    isUnloading = true;
    (0, exports._notifyVisibilityChanged)(BACKGROUND);
});

},{"eb6f8a7be720e74e":"cUsMd"}],"3mMVR":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StatsigMetadataProvider = exports.SDK_VERSION = void 0;
exports.SDK_VERSION = '3.19.0';
let metadata = {
    sdkVersion: exports.SDK_VERSION,
    sdkType: 'js-mono'
};
exports.StatsigMetadataProvider = {
    get: ()=>metadata,
    add: (additions)=>{
        metadata = Object.assign(Object.assign({}, metadata), additions);
    }
};

},{}],"5rYeP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"9fLXb":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._makeDataAdapterResult = exports.DataAdapterCore = void 0;
const Log_1 = require("4c2345053e2636b7");
const StableID_1 = require("b782232fe31f88b7");
const StatsigUser_1 = require("5692330aadfb4abc");
const StorageProvider_1 = require("8390bf8d22ab2415");
const TypedJsonParse_1 = require("9f8f461c7d4030e5");
const CACHE_LIMIT = 10;
class DataAdapterCore {
    constructor(_adapterName, _cacheSuffix){
        this._adapterName = _adapterName;
        this._cacheSuffix = _cacheSuffix;
        this._options = null;
        this._sdkKey = null;
        this._lastModifiedStoreKey = `statsig.last_modified_time.${_cacheSuffix}`;
        this._inMemoryCache = new InMemoryCache();
    }
    attach(sdkKey, options, _network) {
        this._sdkKey = sdkKey;
        this._options = options;
    }
    getDataSync(user) {
        const normalized = user && (0, StatsigUser_1._normalizeUser)(user, this._options);
        const cacheKey = this._getCacheKey(normalized);
        const inMem = this._inMemoryCache.get(cacheKey, normalized);
        if (inMem && this._getIsCacheValueValid(inMem)) return inMem;
        const cache = this._loadFromCache(cacheKey);
        if (cache && this._getIsCacheValueValid(cache)) {
            this._inMemoryCache.add(cacheKey, cache);
            return this._inMemoryCache.get(cacheKey, normalized);
        }
        return null;
    }
    setData(data, user) {
        const normalized = user && (0, StatsigUser_1._normalizeUser)(user, this._options);
        const cacheKey = this._getCacheKey(normalized);
        this._inMemoryCache.add(cacheKey, _makeDataAdapterResult('Bootstrap', data, null, normalized));
    }
    _getIsCacheValueValid(current) {
        return current.stableID == null || current.stableID === StableID_1.StableID.get(this._getSdkKey());
    }
    _getDataAsyncImpl(current, user, options) {
        return __awaiter(this, void 0, void 0, function*() {
            if (!StorageProvider_1.Storage.isReady()) yield StorageProvider_1.Storage.isReadyResolver();
            const cache = current !== null && current !== void 0 ? current : this.getDataSync(user);
            const ops = [
                this._fetchAndPrepFromNetwork(cache, user, options)
            ];
            if (options === null || options === void 0 ? void 0 : options.timeoutMs) ops.push(new Promise((r)=>setTimeout(r, options.timeoutMs)).then(()=>{
                Log_1.Log.debug('Fetching latest value timed out');
                return null;
            }));
            return yield Promise.race(ops);
        });
    }
    _prefetchDataImpl(user, options) {
        return __awaiter(this, void 0, void 0, function*() {
            const normalized = user && (0, StatsigUser_1._normalizeUser)(user, this._options);
            const cacheKey = this._getCacheKey(normalized);
            const result = yield this._getDataAsyncImpl(null, normalized, options);
            if (result) this._inMemoryCache.add(cacheKey, Object.assign(Object.assign({}, result), {
                source: 'Prefetch'
            }));
        });
    }
    _fetchAndPrepFromNetwork(cachedResult, user, options) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a;
            const cachedData = (_a = cachedResult === null || cachedResult === void 0 ? void 0 : cachedResult.data) !== null && _a !== void 0 ? _a : null;
            const isCacheValidFor204 = cachedResult != null && this._isCachedResultValidFor204(cachedResult, user);
            const latest = yield this._fetchFromNetwork(cachedData, user, options, isCacheValidFor204);
            if (!latest) {
                Log_1.Log.debug('No response returned for latest value');
                return null;
            }
            const response = (0, TypedJsonParse_1._typedJsonParse)(latest, 'has_updates', 'Response');
            const sdkKey = this._getSdkKey();
            const stableID = StableID_1.StableID.get(sdkKey);
            let result = null;
            if ((response === null || response === void 0 ? void 0 : response.has_updates) === true) result = _makeDataAdapterResult('Network', latest, stableID, user);
            else if (cachedData && (response === null || response === void 0 ? void 0 : response.has_updates) === false) result = _makeDataAdapterResult('NetworkNotModified', cachedData, stableID, user);
            else return null;
            const cacheKey = this._getCacheKey(user);
            this._inMemoryCache.add(cacheKey, result);
            this._writeToCache(cacheKey, result);
            return result;
        });
    }
    _getSdkKey() {
        if (this._sdkKey != null) return this._sdkKey;
        Log_1.Log.error(`${this._adapterName} is not attached to a Client`);
        return '';
    }
    _loadFromCache(cacheKey) {
        var _a;
        const cache = (_a = StorageProvider_1.Storage.getItem) === null || _a === void 0 ? void 0 : _a.call(StorageProvider_1.Storage, cacheKey);
        if (cache == null) return null;
        const result = (0, TypedJsonParse_1._typedJsonParse)(cache, 'source', 'Cached Result');
        return result ? Object.assign(Object.assign({}, result), {
            source: 'Cache'
        }) : null;
    }
    _writeToCache(cacheKey, result) {
        StorageProvider_1.Storage.setItem(cacheKey, JSON.stringify(result));
        this._runLocalStorageCacheEviction(cacheKey);
    }
    _runLocalStorageCacheEviction(cacheKey) {
        var _a;
        const lastModifiedTimeMap = (_a = (0, StorageProvider_1._getObjectFromStorage)(this._lastModifiedStoreKey)) !== null && _a !== void 0 ? _a : {};
        lastModifiedTimeMap[cacheKey] = Date.now();
        const evictable = _getEvictableKey(lastModifiedTimeMap, CACHE_LIMIT);
        if (evictable) {
            delete lastModifiedTimeMap[evictable];
            StorageProvider_1.Storage.removeItem(evictable);
        }
        (0, StorageProvider_1._setObjectInStorage)(this._lastModifiedStoreKey, lastModifiedTimeMap);
    }
}
exports.DataAdapterCore = DataAdapterCore;
function _makeDataAdapterResult(source, data, stableID, user) {
    return {
        source,
        data,
        receivedAt: Date.now(),
        stableID,
        fullUserHash: (0, StatsigUser_1._getFullUserHash)(user)
    };
}
exports._makeDataAdapterResult = _makeDataAdapterResult;
class InMemoryCache {
    constructor(){
        this._data = {};
    }
    get(cacheKey, user) {
        var _a;
        const result = this._data[cacheKey];
        const cached = result === null || result === void 0 ? void 0 : result.stableID;
        const provided = (_a = user === null || user === void 0 ? void 0 : user.customIDs) === null || _a === void 0 ? void 0 : _a.stableID;
        if (provided && cached && provided !== cached) {
            Log_1.Log.warn("'StatsigUser.customIDs.stableID' mismatch");
            return null;
        }
        return result;
    }
    add(cacheKey, value) {
        const oldest = _getEvictableKey(this._data, CACHE_LIMIT - 1);
        if (oldest) delete this._data[oldest];
        this._data[cacheKey] = value;
    }
    merge(values) {
        this._data = Object.assign(Object.assign({}, this._data), values);
    }
}
function _getEvictableKey(data, limit) {
    const keys = Object.keys(data);
    if (keys.length <= limit) return null;
    return keys.reduce((prevKey, currKey)=>{
        const prev = data[prevKey];
        const current = data[currKey];
        if (typeof prev === 'object' && typeof current === 'object') return current.receivedAt < prev.receivedAt ? currKey : prevKey;
        return current < prev ? currKey : prevKey;
    });
}

},{"4c2345053e2636b7":"2sUQY","b782232fe31f88b7":"5aiaP","5692330aadfb4abc":"dHeC4","8390bf8d22ab2415":"7xJdA","9f8f461c7d4030e5":"kr5OI"}],"5aiaP":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StableID = void 0;
const CacheKey_1 = require("4970502fa559167e");
const Log_1 = require("dae49e742e3db447");
const SafeJs_1 = require("2dceed2dfa7792c8");
const StorageProvider_1 = require("1049fc4d2613491d");
const UUID_1 = require("a1544987271f0909");
const PROMISE_MAP = {};
const COOKIE_ENABLED_MAP = {};
const DISABLED_MAP = {};
exports.StableID = {
    cookiesEnabled: false,
    randomID: Math.random().toString(36),
    get: (sdkKey)=>{
        if (DISABLED_MAP[sdkKey]) return null;
        if (PROMISE_MAP[sdkKey] != null) return PROMISE_MAP[sdkKey];
        let stableID = null;
        stableID = _loadFromCookie(sdkKey);
        if (stableID != null) {
            PROMISE_MAP[sdkKey] = stableID;
            _persistToStorage(stableID, sdkKey);
            return stableID;
        }
        stableID = _loadFromStorage(sdkKey);
        if (stableID == null) stableID = (0, UUID_1.getUUID)();
        _persistToStorage(stableID, sdkKey);
        _persistToCookie(stableID, sdkKey);
        PROMISE_MAP[sdkKey] = stableID;
        return stableID;
    },
    setOverride: (override, sdkKey)=>{
        PROMISE_MAP[sdkKey] = override;
        _persistToStorage(override, sdkKey);
        _persistToCookie(override, sdkKey);
    },
    _setCookiesEnabled: (sdkKey, cookiesEnabled)=>{
        COOKIE_ENABLED_MAP[sdkKey] = cookiesEnabled;
    },
    _setDisabled: (sdkKey, disabled)=>{
        DISABLED_MAP[sdkKey] = disabled;
    }
};
function _getStableIDStorageKey(sdkKey) {
    return `statsig.stable_id.${(0, CacheKey_1._getStorageKey)(sdkKey)}`;
}
function _persistToStorage(stableID, sdkKey) {
    const storageKey = _getStableIDStorageKey(sdkKey);
    try {
        (0, StorageProvider_1._setObjectInStorage)(storageKey, stableID);
    } catch (e) {
        Log_1.Log.warn('Failed to save StableID to storage');
    }
}
function _loadFromStorage(sdkKey) {
    const storageKey = _getStableIDStorageKey(sdkKey);
    return (0, StorageProvider_1._getObjectFromStorage)(storageKey);
}
function _loadFromCookie(sdkKey) {
    if (!COOKIE_ENABLED_MAP[sdkKey] || (0, SafeJs_1._getDocumentSafe)() == null) return null;
    const cookies = document.cookie.split(';');
    for (const cookie of cookies){
        const [key, value] = cookie.trim().split('=');
        if (key === _getCookieName(sdkKey)) return decodeURIComponent(value);
    }
    return null;
}
function _persistToCookie(stableID, sdkKey) {
    if (!COOKIE_ENABLED_MAP[sdkKey] || !document) return;
    const expiryDate = new Date();
    expiryDate.setFullYear(expiryDate.getFullYear() + 1);
    document.cookie = `${_getCookieName(sdkKey)}=${encodeURIComponent(stableID)}; expires=${expiryDate.toUTCString()}; path=/`;
}
function _getCookieName(sdkKey) {
    return `statsig.stable_id.${(0, CacheKey_1._getStorageKey)(sdkKey)}`;
}

},{"4970502fa559167e":"8znLo","dae49e742e3db447":"2sUQY","2dceed2dfa7792c8":"cUsMd","1049fc4d2613491d":"7xJdA","a1544987271f0909":"BRO32"}],"BRO32":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getUUID = void 0;
function getUUID() {
    if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') return crypto.randomUUID();
    let d = new Date().getTime();
    let d2 = typeof performance !== 'undefined' && performance.now && performance.now() * 1000 || 0;
    const y = '89ab'[Math.floor(Math.random() * 4)];
    return `xxxxxxxx-xxxx-4xxx-${y}xxx-xxxxxxxxxxxx`.replace(/[xy]/g, (c)=>{
        let r = Math.random() * 16;
        if (d > 0) {
            r = (d + r) % 16 | 0;
            d = Math.floor(d / 16);
        } else {
            r = (d2 + r) % 16 | 0;
            d2 = Math.floor(d2 / 16);
        }
        return (c === 'x' ? r : r & 0x7 | 0x8).toString(16);
    });
}
exports.getUUID = getUUID;

},{}],"dHeC4":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._getFullUserHash = exports._normalizeUser = void 0;
const Hashing_1 = require("fa60109508cc58b9");
const Log_1 = require("1155c27a28414479");
function _normalizeUser(original, options, fallbackEnvironment) {
    try {
        const copy = JSON.parse(JSON.stringify(original));
        if (options != null && options.environment != null) copy.statsigEnvironment = options.environment;
        else if (fallbackEnvironment != null) copy.statsigEnvironment = {
            tier: fallbackEnvironment
        };
        return copy;
    } catch (error) {
        Log_1.Log.error('Failed to JSON.stringify user');
        return {
            statsigEnvironment: undefined
        };
    }
}
exports._normalizeUser = _normalizeUser;
function _getFullUserHash(user) {
    return user ? (0, Hashing_1._DJB2Object)(user) : null;
}
exports._getFullUserHash = _getFullUserHash;

},{"fa60109508cc58b9":"afwdA","1155c27a28414479":"2sUQY"}],"kr5OI":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._typedJsonParse = void 0;
const Log_1 = require("1b9f8a59560e05c1");
/**
 *
 * @param {string} data The values to parse into T
 * @param {string} guard A field that must exists on the parsed object for the parse to be valid
 * @param {string} error An error to print via Log.error() when parsing fails
 * @returns {T | null} The parse object T or null if it failed
 */ function _typedJsonParse(data, guard, typeName) {
    try {
        const result = JSON.parse(data);
        if (result && typeof result === 'object' && guard in result) return result;
    } catch (_a) {
    // noop
    }
    Log_1.Log.error(`Failed to parse ${typeName}`);
    return null;
}
exports._typedJsonParse = _typedJsonParse;

},{"1b9f8a59560e05c1":"2sUQY"}],"fT6LC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"eBOFf":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ErrorBoundary = exports.EXCEPTION_ENDPOINT = void 0;
const Log_1 = require("2c3423611c11191c");
const SDKType_1 = require("90d0e4067ff3b9f3");
const StatsigMetadata_1 = require("858cca74e05443c0");
exports.EXCEPTION_ENDPOINT = 'https://statsigapi.net/v1/sdk_exception';
const UNKNOWN_ERROR = '[Statsig] UnknownError';
class ErrorBoundary {
    constructor(_sdkKey, _options, _emitter, _lastSeenError){
        this._sdkKey = _sdkKey;
        this._options = _options;
        this._emitter = _emitter;
        this._lastSeenError = _lastSeenError;
        this._seen = new Set();
    }
    wrap(instance) {
        try {
            const obj = instance;
            _getAllInstanceMethodNames(obj).forEach((name)=>{
                const original = obj[name];
                if ('$EB' in original) return;
                obj[name] = (...args)=>{
                    return this._capture(name, ()=>original.apply(instance, args));
                };
                obj[name].$EB = true;
            });
        } catch (err) {
            this._onError('eb:wrap', err);
        }
    }
    logError(tag, error) {
        this._onError(tag, error);
    }
    getLastSeenErrorAndReset() {
        const tempError = this._lastSeenError;
        this._lastSeenError = undefined;
        return tempError !== null && tempError !== void 0 ? tempError : null;
    }
    attachErrorIfNoneExists(error) {
        if (this._lastSeenError) return;
        this._lastSeenError = _resolveError(error);
    }
    _capture(tag, task) {
        try {
            const res = task();
            if (res && res instanceof Promise) return res.catch((err)=>this._onError(tag, err));
            return res;
        } catch (error) {
            this._onError(tag, error);
            return null;
        }
    }
    _onError(tag, error) {
        try {
            Log_1.Log.warn(`Caught error in ${tag}`, {
                error
            });
            const impl = ()=>__awaiter(this, void 0, void 0, function*() {
                    var _a, _b, _c, _d, _e, _f, _g;
                    const unwrapped = error ? error : Error(UNKNOWN_ERROR);
                    const isError = unwrapped instanceof Error;
                    const name = isError ? unwrapped.name : 'No Name';
                    const resolvedError = _resolveError(unwrapped);
                    this._lastSeenError = resolvedError;
                    if (this._seen.has(name)) return;
                    this._seen.add(name);
                    if ((_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.networkConfig) === null || _b === void 0 ? void 0 : _b.preventAllNetworkTraffic) {
                        (_c = this._emitter) === null || _c === void 0 || _c.call(this, {
                            name: 'error',
                            error,
                            tag
                        });
                        return;
                    }
                    const sdkType = SDKType_1.SDKType._get(this._sdkKey);
                    const statsigMetadata = StatsigMetadata_1.StatsigMetadataProvider.get();
                    const info = isError ? unwrapped.stack : _getDescription(unwrapped);
                    const body = Object.assign({
                        tag,
                        exception: name,
                        info,
                        statsigOptions: _getStatsigOptionLoggingCopy(this._options)
                    }, Object.assign(Object.assign({}, statsigMetadata), {
                        sdkType
                    }));
                    const func = (_f = (_e = (_d = this._options) === null || _d === void 0 ? void 0 : _d.networkConfig) === null || _e === void 0 ? void 0 : _e.networkOverrideFunc) !== null && _f !== void 0 ? _f : fetch;
                    yield func(exports.EXCEPTION_ENDPOINT, {
                        method: 'POST',
                        headers: {
                            'STATSIG-API-KEY': this._sdkKey,
                            'STATSIG-SDK-TYPE': String(sdkType),
                            'STATSIG-SDK-VERSION': String(statsigMetadata.sdkVersion),
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(body)
                    });
                    (_g = this._emitter) === null || _g === void 0 || _g.call(this, {
                        name: 'error',
                        error,
                        tag
                    });
                });
            impl().then(()=>{
            /* noop */ }).catch(()=>{
            /* noop */ });
        } catch (_error) {
        /* noop */ }
    }
}
exports.ErrorBoundary = ErrorBoundary;
function _resolveError(error) {
    if (error instanceof Error) return error;
    else if (typeof error === 'string') return new Error(error);
    else return new Error('An unknown error occurred.');
}
function _getDescription(obj) {
    try {
        return JSON.stringify(obj);
    } catch (_a) {
        return UNKNOWN_ERROR;
    }
}
function _getAllInstanceMethodNames(instance) {
    const names = new Set();
    let proto = Object.getPrototypeOf(instance);
    while(proto && proto !== Object.prototype){
        Object.getOwnPropertyNames(proto).filter((prop)=>typeof (proto === null || proto === void 0 ? void 0 : proto[prop]) === 'function').forEach((name)=>names.add(name));
        proto = Object.getPrototypeOf(proto);
    }
    return Array.from(names);
}
function _getStatsigOptionLoggingCopy(options) {
    if (!options) return {};
    const loggingCopy = {};
    Object.entries(options).forEach(([option, value])=>{
        const valueType = typeof value;
        switch(valueType){
            case 'number':
            case 'bigint':
            case 'boolean':
                loggingCopy[String(option)] = value;
                break;
            case 'string':
                if (value.length < 50) loggingCopy[String(option)] = value;
                else loggingCopy[String(option)] = 'set';
                break;
            case 'object':
                if (option === 'environment') loggingCopy['environment'] = value;
                else if (option === 'networkConfig') loggingCopy['networkConfig'] = value;
                else loggingCopy[String(option)] = value != null ? 'set' : 'unset';
                break;
            default:
        }
    });
    return loggingCopy;
}

},{"2c3423611c11191c":"2sUQY","90d0e4067ff3b9f3":"bnSJa","858cca74e05443c0":"3mMVR"}],"bnSJa":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SDKType = void 0;
const SDK_CLIENT = {};
let suffix;
exports.SDKType = {
    _get: (sdkKey)=>{
        var _a;
        return ((_a = SDK_CLIENT[sdkKey]) !== null && _a !== void 0 ? _a : 'js-mono') + (suffix !== null && suffix !== void 0 ? suffix : '');
    },
    _setClientType (sdkKey, client) {
        SDK_CLIENT[sdkKey] = client;
    },
    _setBindingType (binding) {
        if (!suffix || suffix === '-react') suffix = '-' + binding;
    }
};

},{}],"huchd":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"iJnkC":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"5wsee":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"aPml5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createMemoKey = exports.MemoPrefix = void 0;
exports.MemoPrefix = {
    _gate: 'g',
    _dynamicConfig: 'c',
    _experiment: 'e',
    _layer: 'l',
    _paramStore: 'p'
};
const EXIST_KEYS = new Set([]);
const DO_NOT_MEMO_KEYS = new Set([
    // Add keys that if exist, should not be memoized
    'userPersistedValues'
]);
function createMemoKey(prefix, name, options) {
    let cacheKey = `${prefix}|${name}`;
    if (!options) return cacheKey;
    for (const key of Object.keys(options)){
        if (DO_NOT_MEMO_KEYS.has(key)) return undefined;
        if (EXIST_KEYS.has(key)) cacheKey += `|${key}=true`;
        else cacheKey += `|${key}=${options[key]}`;
    }
    return cacheKey;
}
exports.createMemoKey = createMemoKey;

},{}],"8SBaf":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NetworkCore = void 0;
require("36e307dfd2065fb5");
const __StatsigGlobal_1 = require("36e307dfd2065fb5");
const Diagnostics_1 = require("c39ddd115a17d14");
const Log_1 = require("bafeb341cc1230ce");
const NetworkConfig_1 = require("7eb08326708b7bee");
const NetworkFallbackResolver_1 = require("40e6317fffd4a089");
const SDKFlags_1 = require("b22043cec88dc3fc");
const SDKType_1 = require("ed11bee44596770b");
const SafeJs_1 = require("1892f5713216dd5d");
const SessionID_1 = require("10192a13964fd88c");
const StableID_1 = require("40e02cabf474f654");
const StatsigClientEventEmitter_1 = require("718f759b642099a4");
const StatsigMetadata_1 = require("9eecded5c08e3181");
const StatsigOptionsCommon_1 = require("7445b8e594502091");
const VisibilityObserving_1 = require("77408aea95728102");
const DEFAULT_TIMEOUT_MS = 10000;
const BACKOFF_BASE_MS = 500;
const BACKOFF_MAX_MS = 30000;
const RATE_LIMIT_WINDOW_MS = 1000;
const RATE_LIMIT_MAX_REQ_COUNT = 50;
const LEAK_RATE = RATE_LIMIT_MAX_REQ_COUNT / RATE_LIMIT_WINDOW_MS;
const RETRYABLE_CODES = new Set([
    408,
    500,
    502,
    503,
    504,
    522,
    524,
    599
]);
class NetworkCore {
    constructor(options, _emitter){
        this._emitter = _emitter;
        this._errorBoundary = null;
        this._timeout = DEFAULT_TIMEOUT_MS;
        this._netConfig = {};
        this._options = {};
        this._leakyBucket = {};
        this._lastUsedInitUrl = null;
        if (options) this._options = options;
        if (this._options.networkConfig) this._netConfig = this._options.networkConfig;
        if (this._netConfig.networkTimeoutMs) this._timeout = this._netConfig.networkTimeoutMs;
        this._fallbackResolver = new NetworkFallbackResolver_1.NetworkFallbackResolver(this._options);
        this.setLogEventCompressionMode(this._getLogEventCompressionMode(options));
    }
    setLogEventCompressionMode(mode) {
        this._options.logEventCompressionMode = mode;
    }
    setErrorBoundary(errorBoundary) {
        this._errorBoundary = errorBoundary;
        this._errorBoundary.wrap(this);
        this._errorBoundary.wrap(this._fallbackResolver);
        this._fallbackResolver.setErrorBoundary(errorBoundary);
    }
    isBeaconSupported() {
        return typeof navigator !== 'undefined' && typeof navigator.sendBeacon === 'function';
    }
    getLastUsedInitUrlAndReset() {
        const tempUrl = this._lastUsedInitUrl;
        this._lastUsedInitUrl = null;
        return tempUrl;
    }
    beacon(args) {
        if (!_ensureValidSdkKey(args)) return false;
        const argsInternal = this._getInternalRequestArgs('POST', args);
        const url = this._getPopulatedURL(argsInternal);
        const nav = navigator;
        return nav.sendBeacon.bind(nav)(url, argsInternal.body);
    }
    post(args) {
        return __awaiter(this, void 0, void 0, function*() {
            const argsInternal = this._getInternalRequestArgs('POST', args);
            this._tryEncodeBody(argsInternal);
            yield this._tryToCompressBody(argsInternal);
            return this._sendRequest(argsInternal);
        });
    }
    get(args) {
        const argsInternal = this._getInternalRequestArgs('GET', args);
        return this._sendRequest(argsInternal);
    }
    _sendRequest(args) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b, _c, _d;
            if (!_ensureValidSdkKey(args)) return null;
            if (this._netConfig.preventAllNetworkTraffic) return null;
            const { method, body, retries, attempt } = args;
            const endpoint = args.urlConfig.endpoint;
            if (this._isRateLimited(endpoint)) {
                Log_1.Log.warn(`Request to ${endpoint} was blocked because you are making requests too frequently.`);
                return null;
            }
            const currentAttempt = attempt !== null && attempt !== void 0 ? attempt : 1;
            const abortController = typeof AbortController !== 'undefined' ? new AbortController() : null;
            const timeoutHandle = setTimeout(()=>{
                abortController === null || abortController === void 0 || abortController.abort(`Timeout of ${this._timeout}ms expired.`);
            }, this._timeout);
            const populatedUrl = this._getPopulatedURL(args);
            let response = null;
            const keepalive = (0, VisibilityObserving_1._isUnloading)();
            try {
                const config = {
                    method,
                    body,
                    headers: Object.assign({}, args.headers),
                    signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal,
                    priority: args.priority,
                    keepalive
                };
                _tryMarkInitStart(args, currentAttempt);
                const bucket = this._leakyBucket[endpoint];
                if (bucket) {
                    bucket.lastRequestTime = Date.now();
                    this._leakyBucket[endpoint] = bucket;
                }
                const func = (_a = this._netConfig.networkOverrideFunc) !== null && _a !== void 0 ? _a : fetch;
                response = yield func(populatedUrl, config);
                clearTimeout(timeoutHandle);
                if (!response.ok) {
                    const text = yield response.text().catch(()=>'No Text');
                    const err = new Error(`NetworkError: ${populatedUrl} ${text}`);
                    err.name = 'NetworkError';
                    throw err;
                }
                const text = yield response.text();
                _tryMarkInitEnd(args, response, currentAttempt, text);
                this._fallbackResolver.tryBumpExpiryTime(args.sdkKey, args.urlConfig);
                return {
                    body: text,
                    code: response.status
                };
            } catch (error) {
                const errorMessage = _getErrorMessage(abortController, error);
                const timedOut = _didTimeout(abortController);
                _tryMarkInitEnd(args, response, currentAttempt, '', error);
                const fallbackUpdated = yield this._fallbackResolver.tryFetchUpdatedFallbackInfo(args.sdkKey, args.urlConfig, errorMessage, timedOut);
                if (fallbackUpdated) args.fallbackUrl = this._fallbackResolver.getActiveFallbackUrl(args.sdkKey, args.urlConfig);
                if (!retries || currentAttempt > retries || !RETRYABLE_CODES.has((_b = response === null || response === void 0 ? void 0 : response.status) !== null && _b !== void 0 ? _b : 500)) {
                    (_c = this._emitter) === null || _c === void 0 || _c.call(this, {
                        name: 'error',
                        error,
                        tag: StatsigClientEventEmitter_1.ErrorTag.NetworkError,
                        requestArgs: args
                    });
                    const formattedErrorMsg = `A networking error occurred during ${method} request to ${populatedUrl}.`;
                    Log_1.Log.error(formattedErrorMsg, errorMessage, error);
                    (_d = this._errorBoundary) === null || _d === void 0 || _d.attachErrorIfNoneExists(formattedErrorMsg);
                    return null;
                }
                yield _exponentialBackoff(currentAttempt);
                return this._sendRequest(Object.assign(Object.assign({}, args), {
                    retries,
                    attempt: currentAttempt + 1
                }));
            }
        });
    }
    _getLogEventCompressionMode(options) {
        // Handle backward compatibility for deprecated disableCompression flag
        let compressionMode = options === null || options === void 0 ? void 0 : options.logEventCompressionMode;
        if (!compressionMode && (options === null || options === void 0 ? void 0 : options.disableCompression) === true) compressionMode = StatsigOptionsCommon_1.LogEventCompressionMode.Disabled;
        // Default to enabled if unset
        if (!compressionMode) compressionMode = StatsigOptionsCommon_1.LogEventCompressionMode.Enabled;
        return compressionMode;
    }
    _isRateLimited(endpoint) {
        var _a;
        const now = Date.now();
        const bucket = (_a = this._leakyBucket[endpoint]) !== null && _a !== void 0 ? _a : {
            count: 0,
            lastRequestTime: now
        };
        const elapsed = now - bucket.lastRequestTime;
        const leakedRequests = Math.floor(elapsed * LEAK_RATE);
        bucket.count = Math.max(0, bucket.count - leakedRequests);
        if (bucket.count >= RATE_LIMIT_MAX_REQ_COUNT) return true;
        bucket.count += 1;
        bucket.lastRequestTime = now;
        this._leakyBucket[endpoint] = bucket;
        return false;
    }
    _getPopulatedURL(args) {
        var _a;
        const url = (_a = args.fallbackUrl) !== null && _a !== void 0 ? _a : args.urlConfig.getUrl();
        if (args.urlConfig.endpoint === NetworkConfig_1.Endpoint._initialize || args.urlConfig.endpoint === NetworkConfig_1.Endpoint._download_config_specs) this._lastUsedInitUrl = url;
        const params = Object.assign({
            [NetworkConfig_1.NetworkParam.SdkKey]: args.sdkKey,
            [NetworkConfig_1.NetworkParam.SdkType]: SDKType_1.SDKType._get(args.sdkKey),
            [NetworkConfig_1.NetworkParam.SdkVersion]: StatsigMetadata_1.SDK_VERSION,
            [NetworkConfig_1.NetworkParam.Time]: String(Date.now()),
            [NetworkConfig_1.NetworkParam.SessionID]: SessionID_1.SessionID.get(args.sdkKey)
        }, args.params);
        const query = Object.keys(params).map((key)=>{
            return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;
        }).join('&');
        return `${url}${query ? `?${query}` : ''}`;
    }
    _tryEncodeBody(args) {
        var _a;
        const win = (0, SafeJs_1._getWindowSafe)();
        const body = args.body;
        if (!args.isStatsigEncodable || this._options.disableStatsigEncoding || typeof body !== 'string' || (0, __StatsigGlobal_1._getStatsigGlobalFlag)('no-encode') != null || !(win === null || win === void 0 ? void 0 : win.btoa)) return;
        try {
            args.body = win.btoa(body).split('').reverse().join('');
            args.params = Object.assign(Object.assign({}, (_a = args.params) !== null && _a !== void 0 ? _a : {}), {
                [NetworkConfig_1.NetworkParam.StatsigEncoded]: '1'
            });
        } catch (e) {
            Log_1.Log.warn(`Request encoding failed for ${args.urlConfig.getUrl()}`, e);
        }
    }
    _tryToCompressBody(args) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a;
            const body = args.body;
            if (typeof body !== 'string' || !_allowCompression(args, this._options)) return;
            try {
                const bytes = new TextEncoder().encode(body);
                const stream = new CompressionStream('gzip');
                const writer = stream.writable.getWriter();
                writer.write(bytes).catch(Log_1.Log.error);
                writer.close().catch(Log_1.Log.error);
                const reader = stream.readable.getReader();
                const chunks = [];
                let result;
                // eslint-disable-next-line no-await-in-loop
                while(!(result = yield reader.read()).done)chunks.push(result.value);
                const totalLength = chunks.reduce((acc, chunk)=>acc + chunk.length, 0);
                const combined = new Uint8Array(totalLength);
                let offset = 0;
                for (const chunk of chunks){
                    combined.set(chunk, offset);
                    offset += chunk.length;
                }
                args.body = combined;
                args.params = Object.assign(Object.assign({}, (_a = args.params) !== null && _a !== void 0 ? _a : {}), {
                    [NetworkConfig_1.NetworkParam.IsGzipped]: '1'
                });
            } catch (e) {
                Log_1.Log.warn(`Request compression failed for ${args.urlConfig.getUrl()}`, e);
            }
        });
    }
    _getInternalRequestArgs(method, args) {
        const fallbackUrl = this._fallbackResolver.getActiveFallbackUrl(args.sdkKey, args.urlConfig);
        const result = Object.assign(Object.assign({}, args), {
            method,
            fallbackUrl
        });
        if ('data' in args) _populateRequestBody(result, args.data);
        return result;
    }
}
exports.NetworkCore = NetworkCore;
const _ensureValidSdkKey = (args)=>{
    if (!args.sdkKey) {
        Log_1.Log.warn('Unable to make request without an SDK key');
        return false;
    }
    return true;
};
const _populateRequestBody = (args, data)=>{
    const { sdkKey, fallbackUrl } = args;
    const stableID = StableID_1.StableID.get(sdkKey);
    const sessionID = SessionID_1.SessionID.get(sdkKey);
    const sdkType = SDKType_1.SDKType._get(sdkKey);
    args.body = JSON.stringify(Object.assign(Object.assign({}, data), {
        statsigMetadata: Object.assign(Object.assign({}, StatsigMetadata_1.StatsigMetadataProvider.get()), {
            stableID,
            sessionID,
            sdkType,
            fallbackUrl
        })
    }));
};
function _allowCompression(args, options) {
    if (!args.isCompressable) return false;
    // Never compress if 'no-compress' is set globally or required APIs are unavailable
    if ((0, __StatsigGlobal_1._getStatsigGlobalFlag)('no-compress') != null || typeof CompressionStream === 'undefined' || typeof TextEncoder === 'undefined') return false;
    const isProxy = args.urlConfig.customUrl != null || args.urlConfig.fallbackUrls != null;
    const flagEnabled = SDKFlags_1.SDKFlags.get(args.sdkKey, 'enable_log_event_compression') === true;
    switch(options.logEventCompressionMode){
        case StatsigOptionsCommon_1.LogEventCompressionMode.Disabled:
            return false;
        case StatsigOptionsCommon_1.LogEventCompressionMode.Enabled:
            // Only compress through proxy if flag is explicitly on
            if (isProxy && !flagEnabled) return false;
            return true;
        case StatsigOptionsCommon_1.LogEventCompressionMode.Forced:
            return true;
        default:
            return false;
    }
}
function _getErrorMessage(controller, error) {
    if ((controller === null || controller === void 0 ? void 0 : controller.signal.aborted) && typeof controller.signal.reason === 'string') return controller.signal.reason;
    if (typeof error === 'string') return error;
    if (error instanceof Error) return `${error.name}: ${error.message}`;
    return 'Unknown Error';
}
function _didTimeout(controller) {
    const timeout = (controller === null || controller === void 0 ? void 0 : controller.signal.aborted) && typeof controller.signal.reason === 'string' && controller.signal.reason.includes('Timeout');
    return timeout || false;
}
function _tryMarkInitStart(args, attempt) {
    if (args.urlConfig.endpoint !== NetworkConfig_1.Endpoint._initialize) return;
    Diagnostics_1.Diagnostics._markInitNetworkReqStart(args.sdkKey, {
        attempt
    });
}
function _tryMarkInitEnd(args, response, attempt, body, err) {
    if (args.urlConfig.endpoint !== NetworkConfig_1.Endpoint._initialize) return;
    Diagnostics_1.Diagnostics._markInitNetworkReqEnd(args.sdkKey, Diagnostics_1.Diagnostics._getDiagnosticsData(response, attempt, body, err));
}
function _exponentialBackoff(attempt) {
    return __awaiter(this, void 0, void 0, function*() {
        // 1*1*1000 1s
        // 2*2*1000 4s
        // 3*3*1000 9s
        // 4*4*1000 16s
        // 5*5*1000 25s
        yield new Promise((r)=>setTimeout(r, Math.min(BACKOFF_BASE_MS * (attempt * attempt), BACKOFF_MAX_MS)));
    });
}

},{"36e307dfd2065fb5":"l21J3","c39ddd115a17d14":"2lhs4","bafeb341cc1230ce":"2sUQY","7eb08326708b7bee":"emeMp","40e6317fffd4a089":"gp4F5","b22043cec88dc3fc":"3PH8C","ed11bee44596770b":"bnSJa","1892f5713216dd5d":"cUsMd","10192a13964fd88c":"i6rQn","40e02cabf474f654":"5aiaP","718f759b642099a4":"jzVLg","9eecded5c08e3181":"3mMVR","7445b8e594502091":"lMDF6","77408aea95728102":"1T2CG"}],"gp4F5":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._isDomainFailure = exports.NetworkFallbackResolver = void 0;
const DnsTxtQuery_1 = require("6d11a923c7ef04a1");
const Hashing_1 = require("d6b4f2cb862ae038");
const Log_1 = require("363782fb615f05d8");
const StorageProvider_1 = require("569127d420f52864");
const DEFAULT_TTL_MS = 604800000; // 7 days
const COOLDOWN_TIME_MS = 14400000; // 4 hours
class NetworkFallbackResolver {
    constructor(options){
        var _a;
        this._fallbackInfo = null;
        this._errorBoundary = null;
        this._dnsQueryCooldowns = {};
        this._networkOverrideFunc = (_a = options.networkConfig) === null || _a === void 0 ? void 0 : _a.networkOverrideFunc;
    }
    setErrorBoundary(errorBoundary) {
        this._errorBoundary = errorBoundary;
    }
    tryBumpExpiryTime(sdkKey, urlConfig) {
        var _a;
        const info = (_a = this._fallbackInfo) === null || _a === void 0 ? void 0 : _a[urlConfig.endpoint];
        if (!info) return;
        info.expiryTime = Date.now() + DEFAULT_TTL_MS;
        _tryWriteFallbackInfoToCache(sdkKey, Object.assign(Object.assign({}, this._fallbackInfo), {
            [urlConfig.endpoint]: info
        }));
    }
    getActiveFallbackUrl(sdkKey, urlConfig) {
        var _a, _b;
        if (urlConfig.customUrl != null && urlConfig.fallbackUrls != null) return null;
        let info = this._fallbackInfo;
        if (info == null) {
            info = (_a = _readFallbackInfoFromCache(sdkKey)) !== null && _a !== void 0 ? _a : {};
            this._fallbackInfo = info;
        }
        const entry = info[urlConfig.endpoint];
        if (!entry || Date.now() > ((_b = entry.expiryTime) !== null && _b !== void 0 ? _b : 0) || urlConfig.getChecksum() !== entry.urlConfigChecksum) {
            delete info[urlConfig.endpoint];
            this._fallbackInfo = info;
            _tryWriteFallbackInfoToCache(sdkKey, this._fallbackInfo);
            return null;
        }
        if (entry.url) return entry.url;
        return null;
    }
    tryFetchUpdatedFallbackInfo(sdkKey, urlConfig, errorMessage, timedOut) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            try {
                if (!_isDomainFailure(errorMessage, timedOut)) return false;
                const canUseNetworkFallbacks = urlConfig.customUrl == null && urlConfig.fallbackUrls == null;
                const urls = canUseNetworkFallbacks ? yield this._tryFetchFallbackUrlsFromNetwork(urlConfig) : urlConfig.fallbackUrls;
                const newUrl = this._pickNewFallbackUrl((_a = this._fallbackInfo) === null || _a === void 0 ? void 0 : _a[urlConfig.endpoint], urls);
                if (!newUrl) return false;
                this._updateFallbackInfoWithNewUrl(sdkKey, urlConfig, newUrl);
                return true;
            } catch (error) {
                (_b = this._errorBoundary) === null || _b === void 0 || _b.logError('tryFetchUpdatedFallbackInfo', error);
                return false;
            }
        });
    }
    _updateFallbackInfoWithNewUrl(sdkKey, urlConfig, newUrl) {
        var _a, _b, _c;
        const newFallbackInfo = {
            urlConfigChecksum: urlConfig.getChecksum(),
            url: newUrl,
            expiryTime: Date.now() + DEFAULT_TTL_MS,
            previous: []
        };
        const endpoint = urlConfig.endpoint;
        const previousInfo = (_a = this._fallbackInfo) === null || _a === void 0 ? void 0 : _a[endpoint];
        if (previousInfo) newFallbackInfo.previous.push(...previousInfo.previous);
        if (newFallbackInfo.previous.length > 10) newFallbackInfo.previous = [];
        const previousUrl = (_c = (_b = this._fallbackInfo) === null || _b === void 0 ? void 0 : _b[endpoint]) === null || _c === void 0 ? void 0 : _c.url;
        if (previousUrl != null) newFallbackInfo.previous.push(previousUrl);
        this._fallbackInfo = Object.assign(Object.assign({}, this._fallbackInfo), {
            [endpoint]: newFallbackInfo
        });
        _tryWriteFallbackInfoToCache(sdkKey, this._fallbackInfo);
    }
    _tryFetchFallbackUrlsFromNetwork(urlConfig) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a;
            const cooldown = this._dnsQueryCooldowns[urlConfig.endpoint];
            if (cooldown && Date.now() < cooldown) return null;
            this._dnsQueryCooldowns[urlConfig.endpoint] = Date.now() + COOLDOWN_TIME_MS;
            const result = [];
            const records = yield (0, DnsTxtQuery_1._fetchTxtRecords)((_a = this._networkOverrideFunc) !== null && _a !== void 0 ? _a : fetch);
            const path = _extractPathFromUrl(urlConfig.defaultUrl);
            for (const record of records){
                if (!record.startsWith(urlConfig.endpointDnsKey + '=')) continue;
                const parts = record.split('=');
                if (parts.length > 1) {
                    let baseUrl = parts[1];
                    if (baseUrl.endsWith('/')) baseUrl = baseUrl.slice(0, -1);
                    result.push(`https://${baseUrl}${path}`);
                }
            }
            return result;
        });
    }
    _pickNewFallbackUrl(currentFallbackInfo, urls) {
        var _a;
        if (urls == null) return null;
        const previouslyUsed = new Set((_a = currentFallbackInfo === null || currentFallbackInfo === void 0 ? void 0 : currentFallbackInfo.previous) !== null && _a !== void 0 ? _a : []);
        const currentFallbackUrl = currentFallbackInfo === null || currentFallbackInfo === void 0 ? void 0 : currentFallbackInfo.url;
        let found = null;
        for (const loopUrl of urls){
            const url = loopUrl.endsWith('/') ? loopUrl.slice(0, -1) : loopUrl;
            if (!previouslyUsed.has(loopUrl) && url !== currentFallbackUrl) {
                found = url;
                break;
            }
        }
        return found;
    }
}
exports.NetworkFallbackResolver = NetworkFallbackResolver;
function _isDomainFailure(errorMsg, timedOut) {
    var _a;
    const lowerErrorMsg = (_a = errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.toLowerCase()) !== null && _a !== void 0 ? _a : '';
    return timedOut || lowerErrorMsg.includes('uncaught exception') || lowerErrorMsg.includes('failed to fetch') || lowerErrorMsg.includes('networkerror when attempting to fetch resource');
}
exports._isDomainFailure = _isDomainFailure;
function _getFallbackInfoStorageKey(sdkKey) {
    return `statsig.network_fallback.${(0, Hashing_1._DJB2)(sdkKey)}`;
}
function _tryWriteFallbackInfoToCache(sdkKey, info) {
    const hashKey = _getFallbackInfoStorageKey(sdkKey);
    if (!info || Object.keys(info).length === 0) {
        StorageProvider_1.Storage.removeItem(hashKey);
        return;
    }
    StorageProvider_1.Storage.setItem(hashKey, JSON.stringify(info));
}
function _readFallbackInfoFromCache(sdkKey) {
    const hashKey = _getFallbackInfoStorageKey(sdkKey);
    const data = StorageProvider_1.Storage.getItem(hashKey);
    if (!data) return null;
    try {
        return JSON.parse(data);
    } catch (_a) {
        Log_1.Log.error('Failed to parse FallbackInfo');
        return null;
    }
}
function _extractPathFromUrl(urlString) {
    try {
        const url = new URL(urlString);
        return url.pathname;
    } catch (error) {
        return null;
    }
}

},{"6d11a923c7ef04a1":"4d9s7","d6b4f2cb862ae038":"afwdA","363782fb615f05d8":"2sUQY","569127d420f52864":"7xJdA"}],"4d9s7":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._fetchTxtRecords = void 0;
// See example: https://github.com/statsig-io/private-js-client-monorepo/pull/340
const FEATURE_ASSETS_DNS_QUERY = new Uint8Array([
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x01,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x00,
    0x0d,
    0x66,
    0x65,
    0x61,
    0x74,
    0x75,
    0x72,
    0x65,
    0x61,
    0x73,
    0x73,
    0x65,
    0x74,
    0x73,
    0x03,
    0x6f,
    0x72,
    0x67,
    0x00,
    0x00,
    0x10,
    0x00,
    0x01
]);
const DNS_QUERY_ENDPOINT = 'https://cloudflare-dns.com/dns-query';
const DOMAIN_CHARS = [
    'i',
    'e',
    'd'
];
const MAX_START_LOOKUP = 200;
function _fetchTxtRecords(networkFunc) {
    return __awaiter(this, void 0, void 0, function*() {
        const response = yield networkFunc(DNS_QUERY_ENDPOINT, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/dns-message',
                Accept: 'application/dns-message'
            },
            body: FEATURE_ASSETS_DNS_QUERY
        });
        if (!response.ok) {
            const err = new Error('Failed to fetch TXT records from DNS');
            err.name = 'DnsTxtFetchError';
            throw err;
        }
        const data = yield response.arrayBuffer();
        const bytes = new Uint8Array(data);
        return _parseDnsResponse(bytes);
    });
}
exports._fetchTxtRecords = _fetchTxtRecords;
function _parseDnsResponse(input) {
    // loop until we find the first valid domain char. One of [i=, e=, d=]
    const start = input.findIndex((byte, index)=>index < MAX_START_LOOKUP && String.fromCharCode(byte) === '=' && DOMAIN_CHARS.includes(String.fromCharCode(input[index - 1])));
    if (start === -1) {
        const err = new Error('Failed to parse TXT records from DNS');
        err.name = 'DnsTxtParseError';
        throw err;
    }
    // decode the remaining bytes as a string
    let result = '';
    for(let i = start - 1; i < input.length; i++)result += String.fromCharCode(input[i]);
    return result.split(',');
}

},{}],"3PH8C":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SDKFlags = void 0;
const FLAGMAP = {};
exports.SDKFlags = {
    setFlags: (sdkKey, flags)=>{
        FLAGMAP[sdkKey] = flags;
    },
    get: (sdkKey, flagKey)=>{
        var _a, _b;
        return (_b = (_a = FLAGMAP[sdkKey]) === null || _a === void 0 ? void 0 : _a[flagKey]) !== null && _b !== void 0 ? _b : false;
    }
};

},{}],"i6rQn":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StatsigSession = exports.SessionID = void 0;
const __StatsigGlobal_1 = require("914f8759e33ee497");
const CacheKey_1 = require("db536900dfc2fe96");
const Log_1 = require("3e17e2d26e60c9ba");
const StorageProvider_1 = require("e6c1559bfde944eb");
const UUID_1 = require("682b5c657d852056");
const MAX_SESSION_IDLE_TIME = 1800000; // 30 minutes
const MAX_SESSION_AGE = 14400000; // 4 hours
const PROMISE_MAP = {};
exports.SessionID = {
    get: (sdkKey)=>{
        return exports.StatsigSession.get(sdkKey).data.sessionID;
    }
};
exports.StatsigSession = {
    get: (sdkKey)=>{
        if (PROMISE_MAP[sdkKey] == null) PROMISE_MAP[sdkKey] = _loadSession(sdkKey);
        const session = PROMISE_MAP[sdkKey];
        return _bumpSession(session);
    },
    overrideInitialSessionID: (override, sdkKey)=>{
        PROMISE_MAP[sdkKey] = _overrideSessionId(override, sdkKey);
    }
};
function _loadSession(sdkKey) {
    let data = _loadFromStorage(sdkKey);
    const now = Date.now();
    if (!data) data = {
        sessionID: (0, UUID_1.getUUID)(),
        startTime: now,
        lastUpdate: now
    };
    return {
        data,
        sdkKey
    };
}
function _overrideSessionId(override, sdkKey) {
    const now = Date.now();
    return {
        data: {
            sessionID: override,
            startTime: now,
            lastUpdate: now
        },
        sdkKey
    };
}
function _bumpSession(session) {
    const now = Date.now();
    const data = session.data;
    const sdkKey = session.sdkKey;
    if (_isIdle(data) || _hasRunTooLong(data)) {
        data.sessionID = (0, UUID_1.getUUID)();
        data.startTime = now;
        const client = __STATSIG__ === null || __STATSIG__ === void 0 ? void 0 : __STATSIG__.instance(sdkKey);
        if (client) client.$emt({
            name: 'session_expired'
        });
    }
    data.lastUpdate = now;
    _persistToStorage(data, session.sdkKey);
    clearTimeout(session.idleTimeoutID);
    clearTimeout(session.ageTimeoutID);
    const lifetime = now - data.startTime;
    session.idleTimeoutID = _createSessionTimeout(sdkKey, MAX_SESSION_IDLE_TIME);
    session.ageTimeoutID = _createSessionTimeout(sdkKey, MAX_SESSION_AGE - lifetime);
    return session;
}
function _createSessionTimeout(sdkKey, duration) {
    return setTimeout(()=>{
        var _a;
        const client = (_a = (0, __StatsigGlobal_1._getStatsigGlobal)()) === null || _a === void 0 ? void 0 : _a.instance(sdkKey);
        if (client) client.$emt({
            name: 'session_expired'
        });
    }, duration);
}
function _isIdle({ lastUpdate }) {
    return Date.now() - lastUpdate > MAX_SESSION_IDLE_TIME;
}
function _hasRunTooLong({ startTime }) {
    return Date.now() - startTime > MAX_SESSION_AGE;
}
function _getSessionIDStorageKey(sdkKey) {
    return `statsig.session_id.${(0, CacheKey_1._getStorageKey)(sdkKey)}`;
}
function _persistToStorage(session, sdkKey) {
    const storageKey = _getSessionIDStorageKey(sdkKey);
    try {
        (0, StorageProvider_1._setObjectInStorage)(storageKey, session);
    } catch (e) {
        Log_1.Log.warn('Failed to save SessionID');
    }
}
function _loadFromStorage(sdkKey) {
    const storageKey = _getSessionIDStorageKey(sdkKey);
    return (0, StorageProvider_1._getObjectFromStorage)(storageKey);
}

},{"914f8759e33ee497":"l21J3","db536900dfc2fe96":"8znLo","3e17e2d26e60c9ba":"2sUQY","e6c1559bfde944eb":"7xJdA","682b5c657d852056":"BRO32"}],"jzVLg":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ErrorTag = void 0;
exports.ErrorTag = {
    NetworkError: 'NetworkError'
};

},{}],"1v6Gy":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"gdyoQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"BkT5X":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StatsigClientBase = void 0;
require("cd780e3cac28b5f5");
const __StatsigGlobal_1 = require("cd780e3cac28b5f5");
const ErrorBoundary_1 = require("63254dba4d6d538a");
const EventLogger_1 = require("b4a02e80677a4a1e");
const Log_1 = require("4fed896baaf61198");
const MemoKey_1 = require("4457f9587e3538c");
const SafeJs_1 = require("3baceefad4fc11a7");
const SessionID_1 = require("c796d4f89e9d2ddf");
const StableID_1 = require("bda22d9bf40ac9d5");
const StatsigOptionsCommon_1 = require("760a063ab78c33a1");
const StorageProvider_1 = require("de1f65ec718a3db0");
const MAX_MEMO_CACHE_SIZE = 3000;
class StatsigClientBase {
    constructor(sdkKey, adapter, network, options){
        var _a, _b, _c, _d;
        this.loadingStatus = 'Uninitialized';
        this._initializePromise = null;
        this._listeners = {};
        const emitter = this.$emt.bind(this);
        (options === null || options === void 0 ? void 0 : options.logLevel) != null && (Log_1.Log.level = options.logLevel);
        (options === null || options === void 0 ? void 0 : options.disableStorage) && StorageProvider_1.Storage._setDisabled(true);
        (options === null || options === void 0 ? void 0 : options.initialSessionID) && SessionID_1.StatsigSession.overrideInitialSessionID(options.initialSessionID, sdkKey);
        (options === null || options === void 0 ? void 0 : options.storageProvider) && StorageProvider_1.Storage._setProvider(options.storageProvider);
        (options === null || options === void 0 ? void 0 : options.enableCookies) && StableID_1.StableID._setCookiesEnabled(sdkKey, options.enableCookies);
        (options === null || options === void 0 ? void 0 : options.disableStableID) && StableID_1.StableID._setDisabled(sdkKey, true);
        this._sdkKey = sdkKey;
        this._options = options !== null && options !== void 0 ? options : {};
        this._memoCache = {};
        this.overrideAdapter = (_a = options === null || options === void 0 ? void 0 : options.overrideAdapter) !== null && _a !== void 0 ? _a : null;
        this._logger = new EventLogger_1.EventLogger(sdkKey, emitter, network, options);
        this._errorBoundary = new ErrorBoundary_1.ErrorBoundary(sdkKey, options, emitter);
        this._errorBoundary.wrap(this);
        this._errorBoundary.wrap(adapter);
        this._errorBoundary.wrap(this._logger);
        network.setErrorBoundary(this._errorBoundary);
        this.dataAdapter = adapter;
        this.dataAdapter.attach(sdkKey, options, network);
        this.storageProvider = StorageProvider_1.Storage;
        (_d = (_c = (_b = this.overrideAdapter) === null || _b === void 0 ? void 0 : _b.loadFromStorage) === null || _c === void 0 ? void 0 : _c.call(_b)) === null || _d === void 0 || _d.catch((e)=>this._errorBoundary.logError('OA::loadFromStorage', e));
        this._primeReadyRipcord();
        _assignGlobalInstance(sdkKey, this);
    }
    /**
     * Updates runtime configuration options for the SDK, allowing toggling of certain behaviors such as logging and storage to comply with user preferences or regulations such as GDPR.
     *
     * @param {StatsigRuntimeMutableOptions} options - The configuration options that dictate the runtime behavior of the SDK.
     */ updateRuntimeOptions(options) {
        if (options.loggingEnabled) {
            this._options.loggingEnabled = options.loggingEnabled;
            this._logger.setLoggingEnabled(options.loggingEnabled);
        } else if (options.disableLogging != null) {
            this._options.disableLogging = options.disableLogging;
            this._logger.setLoggingEnabled(options.disableLogging ? 'disabled' : 'browser-only');
        }
        if (options.disableStorage != null) {
            this._options.disableStorage = options.disableStorage;
            StorageProvider_1.Storage._setDisabled(options.disableStorage);
        }
        if (options.enableCookies != null) {
            this._options.enableCookies = options.enableCookies;
            StableID_1.StableID._setCookiesEnabled(this._sdkKey, options.enableCookies);
        }
        if (options.logEventCompressionMode) this._logger.setLogEventCompressionMode(options.logEventCompressionMode);
        else if (options.disableCompression) this._logger.setLogEventCompressionMode(StatsigOptionsCommon_1.LogEventCompressionMode.Disabled);
    }
    /**
     * Flushes any currently queued events.
     */ flush() {
        return this._logger.flush();
    }
    /**
     * Gracefully shuts down the SDK, ensuring that all pending events are send before the SDK stops.
     * This function emits a 'pre_shutdown' event and then waits for the logger to complete its shutdown process.
     *
     * @returns {Promise<void>} A promise that resolves when all shutdown procedures, including logging shutdown, have been completed.
     */ shutdown() {
        return __awaiter(this, void 0, void 0, function*() {
            this.$emt({
                name: 'pre_shutdown'
            });
            this._setStatus('Uninitialized', null);
            this._initializePromise = null;
            yield this._logger.stop();
        });
    }
    /**
     * Subscribes a callback function to a specific {@link StatsigClientEvent} or all StatsigClientEvents if the wildcard '*' is used.
     * Once subscribed, the listener callback will be invoked whenever the specified event is emitted.
     *
     * @param {StatsigClientEventName} event - The name of the event to subscribe to, or '*' to subscribe to all events.
     * @param {StatsigClientEventCallback<T>} listener - The callback function to execute when the event occurs. The function receives event-specific data as its parameter.
     * @see {@link off} for unsubscribing from events.
     */ on(event, listener) {
        if (!this._listeners[event]) this._listeners[event] = [];
        this._listeners[event].push(listener);
    }
    /**
     * Unsubscribes a previously registered callback function from a specific {@link StatsigClientEvent} or all StatsigClientEvents if the wildcard '*' is used.
     *
     * @param {StatsigClientEventName} event - The name of the event from which to unsubscribe, or '*' to unsubscribe from all events.
     * @param {StatsigClientEventCallback<T>} listener - The callback function to remove from the event's notification list.
     * @see {@link on} for subscribing to events.
     */ off(event, listener) {
        if (this._listeners[event]) {
            const index = this._listeners[event].indexOf(listener);
            if (index !== -1) this._listeners[event].splice(index, 1);
        }
    }
    $on(event, listener) {
        listener.__isInternal = true;
        this.on(event, listener);
    }
    $emt(event) {
        var _a;
        const barrier = (listener)=>{
            try {
                listener(event);
            } catch (error) {
                if (listener.__isInternal === true) {
                    this._errorBoundary.logError(`__emit:${event.name}`, error);
                    return;
                }
                Log_1.Log.error(`An error occurred in a StatsigClientEvent listener. This is not an issue with Statsig.`, event);
            }
        };
        if (this._listeners[event.name]) this._listeners[event.name].forEach((l)=>barrier(l));
        (_a = this._listeners['*']) === null || _a === void 0 || _a.forEach(barrier);
    }
    _setStatus(newStatus, values) {
        this.loadingStatus = newStatus;
        this._memoCache = {};
        this.$emt({
            name: 'values_updated',
            status: newStatus,
            values
        });
    }
    _enqueueExposure(name, exposure, options) {
        if ((options === null || options === void 0 ? void 0 : options.disableExposureLog) === true) {
            this._logger.incrementNonExposureCount(name);
            return;
        }
        this._logger.enqueue(exposure);
    }
    _memoize(prefix, fn) {
        return (name, options)=>{
            if (this._options.disableEvaluationMemoization) return fn(name, options);
            const memoKey = (0, MemoKey_1.createMemoKey)(prefix, name, options);
            if (!memoKey) return fn(name, options);
            if (!(memoKey in this._memoCache)) {
                if (Object.keys(this._memoCache).length >= MAX_MEMO_CACHE_SIZE) this._memoCache = {};
                this._memoCache[memoKey] = fn(name, options);
            }
            return this._memoCache[memoKey];
        };
    }
}
exports.StatsigClientBase = StatsigClientBase;
function _assignGlobalInstance(sdkKey, client) {
    var _a;
    if ((0, SafeJs_1._isServerEnv)()) return;
    const statsigGlobal = (0, __StatsigGlobal_1._getStatsigGlobal)();
    const instances = (_a = statsigGlobal.instances) !== null && _a !== void 0 ? _a : {};
    const inst = client;
    if (instances[sdkKey] != null) Log_1.Log.warn('Creating multiple Statsig clients with the same SDK key can lead to unexpected behavior. Multi-instance support requires different SDK keys.');
    instances[sdkKey] = inst;
    if (!statsigGlobal.firstInstance) statsigGlobal.firstInstance = inst;
    statsigGlobal.instances = instances;
    __STATSIG__ = statsigGlobal;
}

},{"cd780e3cac28b5f5":"l21J3","63254dba4d6d538a":"eBOFf","b4a02e80677a4a1e":"ayrxs","4fed896baaf61198":"2sUQY","4457f9587e3538c":"aPml5","3baceefad4fc11a7":"cUsMd","c796d4f89e9d2ddf":"i6rQn","bda22d9bf40ac9d5":"5aiaP","760a063ab78c33a1":"lMDF6","de1f65ec718a3db0":"7xJdA"}],"ecugS":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DataAdapterCachePrefix = void 0;
exports.DataAdapterCachePrefix = 'statsig.cached';

},{}],"dpiYQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"lfY55":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._makeTypedGet = exports._mergeOverride = exports._makeLayer = exports._makeExperiment = exports._makeDynamicConfig = exports._makeFeatureGate = void 0;
const Log_1 = require("12d94d0aedb3dcbf");
const TypingUtils_1 = require("de83b5611ae7d335");
function _makeEvaluation(name, details, evaluation, value) {
    var _a;
    return {
        name,
        details,
        ruleID: (_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.rule_id) !== null && _a !== void 0 ? _a : '',
        __evaluation: evaluation,
        value
    };
}
function _makeFeatureGate(name, details, evaluation) {
    var _a;
    return Object.assign(Object.assign({}, _makeEvaluation(name, details, evaluation, (evaluation === null || evaluation === void 0 ? void 0 : evaluation.value) === true)), {
        idType: (_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.id_type) !== null && _a !== void 0 ? _a : null
    });
}
exports._makeFeatureGate = _makeFeatureGate;
function _makeDynamicConfig(name, details, evaluation) {
    var _a;
    const value = (_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.value) !== null && _a !== void 0 ? _a : {};
    return Object.assign(Object.assign({}, _makeEvaluation(name, details, evaluation, value)), {
        get: _makeTypedGet(name, evaluation === null || evaluation === void 0 ? void 0 : evaluation.value)
    });
}
exports._makeDynamicConfig = _makeDynamicConfig;
function _makeExperiment(name, details, evaluation) {
    var _a;
    const result = _makeDynamicConfig(name, details, evaluation);
    return Object.assign(Object.assign({}, result), {
        groupName: (_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.group_name) !== null && _a !== void 0 ? _a : null
    });
}
exports._makeExperiment = _makeExperiment;
function _makeLayer(name, details, evaluation, exposeFunc) {
    var _a, _b;
    return Object.assign(Object.assign({}, _makeEvaluation(name, details, evaluation, undefined)), {
        get: _makeTypedGet(name, evaluation === null || evaluation === void 0 ? void 0 : evaluation.value, exposeFunc),
        groupName: (_a = evaluation === null || evaluation === void 0 ? void 0 : evaluation.group_name) !== null && _a !== void 0 ? _a : null,
        __value: (_b = evaluation === null || evaluation === void 0 ? void 0 : evaluation.value) !== null && _b !== void 0 ? _b : {}
    });
}
exports._makeLayer = _makeLayer;
function _mergeOverride(original, overridden, value, exposeFunc) {
    return Object.assign(Object.assign(Object.assign({}, original), overridden), {
        get: _makeTypedGet(original.name, value, exposeFunc)
    });
}
exports._mergeOverride = _mergeOverride;
function _makeTypedGet(name, value, exposeFunc) {
    return (param, fallback)=>{
        var _a;
        const found = (_a = value === null || value === void 0 ? void 0 : value[param]) !== null && _a !== void 0 ? _a : null;
        if (found == null) return fallback !== null && fallback !== void 0 ? fallback : null;
        if (fallback != null && !(0, TypingUtils_1._isTypeMatch)(found, fallback)) {
            Log_1.Log.warn(`Parameter type mismatch. '${name}.${param}' was found to be type '${typeof found}' but fallback/return type is '${typeof fallback}'. See https://docs.statsig.com/client/javascript-sdk/#typed-getters`);
            return fallback !== null && fallback !== void 0 ? fallback : null;
        }
        exposeFunc === null || exposeFunc === void 0 || exposeFunc(param);
        return found;
    };
}
exports._makeTypedGet = _makeTypedGet;

},{"12d94d0aedb3dcbf":"2sUQY","de83b5611ae7d335":"aClg0"}],"6eVmK":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});

},{}],"11Kc1":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.UPDATE_DETAIL_ERROR_MESSAGES = exports.createUpdateDetails = void 0;
const createUpdateDetails = (success, source, initDuration, error, sourceUrl, warnings)=>{
    return {
        duration: initDuration,
        source,
        success,
        error,
        sourceUrl,
        warnings
    };
};
exports.createUpdateDetails = createUpdateDetails;
exports.UPDATE_DETAIL_ERROR_MESSAGES = {
    NO_NETWORK_DATA: 'No data was returned from the network. This may be due to a network timeout if a timeout value was specified in the options or ad blocker error.'
};

},{}],"lgJSV":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const client_core_1 = require("c70e853a5bc2ef64");
const EvaluationStore_1 = require("81b51a4210774200");
const Network_1 = require("66faee664c968523");
const ParamStoreGetterFactory_1 = require("b743c472831e316a");
const StatsigEvaluationsDataAdapter_1 = require("7f7a91cba0da062e");
class StatsigClient extends client_core_1.StatsigClientBase {
    /**
     * Retrieves an instance of the StatsigClient based on the provided SDK key.
     *  If no SDK key is provided, the method returns the most recently created instance of the StatsigClient.
     *  The method ensures that each unique SDK key corresponds to a single instance of StatsigClient, effectively implementing a singleton pattern for each key.
     *  If no instance exists for the given SDK key, a new StatsigClient instance will be created and returned.
     *
     * @param {string} [sdkKey] - Optional. The SDK key used to identify a specific instance of the StatsigClient. If omitted, the method returns the last created instance.
     * @returns {StatsigClient} Returns the StatsigClient instance associated with the given SDK key, creating a new one if needed.
     */ static instance(sdkKey) {
        const instance = (0, client_core_1._getStatsigGlobal)().instance(sdkKey);
        if (instance instanceof StatsigClient) return instance;
        client_core_1.Log.warn((0, client_core_1._isServerEnv)() ? 'StatsigClient.instance is not supported in server environments' : 'Unable to find StatsigClient instance');
        return new StatsigClient(sdkKey !== null && sdkKey !== void 0 ? sdkKey : '', {});
    }
    /**
     * StatsigClient constructor
     *
     * @param {string} sdkKey A Statsig client SDK key. eg "client-xyz123..."
     * @param {StatsigUser} user StatsigUser object containing various attributes related to a user.
     * @param {StatsigOptions | null} options StatsigOptions, used to customize the behavior of the SDK.
     */ constructor(sdkKey, user, options = null){
        var _a, _b;
        client_core_1.SDKType._setClientType(sdkKey, 'javascript-client');
        const network = new Network_1.default(options, (e)=>{
            this.$emt(e);
        });
        super(sdkKey, (_a = options === null || options === void 0 ? void 0 : options.dataAdapter) !== null && _a !== void 0 ? _a : new StatsigEvaluationsDataAdapter_1.StatsigEvaluationsDataAdapter(), network, options);
        this._possibleFirstTouchMetadata = {};
        /**
         * Retrieves the value of a feature gate for the current user, represented as a {@link FeatureGate} object.
         *
         * @param {string} name - The name of the feature gate to retrieve.
         * @param {FeatureGateEvaluationOptions} [options] - Optional. Additional options to customize the method call.
         * @returns {FeatureGate} - The {@link FeatureGate} object representing the gate's current evaluation results for the user.
         */ this.getFeatureGate = this._memoize(client_core_1.MemoPrefix._gate, this._getFeatureGateImpl.bind(this));
        /**
         * Retrieves the value of a dynamic config for the current user.
         *
         * @param {string} name The name of the dynamic config to get.
         * @param {DynamicConfigEvaluationOptions} [options] - Optional. Additional options to customize the method call.
         * @returns {DynamicConfig} - The {@link DynamicConfig} object representing the dynamic configs's current evaluation results for the user.
         */ this.getDynamicConfig = this._memoize(client_core_1.MemoPrefix._dynamicConfig, this._getDynamicConfigImpl.bind(this));
        /**
         * Retrieves the value of a experiment for the current user.
         *
         * @param {string} name The name of the experiment to get.
         * @param {ExperimentEvaluationOptions} [options] - Optional. Additional options to customize the method call.
         * @returns {Experiment} - The {@link Experiment} object representing the experiments's current evaluation results for the user.
         */ this.getExperiment = this._memoize(client_core_1.MemoPrefix._experiment, this._getExperimentImpl.bind(this));
        /**
         * Retrieves the value of a layer for the current user.
         *
         * @param {string} name The name of the layer to get.
         * @param {LayerEvaluationOptions} [options] - Optional. Additional options to customize the method call.
         * @returns {Layer} - The {@link Layer} object representing the layers's current evaluation results for the user.
         */ this.getLayer = this._memoize(client_core_1.MemoPrefix._layer, this._getLayerImpl.bind(this));
        /**
         * Retrieves the value of a parameter store for the current user.
         *
         * @param {string} name The name of the parameter store to get.
         * @param {ParameterStoreEvaluationOptions} [options] - Optional. Additional options to customize the method call.
         * @returns {ParameterStore} - The {@link ParameterStore} object representing the parameter store's current mappings for the user.
         */ this.getParameterStore = this._memoize(client_core_1.MemoPrefix._paramStore, this._getParameterStoreImpl.bind(this));
        this._store = new EvaluationStore_1.default(sdkKey);
        this._network = network;
        this._user = this._configureUser(user, options);
        this._sdkInstanceID = (0, client_core_1.getUUID)();
        const plugins = (_b = options === null || options === void 0 ? void 0 : options.plugins) !== null && _b !== void 0 ? _b : [];
        for (const plugin of plugins)plugin.bind(this);
    }
    /**
     * Initializes the StatsigClient using cached values. This method sets up the client synchronously by utilizing previously cached values.
     * After initialization, cache values are updated in the background for future use, either in subsequent sessions or when `updateUser` is called.
     * This is useful for quickly starting with the last-known-good configurations while refreshing data to keep settings up-to-date.
     *
     * @see {@link initializeAsync} for the asynchronous version of this method.
     */ initializeSync(options) {
        var _a;
        if (this.loadingStatus !== 'Uninitialized') return (0, client_core_1.createUpdateDetails)(true, this._store.getSource(), -1, null, null, [
            'MultipleInitializations',
            ...(_a = this._store.getWarnings()) !== null && _a !== void 0 ? _a : []
        ]);
        this._logger.start();
        return this.updateUserSync(this._user, options);
    }
    /**
     * Initializes the StatsigClient asynchronously by first using cached values and then updating to the latest values from the network.
     * Once the network values are fetched, they replace the existing cached values. If this method's promise is not awaited,
     * there might be a transition from cached to network values during the session, which can affect consistency.
     * This method is useful when it's acceptable to begin with potentially stale data and switch to the latest configuration as it becomes available.
     *
     * @param {AsyncUpdateOptions} [options] - Optional. Additional options to customize the method call.
     * @returns {Promise<void>} A promise that resolves once the client is fully initialized with the latest values from the network or a timeout (if set) is hit.
     * @see {@link initializeSync} for the synchronous version of this method.
     */ initializeAsync(options) {
        return __awaiter(this, void 0, void 0, function*() {
            if (this._initializePromise) return this._initializePromise;
            this._initializePromise = this._initializeAsyncImpl(options);
            return this._initializePromise;
        });
    }
    /**
     * Synchronously updates the user in the Statsig client and switches the internal state to use cached values for the newly specified user.
     * After the initial switch to cached values, this method updates these values in the background, preparing them for future sessions or subsequent calls to updateUser.
     * This method ensures the client is quickly ready with available data.
     *
     * @param {StatsigUser} user - The new StatsigUser for which the client should update its internal state.
     * @see {@link updateUserAsync} for the asynchronous version of this method.
     */ updateUserSync(user, options) {
        const startTime = performance.now();
        try {
            return this._updateUserSyncImpl(user, options, startTime);
        } catch (e) {
            const err = e instanceof Error ? e : new Error(String(e));
            return this._createErrorUpdateDetails(err, startTime);
        }
    }
    _updateUserSyncImpl(user, options, startTime) {
        var _a;
        const warnings = [
            ...(_a = this._store.getWarnings()) !== null && _a !== void 0 ? _a : []
        ];
        this._resetForUser(user);
        const result = this.dataAdapter.getDataSync(this._user);
        if (result == null) warnings.push('NoCachedValues');
        this._store.setValues(result, this._user);
        this._finalizeUpdate(result);
        const disable = options === null || options === void 0 ? void 0 : options.disableBackgroundCacheRefresh;
        if (disable === true || disable == null && (result === null || result === void 0 ? void 0 : result.source) === 'Bootstrap') return (0, client_core_1.createUpdateDetails)(true, this._store.getSource(), performance.now() - startTime, this._errorBoundary.getLastSeenErrorAndReset(), this._network.getLastUsedInitUrlAndReset(), warnings);
        this._runPostUpdate(result !== null && result !== void 0 ? result : null, this._user);
        return (0, client_core_1.createUpdateDetails)(true, this._store.getSource(), performance.now() - startTime, this._errorBoundary.getLastSeenErrorAndReset(), this._network.getLastUsedInitUrlAndReset(), warnings);
    }
    /**
     * Asynchronously updates the user in the Statsig client by initially using cached values and then fetching the latest values from the network.
     * When the latest values are fetched, they replace the cached values. If the promise returned by this method is not awaited,
     * the client's state may shift from cached to updated network values during the session, potentially affecting consistency.
     * This method is best used in scenarios where up-to-date configuration is critical and initial delays are acceptable.
     *
     * @param {StatsigUser} user - The new StatsigUser for which the client should update its internal state.
     * @param {AsyncUpdateOptions} [options] - Optional. Additional options to customize the method call.
     * @returns {Promise<void>} A promise that resolves once the client is fully updated with the latest values from the network or a timeout (if set) is hit.
     * @see {@link updateUserSync} for the synchronous version of this method.
     */ updateUserAsync(user, options) {
        return __awaiter(this, void 0, void 0, function*() {
            const startTime = performance.now();
            try {
                return yield this._updateUserAsyncImpl(user, options);
            } catch (e) {
                const err = e instanceof Error ? e : new Error(String(e));
                return this._createErrorUpdateDetails(err, startTime);
            }
        });
    }
    _updateUserAsyncImpl(user, options) {
        return __awaiter(this, void 0, void 0, function*() {
            this._resetForUser(user);
            const initiator = this._user;
            client_core_1.Diagnostics._markInitOverallStart(this._sdkKey);
            let result = this.dataAdapter.getDataSync(initiator);
            this._store.setValues(result, this._user);
            this._setStatus('Loading', result);
            result = yield this.dataAdapter.getDataAsync(result, initiator, options);
            // ensure the user hasn't changed while we were waiting
            if (initiator !== this._user) return (0, client_core_1.createUpdateDetails)(false, this._store.getSource(), -1, new Error('User changed during update'), this._network.getLastUsedInitUrlAndReset());
            let isUsingNetworkValues = false;
            if (result != null) {
                client_core_1.Diagnostics._markInitProcessStart(this._sdkKey);
                isUsingNetworkValues = this._store.setValues(result, this._user);
                client_core_1.Diagnostics._markInitProcessEnd(this._sdkKey, {
                    success: isUsingNetworkValues
                });
            }
            this._finalizeUpdate(result);
            if (!isUsingNetworkValues) {
                this._errorBoundary.attachErrorIfNoneExists(client_core_1.UPDATE_DETAIL_ERROR_MESSAGES.NO_NETWORK_DATA);
                this.$emt({
                    name: 'initialization_failure'
                });
            }
            client_core_1.Diagnostics._markInitOverallEnd(this._sdkKey, isUsingNetworkValues, this._store.getCurrentSourceDetails());
            const initDuration = client_core_1.Diagnostics._enqueueDiagnosticsEvent(this._user, this._logger, this._sdkKey, this._options);
            return (0, client_core_1.createUpdateDetails)(isUsingNetworkValues, this._store.getSource(), initDuration, this._errorBoundary.getLastSeenErrorAndReset(), this._network.getLastUsedInitUrlAndReset(), this._store.getWarnings());
        });
    }
    /**
     * Retrieves a synchronous context containing data currently being used by the SDK. Represented as a {@link PrecomputedEvaluationsContext} object.
     *
     * @returns {PrecomputedEvaluationsContext} The current synchronous context for the this StatsigClient instance.
     */ getContext() {
        return {
            sdkKey: this._sdkKey,
            options: this._options,
            values: this._store.getValues(),
            user: JSON.parse(JSON.stringify(this._user)),
            errorBoundary: this._errorBoundary,
            session: client_core_1.StatsigSession.get(this._sdkKey),
            stableID: client_core_1.StableID.get(this._sdkKey),
            sdkInstanceID: this._sdkInstanceID
        };
    }
    /**
     * Retrieves the value of a feature gate for the current user, represented as a simple boolean.
     *
     * @param {string} name - The name of the feature gate to retrieve.
     * @param {FeatureGateEvaluationOptions} [options] - Optional. Additional options to customize the method call.
     * @returns {boolean} - The boolean value representing the gate's current evaluation results for the user.
     */ checkGate(name, options) {
        return this.getFeatureGate(name, options).value;
    }
    /**
     * Logs an event to the internal logging system. This function allows logging by either passing a fully formed event object or by specifying the event name with optional value and metadata.
     *
     * @param {StatsigEvent|string} eventOrName - The event object conforming to the StatsigEvent interface, or the name of the event as a string.
     * @param {string|number} value - Optional. The value associated with the event, which can be a string or a number. This parameter is ignored if the first parameter is a StatsigEvent object.
     * @param {Record<string, string>} metadata - Optional. A key-value record containing metadata about the event. This is also ignored if the first parameter is an event object.
     */ logEvent(eventOrName, value, metadata) {
        const event = typeof eventOrName === 'string' ? {
            eventName: eventOrName,
            value,
            metadata
        } : eventOrName;
        this.$emt({
            name: 'log_event_called',
            event
        });
        this._logger.enqueue(Object.assign(Object.assign({}, event), {
            user: this._user,
            time: Date.now()
        }));
    }
    /**
     * Updates the user with analytics only metadata. This will override any existing analytics only metadata.
     *
     * @param {Record<string, string | number | boolean>} metadata - The metadata to add to the user.
     */ updateUserWithAnalyticsOnlyMetadata(metadata) {
        this._user = this._configureUser(Object.assign(Object.assign({}, this._user), {
            analyticsOnlyMetadata: metadata
        }), this._options);
    }
    _primeReadyRipcord() {
        this.$on('error', ()=>{
            this.loadingStatus === 'Loading' && this._finalizeUpdate(null);
        });
    }
    _initializeAsyncImpl(options) {
        return __awaiter(this, void 0, void 0, function*() {
            if (!client_core_1.Storage.isReady()) yield client_core_1.Storage.isReadyResolver();
            this._logger.start();
            return this.updateUserAsync(this._user, options);
        });
    }
    _createErrorUpdateDetails(error, startTime) {
        var _a;
        return (0, client_core_1.createUpdateDetails)(false, this._store.getSource(), performance.now() - startTime, error, null, [
            ...(_a = this._store.getWarnings()) !== null && _a !== void 0 ? _a : []
        ]);
    }
    _finalizeUpdate(values) {
        this._store.finalize();
        this._setStatus('Ready', values);
    }
    _runPostUpdate(current, user) {
        this.dataAdapter.getDataAsync(current, user, {
            priority: 'low'
        }).catch((err)=>{
            client_core_1.Log.error('An error occurred after update.', err);
        });
    }
    _resetForUser(user) {
        this._logger.reset();
        this._store.reset();
        this._user = this._configureUser(user, this._options);
    }
    _configureUser(originalUser, options) {
        var _a;
        const user = (0, client_core_1._normalizeUser)(originalUser, options);
        const stableIdOverride = (_a = user.customIDs) === null || _a === void 0 ? void 0 : _a.stableID;
        if (stableIdOverride) client_core_1.StableID.setOverride(stableIdOverride, this._sdkKey);
        user.analyticsOnlyMetadata = Object.assign(Object.assign({}, user.analyticsOnlyMetadata), this._possibleFirstTouchMetadata);
        return user;
    }
    _getFeatureGateImpl(name, options) {
        var _a, _b;
        const { result: evaluation, details } = this._store.getGate(name);
        const gate = (0, client_core_1._makeFeatureGate)(name, details, evaluation);
        const overridden = (_b = (_a = this.overrideAdapter) === null || _a === void 0 ? void 0 : _a.getGateOverride) === null || _b === void 0 ? void 0 : _b.call(_a, gate, this._user, options);
        const result = overridden !== null && overridden !== void 0 ? overridden : gate;
        this._enqueueExposure(name, (0, client_core_1._createGateExposure)(this._user, result, this._store.getExposureMapping()), options);
        this.$emt({
            name: 'gate_evaluation',
            gate: result
        });
        return result;
    }
    _getDynamicConfigImpl(name, options) {
        var _a, _b;
        const { result: evaluation, details } = this._store.getConfig(name);
        const config = (0, client_core_1._makeDynamicConfig)(name, details, evaluation);
        const overridden = (_b = (_a = this.overrideAdapter) === null || _a === void 0 ? void 0 : _a.getDynamicConfigOverride) === null || _b === void 0 ? void 0 : _b.call(_a, config, this._user, options);
        const result = overridden !== null && overridden !== void 0 ? overridden : config;
        this._enqueueExposure(name, (0, client_core_1._createConfigExposure)(this._user, result, this._store.getExposureMapping()), options);
        this.$emt({
            name: 'dynamic_config_evaluation',
            dynamicConfig: result
        });
        return result;
    }
    _getExperimentImpl(name, options) {
        var _a, _b, _c, _d;
        const { result: evaluation, details } = this._store.getConfig(name);
        const experiment = (0, client_core_1._makeExperiment)(name, details, evaluation);
        if (experiment.__evaluation != null) experiment.__evaluation.secondary_exposures = (0, client_core_1._mapExposures)((_b = (_a = experiment.__evaluation) === null || _a === void 0 ? void 0 : _a.secondary_exposures) !== null && _b !== void 0 ? _b : [], this._store.getExposureMapping());
        const overridden = (_d = (_c = this.overrideAdapter) === null || _c === void 0 ? void 0 : _c.getExperimentOverride) === null || _d === void 0 ? void 0 : _d.call(_c, experiment, this._user, options);
        const result = overridden !== null && overridden !== void 0 ? overridden : experiment;
        this._enqueueExposure(name, (0, client_core_1._createConfigExposure)(this._user, result, this._store.getExposureMapping()), options);
        this.$emt({
            name: 'experiment_evaluation',
            experiment: result
        });
        return result;
    }
    _getLayerImpl(name, options) {
        var _a, _b, _c;
        const { result: evaluation, details } = this._store.getLayer(name);
        const layer = (0, client_core_1._makeLayer)(name, details, evaluation);
        const overridden = (_b = (_a = this.overrideAdapter) === null || _a === void 0 ? void 0 : _a.getLayerOverride) === null || _b === void 0 ? void 0 : _b.call(_a, layer, this._user, options);
        if (options === null || options === void 0 ? void 0 : options.disableExposureLog) this._logger.incrementNonExposureCount(name);
        const result = (0, client_core_1._mergeOverride)(layer, overridden, (_c = overridden === null || overridden === void 0 ? void 0 : overridden.__value) !== null && _c !== void 0 ? _c : layer.__value, (param)=>{
            if (options === null || options === void 0 ? void 0 : options.disableExposureLog) return;
            this._enqueueExposure(name, (0, client_core_1._createLayerParameterExposure)(this._user, result, param, this._store.getExposureMapping()), options);
        });
        this.$emt({
            name: 'layer_evaluation',
            layer: result
        });
        return result;
    }
    _getParameterStoreImpl(name, options) {
        var _a, _b;
        const { result: configuration, details } = this._store.getParamStore(name);
        this._logger.incrementNonExposureCount(name);
        const paramStore = {
            name,
            details: details,
            __configuration: configuration,
            get: (0, ParamStoreGetterFactory_1._makeParamStoreGetter)(this, configuration, options)
        };
        const overridden = (_b = (_a = this.overrideAdapter) === null || _a === void 0 ? void 0 : _a.getParamStoreOverride) === null || _b === void 0 ? void 0 : _b.call(_a, paramStore, options);
        if (overridden != null) {
            paramStore.__configuration = overridden.config;
            paramStore.details = overridden.details;
            paramStore.get = (0, ParamStoreGetterFactory_1._makeParamStoreGetter)(this, overridden.config, options);
        }
        return paramStore;
    }
}
exports.default = StatsigClient;

},{"c70e853a5bc2ef64":"7zaBN","81b51a4210774200":"g2Gfk","66faee664c968523":"3L7wk","b743c472831e316a":"lh7zm","7f7a91cba0da062e":"aHtfJ"}],"g2Gfk":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const client_core_1 = require("c017513b3501bb83");
class EvaluationStore {
    constructor(_sdkKey){
        this._sdkKey = _sdkKey;
        this._rawValues = null;
        this._values = null;
        this._source = 'Uninitialized';
        this._lcut = 0;
        this._receivedAt = 0;
        this._bootstrapMetadata = null;
        this._warnings = new Set();
    }
    reset() {
        this._values = null;
        this._rawValues = null;
        this._source = 'Loading';
        this._lcut = 0;
        this._receivedAt = 0;
        this._bootstrapMetadata = null;
    }
    finalize() {
        if (this._values) return;
        this._source = 'NoValues';
    }
    getValues() {
        return this._rawValues ? (0, client_core_1._typedJsonParse)(this._rawValues, 'has_updates', 'EvaluationStoreValues') : null;
    }
    setValues(result, user) {
        var _a;
        if (!result) return false;
        const values = (0, client_core_1._typedJsonParse)(result.data, 'has_updates', 'EvaluationResponse');
        if (values == null) return false;
        this._source = result.source;
        if ((values === null || values === void 0 ? void 0 : values.has_updates) !== true) return true;
        this._rawValues = result.data;
        this._lcut = values.time;
        this._receivedAt = result.receivedAt;
        this._values = values;
        this._bootstrapMetadata = this._extractBootstrapMetadata(result.source, values);
        if (result.source && values.user) this._setWarningState(user, values);
        client_core_1.SDKFlags.setFlags(this._sdkKey, (_a = values.sdk_flags) !== null && _a !== void 0 ? _a : {});
        return true;
    }
    getWarnings() {
        if (this._warnings.size === 0) return undefined;
        return Array.from(this._warnings);
    }
    getGate(name) {
        var _a;
        return this._getDetailedStoreResult((_a = this._values) === null || _a === void 0 ? void 0 : _a.feature_gates, name);
    }
    getConfig(name) {
        var _a;
        return this._getDetailedStoreResult((_a = this._values) === null || _a === void 0 ? void 0 : _a.dynamic_configs, name);
    }
    getLayer(name) {
        var _a;
        return this._getDetailedStoreResult((_a = this._values) === null || _a === void 0 ? void 0 : _a.layer_configs, name);
    }
    getParamStore(name) {
        var _a;
        return this._getDetailedStoreResult((_a = this._values) === null || _a === void 0 ? void 0 : _a.param_stores, name);
    }
    getSource() {
        return this._source;
    }
    getExposureMapping() {
        var _a;
        return (_a = this._values) === null || _a === void 0 ? void 0 : _a.exposures;
    }
    _extractBootstrapMetadata(source, values) {
        if (source !== 'Bootstrap') return null;
        const bootstrapMetadata = {};
        if (values.user) bootstrapMetadata.user = values.user;
        if (values.sdkInfo) bootstrapMetadata.generatorSDKInfo = values.sdkInfo;
        bootstrapMetadata.lcut = values.time;
        return bootstrapMetadata;
    }
    _getDetailedStoreResult(lookup, name) {
        let result = null;
        if (lookup) result = lookup[name] ? lookup[name] : lookup[(0, client_core_1._DJB2)(name)];
        return {
            result,
            details: this._getDetails(result == null)
        };
    }
    _setWarningState(user, values) {
        var _a, _b;
        const stableID = client_core_1.StableID.get(this._sdkKey);
        if (((_a = user.customIDs) === null || _a === void 0 ? void 0 : _a.stableID) !== stableID && // don't throw if they're both undefined
        (((_b = user.customIDs) === null || _b === void 0 ? void 0 : _b.stableID) || stableID)) {
            this._warnings.add('StableIDMismatch');
            return;
        }
        if ('user' in values) {
            const bootstrapUser = values['user'];
            const userWithoutAnalyticsOnlyMetadata = Object.assign(Object.assign({}, user), {
                analyticsOnlyMetadata: undefined
            });
            if ((0, client_core_1._getFullUserHash)(userWithoutAnalyticsOnlyMetadata) !== (0, client_core_1._getFullUserHash)(bootstrapUser)) this._warnings.add('PartialUserMatch');
        }
    }
    getCurrentSourceDetails() {
        if (this._source === 'Uninitialized' || this._source === 'NoValues') return {
            reason: this._source
        };
        const sourceDetails = {
            reason: this._source,
            lcut: this._lcut,
            receivedAt: this._receivedAt
        };
        if (this._warnings.size > 0) sourceDetails.warnings = Array.from(this._warnings);
        return sourceDetails;
    }
    _getDetails(isUnrecognized) {
        var _a, _b;
        const sourceDetails = this.getCurrentSourceDetails();
        let reason = sourceDetails.reason;
        const warnings = (_a = sourceDetails.warnings) !== null && _a !== void 0 ? _a : [];
        if (this._source === 'Bootstrap' && warnings.length > 0) reason = reason + warnings[0];
        if (reason !== 'Uninitialized' && reason !== 'NoValues') {
            const subreason = isUnrecognized ? 'Unrecognized' : 'Recognized';
            reason = `${reason}:${subreason}`;
        }
        const bootstrapMetadata = this._source === 'Bootstrap' ? (_b = this._bootstrapMetadata) !== null && _b !== void 0 ? _b : undefined : undefined;
        if (bootstrapMetadata) sourceDetails.bootstrapMetadata = bootstrapMetadata;
        return Object.assign(Object.assign({}, sourceDetails), {
            reason
        });
    }
}
exports.default = EvaluationStore;

},{"c017513b3501bb83":"7zaBN"}],"3L7wk":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
const client_core_1 = require("49b929a9bc02ba2d");
const EvaluationResponseDeltas_1 = require("672afe7e0fc29e02");
class StatsigNetwork extends client_core_1.NetworkCore {
    constructor(options, emitter){
        super(options, emitter);
        const config = options === null || options === void 0 ? void 0 : options.networkConfig;
        this._option = options;
        this._initializeUrlConfig = new client_core_1.UrlConfiguration(client_core_1.Endpoint._initialize, config === null || config === void 0 ? void 0 : config.initializeUrl, config === null || config === void 0 ? void 0 : config.api, config === null || config === void 0 ? void 0 : config.initializeFallbackUrls);
    }
    fetchEvaluations(sdkKey, current, priority, user, isCacheValidFor204) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b, _c, _d, _e, _f;
            const cache = current ? (0, client_core_1._typedJsonParse)(current, 'has_updates', 'InitializeResponse') : null;
            let data = {
                user,
                hash: (_c = (_b = (_a = this._option) === null || _a === void 0 ? void 0 : _a.networkConfig) === null || _b === void 0 ? void 0 : _b.initializeHashAlgorithm) !== null && _c !== void 0 ? _c : 'djb2',
                deltasResponseRequested: false,
                full_checksum: null
            };
            if (cache === null || cache === void 0 ? void 0 : cache.has_updates) {
                const hasHashChanged = (cache === null || cache === void 0 ? void 0 : cache.hash_used) !== ((_f = (_e = (_d = this._option) === null || _d === void 0 ? void 0 : _d.networkConfig) === null || _e === void 0 ? void 0 : _e.initializeHashAlgorithm) !== null && _f !== void 0 ? _f : 'djb2');
                data = Object.assign(Object.assign({}, data), {
                    sinceTime: isCacheValidFor204 && !hasHashChanged ? cache.time : 0,
                    previousDerivedFields: 'derived_fields' in cache && isCacheValidFor204 ? cache.derived_fields : {},
                    deltasResponseRequested: true,
                    full_checksum: cache.full_checksum,
                    partialUserMatchSinceTime: !hasHashChanged ? cache.time : 0
                });
            }
            return this._fetchEvaluations(sdkKey, cache, data, priority);
        });
    }
    _fetchEvaluations(sdkKey, cache, data, priority) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a, _b;
            const response = yield this.post({
                sdkKey,
                urlConfig: this._initializeUrlConfig,
                data,
                retries: 2,
                isStatsigEncodable: true,
                priority
            });
            if ((response === null || response === void 0 ? void 0 : response.code) === 204) return '{"has_updates": false}';
            if ((response === null || response === void 0 ? void 0 : response.code) !== 200) return (_a = response === null || response === void 0 ? void 0 : response.body) !== null && _a !== void 0 ? _a : null;
            if ((cache === null || cache === void 0 ? void 0 : cache.has_updates) !== true || ((_b = response.body) === null || _b === void 0 ? void 0 : _b.includes('"is_delta":true')) !== true || data.deltasResponseRequested !== true) return response.body;
            const result = (0, EvaluationResponseDeltas_1._resolveDeltasResponse)(cache, response.body);
            if (typeof result === 'string') return result;
            // retry without deltas
            return this._fetchEvaluations(sdkKey, cache, Object.assign(Object.assign(Object.assign({}, data), result), {
                deltasResponseRequested: false
            }), priority);
        });
    }
}
exports.default = StatsigNetwork;

},{"49b929a9bc02ba2d":"7zaBN","672afe7e0fc29e02":"90FoM"}],"90FoM":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._resolveDeltasResponse = void 0;
const client_core_1 = require("b4247a5646a05a65");
const MAX_DELTAS_SORT_DEPTH = 2;
function _resolveDeltasResponse(cache, deltasString) {
    const deltas = (0, client_core_1._typedJsonParse)(deltasString, 'checksum', 'DeltasEvaluationResponse');
    if (!deltas) return {
        hadBadDeltaChecksum: true
    };
    const merged = _mergeDeltasIntoCache(cache, deltas);
    const resolved = _handleDeletedEntries(merged);
    const actualChecksum = (0, client_core_1._DJB2Object)({
        feature_gates: resolved.feature_gates,
        dynamic_configs: resolved.dynamic_configs,
        layer_configs: resolved.layer_configs
    }, MAX_DELTAS_SORT_DEPTH);
    const isMatch = actualChecksum === deltas.checksumV2;
    if (!isMatch) return {
        hadBadDeltaChecksum: true,
        badChecksum: actualChecksum,
        badMergedConfigs: resolved,
        badFullResponse: deltas.deltas_full_response
    };
    return JSON.stringify(resolved);
}
exports._resolveDeltasResponse = _resolveDeltasResponse;
function _mergeDeltasIntoCache(cache, deltas) {
    return Object.assign(Object.assign(Object.assign({}, cache), deltas), {
        feature_gates: Object.assign(Object.assign({}, cache.feature_gates), deltas.feature_gates),
        layer_configs: Object.assign(Object.assign({}, cache.layer_configs), deltas.layer_configs),
        dynamic_configs: Object.assign(Object.assign({}, cache.dynamic_configs), deltas.dynamic_configs)
    });
}
function _handleDeletedEntries(deltas) {
    const result = deltas;
    _deleteEntriesInRecord(deltas.deleted_gates, result.feature_gates);
    delete result.deleted_gates;
    _deleteEntriesInRecord(deltas.deleted_configs, result.dynamic_configs);
    delete result.deleted_configs;
    _deleteEntriesInRecord(deltas.deleted_layers, result.layer_configs);
    delete result.deleted_layers;
    return result;
}
function _deleteEntriesInRecord(keys, values) {
    keys === null || keys === void 0 || keys.forEach((key)=>{
        delete values[key];
    });
}

},{"b4247a5646a05a65":"7zaBN"}],"lh7zm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports._makeParamStoreGetter = void 0;
const client_core_1 = require("4d28de27611defea");
const NO_EXPOSURE_OPT = {
    disableExposureLog: true
};
function _shouldLogExposure(options) {
    return options == null || options.disableExposureLog === false;
}
function _shouldReturnFallback(value, fallback) {
    return fallback != null && !(0, client_core_1._isTypeMatch)(value, fallback);
}
function _getMappedStaticValue(param, _options) {
    return param.value;
}
function _getMappedGateValue(client, param, options) {
    const gate = client.getFeatureGate(param.gate_name, _shouldLogExposure(options) ? undefined : NO_EXPOSURE_OPT);
    if (gate.value) return param.pass_value;
    return param.fail_value;
}
function _getMappedDynamicConfigValue(client, param, fallback, options) {
    const config = client.getDynamicConfig(param.config_name, _shouldLogExposure(options) ? undefined : NO_EXPOSURE_OPT);
    const value = config.get(param.param_name);
    if (_shouldReturnFallback(value, fallback)) return fallback;
    return value;
}
function _getMappedExperimentValue(client, param, fallback, options) {
    const experiment = client.getExperiment(param.experiment_name, _shouldLogExposure(options) ? undefined : NO_EXPOSURE_OPT);
    const value = experiment.get(param.param_name);
    if (_shouldReturnFallback(value, fallback)) return fallback;
    return value;
}
function _getMappedLayerValue(client, param, fallback, options) {
    const layer = client.getLayer(param.layer_name, _shouldLogExposure(options) ? undefined : NO_EXPOSURE_OPT);
    const value = layer.get(param.param_name);
    if (_shouldReturnFallback(value, fallback)) return fallback;
    return value;
}
function _makeParamStoreGetter(client, config, options) {
    return (paramName, fallback)=>{
        if (config == null) return fallback;
        const param = config[paramName];
        if (param == null || fallback != null && (0, client_core_1._typeOf)(fallback) !== param.param_type) return fallback;
        switch(param.ref_type){
            case 'static':
                return _getMappedStaticValue(param, options);
            case 'gate':
                return _getMappedGateValue(client, param, options);
            case 'dynamic_config':
                return _getMappedDynamicConfigValue(client, param, fallback, options);
            case 'experiment':
                return _getMappedExperimentValue(client, param, fallback, options);
            case 'layer':
                return _getMappedLayerValue(client, param, fallback, options);
            default:
                return fallback;
        }
    };
}
exports._makeParamStoreGetter = _makeParamStoreGetter;

},{"4d28de27611defea":"7zaBN"}],"aHtfJ":[function(require,module,exports,__globalThis) {
"use strict";
var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.StatsigEvaluationsDataAdapter = void 0;
const client_core_1 = require("79205eb0114b64ef");
const Network_1 = require("e4c30d7f7b53055");
class StatsigEvaluationsDataAdapter extends client_core_1.DataAdapterCore {
    constructor(){
        super('EvaluationsDataAdapter', 'evaluations');
        this._network = null;
        this._options = null;
    }
    attach(sdkKey, options, network) {
        super.attach(sdkKey, options, network);
        if (network !== null && network instanceof Network_1.default) this._network = network;
        else this._network = new Network_1.default(options !== null && options !== void 0 ? options : {});
    }
    getDataAsync(current, user, options) {
        return this._getDataAsyncImpl(current, (0, client_core_1._normalizeUser)(user, this._options), options);
    }
    prefetchData(user, options) {
        return this._prefetchDataImpl(user, options);
    }
    setData(data) {
        const values = (0, client_core_1._typedJsonParse)(data, 'has_updates', 'data');
        if (values && 'user' in values) super.setData(data, values.user);
        else client_core_1.Log.error('StatsigUser not found. You may be using an older server SDK version. Please upgrade your SDK or use setDataLegacy.');
    }
    setDataLegacy(data, user) {
        super.setData(data, user);
    }
    _fetchFromNetwork(current, user, options, isCacheValidFor204) {
        return __awaiter(this, void 0, void 0, function*() {
            var _a;
            const result = yield (_a = this._network) === null || _a === void 0 ? void 0 : _a.fetchEvaluations(this._getSdkKey(), current, options === null || options === void 0 ? void 0 : options.priority, user, isCacheValidFor204);
            return result !== null && result !== void 0 ? result : null;
        });
    }
    _getCacheKey(user) {
        var _a;
        const key = (0, client_core_1._getStorageKey)(this._getSdkKey(), user, (_a = this._options) === null || _a === void 0 ? void 0 : _a.customUserCacheKeyFunc);
        return `${client_core_1.DataAdapterCachePrefix}.${this._cacheSuffix}.${key}`;
    }
    _isCachedResultValidFor204(result, user) {
        return result.fullUserHash != null && result.fullUserHash === (0, client_core_1._getFullUserHash)(user);
    }
}
exports.StatsigEvaluationsDataAdapter = StatsigEvaluationsDataAdapter;

},{"79205eb0114b64ef":"7zaBN","e4c30d7f7b53055":"3L7wk"}],"92EID":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _subscriptionsDefault.default));
var _subscriptions = require("./Subscriptions");
var _subscriptionsDefault = parcelHelpers.interopDefault(_subscriptions);

},{"./Subscriptions":"fygey","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fygey":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ALL_FEATURE_VALUES", ()=>ALL_FEATURE_VALUES);
parcelHelpers.export(exports, "default", ()=>Subscriptions);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _eventemitter3 = require("eventemitter3");
var _eventemitter3Default = parcelHelpers.interopDefault(_eventemitter3);
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var ALL_FEATURE_VALUES = '@all-features';
var Subscriptions = /*#__PURE__*/ function() {
    function Subscriptions() {
        (0, _classCallCheckDefault.default)(this, Subscriptions);
        (0, _definePropertyDefault.default)(this, "eventToValue", new Map());
        this.emitter = new (0, _eventemitter3Default.default)();
    }
    return (0, _createClassDefault.default)(Subscriptions, [
        {
            key: "onGateUpdated",
            value: function onGateUpdated(gateName, callback, checkGate, options) {
                var _this = this;
                var value = checkGate(gateName, _objectSpread(_objectSpread({}, options), {}, {
                    fireGateExposure: false
                }));
                if (this.eventToValue.get(callback) === undefined) this.eventToValue.set(callback, value);
                var wrapCallback = function wrapCallback() {
                    var value = checkGate(gateName, _objectSpread(_objectSpread({}, options), {}, {
                        fireGateExposure: false
                    }));
                    var existingValue = _this.eventToValue.get(callback);
                    if (existingValue !== value) {
                        _this.eventToValue.set(callback, value);
                        callback(value);
                    }
                };
                this.emitter.on(gateName, wrapCallback);
                return function() {
                    _this.emitter.off(gateName, wrapCallback);
                };
            }
        },
        {
            key: "onExperimentValueUpdated",
            value: function onExperimentValueUpdated(experimentName, parameterName, defaultValue, callback, getExperimentValue, options) {
                var _this2 = this;
                var experimentEventName = "".concat(experimentName, ".").concat(parameterName);
                var value = getExperimentValue(experimentName, parameterName, defaultValue, _objectSpread(_objectSpread({}, options), {}, {
                    fireExperimentExposure: false
                }));
                if (this.eventToValue.get(callback) === undefined) this.eventToValue.set(callback, value);
                var wrapCallback = function wrapCallback() {
                    var value = getExperimentValue(experimentName, parameterName, defaultValue, _objectSpread(_objectSpread({}, options), {}, {
                        fireExperimentExposure: false
                    }));
                    var existingValue = _this2.eventToValue.get(callback);
                    if (existingValue !== value) {
                        _this2.eventToValue.set(callback, value);
                        callback(value);
                    }
                };
                this.emitter.on(experimentEventName, wrapCallback);
                return function() {
                    _this2.emitter.off(experimentEventName, wrapCallback);
                };
            }
        },
        {
            key: "onAnyUpdated",
            value: function onAnyUpdated(callback) {
                var _this3 = this;
                this.emitter.on(ALL_FEATURE_VALUES, callback);
                return function() {
                    _this3.emitter.off(ALL_FEATURE_VALUES, callback);
                };
            }
        },
        {
            key: "anyUpdated",
            value: function anyUpdated() {
                var _this4 = this;
                this.emitter.emit(ALL_FEATURE_VALUES);
                this.emitter.eventNames().filter(function(name) {
                    return name !== ALL_FEATURE_VALUES;
                }).forEach(function(event) {
                    _this4.emitter.emit(event);
                });
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/defineProperty":"azbUC","eventemitter3":"8mZjp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8mZjp":[function(require,module,exports,__globalThis) {
'use strict';
var has = Object.prototype.hasOwnProperty, prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */ function Events() {}
//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
    Events.prototype = Object.create(null);
    //
    // This hack is needed because the `__proto__` property is still inherited in
    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
    //
    if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */ function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */ function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== 'function') throw new TypeError('The listener must be a function');
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [
        emitter._events[evt],
        listener
    ];
    return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */ function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new Events();
    else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */ function EventEmitter() {
    this._events = new Events();
    this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */ EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for(name in events = this._events)if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));
    return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */ EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [
        handlers.fn
    ];
    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;
    return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */ EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);
        switch(len){
            case 1:
                return listeners.fn.call(listeners.context), true;
            case 2:
                return listeners.fn.call(listeners.context, a1), true;
            case 3:
                return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
                return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];
        listeners.fn.apply(listeners.context, args);
    } else {
        var length = listeners.length, j;
        for(i = 0; i < length; i++){
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);
            switch(len){
                case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                default:
                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];
                    listeners[i].fn.apply(listeners[i].context, args);
            }
        }
    }
    return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
        clearEvent(this, evt);
        return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) clearEvent(this, evt);
    } else {
        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);
        //
        // Reset the array, or remove it completely if we have no more listeners.
        //
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
    }
    return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
    } else {
        this._events = new Events();
        this._eventsCount = 0;
    }
    return this;
};
//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;
//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;
//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;
module.exports = EventEmitter;

},{}],"Vnzkl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DynamicConfig", ()=>DynamicConfig);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _utils = require("../utils");
var DynamicConfig = /*#__PURE__*/ function() {
    function DynamicConfig(configName, configValue, ruleID, evaluationDetails) {
        var secondaryExposures = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
        var allocatedExperimentName = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';
        var onDefaultValueFallback = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
        (0, _classCallCheckDefault.default)(this, DynamicConfig);
        this.value = configValue;
        this._name = configName;
        this._ruleID = ruleID;
        this._secondaryExposures = secondaryExposures;
        this._allocatedExperimentName = allocatedExperimentName;
        this._evaluationDetails = evaluationDetails;
        this._onDefaultValueFallback = onDefaultValueFallback;
    }
    return (0, _createClassDefault.default)(DynamicConfig, [
        {
            key: "get",
            value: function get(key, defaultValue, typeGuard) {
                var _this$_onDefaultValue2;
                var val = this.getValue(key, defaultValue);
                if (val == null) return defaultValue;
                var expectedType = Array.isArray(defaultValue) ? 'array' : (0, _typeofDefault.default)(defaultValue);
                var actualType = Array.isArray(val) ? 'array' : (0, _typeofDefault.default)(val);
                if (typeGuard) {
                    var _this$_onDefaultValue;
                    if (typeGuard(val)) {
                        this.fireExposure(key);
                        return val;
                    }
                    (_this$_onDefaultValue = this._onDefaultValueFallback) === null || _this$_onDefaultValue === void 0 || _this$_onDefaultValue.call(this, this, key, expectedType, actualType);
                    return defaultValue;
                }
                if (defaultValue == null || expectedType === actualType) {
                    this.fireExposure(key);
                    return val;
                }
                (_this$_onDefaultValue2 = this._onDefaultValueFallback) === null || _this$_onDefaultValue2 === void 0 || _this$_onDefaultValue2.call(this, this, key, expectedType, actualType);
                return defaultValue;
            }
        },
        {
            key: "getValue",
            value: function getValue(key, defaultValue) {
                if (key == null) return this.value;
                if (defaultValue == null) defaultValue = null;
                if (this.value[key] == null) return defaultValue;
                this.fireExposure(key);
                return this.value[key];
            }
        },
        {
            key: "fireExposure",
            value: function fireExposure(key) {
                // Call the wrapped experiment's get method to fire exposure
                if (this.experiment) this.experiment.get(key);
            }
        }
    ], [
        {
            key: "fromExperiment",
            value: function fromExperiment(experiment) {
                var _experiment$__evaluat, _experiment$__evaluat2, _experiment$groupName;
                var config = new DynamicConfig(experiment.name, experiment.value, experiment.ruleID, (0, _utils.migrateEvaluationDetails)(experiment.details), (0, _utils.migrateSecondaryExposures)((_experiment$__evaluat = (_experiment$__evaluat2 = experiment.__evaluation) === null || _experiment$__evaluat2 === void 0 ? void 0 : _experiment$__evaluat2.secondary_exposures) !== null && _experiment$__evaluat !== void 0 ? _experiment$__evaluat : []), (_experiment$groupName = experiment.groupName) !== null && _experiment$groupName !== void 0 ? _experiment$groupName : undefined);
                config.experiment = experiment;
                return config;
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","../utils":"gTacs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gTacs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getOptionsWithDefaults", ()=>getOptionsWithDefaults);
parcelHelpers.export(exports, "shallowEquals", ()=>shallowEquals);
parcelHelpers.export(exports, "toStatsigUser", ()=>toStatsigUser);
parcelHelpers.export(exports, "migrateInitializationOptions", ()=>migrateInitializationOptions);
parcelHelpers.export(exports, "migrateEvaluationDetails", ()=>migrateEvaluationDetails);
parcelHelpers.export(exports, "migrateSecondaryExposures", ()=>migrateSecondaryExposures);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _atlassianContext = require("@atlaskit/atlassian-context");
var _types = require("./compat/types");
var _types1 = require("./types");
var _excluded = [
    "api",
    "disableCurrentPageLogging",
    "loggingIntervalMillis",
    "loggingBufferMaxSize",
    "localMode",
    "eventLoggingApi",
    "eventLoggingApiForRetries",
    "disableLocalStorage",
    "ignoreWindowUndefined",
    "disableAllLogging",
    "initTimeoutMs",
    "disableNetworkKeepalive",
    "overrideStableID",
    "disableErrorLogging",
    "disableAutoMetricsLogging"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var getOptionsWithDefaults = function getOptionsWithDefaults(options) {
    return _objectSpread({
        /**
     * If more federal PerimeterTypes are added in the future, this should be updated so
     * that isFedRamp() === true always returns the strictest perimeter.
     */ perimeter: (0, _atlassianContext.isFedRamp)() ? (0, _types1.PerimeterType).FEDRAMP_MODERATE : (0, _types1.PerimeterType).COMMERCIAL
    }, options);
};
var shallowEquals = function shallowEquals(objectA, objectB) {
    if (!objectA && !objectB) return true;
    if (!objectA || !objectB) return false;
    var aEntries = Object.entries(objectA);
    var bEntries = Object.entries(objectB);
    if (aEntries.length !== bEntries.length) return false;
    var ascendingKeyOrder = function ascendingKeyOrder(_ref, _ref2) {
        var _ref3 = (0, _slicedToArrayDefault.default)(_ref, 1), key1 = _ref3[0];
        var _ref4 = (0, _slicedToArrayDefault.default)(_ref2, 1), key2 = _ref4[0];
        return key1.localeCompare(key2);
    };
    aEntries.sort(ascendingKeyOrder);
    bEntries.sort(ascendingKeyOrder);
    for(var i = 0; i < aEntries.length; i++){
        var _aEntries$i = (0, _slicedToArrayDefault.default)(aEntries[i], 2), aValue = _aEntries$i[1];
        var _bEntries$i = (0, _slicedToArrayDefault.default)(bEntries[i], 2), bValue = _bEntries$i[1];
        if (aValue !== bValue) return false;
    }
    return true;
};
var toStatsigUser = function toStatsigUser(identifiers, customAttributes) {
    var user = {
        customIDs: identifiers,
        custom: customAttributes
    };
    if (identifiers.atlassianAccountId) user.userID = identifiers.atlassianAccountId;
    return user;
};
var migrateInitializationOptions = function migrateInitializationOptions(options) {
    var api = options.api, disableCurrentPageLogging = options.disableCurrentPageLogging, loggingIntervalMillis = options.loggingIntervalMillis, loggingBufferMaxSize = options.loggingBufferMaxSize, localMode = options.localMode, eventLoggingApi = options.eventLoggingApi, eventLoggingApiForRetries = options.eventLoggingApiForRetries, disableLocalStorage = options.disableLocalStorage, ignoreWindowUndefined = options.ignoreWindowUndefined, disableAllLogging = options.disableAllLogging, _initTimeoutMs = options.initTimeoutMs, _disableNetworkKeepalive = options.disableNetworkKeepalive, _overrideStableID = options.overrideStableID, _disableErrorLogging = options.disableErrorLogging, _disableAutoMetricsLogging = options.disableAutoMetricsLogging, rest = (0, _objectWithoutPropertiesDefault.default)(options, _excluded);
    return _objectSpread(_objectSpread({}, rest), {}, {
        networkConfig: {
            api: api,
            logEventUrl: eventLoggingApi ? eventLoggingApi + 'rgstr' : undefined,
            logEventFallbackUrls: eventLoggingApiForRetries ? [
                eventLoggingApiForRetries
            ] : undefined,
            preventAllNetworkTraffic: localMode || !ignoreWindowUndefined && typeof window === 'undefined'
        },
        includeCurrentPageUrlWithEvents: !disableCurrentPageLogging,
        loggingIntervalMs: loggingIntervalMillis,
        loggingBufferMaxSize: loggingBufferMaxSize,
        disableStorage: disableLocalStorage === undefined ? localMode : disableLocalStorage,
        disableLogging: disableAllLogging === undefined ? localMode : disableAllLogging
    });
};
var evaluationReasonMappings = Object.entries((0, _types.EvaluationReason)).map(function(_ref5) {
    var _ref6 = (0, _slicedToArrayDefault.default)(_ref5, 2), key = _ref6[0], value = _ref6[1];
    return [
        key.toLowerCase(),
        value
    ];
});
var migrateEvaluationDetails = function migrateEvaluationDetails(details) {
    var _evaluationReasonMapp, _evaluationReasonMapp2, _details$receivedAt;
    var reasonLower = details.reason.toLowerCase();
    return {
        reason: (_evaluationReasonMapp = (_evaluationReasonMapp2 = evaluationReasonMappings.find(function(_ref7) {
            var _ref8 = (0, _slicedToArrayDefault.default)(_ref7, 1), key = _ref8[0];
            return reasonLower.includes(key);
        })) === null || _evaluationReasonMapp2 === void 0 ? void 0 : _evaluationReasonMapp2[1]) !== null && _evaluationReasonMapp !== void 0 ? _evaluationReasonMapp : (0, _types.EvaluationReason).Unknown,
        time: (_details$receivedAt = details.receivedAt) !== null && _details$receivedAt !== void 0 ? _details$receivedAt : Date.now()
    };
};
var migrateSecondaryExposures = function migrateSecondaryExposures(secondaryExposures) {
    return secondaryExposures.map(function(exposure) {
        if (typeof exposure === 'string') // This should ideally have gateValue and ruleID fields too, but it's not possible for us
        // to determine the correct values for these.
        return {
            gate: exposure
        };
        return exposure;
    });
};

},{"@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/defineProperty":"azbUC","@atlaskit/atlassian-context":"4M6Hm","./compat/types":"dDwBP","./types":"1Lq9t","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4M6Hm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isFedRamp", ()=>(0, _isFedramp.isFedRamp));
parcelHelpers.export(exports, "getATLContextUrl", ()=>(0, _domainLookup.getATLContextUrl));
parcelHelpers.export(exports, "getATLContextDomain", ()=>(0, _domainLookup.getATLContextDomain));
parcelHelpers.export(exports, "isFedrampModerate", ()=>(0, _perimeter.isFedrampModerate));
parcelHelpers.export(exports, "isIsolatedCloud", ()=>(0, _perimeter.isIsolatedCloud));
parcelHelpers.export(exports, "isolatedCloudDomain", ()=>(0, _perimeter.isolatedCloudDomain));
parcelHelpers.export(exports, "getDomainInContext", ()=>(0, _generalizedDomainLookup.getDomainInContext));
parcelHelpers.export(exports, "getUrlForDomainInContext", ()=>(0, _generalizedDomainLookup.getUrlForDomainInContext));
var _isFedramp = require("./services/host-based-lookup/is-fedramp");
var _domainLookup = require("./services/host-based-lookup/domain-lookup");
var _perimeter = require("./services/perimeter");
var _generalizedDomainLookup = require("./services/generalized-domain-lookup");

},{"./services/host-based-lookup/is-fedramp":"4ixd6","./services/host-based-lookup/domain-lookup":false,"./services/perimeter":false,"./services/generalized-domain-lookup":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4ixd6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Caution: Consider Alternatives Use of this function is not recommended as a long term solution, as it creates an assumption
 * there are no other isolated environments than just FedRAMP Moderate. You are encouraged to consider alternate solutions,
 * such as Statsig or environment configuration, that don't require creating a hard dependency between your code features
 * and the FedRAMP environment.
 * See [go-is-fedramp](https://go.atlassian.com/is-fedramp)
 */ parcelHelpers.export(exports, "isFedRamp", ()=>isFedRamp);
var _constants = require("../../../common/constants/host-based-lookup/constants");
function isFedRamp() {
    var _global$location;
    var global = globalThis;
    // MICROS_PERIMETER is already used by few products, so we need to keep it for backward compatibility
    var env = global.MICROS_PERIMETER || global.UNSAFE_ATL_CONTEXT_BOUNDARY;
    if (env) return env === (0, _constants.FEDRAMP_MODERATE);
    var matches = (_global$location = global.location) === null || _global$location === void 0 || (_global$location = _global$location.hostname) === null || _global$location === void 0 ? void 0 : _global$location.match(/atlassian-us-gov-mod\.(com|net)|atlassian-us-gov\.(com|net)|atlassian-fex\.(com|net)|atlassian-stg-fedm\.(com|net)/);
    return matches ? matches.length > 0 : false;
}

},{"../../../common/constants/host-based-lookup/constants":"6M9n6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6M9n6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FEDRAMP_MODERATE", ()=>FEDRAMP_MODERATE);
parcelHelpers.export(exports, "COMMERCIAL", ()=>COMMERCIAL);
parcelHelpers.export(exports, "FEDRAMP_FEDEX", ()=>FEDRAMP_FEDEX);
parcelHelpers.export(exports, "STAGING", ()=>STAGING);
parcelHelpers.export(exports, "PRODUCTION", ()=>PRODUCTION);
parcelHelpers.export(exports, "DEV", ()=>DEV);
var FEDRAMP_MODERATE = 'fedramp-moderate';
var COMMERCIAL = 'commercial';
var FEDRAMP_FEDEX = 'fedramp-fedex';
var STAGING = 'stg';
var PRODUCTION = 'prod';
var DEV = 'dev';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dDwBP":[function(require,module,exports,__globalThis) {
// Reference: https://github.com/statsig-io/js-lite/blob/main/src/StatsigStore.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EvaluationReason", ()=>EvaluationReason);
var EvaluationReason = /*#__PURE__*/ function(EvaluationReason) {
    // Order is important since the logic for migrating from a new client reason to an old one
    // returns the first which is a substring of the new client reason
    EvaluationReason["Error"] = "Error";
    EvaluationReason["LocalOverride"] = "LocalOverride";
    EvaluationReason["Unrecognized"] = "Unrecognized";
    EvaluationReason["Uninitialized"] = "Uninitialized";
    EvaluationReason["NetworkNotModified"] = "NetworkNotModified";
    EvaluationReason["Network"] = "Network";
    EvaluationReason["InvalidBootstrap"] = "InvalidBootstrap";
    EvaluationReason["Bootstrap"] = "Bootstrap";
    EvaluationReason["Cache"] = "Cache";
    // For when we could not migrate the reason from the new client
    EvaluationReason["Unknown"] = "Unknown";
    return EvaluationReason;
}({}); // Reference: https://github.com/statsig-io/js-lite/blob/main/src/StatsigSDKOptions.ts

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Lq9t":[function(require,module,exports,__globalThis) {
/**
 * The identifiers for the user. Options are restricted to the set that is currently supported.
 */ /**
 * Base client options. Does not include any options specific to providers
 * @interface BaseClientOptions
 * @property {FeatureGateEnvironment} environment - The environment for the client.
 * @property {string} targetApp - The target app for the client.
 * @property {AnalyticsWebClient} analyticsWebClient - The analytics web client.
 * @property {PerimeterType} perimeter - The perimeter for the client.
 */ /**
 * The options for the client.
 * @interface ClientOptions
 * @extends {BaseClientOptions}
 * @property {string} apiKey - The API key for the client.
 * @property {fetchTimeoutMs} fetchTimeoutMs - The timeout for the fetch request in milliseconds. Defaults to 5000.
 * @property {boolean} useGatewayURL - Whether to use the gateway URL. Defaults to false.
 */ /**
 * The custom attributes for the user.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FeatureGateEnvironment", ()=>FeatureGateEnvironment);
parcelHelpers.export(exports, "PerimeterType", ()=>PerimeterType);
parcelHelpers.export(exports, "NON_BOOLEAN_VALUE", ()=>NON_BOOLEAN_VALUE);
var FeatureGateEnvironment = /*#__PURE__*/ function(FeatureGateEnvironment) {
    FeatureGateEnvironment["Development"] = "development";
    FeatureGateEnvironment["Staging"] = "staging";
    FeatureGateEnvironment["Production"] = "production";
    return FeatureGateEnvironment;
}({});
var PerimeterType = /*#__PURE__*/ function(PerimeterType) {
    PerimeterType["COMMERCIAL"] = "commercial";
    PerimeterType["FEDRAMP_MODERATE"] = "fedramp-moderate";
    return PerimeterType;
}({});
var NON_BOOLEAN_VALUE = 'non_boolean'; // Type magic to get the JSDoc comments from the Client class methods to appear on the static
 // methods in FeatureGates where the property name and function type are identical

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"feb7m":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Layer", ()=>Layer);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _utils = require("../utils");
var Layer = /*#__PURE__*/ function() {
    function Layer(name, layerValue, ruleID, evaluationDetails) {
        var logParameterFunction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
        var secondaryExposures = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
        var undelegatedSecondaryExposures = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
        var allocatedExperimentName = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';
        var explicitParameters = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : [];
        (0, _classCallCheckDefault.default)(this, Layer);
        this._logParameterFunction = logParameterFunction;
        this._name = name;
        this._value = JSON.parse(JSON.stringify(layerValue !== null && layerValue !== void 0 ? layerValue : {}));
        this._ruleID = ruleID !== null && ruleID !== void 0 ? ruleID : '';
        this._evaluationDetails = evaluationDetails;
        this._secondaryExposures = secondaryExposures;
        this._undelegatedSecondaryExposures = undelegatedSecondaryExposures;
        this._allocatedExperimentName = allocatedExperimentName;
        this._explicitParameters = explicitParameters;
    }
    return (0, _createClassDefault.default)(Layer, [
        {
            key: "get",
            value: function get(key, defaultValue, typeGuard) {
                var _this = this;
                var val = this._value[key];
                if (val == null) return defaultValue;
                var logAndReturn = function logAndReturn() {
                    _this._logLayerParameterExposure(key);
                    return val;
                };
                if (typeGuard) return typeGuard(val) ? logAndReturn() : defaultValue;
                if (defaultValue == null) return logAndReturn();
                if ((0, _typeofDefault.default)(val) === (0, _typeofDefault.default)(defaultValue) && Array.isArray(defaultValue) === Array.isArray(val)) return logAndReturn();
                return defaultValue;
            }
        },
        {
            key: "getValue",
            value: function getValue(key, defaultValue) {
                // eslint-disable-next-line eqeqeq
                if (defaultValue == undefined) defaultValue = null;
                var val = this._value[key];
                if (val != null) this._logLayerParameterExposure(key);
                return val !== null && val !== void 0 ? val : defaultValue;
            }
        },
        {
            key: "_logLayerParameterExposure",
            value: function _logLayerParameterExposure(parameterName) {
                var _this$_logParameterFu;
                (_this$_logParameterFu = this._logParameterFunction) === null || _this$_logParameterFu === void 0 || _this$_logParameterFu.call(this, this, parameterName);
            }
        }
    ], [
        {
            key: "fromLayer",
            value: function fromLayer(layer) {
                var _layer$__evaluation$s, _layer$__evaluation, _layer$__evaluation$u, _layer$__evaluation2, _layer$__evaluation3, _layer$__evaluation4;
                var value = new Layer(layer.name, layer.__value, layer.ruleID, (0, _utils.migrateEvaluationDetails)(layer.details), function(_layer, parameterName) {
                    return layer.get(parameterName);
                }, (0, _utils.migrateSecondaryExposures)((_layer$__evaluation$s = (_layer$__evaluation = layer.__evaluation) === null || _layer$__evaluation === void 0 ? void 0 : _layer$__evaluation.secondary_exposures) !== null && _layer$__evaluation$s !== void 0 ? _layer$__evaluation$s : []), (0, _utils.migrateSecondaryExposures)((_layer$__evaluation$u = (_layer$__evaluation2 = layer.__evaluation) === null || _layer$__evaluation2 === void 0 ? void 0 : _layer$__evaluation2.undelegated_secondary_exposures) !== null && _layer$__evaluation$u !== void 0 ? _layer$__evaluation$u : []), (_layer$__evaluation3 = layer.__evaluation) === null || _layer$__evaluation3 === void 0 ? void 0 : _layer$__evaluation3.allocated_experiment_name, (_layer$__evaluation4 = layer.__evaluation) === null || _layer$__evaluation4 === void 0 ? void 0 : _layer$__evaluation4.explicit_parameters);
                return value;
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","../utils":"gTacs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"384GT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _fetcherDefault.default));
var _fetcher = require("./Fetcher");
var _fetcherDefault = parcelHelpers.interopDefault(_fetcher);

},{"./Fetcher":"lcweb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lcweb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PROD_BASE_URL", ()=>PROD_BASE_URL);
parcelHelpers.export(exports, "STAGING_BASE_URL", ()=>STAGING_BASE_URL);
parcelHelpers.export(exports, "DEV_BASE_URL", ()=>DEV_BASE_URL);
parcelHelpers.export(exports, "FEDM_STAGING_BASE_URL", ()=>FEDM_STAGING_BASE_URL);
parcelHelpers.export(exports, "FEDM_PROD_BASE_URL", ()=>FEDM_PROD_BASE_URL);
parcelHelpers.export(exports, "IC_FFS_BASE_URL", ()=>IC_FFS_BASE_URL);
parcelHelpers.export(exports, "IC_STAGING_BASE_DOMAIN_URL", ()=>IC_STAGING_BASE_DOMAIN_URL);
parcelHelpers.export(exports, "IC_PROD_BASE_DOMAIN_URL", ()=>IC_PROD_BASE_DOMAIN_URL);
parcelHelpers.export(exports, "GATEWAY_BASE_URL", ()=>GATEWAY_BASE_URL);
parcelHelpers.export(exports, "default", ()=>Fetcher);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _asyncToGenerator = require("@babel/runtime/helpers/asyncToGenerator");
var _asyncToGeneratorDefault = parcelHelpers.interopDefault(_asyncToGenerator);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _regenerator = require("@babel/runtime/regenerator");
var _regeneratorDefault = parcelHelpers.interopDefault(_regenerator);
var _types = require("../types");
var _version = require("../version");
var _errors = require("./errors");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var DEFAULT_REQUEST_TIMEOUT_MS = 5000;
var PROD_BASE_URL = 'https://api.atlassian.com/flags';
var STAGING_BASE_URL = 'https://api.stg.atlassian.com/flags';
var DEV_BASE_URL = 'https://api.dev.atlassian.com/flags';
var FEDM_STAGING_BASE_URL = 'https://api.stg.atlassian-us-gov-mod.com/flags';
var FEDM_PROD_BASE_URL = 'https://api.atlassian-us-gov-mod.com/flags';
var IC_FFS_BASE_URL = 'https://atlassian-statsig-proxy-archetype.atl-paas.%s.atl-ic.net';
var IC_STAGING_BASE_DOMAIN_URL = 'oasis-stg.com/flags';
var IC_PROD_BASE_DOMAIN_URL = 'atlassian-isolated.net/flags';
var GATEWAY_BASE_URL = '/gateway/api/flags';
var Fetcher = /*#__PURE__*/ function() {
    function Fetcher() {
        (0, _classCallCheckDefault.default)(this, Fetcher);
    }
    return (0, _createClassDefault.default)(Fetcher, null, [
        {
            key: "fetchClientSdk",
            value: function() {
                var _fetchClientSdk = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee(fetcherOptions) {
                    var targetApp, url;
                    return (0, _regeneratorDefault.default).wrap(function _callee$(_context) {
                        while(true)switch(_context.prev = _context.next){
                            case 0:
                                targetApp = fetcherOptions.targetApp;
                                url = "/api/v2/frontend/clientSdkKey/".concat(targetApp);
                                _context.prev = 2;
                                _context.next = 5;
                                return this.fetchRequest(url, 'GET', fetcherOptions);
                            case 5:
                                return _context.abrupt("return", _context.sent);
                            case 8:
                                _context.prev = 8;
                                _context.t0 = _context["catch"](2);
                                if (!(_context.t0 instanceof Error)) {
                                    _context.next = 12;
                                    break;
                                }
                                throw _context.t0;
                            case 12:
                                throw Error('Failed to retrieve client sdk key');
                            case 13:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee, this, [
                        [
                            2,
                            8
                        ]
                    ]);
                }));
                function fetchClientSdk(_x) {
                    return _fetchClientSdk.apply(this, arguments);
                }
                return fetchClientSdk;
            }()
        },
        {
            key: "fetchExperimentValues",
            value: function() {
                var _fetchExperimentValues = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee2(fetcherOptions, identifiers, customAttributes) {
                    var requestBody;
                    return (0, _regeneratorDefault.default).wrap(function _callee2$(_context2) {
                        while(true)switch(_context2.prev = _context2.next){
                            case 0:
                                requestBody = {
                                    identifiers: identifiers,
                                    customAttributes: customAttributes,
                                    targetApp: fetcherOptions.targetApp
                                };
                                _context2.prev = 1;
                                _context2.next = 4;
                                return this.fetchRequest('/api/v2/frontend/experimentValues', 'POST', fetcherOptions, requestBody);
                            case 4:
                                return _context2.abrupt("return", _context2.sent);
                            case 7:
                                _context2.prev = 7;
                                _context2.t0 = _context2["catch"](1);
                                if (!(_context2.t0 instanceof Error)) {
                                    _context2.next = 11;
                                    break;
                                }
                                throw _context2.t0;
                            case 11:
                                throw Error('Failed to retrieve experiment values');
                            case 12:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this, [
                        [
                            1,
                            7
                        ]
                    ]);
                }));
                function fetchExperimentValues(_x2, _x3, _x4) {
                    return _fetchExperimentValues.apply(this, arguments);
                }
                return fetchExperimentValues;
            }()
        },
        {
            key: "handleResponseError",
            value: function() {
                var _handleResponseError = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee3(response) {
                    var body;
                    return (0, _regeneratorDefault.default).wrap(function _callee3$(_context3) {
                        while(true)switch(_context3.prev = _context3.next){
                            case 0:
                                if (response.ok) {
                                    _context3.next = 5;
                                    break;
                                }
                                _context3.next = 3;
                                return response.text();
                            case 3:
                                body = _context3.sent;
                                throw new (0, _errors.ResponseError)("Non 2xx response status received, status: ".concat(response.status, ", body: ").concat(JSON.stringify(body)));
                            case 5:
                                if (!(response.status === 204)) {
                                    _context3.next = 7;
                                    break;
                                }
                                throw new (0, _errors.ResponseError)('Unexpected 204 response');
                            case 7:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3);
                }));
                function handleResponseError(_x5) {
                    return _handleResponseError.apply(this, arguments);
                }
                return handleResponseError;
            }()
        },
        {
            key: "extractResponseBody",
            value: function() {
                var _extractResponseBody = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee4(response) {
                    var value;
                    return (0, _regeneratorDefault.default).wrap(function _callee4$(_context4) {
                        while(true)switch(_context4.prev = _context4.next){
                            case 0:
                                _context4.next = 2;
                                return response.text();
                            case 2:
                                value = _context4.sent;
                                return _context4.abrupt("return", JSON.parse(value));
                            case 4:
                            case "end":
                                return _context4.stop();
                        }
                    }, _callee4);
                }));
                function extractResponseBody(_x6) {
                    return _extractResponseBody.apply(this, arguments);
                }
                return extractResponseBody;
            }()
        },
        {
            key: "getBaseUrl",
            value: function getBaseUrl(serviceEnv) {
                var useGatewayUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                var perimeter = arguments.length > 2 ? arguments[2] : undefined;
                var isolationContextId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
                if (useGatewayUrl) return GATEWAY_BASE_URL;
                if (perimeter === (0, _types.PerimeterType).FEDRAMP_MODERATE) switch(serviceEnv){
                    case (0, _types.FeatureGateEnvironment).Production:
                        return FEDM_PROD_BASE_URL;
                    case (0, _types.FeatureGateEnvironment).Staging:
                        return FEDM_STAGING_BASE_URL;
                    default:
                        throw new Error("Invalid environment \"".concat(serviceEnv, "\" for \"").concat(perimeter, "\" perimeter"));
                }
                else if (perimeter === (0, _types.PerimeterType).COMMERCIAL) switch(serviceEnv){
                    case (0, _types.FeatureGateEnvironment).Development:
                        return DEV_BASE_URL;
                    case (0, _types.FeatureGateEnvironment).Staging:
                        var apiUrl = this.getApiUrl(isolationContextId);
                        if (apiUrl !== null) return apiUrl;
                        return STAGING_BASE_URL;
                    default:
                        var prodApiUrl = this.getApiUrl(isolationContextId);
                        if (prodApiUrl !== null) return prodApiUrl;
                        return PROD_BASE_URL;
                }
                else throw new Error("Invalid perimeter \"".concat(perimeter, "\""));
            }
        },
        {
            key: "fetchRequest",
            value: function() {
                var _fetchRequest = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee5(path, method, fetcherOptions, body) {
                    var baseUrl, fetchTimeout, abortSignal, abortController, response;
                    return (0, _regeneratorDefault.default).wrap(function _callee5$(_context5) {
                        while(true)switch(_context5.prev = _context5.next){
                            case 0:
                                baseUrl = Fetcher.getBaseUrl(fetcherOptions.environment, fetcherOptions.useGatewayURL, fetcherOptions.perimeter, fetcherOptions.isolationContextId);
                                fetchTimeout = fetcherOptions.fetchTimeoutMs || DEFAULT_REQUEST_TIMEOUT_MS;
                                if (AbortSignal.timeout) abortSignal = AbortSignal.timeout(fetchTimeout);
                                else if (AbortController) {
                                    abortController = new AbortController();
                                    abortSignal = abortController.signal;
                                    setTimeout(function() {
                                        return abortController.abort();
                                    }, fetchTimeout);
                                }
                                _context5.next = 5;
                                return fetch("".concat(baseUrl).concat(path), _objectSpread({
                                    method: method,
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-Client-Name': 'feature-gate-js-client',
                                        'X-Client-Version': (0, _version.CLIENT_VERSION),
                                        'X-API-KEY': fetcherOptions.apiKey
                                    },
                                    signal: abortSignal
                                }, body && {
                                    body: JSON.stringify(body)
                                }));
                            case 5:
                                response = _context5.sent;
                                _context5.next = 8;
                                return this.handleResponseError(response);
                            case 8:
                                _context5.next = 10;
                                return this.extractResponseBody(response);
                            case 10:
                                return _context5.abrupt("return", _context5.sent);
                            case 11:
                            case "end":
                                return _context5.stop();
                        }
                    }, _callee5, this);
                }));
                function fetchRequest(_x7, _x8, _x9, _x0) {
                    return _fetchRequest.apply(this, arguments);
                }
                return fetchRequest;
            }()
        },
        {
            key: "getApiUrl",
            value: function getApiUrl(isolationContextId) {
                var window1 = this.getWindowLocation();
                if (window1 === undefined) {
                    //this is needed when this SDK is used for SSR or plugin use cases where secret keys not available to use backend SDKs
                    if (!isolationContextId) return null;
                    return IC_FFS_BASE_URL.replace('%s', isolationContextId);
                }
                var protocol = window1.protocol, hostname = window1.hostname;
                // Match last subdomain fragment before oasis-stg.com
                var oasisMatch = hostname.match(/([^.]+)\.oasis-stg\.com$/);
                if (oasisMatch) return "".concat(protocol, "//api.").concat(oasisMatch[1], ".").concat(IC_STAGING_BASE_DOMAIN_URL);
                // Match last subdomain fragment before atlassian-isolated.net
                var isolatedMatch = hostname.match(/([^.]+)\.atlassian-isolated\.net$/);
                if (isolatedMatch) return "".concat(protocol, "//api.").concat(isolatedMatch[1], ".").concat(IC_PROD_BASE_DOMAIN_URL);
                return null;
            }
        },
        {
            key: "getWindowLocation",
            value: function getWindowLocation() {
                if (typeof window !== 'undefined' && window.location) return window.location;
                return undefined;
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/asyncToGenerator":"3sxrH","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/regenerator":"baIBJ","../types":"1Lq9t","../version":"fJ9fV","./errors":"7sYZ9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fJ9fV":[function(require,module,exports,__globalThis) {
/// <reference types="node" />
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CLIENT_VERSION", ()=>CLIENT_VERSION);
var CLIENT_VERSION = "5.5.0";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7sYZ9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResponseError", ()=>ResponseError);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _wrapNativeSuper = require("@babel/runtime/helpers/wrapNativeSuper");
var _wrapNativeSuperDefault = parcelHelpers.interopDefault(_wrapNativeSuper);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var ResponseError = /*#__PURE__*/ function(_Error) {
    function ResponseError(message) {
        (0, _classCallCheckDefault.default)(this, ResponseError);
        return _callSuper(this, ResponseError, [
            message
        ]);
    }
    (0, _inheritsDefault.default)(ResponseError, _Error);
    return (0, _createClassDefault.default)(ResponseError);
}(/*#__PURE__*/ (0, _wrapNativeSuperDefault.default)(Error));

},{"@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/wrapNativeSuper":"42enk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3sko5":[function(require,module,exports,__globalThis) {
var _typeof = require("52fa942c15a57b36")["default"];
var assertThisInitialized = require("ca3744a9acc8b6f9");
function _possibleConstructorReturn(t, e) {
    if (e && ("object" == _typeof(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return assertThisInitialized(t);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"52fa942c15a57b36":"7EL9t","ca3744a9acc8b6f9":"kW34G"}],"kW34G":[function(require,module,exports,__globalThis) {
function _assertThisInitialized(e) {
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"aGuV6":[function(require,module,exports,__globalThis) {
function _getPrototypeOf(t) {
    return module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
        return t.__proto__ || Object.getPrototypeOf(t);
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _getPrototypeOf(t);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"8CbKS":[function(require,module,exports,__globalThis) {
var setPrototypeOf = require("f41396146170672b");
function _inherits(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
        constructor: {
            value: t,
            writable: !0,
            configurable: !0
        }
    }), Object.defineProperty(t, "prototype", {
        writable: !1
    }), e && setPrototypeOf(t, e);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"f41396146170672b":"bin2t"}],"bin2t":[function(require,module,exports,__globalThis) {
function _setPrototypeOf(t, e) {
    return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _setPrototypeOf(t, e);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"42enk":[function(require,module,exports,__globalThis) {
var getPrototypeOf = require("a346c83e6efb58c8");
var setPrototypeOf = require("287bb8a1bf78a47d");
var isNativeFunction = require("60adf368fae4949a");
var construct = require("7d55b0033bd2218c");
function _wrapNativeSuper(t) {
    var r = "function" == typeof Map ? new Map() : void 0;
    return module.exports = _wrapNativeSuper = function _wrapNativeSuper(t) {
        if (null === t || !isNativeFunction(t)) return t;
        if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
        if (void 0 !== r) {
            if (r.has(t)) return r.get(t);
            r.set(t, Wrapper);
        }
        function Wrapper() {
            return construct(t, arguments, getPrototypeOf(this).constructor);
        }
        return Wrapper.prototype = Object.create(t.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), setPrototypeOf(Wrapper, t);
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _wrapNativeSuper(t);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a346c83e6efb58c8":"aGuV6","287bb8a1bf78a47d":"bin2t","60adf368fae4949a":"4Cm3k","7d55b0033bd2218c":"5MFre"}],"4Cm3k":[function(require,module,exports,__globalThis) {
function _isNativeFunction(t) {
    try {
        return -1 !== Function.toString.call(t).indexOf("[native code]");
    } catch (n) {
        return "function" == typeof t;
    }
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"5MFre":[function(require,module,exports,__globalThis) {
var isNativeReflectConstruct = require("bed39adab0c7e5fa");
var setPrototypeOf = require("36754938673a8dd8");
function _construct(t, e, r) {
    if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
    var o = [
        null
    ];
    o.push.apply(o, e);
    var p = new (t.bind.apply(t, o))();
    return r && setPrototypeOf(p, r.prototype), p;
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"bed39adab0c7e5fa":"kqd6w","36754938673a8dd8":"bin2t"}],"kqd6w":[function(require,module,exports,__globalThis) {
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"gSkHT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NoFetchDataAdapter", ()=>NoFetchDataAdapter);
var _asyncToGenerator = require("@babel/runtime/helpers/asyncToGenerator");
var _asyncToGeneratorDefault = parcelHelpers.interopDefault(_asyncToGenerator);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _get = require("@babel/runtime/helpers/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _regenerator = require("@babel/runtime/regenerator");
var _regeneratorDefault = parcelHelpers.interopDefault(_regenerator);
var _jsClient = require("@statsig/js-client");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _superPropGet(t, o, e, r) {
    var p = (0, _getDefault.default)((0, _getPrototypeOfDefault.default)(1 & r ? t.prototype : t), o, e);
    return 2 & r && "function" == typeof p ? function(t) {
        return p.apply(e, t);
    } : p;
}
var NoFetchDataAdapter = /*#__PURE__*/ function(_DataAdapterCore) {
    function NoFetchDataAdapter() {
        var _this;
        (0, _classCallCheckDefault.default)(this, NoFetchDataAdapter);
        _this = _callSuper(this, NoFetchDataAdapter, [
            'NoFetchDataAdapter',
            'nofetch'
        ]);
        (0, _definePropertyDefault.default)(_this, "bootstrapResult", null);
        return _this;
    }
    /**
   * Make sure to call this **before** calling `initializeAsync` or `updateUserAsync` but
   * after the Statsig client has been created!
   */ (0, _inheritsDefault.default)(NoFetchDataAdapter, _DataAdapterCore);
    return (0, _createClassDefault.default)(NoFetchDataAdapter, [
        {
            key: "setBootstrapData",
            value: function setBootstrapData(data) {
                this.bootstrapResult = data ? {
                    source: 'Bootstrap',
                    data: JSON.stringify(data),
                    receivedAt: Date.now(),
                    stableID: (0, _jsClient.StableID).get(this._getSdkKey()),
                    fullUserHash: null
                } : null;
            }
        },
        {
            key: "prefetchData",
            value: function() {
                var _prefetchData = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee(_user, _options) {
                    return (0, _regeneratorDefault.default).wrap(function _callee$(_context) {
                        while(true)switch(_context.prev = _context.next){
                            case 0:
                            case "end":
                                return _context.stop();
                        }
                    }, _callee);
                }));
                function prefetchData(_x, _x2) {
                    return _prefetchData.apply(this, arguments);
                }
                return prefetchData;
            }()
        },
        {
            key: "getDataAsync",
            value: function() {
                var _getDataAsync = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee2(_current, user, _options) {
                    return (0, _regeneratorDefault.default).wrap(function _callee2$(_context2) {
                        while(true)switch(_context2.prev = _context2.next){
                            case 0:
                                return _context2.abrupt("return", this.bootstrapResult && _objectSpread(_objectSpread({}, this.bootstrapResult), {}, {
                                    fullUserHash: (0, _jsClient._getFullUserHash)(user)
                                }));
                            case 1:
                            case "end":
                                return _context2.stop();
                        }
                    }, _callee2, this);
                }));
                function getDataAsync(_x3, _x4, _x5) {
                    return _getDataAsync.apply(this, arguments);
                }
                return getDataAsync;
            }()
        },
        {
            key: "getDataSync",
            value: function getDataSync(user) {
                return this.bootstrapResult && _objectSpread(_objectSpread({}, this.bootstrapResult), {}, {
                    fullUserHash: (0, _jsClient._getFullUserHash)(user)
                });
            }
        },
        {
            key: "_fetchFromNetwork",
            value: function() {
                var _fetchFromNetwork2 = (0, _asyncToGeneratorDefault.default)(/*#__PURE__*/ (0, _regeneratorDefault.default).mark(function _callee3(_current, _user, _options) {
                    return (0, _regeneratorDefault.default).wrap(function _callee3$(_context3) {
                        while(true)switch(_context3.prev = _context3.next){
                            case 0:
                                return _context3.abrupt("return", null);
                            case 1:
                            case "end":
                                return _context3.stop();
                        }
                    }, _callee3);
                }));
                function _fetchFromNetwork(_x6, _x7, _x8) {
                    return _fetchFromNetwork2.apply(this, arguments);
                }
                return _fetchFromNetwork;
            }()
        },
        {
            key: "_getCacheKey",
            value: function _getCacheKey(user) {
                // Same logic as default data adapter
                // https://github.com/statsig-io/js-client-monorepo/blob/main/packages/js-client/src/StatsigEvaluationsDataAdapter.ts
                var key = (0, _jsClient._getStorageKey)(this._getSdkKey(), user);
                return "".concat((0, _jsClient.DataAdapterCachePrefix), ".").concat(this._cacheSuffix, ".").concat(key);
            }
        },
        {
            key: "_isCachedResultValidFor204",
            value: function _isCachedResultValidFor204(_result, _user) {
                return false;
            }
        },
        {
            key: "setDataLegacy",
            value: function setDataLegacy(data, user) {
                _superPropGet(NoFetchDataAdapter, "setData", this, 3)([
                    data,
                    user
                ]);
            }
        },
        {
            key: "toJSON",
            value: function toJSON() {
                var result = _objectSpread({}, this);
                delete result._options;
                delete result._inMemoryCache;
                delete result.bootstrapResult;
                return result;
            }
        }
    ]);
}((0, _jsClient.DataAdapterCore));

},{"@babel/runtime/helpers/asyncToGenerator":"3sxrH","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/get":"fueqV","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/regenerator":"baIBJ","@statsig/js-client":"lSvZM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fueqV":[function(require,module,exports,__globalThis) {
var superPropBase = require("6e537077e7e3a1c2");
function _get() {
    return module.exports = _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, r) {
        var p = superPropBase(e, t);
        if (p) {
            var n = Object.getOwnPropertyDescriptor(p, t);
            return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;
        }
    }, module.exports.__esModule = true, module.exports["default"] = module.exports, _get.apply(null, arguments);
}
module.exports = _get, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"6e537077e7e3a1c2":"kTxL3"}],"kTxL3":[function(require,module,exports,__globalThis) {
var getPrototypeOf = require("b50b8ab32046070");
function _superPropBase(t, o) {
    for(; !({}).hasOwnProperty.call(t, o) && null !== (t = getPrototypeOf(t)););
    return t;
}
module.exports = _superPropBase, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"b50b8ab32046070":"aGuV6"}],"hWZXl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LOCAL_STORAGE_KEY", ()=>LOCAL_STORAGE_KEY);
parcelHelpers.export(exports, "PersistentOverrideAdapter", ()=>PersistentOverrideAdapter);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _clientCore = require("@statsig/client-core");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
var LOCAL_OVERRIDE_REASON = 'LocalOverride:Recognized';
var LOCAL_STORAGE_KEY = 'STATSIG_OVERRIDES';
var LEGACY_LOCAL_STORAGE_KEY = 'STATSIG_JS_LITE_LOCAL_OVERRIDES';
var makeEmptyStore = function makeEmptyStore() {
    return {
        gates: {},
        configs: {},
        layers: {}
    };
};
var djb2MapKey = function djb2MapKey(hash, kind) {
    return kind + ':' + hash;
};
var PersistentOverrideAdapter = /*#__PURE__*/ function() {
    function PersistentOverrideAdapter(localStorageKey) {
        (0, _classCallCheckDefault.default)(this, PersistentOverrideAdapter);
        this._overrides = makeEmptyStore();
        this._djb2Map = new Map();
        this._localStorageKey = localStorageKey;
    }
    return (0, _createClassDefault.default)(PersistentOverrideAdapter, [
        {
            key: "parseStoredOverrides",
            value: function parseStoredOverrides(localStorageKey) {
                try {
                    var json = window.localStorage.getItem(localStorageKey);
                    if (!json) return makeEmptyStore();
                    return JSON.parse(json);
                } catch (_unused) {
                    return makeEmptyStore();
                }
            }
        },
        {
            key: "mergeOverrides",
            value: function mergeOverrides() {
                var merged = makeEmptyStore();
                for(var _len = arguments.length, allOverrides = new Array(_len), _key = 0; _key < _len; _key++)allOverrides[_key] = arguments[_key];
                for(var _i = 0, _allOverrides = allOverrides; _i < _allOverrides.length; _i++){
                    var overrides = _allOverrides[_i];
                    for(var _i2 = 0, _Object$entries = Object.entries((_overrides$gates = overrides.gates) !== null && _overrides$gates !== void 0 ? _overrides$gates : {}); _i2 < _Object$entries.length; _i2++){
                        var _overrides$gates;
                        var _Object$entries$_i = (0, _slicedToArrayDefault.default)(_Object$entries[_i2], 2), name = _Object$entries$_i[0], value = _Object$entries$_i[1];
                        merged.gates[name] = value;
                    }
                    for(var _i3 = 0, _Object$entries2 = Object.entries((_overrides$configs = overrides.configs) !== null && _overrides$configs !== void 0 ? _overrides$configs : {}); _i3 < _Object$entries2.length; _i3++){
                        var _overrides$configs;
                        var _Object$entries2$_i = (0, _slicedToArrayDefault.default)(_Object$entries2[_i3], 2), _name = _Object$entries2$_i[0], _value = _Object$entries2$_i[1];
                        merged.configs[_name] = _value;
                    }
                    for(var _i4 = 0, _Object$entries3 = Object.entries((_overrides$layers = overrides.layers) !== null && _overrides$layers !== void 0 ? _overrides$layers : {}); _i4 < _Object$entries3.length; _i4++){
                        var _overrides$layers;
                        var _Object$entries3$_i = (0, _slicedToArrayDefault.default)(_Object$entries3[_i4], 2), _name2 = _Object$entries3$_i[0], _value2 = _Object$entries3$_i[1];
                        merged.layers[_name2] = _value2;
                    }
                }
                return merged;
            }
        },
        {
            key: "initFromStoredOverrides",
            value: function initFromStoredOverrides() {
                var storedOverrides = this.mergeOverrides(this._overrides, this.parseStoredOverrides(LEGACY_LOCAL_STORAGE_KEY), this.parseStoredOverrides(this._localStorageKey));
                // Clear data from legacy local storage key now we've read from it.
                // This prevents things being stuck in there that are always read but never written to.
                try {
                    window.localStorage.removeItem(LEGACY_LOCAL_STORAGE_KEY);
                } catch (_unused2) {
                // ignored - window is not defined in non-browser environments, and we don't save things there
                // (things like SSR, etc)
                }
                // In version 4.24.0 we introduced hashes in this override adapter, but had a bug which would cause
                // multiple hashes to continue being created. This code here removes these hashes since we've moved
                // to using a more reliable and easier to maintain map in `_djb2Map`.
                for(var _i5 = 0, _Object$values = Object.values(storedOverrides); _i5 < _Object$values.length; _i5++){
                    var container = _Object$values[_i5];
                    var allKeys = new Set(Object.keys(container));
                    var _iterator = _createForOfIteratorHelper(allKeys), _step;
                    try {
                        for(_iterator.s(); !(_step = _iterator.n()).done;){
                            var name = _step.value;
                            var hash = (0, _clientCore._DJB2)(name);
                            if (allKeys.has(hash)) delete container[hash];
                        }
                    } catch (err) {
                        _iterator.e(err);
                    } finally{
                        _iterator.f();
                    }
                }
                this.applyOverrides(storedOverrides);
            }
        },
        {
            key: "saveOverrides",
            value: function saveOverrides() {
                try {
                    window.localStorage.setItem(this._localStorageKey, JSON.stringify(this._overrides));
                } catch (_unused3) {
                // ignored - window is not defined in non-browser environments, and we don't save things there
                // (things like SSR, etc)
                }
            }
        },
        {
            key: "getOverrides",
            value: function getOverrides() {
                return this.mergeOverrides(this._overrides);
            }
        },
        {
            key: "applyOverrides",
            value: function applyOverrides(overrides) {
                var newOverrides = _objectSpread(_objectSpread({}, makeEmptyStore()), overrides);
                this._djb2Map.clear();
                for(var _i6 = 0, _Object$entries4 = Object.entries(newOverrides); _i6 < _Object$entries4.length; _i6++){
                    var _Object$entries4$_i = (0, _slicedToArrayDefault.default)(_Object$entries4[_i6], 2), containerName = _Object$entries4$_i[0], container = _Object$entries4$_i[1];
                    for(var _i7 = 0, _Object$entries5 = Object.entries(container); _i7 < _Object$entries5.length; _i7++){
                        var _Object$entries5$_i = (0, _slicedToArrayDefault.default)(_Object$entries5[_i7], 2), name = _Object$entries5$_i[0], value = _Object$entries5$_i[1];
                        this._djb2Map.set(djb2MapKey((0, _clientCore._DJB2)(name), containerName), value);
                    }
                }
                this._overrides = newOverrides;
            }
        },
        {
            key: "setOverrides",
            value: function setOverrides(overrides) {
                this.applyOverrides(overrides);
                this.saveOverrides();
            }
        },
        {
            key: "overrideGate",
            value: function overrideGate(name, value) {
                this._overrides.gates[name] = value;
                this._djb2Map.set(djb2MapKey((0, _clientCore._DJB2)(name), 'gates'), value);
                this.saveOverrides();
            }
        },
        {
            key: "removeGateOverride",
            value: function removeGateOverride(name) {
                delete this._overrides.gates[name];
                this._djb2Map.delete(djb2MapKey((0, _clientCore._DJB2)(name), 'gates'));
                this.saveOverrides();
            }
        },
        {
            key: "getGateOverride",
            value: function getGateOverride(current, _user) {
                var _this$_overrides$gate;
                var overridden = (_this$_overrides$gate = this._overrides.gates[current.name]) !== null && _this$_overrides$gate !== void 0 ? _this$_overrides$gate : this._djb2Map.get(djb2MapKey(current.name, 'gates'));
                if (overridden == null) return null;
                return _objectSpread(_objectSpread({}, current), {}, {
                    value: overridden,
                    details: _objectSpread(_objectSpread({}, current.details), {}, {
                        reason: LOCAL_OVERRIDE_REASON
                    })
                });
            }
        },
        {
            key: "overrideDynamicConfig",
            value: function overrideDynamicConfig(name, value) {
                this._overrides.configs[name] = value;
                this._djb2Map.set(djb2MapKey((0, _clientCore._DJB2)(name), 'configs'), value);
                this.saveOverrides();
            }
        },
        {
            key: "removeDynamicConfigOverride",
            value: function removeDynamicConfigOverride(name) {
                delete this._overrides.configs[name];
                this._djb2Map.delete(djb2MapKey((0, _clientCore._DJB2)(name), 'configs'));
                this.saveOverrides();
            }
        },
        {
            key: "getDynamicConfigOverride",
            value: function getDynamicConfigOverride(current, _user) {
                return this._getConfigOverride(current, this._overrides.configs);
            }
        },
        {
            key: "overrideExperiment",
            value: function overrideExperiment(name, value) {
                this._overrides.configs[name] = value;
                this._djb2Map.set(djb2MapKey((0, _clientCore._DJB2)(name), 'configs'), value);
                this.saveOverrides();
            }
        },
        {
            key: "removeExperimentOverride",
            value: function removeExperimentOverride(name) {
                delete this._overrides.configs[name];
                this._djb2Map.delete(djb2MapKey((0, _clientCore._DJB2)(name), 'configs'));
                this.saveOverrides();
            }
        },
        {
            key: "getExperimentOverride",
            value: function getExperimentOverride(current, _user) {
                return this._getConfigOverride(current, this._overrides.configs);
            }
        },
        {
            key: "overrideLayer",
            value: function overrideLayer(name, value) {
                this._overrides.layers[name] = value;
                this._djb2Map.set(djb2MapKey((0, _clientCore._DJB2)(name), 'layers'), value);
                this.saveOverrides();
            }
        },
        {
            key: "removeLayerOverride",
            value: function removeLayerOverride(name) {
                delete this._overrides.layers[name];
                this._djb2Map.delete(djb2MapKey((0, _clientCore._DJB2)(name), 'layers'));
                this.saveOverrides();
            }
        },
        {
            key: "removeAllOverrides",
            value: function removeAllOverrides() {
                this._overrides = makeEmptyStore();
                try {
                    window.localStorage.removeItem(this._localStorageKey);
                } catch (_unused4) {
                // ignored - window is not defined in non-browser environments, and we don't save things there
                // (things like SSR, etc)
                }
            }
        },
        {
            key: "getLayerOverride",
            value: function getLayerOverride(current, _user) {
                var _this$_overrides$laye;
                var overridden = (_this$_overrides$laye = this._overrides.layers[current.name]) !== null && _this$_overrides$laye !== void 0 ? _this$_overrides$laye : this._djb2Map.get(djb2MapKey(current.name, 'layers'));
                if (overridden == null) return null;
                return _objectSpread(_objectSpread({}, current), {}, {
                    __value: overridden,
                    get: (0, _clientCore._makeTypedGet)(current.name, overridden),
                    details: _objectSpread(_objectSpread({}, current.details), {}, {
                        reason: LOCAL_OVERRIDE_REASON
                    })
                });
            }
        },
        {
            key: "_getConfigOverride",
            value: function _getConfigOverride(current, lookup) {
                var _lookup$current$name;
                var overridden = (_lookup$current$name = lookup[current.name]) !== null && _lookup$current$name !== void 0 ? _lookup$current$name : this._djb2Map.get(djb2MapKey(current.name, 'configs'));
                if (overridden == null) return null;
                return _objectSpread(_objectSpread({}, current), {}, {
                    value: overridden,
                    get: (0, _clientCore._makeTypedGet)(current.name, overridden),
                    details: _objectSpread(_objectSpread({}, current.details), {}, {
                        reason: LOCAL_OVERRIDE_REASON
                    })
                });
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@statsig/client-core":"7zaBN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kBi3H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "debug", ()=>debug);
var _process, _process2;
// We can't rely on NODE_ENV === 'test' if its value is already configured by the consumer to some other value, so better to use JEST_WORKER_ID
// https://jestjs.io/docs/environment-variables#jest_worker_id
var TESTS_MODE = (globalThis === null || globalThis === void 0 || (_process = globalThis.process) === null || _process === void 0 || (_process = _process.env) === null || _process === void 0 ? void 0 : _process.JEST_WORKER_ID) !== undefined;
var DEBUG_MODE = !TESTS_MODE && (globalThis === null || globalThis === void 0 || (_process2 = globalThis.process) === null || _process2 === void 0 || (_process2 = _process2.env) === null || _process2 === void 0 ? void 0 : _process2.NODE_ENV) !== 'production';
var debug = function debug() {
    var _console;
    if (!DEBUG_MODE) return;
    // eslint-disable-next-line no-console
    (_console = console).debug.apply(_console, arguments);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"29Id4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Box", ()=>(0, _boxDefault.default));
parcelHelpers.export(exports, "Inline", ()=>(0, _inlineDefault.default));
parcelHelpers.export(exports, "Stack", ()=>(0, _stackDefault.default));
parcelHelpers.export(exports, "Flex", ()=>(0, _flexDefault.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _gridDefault.default));
parcelHelpers.export(exports, "Bleed", ()=>(0, _bleedDefault.default));
parcelHelpers.export(exports, "Text", ()=>(0, _textDefault.default));
parcelHelpers.export(exports, "MetricText", ()=>(0, _metricTextDefault.default));
parcelHelpers.export(exports, "Pressable", ()=>(0, _pressableDefault.default));
parcelHelpers.export(exports, "Anchor", ()=>(0, _anchorDefault.default));
parcelHelpers.export(exports, "media", ()=>(0, _responsive.media));
parcelHelpers.export(exports, "UNSAFE_useMediaQuery", ()=>(0, _responsive.UNSAFE_useMediaQuery));
parcelHelpers.export(exports, "Show", ()=>(0, _responsive.Show));
parcelHelpers.export(exports, "Hide", ()=>(0, _responsive.Hide));
parcelHelpers.export(exports, "Focusable", ()=>(0, _focusableDefault.default));
// TODO: This is still not figured out from before…
parcelHelpers.export(exports, "UNSAFE_useSurface", ()=>(0, _surfaceProvider.useSurface));
var _box = require("./components/box");
var _boxDefault = parcelHelpers.interopDefault(_box);
var _inline = require("./components/inline");
var _inlineDefault = parcelHelpers.interopDefault(_inline);
var _stack = require("./components/stack");
var _stackDefault = parcelHelpers.interopDefault(_stack);
var _flex = require("./components/flex");
var _flexDefault = parcelHelpers.interopDefault(_flex);
var _grid = require("./components/grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);
var _bleed = require("./components/bleed");
var _bleedDefault = parcelHelpers.interopDefault(_bleed);
var _text = require("./components/text");
var _textDefault = parcelHelpers.interopDefault(_text);
var _metricText = require("./components/metric-text");
var _metricTextDefault = parcelHelpers.interopDefault(_metricText);
var _pressable = require("./components/pressable");
var _pressableDefault = parcelHelpers.interopDefault(_pressable);
var _anchor = require("./components/anchor");
var _anchorDefault = parcelHelpers.interopDefault(_anchor);
var _responsive = require("./responsive");
var _focusable = require("./components/focusable");
var _focusableDefault = parcelHelpers.interopDefault(_focusable);
var _surfaceProvider = require("../utils/surface-provider");

},{"./components/box":"2frgX","./components/inline":"3Cfbq","./components/stack":false,"./components/flex":"bBLMH","./components/grid":false,"./components/bleed":false,"./components/text":"4ybno","./components/metric-text":false,"./components/pressable":"g4Wlx","./components/anchor":"fcrn7","./responsive":"i53Ws","./components/focusable":"kI6N8","../utils/surface-provider":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2frgX":[function(require,module,exports,__globalThis) {
/* box.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _surfaceProvider = require("../../utils/surface-provider");
var _excluded = [
    "as",
    "children",
    "backgroundColor",
    "padding",
    "paddingBlock",
    "paddingBlockStart",
    "paddingBlockEnd",
    "paddingInline",
    "paddingInlineStart",
    "paddingInlineEnd",
    "style",
    "testId",
    "xcss"
], _excluded2 = [
    "className"
];
// Can either Exclude or Extract - here we're excluding all SVG-related elements, <button> elements (handled by Pressable), and <a> elements (handled by Anchor)
// Basically just ElementType but without ComponentType, it makes sense to keep the "Type" suffix
// eslint-disable-next-line @repo/internal/react/consistent-types-definitions
var baseStyles = null;
var backgroundColorMap = {
    'color.background.accent.lime.subtlest': "_bfhkm890",
    'color.background.accent.lime.subtlest.hovered': "_bfhkd4y8",
    'color.background.accent.lime.subtlest.pressed': "_bfhk1fno",
    'color.background.accent.lime.subtler': "_bfhkz2ec",
    'color.background.accent.lime.subtler.hovered': "_bfhk1eds",
    'color.background.accent.lime.subtler.pressed': "_bfhk1hgz",
    'color.background.accent.lime.subtle': "_bfhkbq5w",
    'color.background.accent.lime.subtle.hovered': "_bfhkfoww",
    'color.background.accent.lime.subtle.pressed': "_bfhkhgj8",
    'color.background.accent.lime.bolder': "_bfhktde4",
    'color.background.accent.lime.bolder.hovered': "_bfhknzpa",
    'color.background.accent.lime.bolder.pressed': "_bfhk1b17",
    'color.background.accent.red.subtlest': "_bfhk1vk5",
    'color.background.accent.red.subtlest.hovered': "_bfhk1i6i",
    'color.background.accent.red.subtlest.pressed': "_bfhk1pbw",
    'color.background.accent.red.subtler': "_bfhk1rtt",
    'color.background.accent.red.subtler.hovered': "_bfhkrw5d",
    'color.background.accent.red.subtler.pressed': "_bfhk69rw",
    'color.background.accent.red.subtle': "_bfhkkrt9",
    'color.background.accent.red.subtle.hovered': "_bfhk1sou",
    'color.background.accent.red.subtle.pressed': "_bfhk1tf4",
    'color.background.accent.red.bolder': "_bfhkuibq",
    'color.background.accent.red.bolder.hovered': "_bfhk100f",
    'color.background.accent.red.bolder.pressed': "_bfhkprmn",
    'color.background.accent.orange.subtlest': "_bfhk1g3m",
    'color.background.accent.orange.subtlest.hovered': "_bfhkg4tm",
    'color.background.accent.orange.subtlest.pressed': "_bfhk1ya0",
    'color.background.accent.orange.subtler': "_bfhkf2vu",
    'color.background.accent.orange.subtler.hovered': "_bfhk1lml",
    'color.background.accent.orange.subtler.pressed': "_bfhkuxsx",
    'color.background.accent.orange.subtle': "_bfhk1g6e",
    'color.background.accent.orange.subtle.hovered': "_bfhk1oew",
    'color.background.accent.orange.subtle.pressed': "_bfhk1phk",
    'color.background.accent.orange.bolder': "_bfhkjgng",
    'color.background.accent.orange.bolder.hovered': "_bfhkhi52",
    'color.background.accent.orange.bolder.pressed': "_bfhkf767",
    'color.background.accent.yellow.subtlest': "_bfhk1ozg",
    'color.background.accent.yellow.subtlest.hovered': "_bfhk19g9",
    'color.background.accent.yellow.subtlest.pressed': "_bfhk31d1",
    'color.background.accent.yellow.subtler': "_bfhk3fv2",
    'color.background.accent.yellow.subtler.hovered': "_bfhklg04",
    'color.background.accent.yellow.subtler.pressed': "_bfhk1d44",
    'color.background.accent.yellow.subtle': "_bfhkry5t",
    'color.background.accent.yellow.subtle.hovered': "_bfhk17e6",
    'color.background.accent.yellow.subtle.pressed': "_bfhko0y5",
    'color.background.accent.yellow.bolder': "_bfhk1vop",
    'color.background.accent.yellow.bolder.hovered': "_bfhkkjqf",
    'color.background.accent.yellow.bolder.pressed': "_bfhk32kj",
    'color.background.accent.green.subtlest': "_bfhkn729",
    'color.background.accent.green.subtlest.hovered': "_bfhk3utz",
    'color.background.accent.green.subtlest.pressed': "_bfhkv5yf",
    'color.background.accent.green.subtler': "_bfhk1wnw",
    'color.background.accent.green.subtler.hovered': "_bfhkung8",
    'color.background.accent.green.subtler.pressed': "_bfhk1p19",
    'color.background.accent.green.subtle': "_bfhk1rsu",
    'color.background.accent.green.subtle.hovered': "_bfhk12e3",
    'color.background.accent.green.subtle.pressed': "_bfhk8h4p",
    'color.background.accent.green.bolder': "_bfhk1e5c",
    'color.background.accent.green.bolder.hovered': "_bfhka5yi",
    'color.background.accent.green.bolder.pressed': "_bfhk1azz",
    'color.background.accent.teal.subtlest': "_bfhk7xuz",
    'color.background.accent.teal.subtlest.hovered': "_bfhk108c",
    'color.background.accent.teal.subtlest.pressed': "_bfhk1j2h",
    'color.background.accent.teal.subtler': "_bfhk1a17",
    'color.background.accent.teal.subtler.hovered': "_bfhkg5py",
    'color.background.accent.teal.subtler.pressed': "_bfhkq7li",
    'color.background.accent.teal.subtle': "_bfhktdv8",
    'color.background.accent.teal.subtle.hovered': "_bfhkzh8h",
    'color.background.accent.teal.subtle.pressed': "_bfhk10ai",
    'color.background.accent.teal.bolder': "_bfhk2c8p",
    'color.background.accent.teal.bolder.hovered': "_bfhkl3ve",
    'color.background.accent.teal.bolder.pressed': "_bfhkse6l",
    'color.background.accent.blue.subtlest': "_bfhkavxe",
    'color.background.accent.blue.subtlest.hovered': "_bfhkay3p",
    'color.background.accent.blue.subtlest.pressed': "_bfhk1xmr",
    'color.background.accent.blue.subtler': "_bfhk4v9p",
    'color.background.accent.blue.subtler.hovered': "_bfhk16e6",
    'color.background.accent.blue.subtler.pressed': "_bfhk1uh7",
    'color.background.accent.blue.subtle': "_bfhk1j89",
    'color.background.accent.blue.subtle.hovered': "_bfhk1f4s",
    'color.background.accent.blue.subtle.pressed': "_bfhkqctv",
    'color.background.accent.blue.bolder': "_bfhkc8cv",
    'color.background.accent.blue.bolder.hovered': "_bfhk1cwi",
    'color.background.accent.blue.bolder.pressed': "_bfhkhcrq",
    'color.background.accent.purple.subtlest': "_bfhkp7j4",
    'color.background.accent.purple.subtlest.hovered': "_bfhkm0d5",
    'color.background.accent.purple.subtlest.pressed': "_bfhkgslw",
    'color.background.accent.purple.subtler': "_bfhk1jkz",
    'color.background.accent.purple.subtler.hovered': "_bfhk1wyu",
    'color.background.accent.purple.subtler.pressed': "_bfhk5fkp",
    'color.background.accent.purple.subtle': "_bfhkdh45",
    'color.background.accent.purple.subtle.hovered': "_bfhk1wob",
    'color.background.accent.purple.subtle.pressed': "_bfhkwz05",
    'color.background.accent.purple.bolder': "_bfhkygwo",
    'color.background.accent.purple.bolder.hovered': "_bfhkadgs",
    'color.background.accent.purple.bolder.pressed': "_bfhk1uro",
    'color.background.accent.magenta.subtlest': "_bfhk8tvm",
    'color.background.accent.magenta.subtlest.hovered': "_bfhkr3zd",
    'color.background.accent.magenta.subtlest.pressed': "_bfhk1een",
    'color.background.accent.magenta.subtler': "_bfhkv9ra",
    'color.background.accent.magenta.subtler.hovered': "_bfhk1r0p",
    'color.background.accent.magenta.subtler.pressed': "_bfhkxuzc",
    'color.background.accent.magenta.subtle': "_bfhk1mi6",
    'color.background.accent.magenta.subtle.hovered': "_bfhkrwyz",
    'color.background.accent.magenta.subtle.pressed': "_bfhk1ovh",
    'color.background.accent.magenta.bolder': "_bfhkc3uk",
    'color.background.accent.magenta.bolder.hovered': "_bfhk1ok8",
    'color.background.accent.magenta.bolder.pressed': "_bfhkwaw3",
    'color.background.accent.gray.subtlest': "_bfhk11bn",
    'color.background.accent.gray.subtlest.hovered': "_bfhk12j4",
    'color.background.accent.gray.subtlest.pressed': "_bfhk1lb4",
    'color.background.accent.gray.subtler': "_bfhk1v33",
    'color.background.accent.gray.subtler.hovered': "_bfhk1f7l",
    'color.background.accent.gray.subtler.pressed': "_bfhkd8a2",
    'color.background.accent.gray.subtle': "_bfhk1t05",
    'color.background.accent.gray.subtle.hovered': "_bfhk1a2l",
    'color.background.accent.gray.subtle.pressed': "_bfhk1z0s",
    'color.background.accent.gray.bolder': "_bfhk1t1b",
    'color.background.accent.gray.bolder.hovered': "_bfhke4nv",
    'color.background.accent.gray.bolder.pressed': "_bfhk82ra",
    'color.background.disabled': "_bfhksyzs",
    'color.background.input': "_bfhk1j9a",
    'color.background.input.hovered': "_bfhk1d5g",
    'color.background.input.pressed': "_bfhkr01l",
    'color.background.inverse.subtle': "_bfhk1vck",
    'color.background.inverse.subtle.hovered': "_bfhkmpja",
    'color.background.inverse.subtle.pressed': "_bfhk1gii",
    'color.background.neutral': "_bfhkm7j4",
    'color.background.neutral.hovered': "_bfhk15ej",
    'color.background.neutral.pressed': "_bfhkip91",
    'color.background.neutral.subtle': "_bfhksm61",
    'color.background.neutral.subtle.hovered': "_bfhk166n",
    'color.background.neutral.subtle.pressed': "_bfhk1dty",
    'color.background.neutral.bold': "_bfhkcdhy",
    'color.background.neutral.bold.hovered': "_bfhk1bsc",
    'color.background.neutral.bold.pressed': "_bfhk1b6k",
    'color.background.selected': "_bfhkfg4m",
    'color.background.selected.hovered': "_bfhki1yw",
    'color.background.selected.pressed': "_bfhk19ru",
    'color.background.selected.bold': "_bfhk1fvw",
    'color.background.selected.bold.hovered': "_bfhk18hz",
    'color.background.selected.bold.pressed': "_bfhkgr1v",
    'color.background.brand.subtlest': "_bfhk3wxy",
    'color.background.brand.subtlest.hovered': "_bfhkezq1",
    'color.background.brand.subtlest.pressed': "_bfhk2ggb",
    'color.background.brand.bold': "_bfhkb29m",
    'color.background.brand.bold.hovered': "_bfhku1se",
    'color.background.brand.bold.pressed': "_bfhkqkzo",
    'color.background.brand.boldest': "_bfhk15mt",
    'color.background.brand.boldest.hovered': "_bfhk1uwk",
    'color.background.brand.boldest.pressed': "_bfhk17jr",
    'color.background.danger': "_bfhk1gly",
    'color.background.danger.hovered': "_bfhk1yvi",
    'color.background.danger.pressed': "_bfhk1io2",
    'color.background.danger.bold': "_bfhkybec",
    'color.background.danger.bold.hovered': "_bfhks9hg",
    'color.background.danger.bold.pressed': "_bfhk9pqq",
    'color.background.warning': "_bfhk1tzq",
    'color.background.warning.hovered': "_bfhk1rd4",
    'color.background.warning.pressed': "_bfhk11dh",
    'color.background.warning.bold': "_bfhk190i",
    'color.background.warning.bold.hovered': "_bfhk1i4c",
    'color.background.warning.bold.pressed': "_bfhkrj9s",
    'color.background.success': "_bfhkmv6i",
    'color.background.success.hovered': "_bfhk1jgi",
    'color.background.success.pressed': "_bfhky4f1",
    'color.background.success.bold': "_bfhk8emd",
    'color.background.success.bold.hovered': "_bfhk1q4l",
    'color.background.success.bold.pressed': "_bfhkcrcn",
    'color.background.discovery': "_bfhk1nvp",
    'color.background.discovery.hovered': "_bfhk1xp7",
    'color.background.discovery.pressed': "_bfhkdlkp",
    'color.background.discovery.bold': "_bfhk1lri",
    'color.background.discovery.bold.hovered': "_bfhk1w72",
    'color.background.discovery.bold.pressed': "_bfhkrb53",
    'color.background.information': "_bfhk33gi",
    'color.background.information.hovered': "_bfhk1vps",
    'color.background.information.pressed': "_bfhk1s0z",
    'color.background.information.bold': "_bfhk14wj",
    'color.background.information.bold.hovered': "_bfhk1amz",
    'color.background.information.bold.pressed': "_bfhk5bth",
    'color.blanket': "_bfhk10xm",
    'color.blanket.selected': "_bfhk7wq0",
    'color.blanket.danger': "_bfhkrprw",
    'color.skeleton': "_bfhkn82g",
    'color.skeleton.subtle': "_bfhkh3tw",
    'elevation.surface': "_bfhkvuon",
    'elevation.surface.hovered': "_bfhk108i",
    'elevation.surface.pressed': "_bfhk1ji5",
    'elevation.surface.overlay': "_bfhk1bhr",
    'elevation.surface.overlay.hovered': "_bfhk16qz",
    'elevation.surface.overlay.pressed': "_bfhkvq0a",
    'elevation.surface.raised': "_bfhkhp5a",
    'elevation.surface.raised.hovered': "_bfhk1a0f",
    'elevation.surface.raised.pressed': "_bfhkf7u5",
    'elevation.surface.sunken': "_bfhkqbzx",
    'utility.elevation.surface.current': "_bfhkchd4"
};
var CURRENT_SURFACE_CSS_VAR = "--ds-elevation-surface-current";
var setSurfaceTokenMap = {
    'elevation.surface': "_1q1lvuon",
    'elevation.surface.hovered': "_1q1l108i",
    'elevation.surface.pressed': "_1q1l1ji5",
    'elevation.surface.overlay': "_1q1l1bhr",
    'elevation.surface.overlay.hovered': "_1q1l16qz",
    'elevation.surface.overlay.pressed': "_1q1lvq0a",
    'elevation.surface.raised': "_1q1lhp5a",
    'elevation.surface.raised.hovered': "_1q1l1a0f",
    'elevation.surface.raised.pressed': "_1q1lf7u5",
    'elevation.surface.sunken': "_1q1lqbzx"
};
var paddingBlockStartMap = {
    'space.0': "_1q51ze3t",
    'space.025': "_1q51v77o",
    'space.050': "_1q511b66",
    'space.075': "_1q5112x7",
    'space.100': "_1q51u2gc",
    'space.150': "_1q51utpp",
    'space.200': "_1q51pxbi",
    'space.250': "_1q51v47k",
    'space.300': "_1q511ejb",
    'space.400': "_1q51xy5q",
    'space.500': "_1q511jfw",
    'space.600': "_1q51oahv",
    'space.800': "_1q51xncg",
    'space.1000': "_1q511epz"
};
var paddingBlockEndMap = {
    'space.0': "_85i5ze3t",
    'space.025': "_85i5v77o",
    'space.050': "_85i51b66",
    'space.075': "_85i512x7",
    'space.100': "_85i5u2gc",
    'space.150': "_85i5utpp",
    'space.200': "_85i5pxbi",
    'space.250': "_85i5v47k",
    'space.300': "_85i51ejb",
    'space.400': "_85i5xy5q",
    'space.500': "_85i51jfw",
    'space.600': "_85i5oahv",
    'space.800': "_85i5xncg",
    'space.1000': "_85i51epz"
};
var paddingInlineStartMap = {
    'space.0': "_bozgze3t",
    'space.025': "_bozgv77o",
    'space.050': "_bozg1b66",
    'space.075': "_bozg12x7",
    'space.100': "_bozgu2gc",
    'space.150': "_bozgutpp",
    'space.200': "_bozgpxbi",
    'space.250': "_bozgv47k",
    'space.300': "_bozg1ejb",
    'space.400': "_bozgxy5q",
    'space.500': "_bozg1jfw",
    'space.600': "_bozgoahv",
    'space.800': "_bozgxncg",
    'space.1000': "_bozg1epz"
};
var paddingInlineEndMap = {
    'space.0': "_y4tize3t",
    'space.025': "_y4tiv77o",
    'space.050': "_y4ti1b66",
    'space.075': "_y4ti12x7",
    'space.100': "_y4tiu2gc",
    'space.150': "_y4tiutpp",
    'space.200': "_y4tipxbi",
    'space.250': "_y4tiv47k",
    'space.300': "_y4ti1ejb",
    'space.400': "_y4tixy5q",
    'space.500': "_y4ti1jfw",
    'space.600': "_y4tioahv",
    'space.800': "_y4tixncg",
    'space.1000': "_y4ti1epz"
};
/**
 * __Box__
 *
 * A Box is a primitive component that has the design decisions of the Atlassian Design System baked in.
 * Renders a `div` by default.
 *
 * - [Examples](https://atlassian.design/components/primitives/box/examples)
 * - [Code](https://atlassian.design/components/primitives/box/code)
 * - [Usage](https://atlassian.design/components/primitives/box/usage)
 */ var Box = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? 'div' : _ref$as, children = _ref.children, backgroundColor = _ref.backgroundColor, padding = _ref.padding, _ref$paddingBlock = _ref.paddingBlock, paddingBlock = _ref$paddingBlock === void 0 ? padding : _ref$paddingBlock, _ref$paddingBlockStar = _ref.paddingBlockStart, paddingBlockStart = _ref$paddingBlockStar === void 0 ? paddingBlock : _ref$paddingBlockStar, _ref$paddingBlockEnd = _ref.paddingBlockEnd, paddingBlockEnd = _ref$paddingBlockEnd === void 0 ? paddingBlock : _ref$paddingBlockEnd, _ref$paddingInline = _ref.paddingInline, paddingInline = _ref$paddingInline === void 0 ? padding : _ref$paddingInline, _ref$paddingInlineSta = _ref.paddingInlineStart, paddingInlineStart = _ref$paddingInlineSta === void 0 ? paddingInline : _ref$paddingInlineSta, _ref$paddingInlineEnd = _ref.paddingInlineEnd, paddingInlineEnd = _ref$paddingInlineEnd === void 0 ? paddingInline : _ref$paddingInlineEnd, style = _ref.style, testId = _ref.testId, xcss = _ref.xcss, htmlAttributes = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // This is to remove className from safeHtmlAttributes
    // @ts-expect-error -- className doesn't exist in the prop definition but we want to ensure it cannot be applied even if types are bypassed
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = (0, _objectWithoutPropertiesDefault.default)(htmlAttributes, _excluded2);
    var node = /*#__PURE__*/ _react.createElement(Component, (0, _extendsDefault.default)({
        style: style,
        ref: ref,
        className: (0, _runtime.ax)([
            "_19itglyw _vchhusvi _r06hglyw",
            backgroundColor && backgroundColorMap[backgroundColor],
            backgroundColor && isSurfaceToken(backgroundColor) && setSurfaceTokenMap[backgroundColor],
            paddingBlockStart && paddingBlockStartMap[paddingBlockStart],
            paddingBlockEnd && paddingBlockEndMap[paddingBlockEnd],
            paddingInlineStart && paddingInlineStartMap[paddingInlineStart],
            paddingInlineEnd && paddingInlineEndMap[paddingInlineEnd],
            xcss
        ])
    }, safeHtmlAttributes, {
        "data-testid": testId
    }), children);
    if (backgroundColor) return /*#__PURE__*/ _react.createElement((0, _surfaceProvider.SurfaceContext).Provider, {
        value: backgroundColor
    }, node);
    return node;
});
exports.default = Box;
function isSurfaceToken(backgroundColor) {
    return backgroundColor in setSurfaceTokenMap;
}

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"eyVUd","../../utils/surface-provider":"1fphO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eyVUd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"cGvOp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cGvOp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"lobl2","./style-cache":"gqLQR","./ax":"2hcUN","./ac":"gSno9","./css-custom-property":"ggmiX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lobl2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"4Oe8p","./is-server-environment":"atbS3","./sheet":"1FPDQ","./style-cache":"gqLQR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4Oe8p":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"atbS3":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1FPDQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
var _shorthand = require("./shorthand");
const styleBucketOrdering = [
    // shorthand properties
    's-0',
    's-1',
    's-2',
    's-3',
    's-4',
    's-5',
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everything else will make their way to the catch all style bucket.
 * We reduce the pseudo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    const firstBracket = sheet.indexOf('{');
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th characters could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) {
        // We send through a subset of the string instead of the full pseudo name.
        // For example `"focus-visible"` name would instead of `"us-visible"`.
        // Return a mapped pseudo else the default catch all bucket.
        const mapped = pseudosMap[sheet.slice(14, firstBracket)];
        if (mapped) return mapped;
    }
    const property = sheet.slice(firstBracket + 1, sheet.indexOf(':', firstBracket)).trim();
    const shorthandDepth = (0, _shorthand.getShorthandDepth)(property);
    if (typeof shorthandDepth === 'number') return `s-${shorthandDepth}`;
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"fQeXR","./shorthand":"jKInJ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fQeXR":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jKInJ":[function(require,module,exports,__globalThis) {
// Copied from packages/utils/src/shorthand.ts so that we avoid
// inflating the bundle size of @compiled/react/runtime with the contents
// of @compiled/utils
//
// Keep this `shorthandBuckets` in sync with the `shorthandBuckets` defined in
// packages/utils/src/shorthand.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getShorthandDepth", ()=>getShorthandDepth);
const shorthandBuckets = {
    all: 0,
    animation: 1,
    'animation-range': 1,
    background: 1,
    border: 1,
    'border-color': 2,
    'border-style': 2,
    'border-width': 2,
    'border-block': 3,
    'border-inline': 3,
    'border-top': 4,
    'border-right': 4,
    'border-bottom': 4,
    'border-left': 4,
    'border-block-start': 5,
    'border-block-end': 5,
    'border-inline-start': 5,
    'border-inline-end': 5,
    'border-image': 1,
    'border-radius': 1,
    'column-rule': 1,
    columns: 1,
    'contain-intrinsic-size': 1,
    container: 1,
    flex: 1,
    'flex-flow': 1,
    font: 1,
    'font-synthesis': 1,
    'font-variant': 2,
    gap: 1,
    grid: 1,
    'grid-area': 1,
    'grid-column': 2,
    'grid-row': 2,
    'grid-template': 2,
    inset: 1,
    'inset-block': 2,
    'inset-inline': 2,
    'list-style': 1,
    margin: 1,
    'margin-block': 2,
    'margin-inline': 2,
    mask: 1,
    'mask-border': 1,
    offset: 1,
    outline: 1,
    overflow: 1,
    'overscroll-behavior': 1,
    padding: 1,
    'padding-block': 2,
    'padding-inline': 2,
    'place-content': 1,
    'place-items': 1,
    'place-self': 1,
    'position-try': 1,
    'scroll-margin': 1,
    'scroll-margin-block': 2,
    'scroll-margin-inline': 2,
    'scroll-padding': 1,
    'scroll-padding-block': 2,
    'scroll-padding-inline': 2,
    'scroll-timeline': 1,
    'text-decoration': 1,
    'text-emphasis': 1,
    'text-wrap': 1,
    transition: 1,
    'view-timeline': 1
};
const getShorthandDepth = (shorthand)=>{
    var _a;
    return (_a = shorthandBuckets[shorthand]) !== null && _a !== void 0 ? _a : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gqLQR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
if (typeof document !== 'undefined') {
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}
const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"fQeXR","./is-server-environment":"atbS3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2hcUN":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gSno9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */ parcelHelpers.export(exports, "ac", ()=>ac);
parcelHelpers.export(exports, "memoizedAc", ()=>memoizedAc);
/**
 * Provide an opportunity to clear the cache to prevent memory leak.
 */ parcelHelpers.export(exports, "clearCache", ()=>clearCache);
/**
 * Expose cache
 */ parcelHelpers.export(exports, "getCache", ()=>getCache);
var _isServerEnvironment = require("./is-server-environment");
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
/**
 * Memoize the result of ac so if it is called with the same args, it returns immediately.
 * Also, to prevent useless React rerenders
 */ const cache = new Map();
/**
 * `ac` returns an instance of AtomicGroups. The instance holds the knowledge of Atomic Group so we can chain `ac`.
 * e.g. <div className={ax([ax(['_aaaa_b']), '_aaaa_c'])} />
 */ class AtomicGroups {
    constructor(values){
        // An object stores the relation between Atomic group and actual class name
        // e.g. { "aaaa": "a" } `aaaa` is the Atomic group and `a` is the actual class name
        this.values = values;
    }
    toString() {
        let str = '';
        for (const [, value] of this.values)str += value + ' ';
        return str.slice(0, -1);
    }
}
function ac(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    const atomicGroups = new Map();
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        if (typeof cls === 'string') {
            const groups = cls.split(' ');
            for(let x = 0; x < groups.length; x++){
                const atomic = groups[x];
                const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
                const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
                const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH) : atomic;
                atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH + 1) : atomic);
            }
        } else // if cls is an instance of AtomicGroups, transfer its values to `atomicGroups`
        for (const [key, value] of cls.values)atomicGroups.set(key, value);
    }
    return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    // build the cacheKey based on the function argument
    // e.g. if the argument is ["_aaaabbbb", "_aaaa_a", "some-class-name"],
    // then the cacheKey is "_aaaabbbb _aaaa_a some-class-name"
    let cacheKey = '';
    for(let i = 0; i < classNames.length; i += 1){
        const current = classNames[i];
        // continue if current is undefined, false, or ""
        if (!current) continue;
        cacheKey += current + ' ';
    }
    cacheKey = cacheKey.slice(0, -1);
    if (cache.has(cacheKey)) return cache.get(cacheKey);
    const result = ac(classNames);
    cache.set(cacheKey, result);
    return result;
}
// Memoization is primarily used to prevent React from unncessary re-rendering.
// Use unmemoizedAc on server-side because We don't need to worry about re-rendering on server-side.
exports.default = memoizedAc;
function clearCache() {
    cache.clear();
}
function getCache() {
    return cache;
}

},{"./is-server-environment":"atbS3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ggmiX":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1fphO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SurfaceContext", ()=>SurfaceContext);
parcelHelpers.export(exports, "useSurface", ()=>useSurface);
var _react = require("react");
var SurfaceContext = /*#__PURE__*/ (0, _react.createContext)('elevation.surface');
var useSurface = function useSurface() {
    return (0, _react.useContext)(SurfaceContext);
};
SurfaceContext.displayName = 'SurfaceProvider';

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Cfbq":[function(require,module,exports,__globalThis) {
/* inline.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _css = require("@atlaskit/css");
var _flex = require("./flex");
var _flexDefault = parcelHelpers.interopDefault(_flex);
var styles = {
    separator: "_1mouze3t _195g1i6y _syazjjyb _lcxvglyw _uiztglyw",
    hug: "_16jlidpf",
    fill: "_1bsb1osq _16jlkb7n"
};
var Separator = function Separator(_ref) {
    var children = _ref.children;
    return /*#__PURE__*/ _react.createElement("span", {
        className: (0, _runtime.ax)([
            styles.separator
        ])
    }, children);
};
/**
 * __Inline__
 *
 * Inline is a primitive component based on CSS Flexbox that manages the horizontal layout of direct children.
 *
 * @example
 * ```tsx
 *  <Inline>
 *    <Box padding="space.100" backgroundColor="neutral"></Box>
 *    <Box padding="space.100" backgroundColor="neutral"></Box>
 *  </Inline>
 * ```
 *
 */ var Inline = /*#__PURE__*/ (0, _react.memo)(/*#__PURE__*/ (0, _react.forwardRef)(function(_ref2, ref) {
    var as = _ref2.as, alignInline = _ref2.alignInline, _ref2$alignBlock = _ref2.alignBlock, alignItems = _ref2$alignBlock === void 0 ? 'start' : _ref2$alignBlock, _ref2$shouldWrap = _ref2.shouldWrap, shouldWrap = _ref2$shouldWrap === void 0 ? false : _ref2$shouldWrap, spread = _ref2.spread, grow = _ref2.grow, space = _ref2.space, rowSpace = _ref2.rowSpace, separator = _ref2.separator, xcss = _ref2.xcss, testId = _ref2.testId, role = _ref2.role, rawChildren = _ref2.children;
    var separatorComponent = typeof separator === 'string' ? /*#__PURE__*/ _react.createElement(Separator, null, separator) : separator;
    var children = separatorComponent ? (0, _react.Children).toArray(rawChildren).filter(Boolean).map(function(child, index) {
        return /*#__PURE__*/ _react.createElement((0, _react.Fragment), {
            key: index
        }, separator && index > 0 ? separatorComponent : null, child);
    }) : rawChildren;
    return /*#__PURE__*/ _react.createElement((0, _flexDefault.default), {
        as: as,
        role: role,
        alignItems: alignItems,
        justifyContent: spread || alignInline,
        direction: "row",
        gap: space,
        rowGap: rowSpace,
        wrap: shouldWrap ? 'wrap' : undefined,
        xcss: (0, _css.cx)(grow === 'hug' && styles.hug, grow === 'fill' && styles.fill, xcss),
        testId: testId,
        ref: ref
    }, children);
}));
Inline.displayName = 'Inline';
exports.default = Inline;

},{"react":"jMk1U","@compiled/react/runtime":"eyVUd","@atlaskit/css":"4KsBe","./flex":"bBLMH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4KsBe":[function(require,module,exports,__globalThis) {
/* index.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "jsx", ()=>(0, _react1.jsx));
parcelHelpers.export(exports, "css", ()=>css) // This is to mitigate local TS error TS2315: Type 'StrictXCSSProp' is not generic.
 // Currently for some reason tsc is generating malformed .d.ts in local dev environment, below change fixes it
 /**
 * ## StrictXCSSProp
 *
 * Declare styles your component takes with all other styles marked as violations
 * by the TypeScript compiler. There are two primary use cases for xcss prop:
 *
 * - safe style overrides
 * - inverting style declarations
 *
 * Interverting style declarations is interesting for platform teams as
 * it means products only pay for styles they use as they're now the ones who declare
 * the styles!
 *
 * The {@link StrictXCSSProp} type has generics two of which must be defined — use to explicitly
 * set what you want to maintain as API. Use {@link XCSSAllProperties} and {@link XCSSAllPseudos}
 * to enable all properties and pseudos.
 *
 * The third generic is used to declare what properties and pseudos should be required.
 *
 * ```tsx
 * interface MyComponentProps {
 *   // Color is accepted, all other properties / pseudos are considered violations.
 *   xcss?: StrictXCSSProp<'color', never>;
 *
 *   // Only background color and hover pseudo are accepted.
 *   xcss?: StrictXCSSProp<'backgroundColor', '&:hover'>;
 *
 *   // All properties are accepted, all pseudos are considered violations.
 *   xcss?: StrictXCSSProp<XCSSAllProperties, never>;
 *
 *   // All properties are accepted, only the hover pseudo is accepted.
 *   xcss?: StrictXCSSProp<XCSSAllProperties, '&:hover'>;
 *
 *   // The xcss prop is required as well as the color property. No pseudos are required.
 *   xcss: StrictXCSSProp<
 *     XCSSAllProperties,
 *     '&:hover',
 *     { requiredProperties: 'color', requiredPseudos: never }
 *   >;
 * }
 *
 * function MyComponent({ xcss }: MyComponentProps) {
 *   return <div css={{ color: 'var(--ds-text-danger)' }} className={xcss} />
 * }
 * ```
 *
 * The xcss prop works with static inline objects and the [cssMap](https://compiledcssinjs.com/docs/api-cssmap) API.
 *
 * ```jsx
 * // Declared as an inline object
 * <Component xcss={{ color: 'var(--ds-text)' }} />
 *
 * // Declared with the cssMap API
 * const styles = cssMap({ text: { color: 'var(--ds-text)' } });
 * <Component xcss={styles.text} />
 * ```
 *
 * To concatenate and conditonally apply styles use the {@link cssMap} and {@link cx} functions.
 */ ;
parcelHelpers.export(exports, "cssMap", ()=>cssMap);
parcelHelpers.export(exports, "cx", ()=>cx);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _react1 = require("@compiled/react");
var _createStrictAPI = (0, _react1.createStrictAPI)(), XCSSProp = _createStrictAPI.XCSSProp, css = _createStrictAPI.css, cssMap = _createStrictAPI.cssMap, cx = _createStrictAPI.cx;

},{"react":"jMk1U","@compiled/react/runtime":"bNWC5","@compiled/react":"g8iUZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bNWC5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"e7CpA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e7CpA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"8N6VP","./style-cache":"2DJXF","./ax":"dXrQU","./ac":"3gvIs","./css-custom-property":"5noP6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8N6VP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"70hJu","./is-server-environment":"aLKcR","./sheet":"S1VVG","./style-cache":"2DJXF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"70hJu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aLKcR":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"S1VVG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
var _shorthand = require("./shorthand");
const styleBucketOrdering = [
    // shorthand properties
    's-0',
    's-1',
    's-2',
    's-3',
    's-4',
    's-5',
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everything else will make their way to the catch all style bucket.
 * We reduce the pseudo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    const firstBracket = sheet.indexOf('{');
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th characters could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) {
        // We send through a subset of the string instead of the full pseudo name.
        // For example `"focus-visible"` name would instead of `"us-visible"`.
        // Return a mapped pseudo else the default catch all bucket.
        const mapped = pseudosMap[sheet.slice(14, firstBracket)];
        if (mapped) return mapped;
    }
    const property = sheet.slice(firstBracket + 1, sheet.indexOf(':', firstBracket)).trim();
    const shorthandDepth = (0, _shorthand.getShorthandDepth)(property);
    if (typeof shorthandDepth === 'number') return `s-${shorthandDepth}`;
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"ip08N","./shorthand":"fmmQe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ip08N":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fmmQe":[function(require,module,exports,__globalThis) {
// Copied from packages/utils/src/shorthand.ts so that we avoid
// inflating the bundle size of @compiled/react/runtime with the contents
// of @compiled/utils
//
// Keep this `shorthandBuckets` in sync with the `shorthandBuckets` defined in
// packages/utils/src/shorthand.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getShorthandDepth", ()=>getShorthandDepth);
const shorthandBuckets = {
    all: 0,
    animation: 1,
    'animation-range': 1,
    background: 1,
    border: 1,
    'border-color': 2,
    'border-style': 2,
    'border-width': 2,
    'border-block': 3,
    'border-inline': 3,
    'border-top': 4,
    'border-right': 4,
    'border-bottom': 4,
    'border-left': 4,
    'border-block-start': 5,
    'border-block-end': 5,
    'border-inline-start': 5,
    'border-inline-end': 5,
    'border-image': 1,
    'border-radius': 1,
    'column-rule': 1,
    columns: 1,
    'contain-intrinsic-size': 1,
    container: 1,
    flex: 1,
    'flex-flow': 1,
    font: 1,
    'font-synthesis': 1,
    'font-variant': 2,
    gap: 1,
    grid: 1,
    'grid-area': 1,
    'grid-column': 2,
    'grid-row': 2,
    'grid-template': 2,
    inset: 1,
    'inset-block': 2,
    'inset-inline': 2,
    'list-style': 1,
    margin: 1,
    'margin-block': 2,
    'margin-inline': 2,
    mask: 1,
    'mask-border': 1,
    offset: 1,
    outline: 1,
    overflow: 1,
    'overscroll-behavior': 1,
    padding: 1,
    'padding-block': 2,
    'padding-inline': 2,
    'place-content': 1,
    'place-items': 1,
    'place-self': 1,
    'position-try': 1,
    'scroll-margin': 1,
    'scroll-margin-block': 2,
    'scroll-margin-inline': 2,
    'scroll-padding': 1,
    'scroll-padding-block': 2,
    'scroll-padding-inline': 2,
    'scroll-timeline': 1,
    'text-decoration': 1,
    'text-emphasis': 1,
    'text-wrap': 1,
    transition: 1,
    'view-timeline': 1
};
const getShorthandDepth = (shorthand)=>{
    var _a;
    return (_a = shorthandBuckets[shorthand]) !== null && _a !== void 0 ? _a : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2DJXF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
if (typeof document !== 'undefined') {
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}
const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"ip08N","./is-server-environment":"aLKcR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dXrQU":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3gvIs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */ parcelHelpers.export(exports, "ac", ()=>ac);
parcelHelpers.export(exports, "memoizedAc", ()=>memoizedAc);
/**
 * Provide an opportunity to clear the cache to prevent memory leak.
 */ parcelHelpers.export(exports, "clearCache", ()=>clearCache);
/**
 * Expose cache
 */ parcelHelpers.export(exports, "getCache", ()=>getCache);
var _isServerEnvironment = require("./is-server-environment");
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
/**
 * Memoize the result of ac so if it is called with the same args, it returns immediately.
 * Also, to prevent useless React rerenders
 */ const cache = new Map();
/**
 * `ac` returns an instance of AtomicGroups. The instance holds the knowledge of Atomic Group so we can chain `ac`.
 * e.g. <div className={ax([ax(['_aaaa_b']), '_aaaa_c'])} />
 */ class AtomicGroups {
    constructor(values){
        // An object stores the relation between Atomic group and actual class name
        // e.g. { "aaaa": "a" } `aaaa` is the Atomic group and `a` is the actual class name
        this.values = values;
    }
    toString() {
        let str = '';
        for (const [, value] of this.values)str += value + ' ';
        return str.slice(0, -1);
    }
}
function ac(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    const atomicGroups = new Map();
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        if (typeof cls === 'string') {
            const groups = cls.split(' ');
            for(let x = 0; x < groups.length; x++){
                const atomic = groups[x];
                const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
                const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
                const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH) : atomic;
                atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH + 1) : atomic);
            }
        } else // if cls is an instance of AtomicGroups, transfer its values to `atomicGroups`
        for (const [key, value] of cls.values)atomicGroups.set(key, value);
    }
    return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    // build the cacheKey based on the function argument
    // e.g. if the argument is ["_aaaabbbb", "_aaaa_a", "some-class-name"],
    // then the cacheKey is "_aaaabbbb _aaaa_a some-class-name"
    let cacheKey = '';
    for(let i = 0; i < classNames.length; i += 1){
        const current = classNames[i];
        // continue if current is undefined, false, or ""
        if (!current) continue;
        cacheKey += current + ' ';
    }
    cacheKey = cacheKey.slice(0, -1);
    if (cache.has(cacheKey)) return cache.get(cacheKey);
    const result = ac(classNames);
    cache.set(cacheKey, result);
    return result;
}
// Memoization is primarily used to prevent React from unncessary re-rendering.
// Use unmemoizedAc on server-side because We don't need to worry about re-rendering on server-side.
exports.default = memoizedAc;
function clearCache() {
    cache.clear();
}
function getCache() {
    return cache;
}

},{"./is-server-environment":"aLKcR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5noP6":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g8iUZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ClassNames", ()=>(0, _classNames.ClassNames));
parcelHelpers.export(exports, "createStrictAPI", ()=>(0, _createStrictApi.createStrictAPI));
parcelHelpers.export(exports, "css", ()=>(0, _cssDefault.default));
parcelHelpers.export(exports, "cssMap", ()=>(0, _cssMapDefault.default));
parcelHelpers.export(exports, "keyframes", ()=>(0, _keyframes.keyframes));
parcelHelpers.export(exports, "styled", ()=>(0, _styled.styled));
parcelHelpers.export(exports, "cx", ()=>(0, _xcssProp.cx));
parcelHelpers.export(exports, "jsx", ()=>jsx);
var _react = require("react");
var _classNames = require("./class-names");
var _createStrictApi = require("./create-strict-api");
var _css = require("./css");
var _cssDefault = parcelHelpers.interopDefault(_css);
var _cssMap = require("./css-map");
var _cssMapDefault = parcelHelpers.interopDefault(_cssMap);
var _keyframes = require("./keyframes");
var _styled = require("./styled");
var _xcssProp = require("./xcss-prop");
const jsx = (0, _react.createElement);

},{"react":"jMk1U","./class-names":false,"./create-strict-api":"8UKMN","./css":false,"./css-map":false,"./keyframes":false,"./styled":false,"./xcss-prop":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8UKMN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * ## Create Strict API
 *
 * Returns a strict subset of Compiled APIs augmented by a type definition.
 * This API does not change Compileds build time behavior — merely augmenting
 * the returned API types which enforce:
 *
 * - all APIs use object types
 * - property values declared in the type definition must be used (else fallback to defaults)
 * - a strict subset of pseudo states/selectors
 * - unknown properties to be a type violation
 *
 * To set up:
 *
 * 1. Declare the API in a module (either local or in a package), optionally declaring accepted media queries.
 *
 * @example
 * ```tsx
 * // ./foo.ts
 * interface Schema {
 *   color: 'var(--ds-text)',
 *   '&:hover': { color: 'var(--ds-text-hover)' }
 * }
 *
 * const { css, cssMap, XCSSProp, cx } = createStrictAPI<Schema, { media: '(min-width: 30rem)' }>();
 *
 * export { css, cssMap, XCSSProp, cx };
 * ```
 *
 * 2. Configure Compiled to pick up this module:
 *
 * @example
 * ```diff
 * // .compiledcssrc
 * {
 * +  "importSources": ["./foo.ts"]
 * }
 * ```
 *
 * 3. Use the module in your application code:
 *
 * @example
 * ```tsx
 * import { css } from './foo';
 *
 * const styles = css({ color: 'var(--ds-text)' });
 *
 * <div css={styles} />
 * ```
 */ parcelHelpers.export(exports, "createStrictAPI", ()=>createStrictAPI);
var _error = require("../utils/error");
var _xcssProp = require("../xcss-prop");
function createStrictAPI() {
    return {
        css () {
            throw (0, _error.createStrictSetupError)();
        },
        cssMap () {
            throw (0, _error.createStrictSetupError)();
        },
        cx: (0, _xcssProp.cx),
        XCSSProp () {
            throw (0, _error.createStrictSetupError)();
        }
    };
}

},{"../utils/error":"jEZ2R","../xcss-prop":"hIu0m","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jEZ2R":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSetupError", ()=>createSetupError);
parcelHelpers.export(exports, "createStrictSetupError", ()=>createStrictSetupError);
const createSetupError = ()=>{
    return new Error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react

  Code was executed when it shouldn't have. This could have happened because:

  1. You haven't configured a transformer yet. Visit https://compiledcssinjs.com/docs/installation and follow the instructions.
  2. You have duplicate versions of React and hooks are blowing up. You need to de-duplicate your dependencies.

  Good luck!
`);
};
const createStrictSetupError = ()=>{
    return new Error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react

  Code was executed when it shouldn't have. To resolve make sure to:

  1. Set up Compiled.
  2. Configure importSources in your Compiled config to point to the module that exports the output of createStrictAPI().

  For more information visit https://compiledcssinjs.com/docs/installation and follow the instructions.
`);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hIu0m":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cx", ()=>cx);
var _runtime = require("../runtime");
const cx = (...styles)=>{
    // At runtime TStyles is resolved down to strings, but not at compile time.
    // We circumvent the type system here because of that.
    const actualStyles = styles;
    // The output should be a union type of passed in styles. This ensures the call
    // site of xcss prop can raise violations when disallowed styles have been passed.
    return (0, _runtime.ax)(actualStyles);
};

},{"../runtime":"bNWC5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bBLMH":[function(require,module,exports,__globalThis) {
/* flex.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var rowGapMap = {
    'space.0': "_1p57ze3t",
    'space.025': "_1p57v77o",
    'space.050': "_1p571b66",
    'space.075': "_1p5712x7",
    'space.100': "_1p57u2gc",
    'space.150': "_1p57utpp",
    'space.200': "_1p57pxbi",
    'space.250': "_1p57v47k",
    'space.300': "_1p571ejb",
    'space.400': "_1p57xy5q",
    'space.500': "_1p571jfw",
    'space.600': "_1p57oahv",
    'space.800': "_1p57xncg",
    'space.1000': "_1p571epz"
};
var columnGapMap = {
    'space.0': "_gy1pze3t",
    'space.025': "_gy1pv77o",
    'space.050': "_gy1p1b66",
    'space.075': "_gy1p12x7",
    'space.100': "_gy1pu2gc",
    'space.150': "_gy1putpp",
    'space.200': "_gy1ppxbi",
    'space.250': "_gy1pv47k",
    'space.300': "_gy1p1ejb",
    'space.400': "_gy1pxy5q",
    'space.500': "_gy1p1jfw",
    'space.600': "_gy1poahv",
    'space.800': "_gy1pxncg",
    'space.1000': "_gy1p1epz"
};
var justifyContentMap = {
    start: "_1bahv2br",
    center: "_1bah1h6o",
    end: "_1bahh9n0",
    'space-between': "_1bah1yb4",
    'space-around': "_1bah1b1v",
    'space-evenly': "_1bahitcz",
    stretch: "_1bah1fhb"
};
var flexDirectionMap = {
    column: "_2lx21bp4",
    row: "_2lx2vrvc"
};
var flexWrapMap = {
    wrap: "_1n261g80",
    nowrap: "_1n261q9c"
};
var alignItemsMap = {
    start: "_4cvrv2br",
    center: "_4cvr1h6o",
    baseline: "_4cvr1q9y",
    end: "_4cvrh9n0",
    stretch: "_4cvr1fhb"
};
var styles = {
    root: "_1e0c1txw _vchhusvi"
};
/**
 * __Flex__
 *
 * `Flex` is a primitive component that implements the CSS Flexbox API.
 *
 * - [Examples](https://atlassian.design/components/primitives/flex/examples)
 * - [Code](https://atlassian.design/components/primitives/flex/code)
 *
 * @example
 * ```tsx
 * import { Flex, Box } from '@atlaskit/primitives'
 *
 * const Component = () => (
 *   <Flex direction="column">
 *     <Box padding="space.100" backgroundColor="neutral"></Box>
 *     <Box padding="space.100" backgroundColor="neutral"></Box>
 *   </Flex>
 * )
 * ```
 */ var Flex = /*#__PURE__*/ (0, _react.memo)(/*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? 'div' : _ref$as, role = _ref.role, alignItems = _ref.alignItems, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, testId = _ref.testId, direction = _ref.direction, wrap = _ref.wrap, xcss = _ref.xcss;
    return /*#__PURE__*/ _react.createElement(Component, {
        role: role,
        className: (0, _runtime.ax)([
            styles.root,
            gap && columnGapMap[gap],
            columnGap && columnGapMap[columnGap],
            gap && rowGapMap[gap],
            rowGap && rowGapMap[rowGap],
            alignItems && alignItemsMap[alignItems],
            direction && flexDirectionMap[direction],
            justifyContent && justifyContentMap[justifyContent],
            wrap && flexWrapMap[wrap],
            xcss
        ]),
        "data-testid": testId,
        ref: ref
    }, children);
}));
Flex.displayName = 'Flex';
exports.default = Flex;

},{"react":"jMk1U","@compiled/react/runtime":"eyVUd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4ybno":[function(require,module,exports,__globalThis) {
/* text.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "inverseColorMap", ()=>inverseColorMap);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _hasTextAncestorContext = require("../../utils/has-text-ancestor-context");
var _surfaceProvider = require("../../utils/surface-provider");
var asAllowlist = [
    'span',
    'p',
    'strong',
    'em'
];
/**
 * Custom hook designed to abstract the parsing of the color props and make it clearer in the future how color is reconciled between themes and tokens.
 */ var useColor = function useColor(colorProp, hasTextAncestor) {
    var surface = (0, _surfaceProvider.useSurface)();
    if (colorProp === 'inherit') return undefined;
    if (colorProp) return colorProp;
    if (hasTextAncestor) return undefined;
    if (inverseColorMap.hasOwnProperty(surface)) return inverseColorMap[surface];
    return 'color.text';
};
var styles = {
    root: "_19pkidpf _2hwxidpf _otyridpf _18u0idpf _1i4qfg65",
    'as.strong': "_k48pmoej",
    'as.em': "_zg8l1m30",
    'textAlign.center': "_y3gn1h6o",
    'textAlign.end': "_y3gnh9n0",
    'textAlign.start': "_y3gnv2br",
    truncation: "_1reo15vq _18m915vq _1e0ccj1k _sudp1e54",
    breakAll: "_1nmz9jpi"
};
var fontSizeMap = {
    medium: "_11c82smr",
    UNSAFE_small: "_11c8dcr7",
    large: "_11c81ixg",
    small: "_11c81o8v"
};
var fontWeightMap = {
    bold: "_k48pmoej",
    medium: "_k48p1wq8",
    regular: "_k48pi7a9",
    semibold: "_k48p1pd9"
};
var textColorMap = {
    'color.text': "_syaz1fxt",
    'color.text.accent.lime': "_syaz1tco",
    'color.text.accent.lime.bolder': "_syaz1ik3",
    'color.text.accent.red': "_syaz9lu1",
    'color.text.accent.red.bolder': "_syazhwvp",
    'color.text.accent.orange': "_syaz1q28",
    'color.text.accent.orange.bolder': "_syaz1vps",
    'color.text.accent.yellow': "_syazfb2s",
    'color.text.accent.yellow.bolder': "_syazekll",
    'color.text.accent.green': "_syazh55r",
    'color.text.accent.green.bolder': "_syaz1y78",
    'color.text.accent.teal': "_syaz17qg",
    'color.text.accent.teal.bolder': "_syaz12v7",
    'color.text.accent.blue': "_syazpnps",
    'color.text.accent.blue.bolder': "_syazsc1o",
    'color.text.accent.purple': "_syaz10m5",
    'color.text.accent.purple.bolder': "_syaz2ibx",
    'color.text.accent.magenta': "_syaz1s8m",
    'color.text.accent.magenta.bolder': "_syaz1qur",
    'color.text.accent.gray': "_syaz1dyx",
    'color.text.accent.gray.bolder': "_syaz1x9z",
    'color.text.disabled': "_syaz1lh4",
    'color.text.inverse': "_syaz15cr",
    'color.text.selected': "_syazaqb7",
    'color.text.brand': "_syaz1e6v",
    'color.text.danger': "_syaz1tmw",
    'color.text.warning': "_syazwx40",
    'color.text.warning.inverse': "_syazal3n",
    'color.text.success': "_syazy73q",
    'color.text.discovery': "_syazzjem",
    'color.text.information': "_syaze0os",
    'color.text.subtlest': "_syaz131l",
    'color.text.subtle': "_syaz1gjq",
    'color.link': "_syaz14q2",
    'color.link.pressed': "_syaz16c2",
    'color.link.visited': "_syazw7te",
    'color.link.visited.pressed': "_syazg3x0"
};
var inverseColorMap = {
    'color.background.neutral.bold': 'color.text.inverse',
    'color.background.neutral.bold.hovered': 'color.text.inverse',
    'color.background.neutral.bold.pressed': 'color.text.inverse',
    'color.background.selected.bold': 'color.text.inverse',
    'color.background.selected.bold.hovered': 'color.text.inverse',
    'color.background.selected.bold.pressed': 'color.text.inverse',
    'color.background.brand.bold': 'color.text.inverse',
    'color.background.brand.bold.hovered': 'color.text.inverse',
    'color.background.brand.bold.pressed': 'color.text.inverse',
    'color.background.brand.boldest': 'color.text.inverse',
    'color.background.brand.boldest.hovered': 'color.text.inverse',
    'color.background.brand.boldest.pressed': 'color.text.inverse',
    'color.background.danger.bold': 'color.text.inverse',
    'color.background.danger.bold.hovered': 'color.text.inverse',
    'color.background.danger.bold.pressed': 'color.text.inverse',
    'color.background.warning.bold': 'color.text.warning.inverse',
    'color.background.warning.bold.hovered': 'color.text.warning.inverse',
    'color.background.warning.bold.pressed': 'color.text.warning.inverse',
    'color.background.success.bold': 'color.text.inverse',
    'color.background.success.bold.hovered': 'color.text.inverse',
    'color.background.success.bold.pressed': 'color.text.inverse',
    'color.background.discovery.bold': 'color.text.inverse',
    'color.background.discovery.bold.hovered': 'color.text.inverse',
    'color.background.discovery.bold.pressed': 'color.text.inverse',
    'color.background.information.bold': 'color.text.inverse',
    'color.background.information.bold.hovered': 'color.text.inverse',
    'color.background.information.bold.pressed': 'color.text.inverse'
};
/**
 * __Text__
 *
 * Text is a primitive component that has the Atlassian Design System's design guidelines baked in.
 * This includes considerations for text attributes such as color, font size, font weight, and line height.
 * It renders a `span` by default.
 *
 * @internal
 */ var Text = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? 'span' : _ref$as, colorProp = _ref.color, align = _ref.align, testId = _ref.testId, id = _ref.id, size = _ref.size, weight = _ref.weight, maxLines = _ref.maxLines, xcss = _ref.xcss, children = _ref.children;
    (0, _tinyInvariantDefault.default)(asAllowlist.includes(Component), "@atlaskit/primitives: Text received an invalid \"as\" value of \"".concat(Component, "\""));
    var hasTextAncestor = (0, _hasTextAncestorContext.useHasTextAncestor)();
    var color = useColor(colorProp, hasTextAncestor);
    if (!size && !hasTextAncestor) size = 'medium';
    var component = /*#__PURE__*/ _react.createElement(Component, {
        id: id,
        className: (0, _runtime.ax)([
            styles.root,
            size && fontSizeMap[size],
            color && textColorMap[color],
            maxLines && styles.truncation,
            maxLines === 1 && styles.breakAll,
            align && styles["textAlign.".concat(align)],
            weight && fontWeightMap[weight],
            Component === 'em' && styles['as.em'],
            Component === 'strong' && styles['as.strong'],
            xcss
        ]),
        style: {
            WebkitLineClamp: maxLines
        },
        "data-testid": testId,
        ref: ref
    }, children);
    if (hasTextAncestor) // no need to re-apply context if the text is already wrapped
    return component;
    return /*#__PURE__*/ _react.createElement((0, _hasTextAncestorContext.HasTextAncestorProvider), {
        value: true
    }, component);
});
exports.default = Text;

},{"react":"jMk1U","@compiled/react/runtime":"eyVUd","tiny-invariant":"ks8CW","../../utils/has-text-ancestor-context":"g5zEr","../../utils/surface-provider":"1fphO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ks8CW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>invariant);
var isProduction = false;
var prefix = 'Invariant failed';
function invariant(condition, message) {
    if (condition) return;
    if (isProduction) throw new Error(prefix);
    var provided = typeof message === 'function' ? message() : message;
    var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;
    throw new Error(value);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g5zEr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useHasTextAncestor", ()=>useHasTextAncestor);
parcelHelpers.export(exports, "HasTextAncestorProvider", ()=>HasTextAncestorProvider);
var _react = require("react");
var HasTextAncestorContext = /*#__PURE__*/ (0, _react.createContext)(false);
var useHasTextAncestor = function useHasTextAncestor() {
    return (0, _react.useContext)(HasTextAncestorContext);
};
var HasTextAncestorProvider = HasTextAncestorContext.Provider;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g4Wlx":[function(require,module,exports,__globalThis) {
/* pressable.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _react1 = require("@compiled/react");
var _analyticsNext = require("@atlaskit/analytics-next");
var _deviceCheck = require("@atlaskit/ds-lib/device-check");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _interactionContext = require("@atlaskit/interaction-context");
var _interactionContextDefault = parcelHelpers.interopDefault(_interactionContext);
var _focusable = require("./focusable");
var _focusableDefault = parcelHelpers.interopDefault(_focusable);
var _excluded = [
    "children",
    "isDisabled",
    "type",
    "onClick",
    "interactionName",
    "componentName",
    "analyticsContext",
    "style",
    "testId",
    "xcss",
    "tabIndex"
], _excluded2 = [
    "className"
];
var styles = {
    root: "_19itglyw _vchhusvi _r06hglyw _80omtlke",
    disabled: "_80om13gf"
};
/**
 * __Pressable__
 *
 * A primitive for building custom buttons.
 *
 * - [Examples](https://atlassian.design/components/primitives/pressable/examples)
 * - [Code](https://atlassian.design/components/primitives/pressable/code)
 * - [Usage](https://atlassian.design/components/primitives/pressable/usage)
 */ var Pressable = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var children = _ref.children, isDisabled = _ref.isDisabled, _ref$type = _ref.type, type = _ref$type === void 0 ? 'button' : _ref$type, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? (0, _noopDefault.default) : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, style = _ref.style, testId = _ref.testId, xcss = _ref.xcss, tabIndex = _ref.tabIndex, htmlAttributes = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var interactionContext = (0, _react.useContext)((0, _interactionContextDefault.default));
    var handleClick = (0, _react.useCallback)(function(e, analyticsEvent) {
        interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
        providedOnClick(e, analyticsEvent);
    }, [
        providedOnClick,
        interactionContext,
        interactionName
    ]);
    var onClick = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: handleClick,
        action: 'clicked',
        componentName: componentName || 'Pressable',
        packageName: "@atlaskit/primitives",
        packageVersion: "14.9.0",
        analyticsData: analyticsContext,
        actionSubject: 'button'
    });
    // This is to remove className from safeHtmlAttributes
    // @ts-expect-error className doesn't exist in the prop definition but we want to ensure it cannot be applied even if types are bypassed
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = (0, _objectWithoutPropertiesDefault.default)(htmlAttributes, _excluded2);
    return /*#__PURE__*/ _react.createElement((0, _focusableDefault.default), (0, _extendsDefault.default)({
        as: "button",
        tabIndex: tabIndex !== null && tabIndex !== void 0 ? tabIndex : (0, _deviceCheck.isSafari)() && !isDisabled ? 0 : undefined,
        style: style
    }, safeHtmlAttributes, {
        type: type,
        onClick: onClick,
        disabled: isDisabled,
        xcss: (0, _react1.cx)(styles.root, isDisabled && styles.disabled, xcss),
        testId: testId,
        ref: ref
    }), children);
});
exports.default = Pressable;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"eyVUd","@compiled/react":"9ZCMW","@atlaskit/analytics-next":"3iJRH","@atlaskit/ds-lib/device-check":"1rlBl","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/interaction-context":"jP4AZ","./focusable":"kI6N8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ZCMW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ClassNames", ()=>(0, _classNames.ClassNames));
parcelHelpers.export(exports, "createStrictAPI", ()=>(0, _createStrictApi.createStrictAPI));
parcelHelpers.export(exports, "css", ()=>(0, _cssDefault.default));
parcelHelpers.export(exports, "cssMap", ()=>(0, _cssMapDefault.default));
parcelHelpers.export(exports, "keyframes", ()=>(0, _keyframes.keyframes));
parcelHelpers.export(exports, "styled", ()=>(0, _styled.styled));
parcelHelpers.export(exports, "cx", ()=>(0, _xcssProp.cx));
parcelHelpers.export(exports, "jsx", ()=>jsx);
var _react = require("react");
var _classNames = require("./class-names");
var _createStrictApi = require("./create-strict-api");
var _css = require("./css");
var _cssDefault = parcelHelpers.interopDefault(_css);
var _cssMap = require("./css-map");
var _cssMapDefault = parcelHelpers.interopDefault(_cssMap);
var _keyframes = require("./keyframes");
var _styled = require("./styled");
var _xcssProp = require("./xcss-prop");
const jsx = (0, _react.createElement);

},{"react":"jMk1U","./class-names":false,"./create-strict-api":false,"./css":false,"./css-map":false,"./keyframes":false,"./styled":false,"./xcss-prop":"clJlf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"clJlf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cx", ()=>cx);
var _runtime = require("../runtime");
const cx = (...styles)=>{
    // At runtime TStyles is resolved down to strings, but not at compile time.
    // We circumvent the type system here because of that.
    const actualStyles = styles;
    // The output should be a union type of passed in styles. This ensures the call
    // site of xcss prop can raise violations when disallowed styles have been passed.
    return (0, _runtime.ax)(actualStyles);
};

},{"../runtime":"eyVUd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3iJRH":[function(require,module,exports,__globalThis) {
// Analytics event classes
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnalyticsEvent", ()=>(0, _analyticsEventDefault.default));
parcelHelpers.export(exports, "isAnalyticsEvent", ()=>(0, _analyticsEvent.isAnalyticsEvent));
parcelHelpers.export(exports, "UIAnalyticsEvent", ()=>(0, _uianalyticsEventDefault.default));
parcelHelpers.export(exports, "isUIAnalyticsEvent", ()=>(0, _uianalyticsEvent.isUIAnalyticsEvent));
// AnalyticsListener component
parcelHelpers.export(exports, "AnalyticsListener", ()=>(0, _indexDefault.default));
// AnalyticsContext component and HOC
parcelHelpers.export(exports, "AnalyticsContext", ()=>(0, _indexDefault1.default));
parcelHelpers.export(exports, "withAnalyticsContext", ()=>(0, _withAnalyticsContextDefault.default));
// AnalyticsErrorBoundary component
parcelHelpers.export(exports, "AnalyticsErrorBoundary", ()=>(0, _analyticsErrorBoundaryDefault.default));
// createAnalyticsEvent HOC
parcelHelpers.export(exports, "withAnalyticsEvents", ()=>(0, _withAnalyticsEventsDefault.default));
// React context
parcelHelpers.export(exports, "AnalyticsReactContext", ()=>(0, _analyticsNextStableReactContextDefault.default));
// Hook for creating and firing analytics events
parcelHelpers.export(exports, "useAnalyticsEvents", ()=>(0, _useAnalyticsEvents.useAnalyticsEvents));
parcelHelpers.export(exports, "useCallbackWithAnalytics", ()=>(0, _useCallbackWithAnalytics.useCallbackWithAnalytics));
parcelHelpers.export(exports, "usePlatformLeafEventHandler", ()=>(0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler));
parcelHelpers.export(exports, "usePlatformLeafSyntheticEventHandler", ()=>(0, _usePlatformLeafSyntheticEventHandler.usePlatformLeafSyntheticEventHandler));
// Helper functions
parcelHelpers.export(exports, "createAndFireEvent", ()=>(0, _createAndFireEventDefault.default));
parcelHelpers.export(exports, "cleanProps", ()=>(0, _cleanPropsDefault.default));
// Moved from deprecated @atlaskit/analytics
parcelHelpers.export(exports, "AnalyticsDecorator", ()=>(0, _analyticsDecoratorDefault.default));
parcelHelpers.export(exports, "AnalyticsDelegate", ()=>(0, _analyticsDelegateDefault.default));
parcelHelpers.export(exports, "withAnalytics", ()=>(0, _withAnalyticsDefault.default));
var _analyticsEvent = require("./events/AnalyticsEvent");
var _analyticsEventDefault = parcelHelpers.interopDefault(_analyticsEvent);
var _uianalyticsEvent = require("./events/UIAnalyticsEvent");
var _uianalyticsEventDefault = parcelHelpers.interopDefault(_uianalyticsEvent);
var _index = require("./components/AnalyticsListener/index");
var _indexDefault = parcelHelpers.interopDefault(_index);
var _index1 = require("./components/AnalyticsContext/index");
var _indexDefault1 = parcelHelpers.interopDefault(_index1);
var _withAnalyticsContext = require("./hocs/withAnalyticsContext");
var _withAnalyticsContextDefault = parcelHelpers.interopDefault(_withAnalyticsContext);
var _analyticsErrorBoundary = require("./components/AnalyticsErrorBoundary");
var _analyticsErrorBoundaryDefault = parcelHelpers.interopDefault(_analyticsErrorBoundary);
var _withAnalyticsEvents = require("./hocs/withAnalyticsEvents");
var _withAnalyticsEventsDefault = parcelHelpers.interopDefault(_withAnalyticsEvents);
var _analyticsNextStableReactContext = require("@atlaskit/analytics-next-stable-react-context");
var _analyticsNextStableReactContextDefault = parcelHelpers.interopDefault(_analyticsNextStableReactContext);
var _useAnalyticsEvents = require("./hooks/useAnalyticsEvents");
var _useCallbackWithAnalytics = require("./hooks/useCallbackWithAnalytics");
var _usePlatformLeafEventHandler = require("./hooks/usePlatformLeafEventHandler");
var _usePlatformLeafSyntheticEventHandler = require("./hooks/usePlatformLeafSyntheticEventHandler");
var _createAndFireEvent = require("./utils/createAndFireEvent");
var _createAndFireEventDefault = parcelHelpers.interopDefault(_createAndFireEvent);
var _cleanProps = require("./utils/cleanProps");
var _cleanPropsDefault = parcelHelpers.interopDefault(_cleanProps);
var _analyticsDecorator = require("./components/AnalyticsDecorator");
var _analyticsDecoratorDefault = parcelHelpers.interopDefault(_analyticsDecorator);
var _analyticsDelegate = require("./components/AnalyticsDelegate");
var _analyticsDelegateDefault = parcelHelpers.interopDefault(_analyticsDelegate);
var _withAnalytics = require("./utils/withAnalytics");
var _withAnalyticsDefault = parcelHelpers.interopDefault(_withAnalytics);

},{"./events/AnalyticsEvent":false,"./events/UIAnalyticsEvent":false,"./components/AnalyticsListener/index":false,"./components/AnalyticsContext/index":false,"./hocs/withAnalyticsContext":false,"./components/AnalyticsErrorBoundary":false,"./hocs/withAnalyticsEvents":false,"@atlaskit/analytics-next-stable-react-context":false,"./hooks/useAnalyticsEvents":false,"./hooks/useCallbackWithAnalytics":false,"./hooks/usePlatformLeafEventHandler":"jTLaA","./hooks/usePlatformLeafSyntheticEventHandler":"7eUc8","./utils/createAndFireEvent":false,"./utils/cleanProps":false,"./components/AnalyticsDecorator":false,"./components/AnalyticsDelegate":false,"./utils/withAnalytics":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fwmGw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAnalyticsEvent", ()=>isAnalyticsEvent);
parcelHelpers.export(exports, "default", ()=>AnalyticsEvent);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var isAnalyticsEvent = function isAnalyticsEvent(obj) {
    var _obj$constructor;
    return obj instanceof AnalyticsEvent || !!(obj !== null && obj !== void 0 && obj._isAnalyticsEvent) || // Backwards compatibility with older analytics-next packages
    (obj === null || obj === void 0 || (_obj$constructor = obj.constructor) === null || _obj$constructor === void 0 ? void 0 : _obj$constructor.name) === 'AnalyticsEvent';
};
var AnalyticsEvent = /*#__PURE__*/ function() {
    function AnalyticsEvent(props) {
        var _this = this;
        (0, _classCallCheckDefault.default)(this, AnalyticsEvent);
        (0, _definePropertyDefault.default)(this, "_isAnalyticsEvent", true);
        (0, _definePropertyDefault.default)(this, "clone", function() {
            // just a shallow clone, don't change sub refs unless you want to
            // affect the original's too
            var payload = _objectSpread({}, _this.payload);
            return new AnalyticsEvent({
                payload: payload
            });
        });
        this.payload = props.payload;
    }
    return (0, _createClassDefault.default)(AnalyticsEvent, [
        {
            key: "update",
            value: function update(updater) {
                if (typeof updater === 'function') this.payload = updater(this.payload);
                if ((0, _typeofDefault.default)(updater) === 'object') this.payload = _objectSpread(_objectSpread({}, this.payload), updater);
                return this;
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/defineProperty":"azbUC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lhz9Y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isUIAnalyticsEvent", ()=>isUIAnalyticsEvent);
parcelHelpers.export(exports, "default", ()=>UIAnalyticsEvent);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _get = require("@babel/runtime/helpers/get");
var _getDefault = parcelHelpers.interopDefault(_get);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
/// <reference types="node" />
var _analyticsEvent = require("./AnalyticsEvent");
var _analyticsEventDefault = parcelHelpers.interopDefault(_analyticsEvent);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function _superPropGet(t, o, e, r) {
    var p = (0, _getDefault.default)((0, _getPrototypeOfDefault.default)(1 & r ? t.prototype : t), o, e);
    return 2 & r && "function" == typeof p ? function(t) {
        return p.apply(e, t);
    } : p;
}
var isUIAnalyticsEvent = function isUIAnalyticsEvent(obj) {
    var _obj$constructor;
    return obj instanceof UIAnalyticsEvent || !!(obj !== null && obj !== void 0 && obj._isUIAnalyticsEvent) || // Backwards compatibility with older analytics-next packages
    (obj === null || obj === void 0 || (_obj$constructor = obj.constructor) === null || _obj$constructor === void 0 ? void 0 : _obj$constructor.name) === 'UIAnalyticsEvent';
};
var UIAnalyticsEvent = /*#__PURE__*/ function(_AnalyticsEvent) {
    function UIAnalyticsEvent(props) {
        var _this;
        (0, _classCallCheckDefault.default)(this, UIAnalyticsEvent);
        _this = _callSuper(this, UIAnalyticsEvent, [
            props
        ]);
        (0, _definePropertyDefault.default)(_this, "_isUIAnalyticsEvent", true);
        (0, _definePropertyDefault.default)(_this, "clone", function() {
            if (_this.hasFired) {
                // eslint-disable-next-line no-console
                console.warn("Cannot clone an event after it's been fired.");
                return null;
            }
            var context = (0, _toConsumableArrayDefault.default)(_this.context);
            var handlers = (0, _toConsumableArrayDefault.default)(_this.handlers);
            /**
       * A hacky "deep clone" of the object. This is limited in that it wont
       * support functions, regexs, Maps, Sets, etc, but none of those need to
       * be represented in our payload.
       */ var payload = JSON.parse(JSON.stringify(_this.payload));
            return new UIAnalyticsEvent({
                context: context,
                handlers: handlers,
                payload: payload
            });
        });
        (0, _definePropertyDefault.default)(_this, "fire", function(channel) {
            if (_this.hasFired) {
                // eslint-disable-next-line no-console
                console.warn('Cannot fire an event twice.');
                return;
            }
            _this.handlers.forEach(function(handler) {
                return handler(_this, channel);
            });
            _this.hasFired = true;
        });
        _this.context = props.context || [];
        _this.handlers = props.handlers || [];
        _this.hasFired = false;
        return _this;
    }
    (0, _inheritsDefault.default)(UIAnalyticsEvent, _AnalyticsEvent);
    return (0, _createClassDefault.default)(UIAnalyticsEvent, [
        {
            key: "update",
            value: function update(updater) {
                if (this.hasFired) {
                    // eslint-disable-next-line no-console
                    console.warn("Cannot update an event after it's been fired.");
                    return this;
                }
                return _superPropGet(UIAnalyticsEvent, "update", this, 3)([
                    updater
                ]);
            }
        }
    ]);
}((0, _analyticsEventDefault.default));

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/get":"fueqV","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","./AnalyticsEvent":"fwmGw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lkYCr":[function(require,module,exports,__globalThis) {
var arrayWithoutHoles = require("80b438c8f11ca70e");
var iterableToArray = require("4f1268a27b81f1fd");
var unsupportedIterableToArray = require("bfa7725fe5f724b");
var nonIterableSpread = require("24ae2b6222a85da6");
function _toConsumableArray(r) {
    return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"80b438c8f11ca70e":"ayRz2","4f1268a27b81f1fd":"fNMvm","bfa7725fe5f724b":"klYG5","24ae2b6222a85da6":"bHwaQ"}],"ayRz2":[function(require,module,exports,__globalThis) {
var arrayLikeToArray = require("d3a23041cb0f1512");
function _arrayWithoutHoles(r) {
    if (Array.isArray(r)) return arrayLikeToArray(r);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"d3a23041cb0f1512":"J34FZ"}],"fNMvm":[function(require,module,exports,__globalThis) {
function _iterableToArray(r) {
    if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"bHwaQ":[function(require,module,exports,__globalThis) {
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"6i558":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _context = require("./context");
var _contextDefault = parcelHelpers.interopDefault(_context);
exports.default = (0, _contextDefault.default);

},{"./context":"7JDji","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7JDji":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var AnalyticsNextContext = (0, _react.createContext)({
    getAtlaskitAnalyticsContext: function() {
        return [];
    },
    getAtlaskitAnalyticsEventHandlers: function() {
        return [];
    }
});
exports.default = AnalyticsNextContext;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6P0SM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useAnalyticsEvents", ()=>useAnalyticsEvents);
var _useMemoOne = require("use-memo-one");
var _uianalyticsEvent = require("../events/UIAnalyticsEvent");
var _uianalyticsEventDefault = parcelHelpers.interopDefault(_uianalyticsEvent);
var _useAnalyticsContext = require("./useAnalyticsContext");
function useAnalyticsEvents() {
    var analyticsContext = (0, _useAnalyticsContext.useAnalyticsContext)();
    var createAnalyticsEvent = (0, _useMemoOne.useCallbackOne)(function(payload) {
        return new (0, _uianalyticsEventDefault.default)({
            context: analyticsContext.getAtlaskitAnalyticsContext(),
            handlers: analyticsContext.getAtlaskitAnalyticsEventHandlers(),
            payload: payload
        });
    }, [
        analyticsContext
    ]);
    return {
        createAnalyticsEvent: createAnalyticsEvent
    };
}

},{"use-memo-one":"cwoAX","../events/UIAnalyticsEvent":"lhz9Y","./useAnalyticsContext":"9k6vt","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cwoAX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCallback", ()=>useCallback);
parcelHelpers.export(exports, "useCallbackOne", ()=>useCallbackOne);
parcelHelpers.export(exports, "useMemo", ()=>useMemo);
parcelHelpers.export(exports, "useMemoOne", ()=>useMemoOne);
var _react = require("react");
function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) return false;
    for(var i = 0; i < newInputs.length; i++){
        if (newInputs[i] !== lastInputs[i]) return false;
    }
    return true;
}
function useMemoOne(getResult, inputs) {
    var initial = (0, _react.useState)(function() {
        return {
            inputs: inputs,
            result: getResult()
        };
    })[0];
    var isFirstRun = (0, _react.useRef)(true);
    var committed = (0, _react.useRef)(initial);
    var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));
    var cache = useCache ? committed.current : {
        inputs: inputs,
        result: getResult()
    };
    (0, _react.useEffect)(function() {
        isFirstRun.current = false;
        committed.current = cache;
    }, [
        cache
    ]);
    return cache.result;
}
function useCallbackOne(callback, inputs) {
    return useMemoOne(function() {
        return callback;
    }, inputs);
}
var useMemo = useMemoOne;
var useCallback = useCallbackOne;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9k6vt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useAnalyticsContext", ()=>useAnalyticsContext);
var _react = require("react");
var _analyticsNextStableReactContext = require("@atlaskit/analytics-next-stable-react-context");
var _analyticsNextStableReactContextDefault = parcelHelpers.interopDefault(_analyticsNextStableReactContext);
var useAnalyticsContext = function useAnalyticsContext() {
    return (0, _react.useContext)((0, _analyticsNextStableReactContextDefault.default));
};

},{"react":"jMk1U","@atlaskit/analytics-next-stable-react-context":"6i558","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jTLaA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// WARNING: This hook will only function correctly for leaf node components - as in
// no children inside the component will require analytics themselves.
// Ignoring this warning will mean the analytics context of child components will not
// include the context of this component, .e.g, lost data.
// If you are going to have child components that require analytics use withAnalytics
// or AnalyticsContext component instead.
parcelHelpers.export(exports, "usePlatformLeafEventHandler", ()=>usePlatformLeafEventHandler);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _useAnalyticsEvents = require("./useAnalyticsEvents");
var _useTrackedRef = require("./useTrackedRef");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function usePlatformLeafEventHandler(_ref) {
    var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, actionSubject = _ref.actionSubject, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
    var _useAnalyticsEvents1 = (0, _useAnalyticsEvents.useAnalyticsEvents)(), createAnalyticsEvent = _useAnalyticsEvents1.createAnalyticsEvent;
    // We put analyticsData and fn in a ref so that we don't need to break
    // memoization.
    // Generally these could be defined by consumers inline
    // and so we do this to avoid breaking memoization of useCallback
    var dataRef = (0, _useTrackedRef.useTrackedRef)(analyticsData);
    var fnRef = (0, _useTrackedRef.useTrackedRef)(fn);
    var handler = (0, _react.useCallback)(function(value) {
        var analyticsEvent = createAnalyticsEvent({
            action: action,
            actionSubject: actionSubject || componentName,
            attributes: {
                componentName: componentName,
                packageName: packageName,
                packageVersion: packageVersion
            }
        });
        // To avoid wrapping this component in AnalyticsContext we manually
        // push the parent context's meta data into the context.
        // Note: this new 'context'
        var context = _objectSpread({
            componentName: componentName,
            packageName: packageName,
            packageVersion: packageVersion
        }, dataRef.current);
        analyticsEvent.context.push(context);
        // fire an event on the atlaskit channel
        var clone = analyticsEvent.clone();
        if (clone) clone.fire('atlaskit');
        fnRef.current(value, analyticsEvent);
    }, [
        // These are strings and won't change
        action,
        componentName,
        actionSubject,
        packageName,
        packageVersion,
        // This function is memoized in the context
        createAnalyticsEvent,
        // these are a stable ref because of the useTrackedRef hook
        dataRef,
        fnRef
    ]);
    return handler;
}

},{"@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","./useAnalyticsEvents":"6P0SM","./useTrackedRef":"gE1lG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gE1lG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useTrackedRef", ()=>useTrackedRef);
var _react = require("react");
var useTrackedRef = function useTrackedRef(value) {
    var ref = (0, _react.useRef)(value);
    ref.current = value;
    return ref;
};

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7eUc8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// WARNING: This hook will only function correctly for leaf node components - as in
// no children inside the component will require analytics themselves.
// Ignoring this warning will mean the analytics context of child components will not
// include the context of this component, .e.g, lost data.
// If you are going to have child components that require analytics use withAnalytics
// or AnalyticsContext component instead.
parcelHelpers.export(exports, "usePlatformLeafSyntheticEventHandler", ()=>usePlatformLeafSyntheticEventHandler);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _useAnalyticsEvents = require("./useAnalyticsEvents");
var _useTrackedRef = require("./useTrackedRef");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function usePlatformLeafSyntheticEventHandler(_ref) {
    var fn = _ref.fn, action = _ref.action, componentName = _ref.componentName, packageName = _ref.packageName, packageVersion = _ref.packageVersion, analyticsData = _ref.analyticsData;
    var _useAnalyticsEvents1 = (0, _useAnalyticsEvents.useAnalyticsEvents)(), createAnalyticsEvent = _useAnalyticsEvents1.createAnalyticsEvent;
    // We put analyticsData and fn in a ref so that we don't need to break
    // memoization.
    // Generally these could be defined by consumers inline
    // and so we do this to avoid breaking memoization of useCallback
    var dataRef = (0, _useTrackedRef.useTrackedRef)(analyticsData);
    var fnRef = (0, _useTrackedRef.useTrackedRef)(fn);
    var handler = (0, _react.useCallback)(function() {
        var analyticsEvent = createAnalyticsEvent({
            action: action,
            actionSubject: componentName,
            attributes: {
                componentName: componentName,
                packageName: packageName,
                packageVersion: packageVersion
            }
        });
        // To avoid wrapping this component in AnalyticsContext we manually
        // push the parent context's meta data into the context.
        // Note: this new 'context'
        var context = _objectSpread({
            componentName: componentName,
            packageName: packageName,
            packageVersion: packageVersion
        }, dataRef.current);
        analyticsEvent.context.push(context);
        // fire an event on the atlaskit channel
        var clone = analyticsEvent.clone();
        if (clone) clone.fire('atlaskit');
        fnRef.current(analyticsEvent);
    }, [
        // These are strings and won't change
        action,
        componentName,
        packageName,
        packageVersion,
        // This function is memoized in the context
        createAnalyticsEvent,
        // these are a stable ref because of the useTrackedRef hook
        dataRef,
        fnRef
    ]);
    return handler;
}

},{"@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","./useAnalyticsEvents":"6P0SM","./useTrackedRef":"gE1lG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1rlBl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSafari", ()=>isSafari);
parcelHelpers.export(exports, "isAppleDevice", ()=>isAppleDevice);
function testPlatform(re) {
    var _window$navigator$use;
    return typeof window !== 'undefined' && window.navigator != null ? //@ts-expect-error ignore userAgentData type issue
    re.test(((_window$navigator$use = window.navigator['userAgentData']) === null || _window$navigator$use === void 0 ? void 0 : _window$navigator$use.platform) || window.navigator.platform) : false;
}
function isIPhone() {
    return testPlatform(/^iPhone/i);
}
function isMac() {
    return testPlatform(/^Mac/i);
}
function isIPad() {
    return testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
    isMac() && navigator.maxTouchPoints > 1;
}
function isIOS() {
    return isIPhone() || isIPad();
}
function isSafari() {
    if (typeof window !== 'undefined' && window.navigator != null) {
        var _window$navigator$use2;
        var ua = (_window$navigator$use2 = window.navigator.userAgent) === null || _window$navigator$use2 === void 0 ? void 0 : _window$navigator$use2.toLowerCase();
        return ua ? ua.includes('safari') && !ua.includes('chrome') : false;
    }
    return false;
}
function isAppleDevice() {
    return isMac() || isIOS();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gcHCG":[function(require,module,exports,__globalThis) {
/**
 * An empty function which does nothing.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>noop);
function noop() {}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jP4AZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
exports.default = /*#__PURE__*/ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kI6N8":[function(require,module,exports,__globalThis) {
/* focusable.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _excluded = [
    "as",
    "children",
    "isInset",
    "testId",
    "style",
    "xcss"
], _excluded2 = [
    "className"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var focusRingStyles = null;
var insetFocusRingStyles = null;
/**
 * __Focus ring__
 *
 * A focus ring visually indicates the currently focused item.
 *
 */ var Focusable = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? 'button' : _ref$as, children = _ref.children, isInset = _ref.isInset, testId = _ref.testId, style = _ref.style, xcss = _ref.xcss, htmlAttributes = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // This is to remove className from safeHtmlAttributes
    // @ts-expect-error className doesn't exist in the prop definition but we want to ensure it cannot be applied even if types are bypassed
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = (0, _objectWithoutPropertiesDefault.default)(htmlAttributes, _excluded2);
    return /*#__PURE__*/ _react.createElement(Component, (0, _extendsDefault.default)({}, safeHtmlAttributes, {
        // @ts-ignore Expression produces a union type that is too complex to represent. We may be able to narrow the type here but unsure.
        ref: ref,
        className: (0, _runtime.ax)([
            "_mizu194a _1ah31bk5 _ra3xnqa1 _128m1bk5 _1cvmnqa1 _4davt94y",
            isInset && "_1ah3115h _2mwq115h",
            xcss
        ]),
        "data-testid": testId,
        style: _objectSpread(_objectSpread({}, style), {}, {
            "--_1203r2w": (0, _runtime.ix)("calc(0px - ".concat("var(--ds-border-width-outline, 2px)", ")"))
        })
    }), children);
});
exports.default = Focusable;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"eyVUd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fcrn7":[function(require,module,exports,__globalThis) {
/* anchor.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _react1 = require("@compiled/react");
var _tinyInvariant = require("tiny-invariant");
var _tinyInvariantDefault = parcelHelpers.interopDefault(_tinyInvariant);
var _analyticsNext = require("@atlaskit/analytics-next");
var _appProvider = require("@atlaskit/app-provider");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useId = require("@atlaskit/ds-lib/use-id");
var _interactionContext = require("@atlaskit/interaction-context");
var _interactionContextDefault = parcelHelpers.interopDefault(_interactionContext);
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var _focusable = require("./focusable");
var _focusableDefault = parcelHelpers.interopDefault(_focusable);
var _excluded = [
    "href",
    "children",
    "onClick",
    "interactionName",
    "componentName",
    "analyticsContext",
    "aria-label",
    "aria-labelledby",
    "style",
    "target",
    "testId",
    "xcss",
    "newWindowLabel"
], _excluded2 = [
    "className"
];
var styles = {
    root: "_4bfu1r31 _1hms8stv _ajmmnqa1 _vchhusvi"
};
var IS_EXTERNAL_LINK_REGEX = /^(?:(http|https):\/\/)/;
var IS_NON_HTTP_BASED = /^(((mailto|tel|sms|blob):)|(#))/;
/**
 * __Anchor__
 *
 * A primitive for building custom anchor links.
 *
 * - [Examples](https://atlassian.design/components/primitives/anchor/examples)
 * - [Code](https://atlassian.design/components/primitives/anchor/code)
 * - [Usage](https://atlassian.design/components/primitives/anchor/usage)
 */ var AnchorNoRef = function AnchorNoRef(_ref, ref) {
    var href = _ref.href, children = _ref.children, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? (0, _noopDefault.default) : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, ariaLabel = _ref['aria-label'], ariaLabelledBy = _ref['aria-labelledby'], style = _ref.style, target = _ref.target, testId = _ref.testId, xcss = _ref.xcss, _ref$newWindowLabel = _ref.newWindowLabel, newWindowLabel = _ref$newWindowLabel === void 0 ? '(opens new window)' : _ref$newWindowLabel, htmlAttributes = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var interactionContext = (0, _react.useContext)((0, _interactionContextDefault.default));
    var handleClick = (0, _react.useCallback)(function(e, analyticsEvent) {
        interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
        providedOnClick(e, analyticsEvent);
    }, [
        providedOnClick,
        interactionContext,
        interactionName
    ]);
    var opensNewWindowLabelId = (0, _useId.useId)();
    var onClick = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: handleClick,
        action: 'clicked',
        componentName: componentName || 'Anchor',
        packageName: "@atlaskit/primitives",
        packageVersion: "14.9.0",
        analyticsData: analyticsContext,
        actionSubject: 'link'
    });
    // This is to remove className from safeHtmlAttributes
    // @ts-expect-error className doesn't exist in the prop definition but we want to ensure it cannot be applied even if types are bypassed
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = (0, _objectWithoutPropertiesDefault.default)(htmlAttributes, _excluded2);
    var RouterLink = (0, _appProvider.useRouterLink)();
    var isExternal = typeof href === 'string' && IS_EXTERNAL_LINK_REGEX.test(href);
    var isNonHttpBased = typeof href === 'string' && IS_NON_HTTP_BASED.test(href);
    /**
   * Renders a router link if:
   *
   * - a link component is set in the app provider
   * - it's not an external link (starting with `http://` or `https://`)
   * - it's not a non-HTTP-based link (e.g. emails, phone numbers, hash links etc.).
   */ var isRouterLink = RouterLink && !isExternal && !isNonHttpBased;
    var hrefObjectUsedWithoutRouterLink = RouterLink === undefined && (0, _typeofDefault.default)(href) === 'object';
    (0, _tinyInvariantDefault.default)(!hrefObjectUsedWithoutRouterLink, "@atlaskit/primitives: Anchor primitive cannot pass an object to 'href' unless a router link is configured in the AppProvider");
    var Component = isRouterLink ? RouterLink : 'a';
    return /*#__PURE__*/ _react.createElement((0, _focusableDefault.default), (0, _extendsDefault.default)({
        as: Component,
        className: xcss,
        style: style,
        ref: ref
    }, safeHtmlAttributes, {
        href: !isRouterLink && typeof href !== 'string' ? undefined : href,
        target: target,
        onClick: onClick,
        "aria-label": ariaLabel && target === '_blank' && !ariaLabelledBy ? "".concat(ariaLabel, " , ").concat(newWindowLabel) : ariaLabel,
        "aria-labelledby": ariaLabelledBy && target === '_blank' ? "".concat(ariaLabelledBy, " ").concat(opensNewWindowLabelId) : ariaLabelledBy,
        xcss: (0, _react1.cx)(styles.root, xcss),
        testId: testId,
        "data-is-router-link": testId ? isRouterLink ? 'true' : 'false' : undefined
    }), children, target === '_blank' && (children && !ariaLabel && !ariaLabelledBy || ariaLabelledBy) && /*#__PURE__*/ _react.createElement((0, _visuallyHiddenDefault.default), {
        id: opensNewWindowLabelId
    }, ", ".concat(newWindowLabel)));
};
// Workarounds to support generic types with forwardRef
/**
 * __Anchor__
 *
 * Anchor is a primitive for building custom anchor links. It's a wrapper around the HTML `<a>` element that provides a consistent API for handling client-side routing and Atlassian Design System styling.
 *
 * - [Examples](https://atlassian.design/components/primitives/anchor/examples)
 * - [Code](https://atlassian.design/components/primitives/anchor/code)
 * - [Usage](https://atlassian.design/components/primitives/anchor/usage)
 */ var Anchor = /*#__PURE__*/ (0, _react.forwardRef)(AnchorNoRef);
exports.default = Anchor;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"eyVUd","@compiled/react":"9ZCMW","tiny-invariant":"ks8CW","@atlaskit/analytics-next":"3iJRH","@atlaskit/app-provider":"kSjrW","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/ds-lib/use-id":"jrARK","@atlaskit/interaction-context":"jP4AZ","@atlaskit/visually-hidden":"jnHN6","./focusable":"kI6N8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kSjrW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _appProviderDefault.default));
parcelHelpers.export(exports, "UNSAFE_useColorModeForMigration", ()=>(0, _themeProvider.UNSAFE_useColorModeForMigration));
parcelHelpers.export(exports, "useColorMode", ()=>(0, _themeProvider.useColorMode));
parcelHelpers.export(exports, "useSetColorMode", ()=>(0, _themeProvider.useSetColorMode));
parcelHelpers.export(exports, "useSetTheme", ()=>(0, _themeProvider.useSetTheme));
parcelHelpers.export(exports, "useTheme", ()=>(0, _themeProvider.useTheme));
parcelHelpers.export(exports, "useRouterLink", ()=>(0, _useRouterLinkDefault.default));
var _appProvider = require("./app-provider");
var _appProviderDefault = parcelHelpers.interopDefault(_appProvider);
var _themeProvider = require("./theme-provider");
var _useRouterLink = require("./router-link-provider/hooks/use-router-link");
var _useRouterLinkDefault = parcelHelpers.interopDefault(_useRouterLink);

},{"./app-provider":false,"./theme-provider":false,"./router-link-provider/hooks/use-router-link":"lk1CY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lk1CY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _index = require("../index");
/**
 * __useRouterLink()__
 *
 * Hook: Returns app-configured router link component.
 *
 * A generic can be passed to define advanced link configuration:
 * ```
 * type MyRouterLinkConfig = {
 *  to: string;
 *  replace?: boolean;
 * }
 *
 * const RouterLink = useRouterLink<MyRouterLinkConfig>();
 * ```
 */ var useRouterLink = function useRouterLink() {
    var _useContext = (0, _react.useContext)((0, _index.RouterLinkProviderContext)), routerLinkComponent = _useContext.routerLinkComponent;
    if (routerLinkComponent) return routerLinkComponent;
};
exports.default = useRouterLink;

},{"react":"jMk1U","../index":"1fDce","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1fDce":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RouterLinkProviderContext", ()=>RouterLinkProviderContext);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var RouterLinkProviderContext = /*#__PURE__*/ (0, _react.createContext)({});
/**
 * __RouterLinkProvider__
 *
 * Provides a configured router link component for use
 * within Design System components.
 */ var RouterLinkProvider = function RouterLinkProvider(_ref) {
    var routerLinkComponent = _ref.routerLinkComponent, children = _ref.children;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(RouterLinkProviderContext.Provider, {
        value: {
            routerLinkComponent: routerLinkComponent
        }
    }, children);
};
exports.default = RouterLinkProvider;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jrARK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns a unique id
 *
 * React 18 SSR and Concurrent modes are supported when the `platform-dst-react-18-use-id` flag is enabled.
 * This is an interop function that supports React 16 and 18.
 *
 * If migrating from `useUID` in the `react-uid` package, then `useId` is a direct replacement.
 *
 * @return string
 * @see {@link useIdSeed}
 * @see https://github.com/thearnica/react-uid#hooks-168
 * @private We intend to deprecate and replace with `useId()` directly
 * @example
 * const id = useUID();
 * id == "r1"; // for example
 *
 * Parts of the above are from: https://github.com/thearnica/react-uid/blob/0f507fbbdb1ab84acf477ec32698afe3d2191e49/src/hooks.ts#L41C1-L49C4
 */ parcelHelpers.export(exports, "useId", ()=>useId);
parcelHelpers.export(exports, "IdProvider", ()=>IdProvider);
/**
 * Returns an id generator
 *
 * React 18 SSR and Concurrent modes are supported when the `platform-dst-react-18-use-id` flag is enabled.
 * This is an interop function that supports React 16 and 18.
 *
 * If migrating from `useUIDSeed` in the `react-uid` package, then `useIdSeed` is a direct replacement.
 *
 * "If you need to give IDs to multiple related elements, you can call useId to generate a shared prefix for them" - From React
 * This function will help to implement the above.
 * @return (id: any) => string
 * @see https://react.dev/reference/react/useId#generating-ids-for-several-related-elements
 * @see https://github.com/thearnica/react-uid#hooks-168
 * @private We intend to deprecate and replace with `useId()` directly
 * @example
 * import { useIdSeed } from '@atlaskit/ds-lib/use-id';
 *
 * export default function Form() {
 * 	 const idSeed = useIdSeed();
 *   return (
 *     <form>
 *       <label htmlFor={idSeed('firstName')}>First Name:</label>
 *       <input id={idSeed('firstName')} type="text" />
 *       <hr />
 *       <label htmlFor={idSeed('lastName')}>Last Name:</label>
 *       <input id={idSeed('lastName')} type="text" />
 *     </form>
 *   );
 * }
 */ parcelHelpers.export(exports, "useIdSeed", ()=>useIdSeed);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactUid = require("react-uid");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _React$useId;
// Type copied from https://github.com/thearnica/react-uid/blob/0f507fbbdb1ab84acf477ec32698afe3d2191e49/src/hooks.ts#L12
// Copied rather than inferred to make the type transparent
// @ts-ignore - useId is not accessible in React 16
var react18UseId = (_React$useId = (0, _reactDefault.default).useId) !== null && _React$useId !== void 0 ? _React$useId : undefined;
function useId() {
    if (react18UseId && (0, _platformFeatureFlags.fg)('platform-dst-react-18-use-id')) return react18UseId();
    return "uid".concat((0, _reactUid.useUID)());
}
var IdProvider = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var children = _ref.children, _ref$postfix = _ref.postfix, postfix = _ref$postfix === void 0 ? '' : _ref$postfix, _ref$prefix = _ref.prefix, prefix = _ref$prefix === void 0 ? '' : _ref$prefix;
    var id = "".concat(prefix).concat(useId()).concat(postfix);
    (0, _react.useEffect)(function() {
        if (!ref) return;
        switch((0, _typeofDefault.default)(ref)){
            case 'function':
                ref(id);
                break;
            case 'object':
                ref.current = id;
                break;
            default:
                throw new Error("Unreachable case for unsupported type of ref \"".concat((0, _typeofDefault.default)(ref), "\""));
        }
    }, [
        id,
        ref
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, typeof children === 'function' ? children({
        id: id
    }) : children);
});
function useIdSeed() {
    if (react18UseId && (0, _platformFeatureFlags.fg)('platform-dst-react-18-use-id')) {
        var uid = react18UseId();
        return function(id) {
            return "".concat(uid, "-").concat(id.toString());
        };
    }
    return (0, _reactUid.useUIDSeed)();
}

},{"@babel/runtime/helpers/typeof":"7EL9t","react":"jMk1U","react-uid":"eF51M","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eF51M":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "generateUID", ()=>(0, _uid.generateUID));
parcelHelpers.export(exports, "uid", ()=>(0, _uid.uid));
parcelHelpers.export(exports, "UID", ()=>(0, _uidcomponent.UID));
parcelHelpers.export(exports, "UIDConsumer", ()=>(0, _control.UIDConsumer));
parcelHelpers.export(exports, "UIDReset", ()=>(0, _control.UIDReset));
parcelHelpers.export(exports, "UIDFork", ()=>(0, _control.UIDFork));
parcelHelpers.export(exports, "useUID", ()=>(0, _hooks.useUID));
parcelHelpers.export(exports, "useUIDSeed", ()=>(0, _hooks.useUIDSeed));
var _control = require("./Control");
var _uidcomponent = require("./UIDComponent");
var _hooks = require("./hooks");
var _uid = require("./uid");

},{"./Control":false,"./UIDComponent":false,"./hooks":"dV9lh","./uid":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dV9lh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useUID", ()=>useUID);
parcelHelpers.export(exports, "useUIDSeed", ()=>useUIDSeed);
var _react = require("react");
var _context = require("./context");
var generateUID = function(context) {
    var quartz = context || (0, _context.counter);
    var prefix = (0, _context.getPrefix)(quartz);
    var id = (0, _context.getId)(quartz);
    var uid = prefix + id;
    var gen = function(item) {
        return uid + quartz.uid(item);
    };
    return {
        uid: uid,
        gen: gen
    };
};
var useUIDState = function() {
    if (!('useContext' in _react)) throw new Error('Hooks API requires React 16.8+');
    var context = (0, _react.useContext)((0, _context.source));
    var uid = (0, _react.useState)(function() {
        return generateUID(context);
    })[0];
    return uid;
};
var useUID = function() {
    var uid = useUIDState().uid;
    return uid;
};
var useUIDSeed = function() {
    var gen = useUIDState().gen;
    return gen;
};

},{"react":"jMk1U","./context":"b6v0g","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b6v0g":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSource", ()=>createSource);
parcelHelpers.export(exports, "counter", ()=>counter);
parcelHelpers.export(exports, "source", ()=>source);
parcelHelpers.export(exports, "getId", ()=>getId);
parcelHelpers.export(exports, "getPrefix", ()=>getPrefix);
var _react = require("react");
var _uid = require("./uid");
var createSource = function(prefix) {
    if (prefix === void 0) prefix = '';
    return {
        value: 1,
        prefix: prefix,
        uid: (0, _uid.generateUID)()
    };
};
var counter = createSource();
var source = _react.createContext(createSource());
var getId = function(source) {
    return source.value++;
};
var getPrefix = function(source) {
    return source ? source.prefix : '';
};

},{"react":"jMk1U","./uid":"5b0GZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5b0GZ":[function(require,module,exports,__globalThis) {
/**
 * generates a UID factory
 * @internal
 * @example
 * const uid = generateUID();
 * uid(object) = 1;
 * uid(object) = 1;
 * uid(anotherObject) = 2;
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "generateUID", ()=>generateUID);
parcelHelpers.export(exports, "uid", ()=>uid);
var generateUID = function() {
    var counter = 1;
    var map = new WeakMap();
    /**
     * @borrows {uid}
     */ var uid = function(item, index) {
        if (typeof item === 'number' || typeof item === 'string') return index ? "idx-".concat(index) : "val-".concat(item);
        if (!map.has(item)) {
            map.set(item, counter++);
            return uid(item);
        }
        return 'uid' + map.get(item);
    };
    return uid;
};
var uid = generateUID();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jnHN6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _visuallyHiddenDefault.default));
var _visuallyHidden = require("./visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);

},{"./visually-hidden":"ku5mZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ku5mZ":[function(require,module,exports,__globalThis) {
/* visually-hidden.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var visuallyHiddenStyles = null;
/**
 * __Visually hidden__
 *
 * A composable element to apply a visually hidden effect to children.
 * Useful for accessibility compliance.
 *
 * @example
 * ```jsx
 * import VisuallyHidden from '@atlaskit/visually-hidden';
 *
 * export default () => (
 *   <div style={{ border: '1px solid black' }}>
 *      There is text hidden between the brackets [
 *      <VisuallyHidden>Can't see me!</VisuallyHidden>]
 *   </div>
 * );
 * ```
 */ var VisuallyHidden = function VisuallyHidden(_ref) {
    var children = _ref.children, testId = _ref.testId, role = _ref.role, id = _ref.id;
    return /*#__PURE__*/ _react.createElement("span", {
        id: id,
        "data-testid": testId,
        role: role,
        className: (0, _runtime.ax)([
            "_ca0qidpf _u5f3idpf _n3tdidpf _19bvidpf _19itidpf _1reo15vq _18m915vq _1bsbt94y _4t3it94y _kqswstnw _ogto7mnp _uiztglyw _o5721q9c"
        ])
    }, children);
};
exports.default = VisuallyHidden;

},{"react":"jMk1U","@compiled/react/runtime":"a44RC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a44RC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"4cK1A","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4cK1A":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"fZp5X","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZp5X":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i53Ws":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "media", ()=>(0, _mediaHelper.media));
parcelHelpers.export(exports, "UNSAFE_useMediaQuery", ()=>(0, _useMediaQuery.UNSAFE_useMediaQuery));
parcelHelpers.export(exports, "Show", ()=>(0, _show.Show));
parcelHelpers.export(exports, "Hide", ()=>(0, _hide.Hide));
var _mediaHelper = require("./media-helper");
var _useMediaQuery = require("./use-media-query");
var _show = require("./show");
var _hide = require("./hide");

},{"./media-helper":false,"./use-media-query":false,"./show":"7LSEe","./hide":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7LSEe":[function(require,module,exports,__globalThis) {
/* show.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Show", ()=>Show);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var styles = {
    default: "_1e0cglyw",
    'above.xs': "_114b19ly",
    'above.sm': "_181n19ly",
    'above.md': "_dm2519ly",
    'above.lg': "_je3o19ly",
    'above.xl': "_1uxv19ly",
    'below.xs': "_1m0a19ly",
    'below.sm': "_suga19ly",
    'below.md': "_1mjb19ly",
    'below.lg': "_liwc19ly",
    'below.xl': "_14wz19ly"
};
var Show = function Show(_ref) {
    var above = _ref.above, below = _ref.below, children = _ref.children, _ref$as = _ref.as, AsElement = _ref$as === void 0 ? 'div' : _ref$as, xcss = _ref.xcss;
    return /*#__PURE__*/ _react.createElement(AsElement, {
        className: (0, _runtime.ax)([
            styles.default,
            above && styles["above.".concat(above)],
            below && styles["below.".concat(below)],
            xcss
        ])
    }, children);
};

},{"react":"jMk1U","@compiled/react/runtime":"eyVUd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5ACd9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconButton", ()=>IconButton);
parcelHelpers.export(exports, "Button", ()=>Button);
parcelHelpers.export(exports, "LinkIconButton", ()=>LinkIconButton);
parcelHelpers.export(exports, "LinkButton", ()=>LinkButton);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _new = require("@atlaskit/button/new");
var _newDefault = parcelHelpers.interopDefault(_new);
var _button = require("./button");
var _hasCustomThemeContext = require("./has-custom-theme-context");
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var IconButton = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
    var Component = hasCustomTheme ? (0, _button.ThemedIconButton) : (0, _new.IconButton);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(Component, (0, _extendsDefault.default)({
        ref: ref
    }, props));
});
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkIconButton = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
    var Component = hasCustomTheme ? (0, _button.ThemedLinkIconButton) : (0, _new.LinkIconButton);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(Component, (0, _extendsDefault.default)({
        ref: ref
    }, props));
});
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var Button = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
    var Component = hasCustomTheme ? (0, _button.ThemedButton) : (0, _newDefault.default);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(Component, (0, _extendsDefault.default)({
        ref: ref
    }, props));
});
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkButton = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
    var Component = hasCustomTheme ? (0, _button.ThemedLinkButton) : (0, _new.LinkButton);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(Component, (0, _extendsDefault.default)({
        ref: ref
    }, props));
});

},{"@babel/runtime/helpers/extends":"lKa0J","react":"jMk1U","@atlaskit/button/new":"jGwqc","./button":"b24QE","./has-custom-theme-context":"hHO85","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jGwqc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _buttonDefault.default));
parcelHelpers.export(exports, "LinkButton", ()=>(0, _linkDefault.default));
parcelHelpers.export(exports, "IconButton", ()=>(0, _buttonDefault1.default));
parcelHelpers.export(exports, "LinkIconButton", ()=>(0, _linkDefault1.default));
parcelHelpers.export(exports, "SplitButton", ()=>(0, _splitButton.SplitButton));
var _button = require("../new-button/variants/default/button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _link = require("../new-button/variants/default/link");
var _linkDefault = parcelHelpers.interopDefault(_link);
var _button1 = require("../new-button/variants/icon/button");
var _buttonDefault1 = parcelHelpers.interopDefault(_button1);
var _link1 = require("../new-button/variants/icon/link");
var _linkDefault1 = parcelHelpers.interopDefault(_link1);
var _splitButton = require("../new-button/containers/split-button");

},{"../new-button/variants/default/button":"cbk5X","../new-button/variants/default/link":"cmOVH","../new-button/variants/icon/button":"4mDm1","../new-button/variants/icon/link":"lqjhK","../new-button/containers/split-button":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cbk5X":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _buttonBase = require("../shared/button-base");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _content = require("../shared/content");
var _contentDefault = parcelHelpers.interopDefault(_content);
var _iconRenderer = require("../shared/icon-renderer");
var _iconRendererDefault = parcelHelpers.interopDefault(_iconRenderer);
var _excluded = [
    "analyticsContext",
    "appearance",
    "aria-label",
    "aria-labelledby",
    "autoFocus",
    "children",
    "iconAfter",
    "iconBefore",
    "interactionName",
    "isDisabled",
    "isLoading",
    "isSelected",
    "onClick",
    "onClickCapture",
    "onKeyDownCapture",
    "onKeyUpCapture",
    "onMouseDownCapture",
    "onMouseUpCapture",
    "onPointerDownCapture",
    "onPointerUpCapture",
    "onTouchEndCapture",
    "onTouchStartCapture",
    "shouldFitContainer",
    "spacing",
    "testId",
    "type"
], _excluded2 = [
    "className",
    "css",
    "as",
    "style"
];
/**
 * __Button__
 *
 * A button triggers an event or action.
 *
 * - [Examples](https://atlassian.design/components/button/examples)
 * - [Code](https://atlassian.design/components/button/code)
 * - [Usage](https://atlassian.design/components/button/usage)
 */ var Button = /*#__PURE__*/ (0, _reactDefault.default).memo(/*#__PURE__*/ (0, _reactDefault.default).forwardRef(function Button(_ref, ref) {
    var analyticsContext = _ref.analyticsContext, appearance = _ref.appearance, ariaLabel = _ref['aria-label'], ariaLabelledBy = _ref['aria-labelledby'], autoFocus = _ref.autoFocus, children = _ref.children, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, isSelected = _ref.isSelected, onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shouldFitContainer = _ref.shouldFitContainer, spacing = _ref.spacing, testId = _ref.testId, _ref$type = _ref.type, type = _ref$type === void 0 ? 'button' : _ref$type, unsafeRest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // @ts-expect-error
    var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = (0, _objectWithoutPropertiesDefault.default)(unsafeRest, _excluded2);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _buttonBaseDefault.default), (0, _extendsDefault.default)({
        analyticsContext: analyticsContext,
        ref: ref,
        appearance: appearance,
        autoFocus: autoFocus,
        isDisabled: isDisabled,
        isLoading: isLoading,
        isSelected: isSelected,
        hasIconBefore: Boolean(iconBefore),
        hasIconAfter: Boolean(iconAfter),
        shouldFitContainer: shouldFitContainer,
        spacing: spacing,
        ariaLabel: ariaLabel,
        ariaLabelledBy: ariaLabelledBy,
        onClick: onClick,
        onClickCapture: onClickCapture,
        onKeyDownCapture: onKeyDownCapture,
        onKeyUpCapture: onKeyUpCapture,
        onMouseDownCapture: onMouseDownCapture,
        onMouseUpCapture: onMouseUpCapture,
        onPointerDownCapture: onPointerDownCapture,
        onPointerUpCapture: onPointerUpCapture,
        onTouchStartCapture: onTouchStartCapture,
        onTouchEndCapture: onTouchEndCapture,
        testId: testId,
        componentName: "Button",
        type: type,
        interactionName: interactionName
    }, saferRest), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Fragment), null, iconBefore && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _contentDefault.default), {
        type: "icon",
        position: "before",
        isLoading: isLoading
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconRendererDefault.default), {
        icon: iconBefore
    })), children && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _contentDefault.default), {
        isLoading: isLoading
    }, children), iconAfter && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _contentDefault.default), {
        type: "icon",
        position: "after",
        isLoading: isLoading
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconRendererDefault.default), {
        icon: iconAfter
    }))));
}));
Button.displayName = 'Button';
exports.default = Button;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","../shared/button-base":"1CzA0","../shared/content":"3w1Pm","../shared/icon-renderer":"dHWAg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1CzA0":[function(require,module,exports,__globalThis) {
/* button-base.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _css = require("@atlaskit/css");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _useAutoFocus = require("@atlaskit/ds-lib/use-auto-focus");
var _useAutoFocusDefault = parcelHelpers.interopDefault(_useAutoFocus);
var _useId = require("@atlaskit/ds-lib/use-id");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var _splitButtonContext = require("../../containers/split-button/split-button-context");
var _blockEvents = require("./block-events");
var _blockEventsDefault = parcelHelpers.interopDefault(_blockEvents);
var _loadingOverlay = require("./loading-overlay");
var _loadingOverlayDefault = parcelHelpers.interopDefault(_loadingOverlay);
var _excluded = [
    "appearance",
    "autoFocus",
    "isDisabled",
    "isLoading",
    "isSelected",
    "isIconButton",
    "isCircle",
    "hasIconBefore",
    "hasIconAfter",
    "shouldFitContainer",
    "spacing",
    "ariaLabel",
    "ariaLabelledBy",
    "children",
    "interactionName",
    "onClick",
    "onMouseDown",
    "onMouseDownCapture",
    "onMouseUp",
    "onMouseUpCapture",
    "onKeyDown",
    "onKeyDownCapture",
    "onKeyUp",
    "onKeyUpCapture",
    "onTouchStart",
    "onTouchStartCapture",
    "onTouchEnd",
    "onTouchEndCapture",
    "onPointerDown",
    "onPointerDownCapture",
    "onPointerUp",
    "onPointerUpCapture",
    "onClickCapture",
    "testId",
    "analyticsContext",
    "componentName",
    "role",
    "onMouseOver",
    "onMouseOut",
    "onFocus",
    "onBlur",
    "onMouseMove",
    "type"
], _excluded2 = [
    "className",
    "css",
    "as",
    "style"
];
var LOADING_LABEL = ', Loading';
var styles = {
    base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
    linkDecorationUnset: "_4bfu1r31 _1hmsglyw _ajmmnqa1 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
    disabled: "_80om13gf _bfhk1fvb _syaz1lh4 _aetrglyw _irr31fvb _30l31lh4 _1di61fvb _9h8h1lh4",
    spacingCompact: "_1rjcv77o _gy1p1b66 _4t3i1k8s _y4tiutpp _bozgutpp _s7n4nkob",
    circle: "_2rko14q2",
    fullWidth: "_1bsb1osq",
    loading: "_80om15jw",
    iconButton: "_4t3iviql _1bsbviql _y4tize3t _bozgze3t",
    iconButtonCompact: "_4t3i1k8s _1bsb1k8s",
    buttonIconBefore: "_bozgu2gc",
    buttonIconAfter: "_y4tiu2gc",
    splitButton: "_g0pbb4wl",
    loadingOverlay: "_1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o _u7coze3t _152tze3t _rjxpze3t _1e02ze3t",
    navigationSplitButton: "_1bsb1tcg _bfhksm61 _y4ti12x7 _bozg12x7"
};
var defaultStyles = {
    root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _30l310s3 _9h8h10s3",
    rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _30l31gjq _9h8h1gjq",
    interactive: "_irr3yw9d _30l310s3 _1di6ih13 _9h8h10s3",
    interactiveRefreshed: "_irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles = {
    root: "_bfhkomb0 _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
    interactive: "_30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var warningStyles = {
    root: "_bfhk1ikc _syazal3n _1053al3n _f8pjal3n _30l3al3n _9h8hal3n",
    interactive: "_30l3al3n _irr31j43 _9h8hal3n _1di6h4op"
};
var dangerStyles = {
    root: "_bfhk1v7l _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
    interactive: "_30l315cr _irr31rwk _9h8h15cr _1di6yycf"
};
var discoveryStyles = {
    root: "_bfhk1vbi _syaz15cr _105315cr _f8pj15cr _30l315cr _9h8h15cr",
    interactive: "_30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles = {
    root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _30l310s3 _9h8h10s3",
    rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1gjq _30l31gjq _9h8h1gjq",
    interactive: "_irr34mfv _30l310s3 _1di619qy _9h8h10s3",
    interactiveRefreshed: "_irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles = {
    root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _30l31pke _9h8h1pke",
    rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
    insideSplitButton: "_1pbycs5v",
    interactive: "_irr3t71w _30l31pke _1di6yssv _9h8h1pke",
    warning: "_bfhkvdtc _syaz16q2 _30l31pke _irr3vdtc _9h8h1pke _1di6vdtc",
    danger: "_bfhkbeib _syaz1pke _30l31pke _irr3beib _9h8h1pke _1di6beib",
    discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
/**
 * __button base__
 *
 * - Implements auto focus when enabled.
 * - Appends the `onClick` event with UFO analytics tracking.
 *
 * @private
 */ var ButtonBase = /*#__PURE__*/ (0, _reactDefault.default).forwardRef(function(_ref, ref) {
    var propAppearance = _ref.appearance, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, _ref$isDisabled = _ref.isDisabled, propIsDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, _ref$isSelected = _ref.isSelected, propIsSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$isIconButton = _ref.isIconButton, isIconButton = _ref$isIconButton === void 0 ? false : _ref$isIconButton, _ref$isCircle = _ref.isCircle, isCircle = _ref$isCircle === void 0 ? false : _ref$isCircle, _ref$hasIconBefore = _ref.hasIconBefore, hasIconBefore = _ref$hasIconBefore === void 0 ? false : _ref$hasIconBefore, _ref$hasIconAfter = _ref.hasIconAfter, hasIconAfter = _ref$hasIconAfter === void 0 ? false : _ref$hasIconAfter, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$spacing = _ref.spacing, propSpacing = _ref$spacing === void 0 ? 'default' : _ref$spacing, ariaLabel = _ref.ariaLabel, ariaLabelledBy = _ref.ariaLabelledBy, children = _ref.children, interactionName = _ref.interactionName, onClick = _ref.onClick, onMouseDown = _ref.onMouseDown, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUp = _ref.onMouseUp, onMouseUpCapture = _ref.onMouseUpCapture, onKeyDown = _ref.onKeyDown, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUp = _ref.onKeyUp, onKeyUpCapture = _ref.onKeyUpCapture, onTouchStart = _ref.onTouchStart, onTouchStartCapture = _ref.onTouchStartCapture, onTouchEnd = _ref.onTouchEnd, onTouchEndCapture = _ref.onTouchEndCapture, onPointerDown = _ref.onPointerDown, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUp = _ref.onPointerUp, onPointerUpCapture = _ref.onPointerUpCapture, onClickCapture = _ref.onClickCapture, testId = _ref.testId, analyticsContext = _ref.analyticsContext, componentName = _ref.componentName, role = _ref.role, onMouseOver = _ref.onMouseOver, onMouseOut = _ref.onMouseOut, onFocus = _ref.onFocus, onBlur = _ref.onBlur, onMouseMove = _ref.onMouseMove, type = _ref.type, unsafeRest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var localRef = (0, _react.useRef)(null);
    var splitButtonContext = (0, _splitButtonContext.useSplitButtonContext)();
    var loadingLabelId = (0, _useId.useId)();
    var isSplitButton = Boolean(splitButtonContext);
    var isNavigationSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isNavigationSplitButton) || false;
    var isDefaultAppearanceSplitButton = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) === 'default';
    var appearance = isDefaultAppearanceSplitButton && (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? 'subtle' : propAppearance || (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.appearance) || 'default';
    var spacing = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.spacing) || propSpacing;
    var isDisabled = (splitButtonContext === null || splitButtonContext === void 0 ? void 0 : splitButtonContext.isDisabled) || propIsDisabled;
    var isInteractive = !isDisabled && !isLoading;
    // Also treat loading buttons as disabled
    var isEffectivelyDisabled = isDisabled || isLoading;
    var isSelected = propIsSelected && !isDisabled;
    (0, _useAutoFocusDefault.default)(localRef, autoFocus);
    // @ts-expect-error
    var _className = unsafeRest.className, _css1 = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = (0, _objectWithoutPropertiesDefault.default)(unsafeRest, _excluded2);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Pressable), (0, _extendsDefault.default)({}, saferRest, {
        componentName: componentName || 'button',
        analyticsContext: analyticsContext,
        role: role,
        ref: (0, _mergeRefsDefault.default)([
            localRef,
            ref
        ]),
        xcss: (0, _css.cx)(styles.base, appearance === 'default' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? defaultStyles.rootRefreshed : defaultStyles.root), appearance === 'default' && isInteractive && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? defaultStyles.interactiveRefreshed : defaultStyles.interactive), appearance === 'primary' && primaryStyles.root, appearance === 'primary' && isInteractive && primaryStyles.interactive, appearance === 'warning' && warningStyles.root, appearance === 'warning' && isInteractive && warningStyles.interactive, appearance === 'danger' && dangerStyles.root, appearance === 'danger' && isInteractive && dangerStyles.interactive, appearance === 'discovery' && discoveryStyles.root, appearance === 'discovery' && isInteractive && discoveryStyles.interactive, appearance === 'subtle' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? subtleStyles.rootRefreshed : subtleStyles.root), appearance === 'subtle' && isInteractive && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? subtleStyles.interactiveRefreshed : subtleStyles.interactive), styles.linkDecorationUnset, isSelected && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? selectedStyles.rootRefreshed : selectedStyles.root), isSelected && isSplitButton && selectedStyles.insideSplitButton, isSelected && isInteractive && selectedStyles.interactive, // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'danger' && selectedStyles.danger, // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'warning' && selectedStyles.warning, // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'discovery' && selectedStyles.discovery, isDisabled && styles.disabled, isCircle && !isSplitButton && styles.circle, spacing === 'compact' && styles.spacingCompact, hasIconBefore && styles.buttonIconBefore, shouldFitContainer && styles.fullWidth, hasIconAfter && styles.buttonIconAfter, isIconButton && styles.iconButton, isIconButton && spacing === 'compact' && styles.iconButtonCompact, isLoading && styles.loading, isSplitButton && styles.splitButton, isNavigationSplitButton && styles.navigationSplitButton),
        isDisabled: isEffectivelyDisabled,
        "aria-label": isLoading && ariaLabel && !ariaLabelledBy ? "".concat(ariaLabel, " ").concat(LOADING_LABEL) : ariaLabel,
        "aria-labelledby": isLoading && ariaLabelledBy ? "".concat(ariaLabelledBy, " ").concat(loadingLabelId) : ariaLabelledBy,
        onClick: onClick
    }, (0, _blockEventsDefault.default)(isEffectivelyDisabled, {
        onMouseDownCapture: onMouseDownCapture,
        onMouseUpCapture: onMouseUpCapture,
        onKeyDownCapture: onKeyDownCapture,
        onKeyUpCapture: onKeyUpCapture,
        onTouchStartCapture: onTouchStartCapture,
        onTouchEndCapture: onTouchEndCapture,
        onPointerDownCapture: onPointerDownCapture,
        onPointerUpCapture: onPointerUpCapture,
        onClickCapture: onClickCapture
    }), {
        testId: testId,
        onMouseOver: onMouseOver,
        onFocus: onFocus,
        onMouseMove: onMouseMove,
        onBlur: onBlur,
        type: type,
        interactionName: interactionName,
        onMouseDown: onMouseDown,
        onMouseUp: onMouseUp,
        onKeyDown: onKeyDown,
        onMouseOut: onMouseOut,
        onKeyUp: onKeyUp,
        onTouchStart: onTouchStart,
        onTouchEnd: onTouchEnd,
        onPointerDown: onPointerDown,
        onPointerUp: onPointerUp
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _splitButtonContext.SplitButtonContext).Provider, {
        value: undefined
    }, children, isLoading && /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            styles.loadingOverlay
        ])
    }, (0, _loadingOverlayDefault.default)({
        spacing: spacing,
        appearance: appearance,
        isDisabled: isDisabled,
        isSelected: isSelected,
        testId: testId
    })), isLoading && (ariaLabelledBy || !ariaLabel) && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), {
        id: loadingLabelId
    }, LOADING_LABEL)));
});
exports.default = ButtonBase;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@compiled/react/runtime":"56RuF","react":"jMk1U","@atlaskit/css":"4KsBe","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/ds-lib/use-auto-focus":"493DL","@atlaskit/ds-lib/use-id":"jrARK","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/primitives/compiled":"29Id4","@atlaskit/visually-hidden":"jnHN6","../../containers/split-button/split-button-context":"ieXPb","./block-events":"6xEoL","./loading-overlay":"1XsCP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"56RuF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"cVy3q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cVy3q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"2BLSA","./style-cache":"8uovn","./ax":"hVllU","./ac":"6JfKD","./css-custom-property":"e2ucg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2BLSA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"3ZylV","./is-server-environment":"grfib","./sheet":"4GPAN","./style-cache":"8uovn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3ZylV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"grfib":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4GPAN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
var _shorthand = require("./shorthand");
const styleBucketOrdering = [
    // shorthand properties
    's-0',
    's-1',
    's-2',
    's-3',
    's-4',
    's-5',
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everything else will make their way to the catch all style bucket.
 * We reduce the pseudo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    const firstBracket = sheet.indexOf('{');
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th characters could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) {
        // We send through a subset of the string instead of the full pseudo name.
        // For example `"focus-visible"` name would instead of `"us-visible"`.
        // Return a mapped pseudo else the default catch all bucket.
        const mapped = pseudosMap[sheet.slice(14, firstBracket)];
        if (mapped) return mapped;
    }
    const property = sheet.slice(firstBracket + 1, sheet.indexOf(':', firstBracket)).trim();
    const shorthandDepth = (0, _shorthand.getShorthandDepth)(property);
    if (typeof shorthandDepth === 'number') return `s-${shorthandDepth}`;
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"4fcwJ","./shorthand":"47dTR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4fcwJ":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"47dTR":[function(require,module,exports,__globalThis) {
// Copied from packages/utils/src/shorthand.ts so that we avoid
// inflating the bundle size of @compiled/react/runtime with the contents
// of @compiled/utils
//
// Keep this `shorthandBuckets` in sync with the `shorthandBuckets` defined in
// packages/utils/src/shorthand.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getShorthandDepth", ()=>getShorthandDepth);
const shorthandBuckets = {
    all: 0,
    animation: 1,
    'animation-range': 1,
    background: 1,
    border: 1,
    'border-color': 2,
    'border-style': 2,
    'border-width': 2,
    'border-block': 3,
    'border-inline': 3,
    'border-top': 4,
    'border-right': 4,
    'border-bottom': 4,
    'border-left': 4,
    'border-block-start': 5,
    'border-block-end': 5,
    'border-inline-start': 5,
    'border-inline-end': 5,
    'border-image': 1,
    'border-radius': 1,
    'column-rule': 1,
    columns: 1,
    'contain-intrinsic-size': 1,
    container: 1,
    flex: 1,
    'flex-flow': 1,
    font: 1,
    'font-synthesis': 1,
    'font-variant': 2,
    gap: 1,
    grid: 1,
    'grid-area': 1,
    'grid-column': 2,
    'grid-row': 2,
    'grid-template': 2,
    inset: 1,
    'inset-block': 2,
    'inset-inline': 2,
    'list-style': 1,
    margin: 1,
    'margin-block': 2,
    'margin-inline': 2,
    mask: 1,
    'mask-border': 1,
    offset: 1,
    outline: 1,
    overflow: 1,
    'overscroll-behavior': 1,
    padding: 1,
    'padding-block': 2,
    'padding-inline': 2,
    'place-content': 1,
    'place-items': 1,
    'place-self': 1,
    'position-try': 1,
    'scroll-margin': 1,
    'scroll-margin-block': 2,
    'scroll-margin-inline': 2,
    'scroll-padding': 1,
    'scroll-padding-block': 2,
    'scroll-padding-inline': 2,
    'scroll-timeline': 1,
    'text-decoration': 1,
    'text-emphasis': 1,
    'text-wrap': 1,
    transition: 1,
    'view-timeline': 1
};
const getShorthandDepth = (shorthand)=>{
    var _a;
    return (_a = shorthandBuckets[shorthand]) !== null && _a !== void 0 ? _a : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8uovn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
if (typeof document !== 'undefined') {
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}
const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"4fcwJ","./is-server-environment":"grfib","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hVllU":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6JfKD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */ parcelHelpers.export(exports, "ac", ()=>ac);
parcelHelpers.export(exports, "memoizedAc", ()=>memoizedAc);
/**
 * Provide an opportunity to clear the cache to prevent memory leak.
 */ parcelHelpers.export(exports, "clearCache", ()=>clearCache);
/**
 * Expose cache
 */ parcelHelpers.export(exports, "getCache", ()=>getCache);
var _isServerEnvironment = require("./is-server-environment");
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
/**
 * Memoize the result of ac so if it is called with the same args, it returns immediately.
 * Also, to prevent useless React rerenders
 */ const cache = new Map();
/**
 * `ac` returns an instance of AtomicGroups. The instance holds the knowledge of Atomic Group so we can chain `ac`.
 * e.g. <div className={ax([ax(['_aaaa_b']), '_aaaa_c'])} />
 */ class AtomicGroups {
    constructor(values){
        // An object stores the relation between Atomic group and actual class name
        // e.g. { "aaaa": "a" } `aaaa` is the Atomic group and `a` is the actual class name
        this.values = values;
    }
    toString() {
        let str = '';
        for (const [, value] of this.values)str += value + ' ';
        return str.slice(0, -1);
    }
}
function ac(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    const atomicGroups = new Map();
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        if (typeof cls === 'string') {
            const groups = cls.split(' ');
            for(let x = 0; x < groups.length; x++){
                const atomic = groups[x];
                const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
                const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
                const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH) : atomic;
                atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH + 1) : atomic);
            }
        } else // if cls is an instance of AtomicGroups, transfer its values to `atomicGroups`
        for (const [key, value] of cls.values)atomicGroups.set(key, value);
    }
    return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    // build the cacheKey based on the function argument
    // e.g. if the argument is ["_aaaabbbb", "_aaaa_a", "some-class-name"],
    // then the cacheKey is "_aaaabbbb _aaaa_a some-class-name"
    let cacheKey = '';
    for(let i = 0; i < classNames.length; i += 1){
        const current = classNames[i];
        // continue if current is undefined, false, or ""
        if (!current) continue;
        cacheKey += current + ' ';
    }
    cacheKey = cacheKey.slice(0, -1);
    if (cache.has(cacheKey)) return cache.get(cacheKey);
    const result = ac(classNames);
    cache.set(cacheKey, result);
    return result;
}
// Memoization is primarily used to prevent React from unncessary re-rendering.
// Use unmemoizedAc on server-side because We don't need to worry about re-rendering on server-side.
exports.default = memoizedAc;
function clearCache() {
    cache.clear();
}
function getCache() {
    return cache;
}

},{"./is-server-environment":"grfib","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e2ucg":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5mvl7":[function(require,module,exports,__globalThis) {
/**
 * Assigns the node to all the refs passed in the argument.
 *
 * @param refs: An array of refs (as function or ref object)
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergeRefs);
function mergeRefs(refs) {
    // TODO: could this be wrapped in `useCallback` so we get a stable function?
    return function(value) {
        refs.forEach(function(ref) {
            if (typeof ref === 'function') ref(value);
            else if (ref !== null) ref.current = value;
        });
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"493DL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useAutoFocus);
var _react = require("react");
function useAutoFocus(ref, autoFocus) {
    var initialMount = (0, _react.useRef)(true);
    (0, _react.useEffect)(function() {
        if (ref && initialMount.current && autoFocus && ref.current) ref.current.focus();
        initialMount.current = false;
    }, [
        autoFocus,
        ref
    ]);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ieXPb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SplitButtonContext", ()=>SplitButtonContext);
parcelHelpers.export(exports, "useSplitButtonContext", ()=>useSplitButtonContext);
var _react = require("react");
var SplitButtonContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
var useSplitButtonContext = function useSplitButtonContext() {
    var context = (0, _react.useContext)(SplitButtonContext);
    if (!context) return undefined;
    if (context.appearance === 'navigation') {
        var newContext = {
            spacing: 'default',
            appearance: 'subtle',
            isDisabled: false,
            isActiveOverSelected: false,
            isNavigationSplitButton: true,
            isHighlighted: context.isHighlighted
        };
        return newContext;
    }
    var splitButtonContext = {
        spacing: context.spacing,
        appearance: context.appearance,
        isDisabled: context.isDisabled,
        isActiveOverSelected: true,
        isNavigationSplitButton: false,
        isHighlighted: false
    };
    return splitButtonContext;
};

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6xEoL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>blockEvents);
function abort(event) {
    event.preventDefault();
    event.stopPropagation();
}
var tabKeyCode = 9;
function onKey(event) {
    // Allowing tab so that a user can move focus away
    if (event.keyCode === tabKeyCode) return;
    abort(event);
}
function blockEvents(shouldBlockEvents, events) {
    return shouldBlockEvents ? {
        onMouseDownCapture: abort,
        onMouseUpCapture: abort,
        onKeyDownCapture: onKey,
        onKeyUpCapture: onKey,
        onTouchStartCapture: abort,
        onTouchEndCapture: abort,
        onPointerDownCapture: abort,
        onPointerUpCapture: abort,
        onClickCapture: abort,
        // Just smashing the existing onClick for good measure
        onClick: abort
    } : events;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1XsCP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>renderLoadingOverlay);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _spinner = require("@atlaskit/spinner");
var _spinnerDefault = parcelHelpers.interopDefault(_spinner);
function getIconSpacing(spacing) {
    switch(spacing){
        case 'compact':
            return 'small';
        default:
            return 'medium';
    }
}
function getSpinnerAppearance(_ref) {
    var appearance = _ref.appearance, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected;
    if (isDisabled || isSelected) return 'inherit';
    if (appearance === 'primary' || appearance === 'danger' || appearance === 'discovery') return 'invert';
    return 'inherit';
}
function renderLoadingOverlay(_ref2) {
    var appearance = _ref2.appearance, spacing = _ref2.spacing, isDisabled = _ref2.isDisabled, isSelected = _ref2.isSelected, testId = _ref2.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _spinnerDefault.default), {
        size: getIconSpacing(spacing),
        appearance: getSpinnerAppearance({
            appearance: appearance,
            isDisabled: isDisabled,
            isSelected: isSelected
        }),
        testId: testId ? "".concat(testId, "--loading-spinner") : undefined
    });
}

},{"react":"jMk1U","@atlaskit/spinner":"hHHVB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hHHVB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _spinnerDefault.default));
var _spinner = require("./spinner");
var _spinnerDefault = parcelHelpers.interopDefault(_spinner);

},{"./spinner":"cQQ1A","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cQQ1A":[function(require,module,exports,__globalThis) {
/* spinner.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _interactionContext = require("@atlaskit/interaction-context");
var _interactionContextDefault = parcelHelpers.interopDefault(_interactionContext);
var _colors = require("@atlaskit/theme/colors");
var _constants = require("./constants");
/**
 * Returns the appropriate circle stroke color.
 */ function getStrokeColor(appearance) {
    return appearance === 'inherit' ? "var(--ds-icon-subtle, ".concat((0, _colors.N500), ")") : "var(--ds-icon-inverse, ".concat((0, _colors.N0), ")");
}
var rotate = null;
/**
 * There are three parts to the load in animation:
 * 1. Fade in
 * 2. Accelerated spin
 * 3. Stretch the spinner line
 */ var loadIn = null;
var styles = {
    rotateStyles: "_j7hqsf8s _5sag12kz _tip812c5 _1pgl2qsq _8hrz1h6o",
    loadInStyles: "_j7hq1eco _5sag9cwz _1pgl1ytf _1o51q7pw _tzy4idpf",
    wrapperStyles: "_1e0c116y _s7n4nkob",
    circleStyles: "_lswuglyw _7ljx1dhp _opj11kw7 _134c892t _1snbbs82 _jcxd7g3v _1tjm1onz"
};
/**
 * `useLayoutEffect` is being used in SSR safe form. On the server, this work doesn’t need to run.
 * `useEffect` is used in-place, because `useEffect` is not run on the server and it matches types
 * which makes things simpler than doing an `isServer` check or a `null` check.
 *
 * @see https://hello.atlassian.net/wiki/spaces/DST/pages/2081696628/DSTDACI-010+-+Interaction+Tracing+hooks+in+DS+components
 */ var useLayoutEffect = typeof window === 'undefined' ? (0, _react.useEffect) : (0, _react.useLayoutEffect);
/**
 * __Spinner__
 *
 * A spinner is an animated spinning icon that lets users know content is being loaded.
 *
 * - [Examples](https://atlassian.design/components/spinner/examples)
 * - [Code](https://atlassian.design/components/spinner/code)
 * - [Usage](https://atlassian.design/components/spinner/usage)
 */ var Spinner = /*#__PURE__*/ (0, _reactDefault.default).memo(/*#__PURE__*/ (0, _reactDefault.default).forwardRef(function Spinner(_ref, ref) {
    var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'inherit' : _ref$appearance, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 0 : _ref$delay, interactionName = _ref.interactionName, label = _ref.label, _ref$size = _ref.size, providedSize = _ref$size === void 0 ? 'medium' : _ref$size, testId = _ref.testId;
    var size = typeof providedSize === 'number' ? providedSize : (0, _constants.presetSizes)[providedSize];
    var animationDelay = "".concat(delay, "ms");
    var stroke = getStrokeColor(appearance);
    var context = (0, _react.useContext)((0, _interactionContextDefault.default));
    useLayoutEffect(function() {
        if (context != null) return context.hold(interactionName);
    }, [
        context,
        interactionName
    ]);
    /**
   * The Spinner animation uses a combination of two
   * css animations on two separate elements.
   */ return /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        "data-testid": testId ? "".concat(testId, "-wrapper") : 'spinner-wrapper',
        style: {
            animationDelay: animationDelay,
            width: size,
            height: size
        },
        className: (0, _runtime.ax)([
            styles.wrapperStyles,
            styles.rotateStyles
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("svg", {
        height: size,
        width: size,
        viewBox: "0 0 16 16",
        xmlns: "http://www.w3.org/2000/svg",
        "data-testid": testId,
        ref: ref,
        "aria-label": label || undefined,
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
        style: {
            animationDelay: animationDelay
        },
        role: label ? 'img' : 'none',
        className: (0, _runtime.ax)([
            styles.loadInStyles
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("circle", {
        cx: "8",
        cy: "8",
        r: "7",
        style: {
            stroke: stroke
        },
        className: (0, _runtime.ax)([
            styles.circleStyles
        ])
    })));
}));
exports.default = Spinner;

},{"@compiled/react/runtime":"3nfbG","react":"jMk1U","@atlaskit/interaction-context":"jP4AZ","@atlaskit/theme/colors":"iIuwU","./constants":"8t1d7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3nfbG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"3ilAl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3ilAl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"aO8AW","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aO8AW":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iIuwU":[function(require,module,exports,__globalThis) {
// Reds
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "R50", ()=>R50);
parcelHelpers.export(exports, "R75", ()=>R75);
parcelHelpers.export(exports, "R100", ()=>R100);
parcelHelpers.export(exports, "R200", ()=>R200);
parcelHelpers.export(exports, "R300", ()=>R300);
parcelHelpers.export(exports, "R400", ()=>R400);
parcelHelpers.export(exports, "R500", ()=>R500);
parcelHelpers.export(exports, "Y50", ()=>Y50);
parcelHelpers.export(exports, "Y75", ()=>Y75);
parcelHelpers.export(exports, "Y100", ()=>Y100);
parcelHelpers.export(exports, "Y200", ()=>Y200);
parcelHelpers.export(exports, "Y300", ()=>Y300);
parcelHelpers.export(exports, "Y400", ()=>Y400);
parcelHelpers.export(exports, "Y500", ()=>Y500);
parcelHelpers.export(exports, "G50", ()=>G50);
parcelHelpers.export(exports, "G75", ()=>G75);
parcelHelpers.export(exports, "G100", ()=>G100);
parcelHelpers.export(exports, "G200", ()=>G200);
parcelHelpers.export(exports, "G300", ()=>G300);
parcelHelpers.export(exports, "G400", ()=>G400);
parcelHelpers.export(exports, "G500", ()=>G500);
parcelHelpers.export(exports, "B50", ()=>B50);
parcelHelpers.export(exports, "B75", ()=>B75);
parcelHelpers.export(exports, "B100", ()=>B100);
parcelHelpers.export(exports, "B200", ()=>B200);
parcelHelpers.export(exports, "B300", ()=>B300);
parcelHelpers.export(exports, "B400", ()=>B400);
parcelHelpers.export(exports, "B500", ()=>B500);
parcelHelpers.export(exports, "B600", ()=>B600);
parcelHelpers.export(exports, "B700", ()=>B700);
parcelHelpers.export(exports, "P50", ()=>P50);
parcelHelpers.export(exports, "P75", ()=>P75);
parcelHelpers.export(exports, "P100", ()=>P100);
parcelHelpers.export(exports, "P200", ()=>P200);
parcelHelpers.export(exports, "P300", ()=>P300);
parcelHelpers.export(exports, "P400", ()=>P400);
parcelHelpers.export(exports, "P500", ()=>P500);
parcelHelpers.export(exports, "T50", ()=>T50);
parcelHelpers.export(exports, "T75", ()=>T75);
parcelHelpers.export(exports, "T100", ()=>T100);
parcelHelpers.export(exports, "T200", ()=>T200);
parcelHelpers.export(exports, "T300", ()=>T300);
parcelHelpers.export(exports, "T400", ()=>T400);
parcelHelpers.export(exports, "T500", ()=>T500);
parcelHelpers.export(exports, "N0", ()=>N0);
parcelHelpers.export(exports, "N10", ()=>N10);
parcelHelpers.export(exports, "N20", ()=>N20);
parcelHelpers.export(exports, "N30", ()=>N30);
parcelHelpers.export(exports, "N40", ()=>N40);
parcelHelpers.export(exports, "N50", ()=>N50);
parcelHelpers.export(exports, "N60", ()=>N60);
parcelHelpers.export(exports, "N70", ()=>N70);
parcelHelpers.export(exports, "N80", ()=>N80);
parcelHelpers.export(exports, "N90", ()=>N90);
parcelHelpers.export(exports, "N100", ()=>N100);
parcelHelpers.export(exports, "N200", ()=>N200);
parcelHelpers.export(exports, "N300", ()=>N300);
parcelHelpers.export(exports, "N400", ()=>N400);
parcelHelpers.export(exports, "N500", ()=>N500);
parcelHelpers.export(exports, "N600", ()=>N600);
parcelHelpers.export(exports, "N700", ()=>N700);
parcelHelpers.export(exports, "N800", ()=>N800);
parcelHelpers.export(exports, "N900", ()=>N900);
parcelHelpers.export(exports, "N10A", ()=>N10A);
parcelHelpers.export(exports, "N20A", ()=>N20A);
parcelHelpers.export(exports, "N30A", ()=>N30A);
parcelHelpers.export(exports, "N40A", ()=>N40A);
parcelHelpers.export(exports, "N50A", ()=>N50A);
parcelHelpers.export(exports, "N60A", ()=>N60A);
parcelHelpers.export(exports, "N70A", ()=>N70A);
parcelHelpers.export(exports, "N80A", ()=>N80A);
parcelHelpers.export(exports, "N90A", ()=>N90A);
parcelHelpers.export(exports, "N100A", ()=>N100A);
parcelHelpers.export(exports, "N200A", ()=>N200A);
parcelHelpers.export(exports, "N300A", ()=>N300A);
parcelHelpers.export(exports, "N400A", ()=>N400A);
parcelHelpers.export(exports, "N500A", ()=>N500A);
parcelHelpers.export(exports, "N600A", ()=>N600A);
parcelHelpers.export(exports, "N700A", ()=>N700A);
parcelHelpers.export(exports, "N800A", ()=>N800A);
parcelHelpers.export(exports, "DN900", ()=>DN900);
parcelHelpers.export(exports, "DN800", ()=>DN800);
parcelHelpers.export(exports, "DN700", ()=>DN700);
parcelHelpers.export(exports, "DN600", ()=>DN600);
parcelHelpers.export(exports, "DN500", ()=>DN500);
parcelHelpers.export(exports, "DN400", ()=>DN400);
parcelHelpers.export(exports, "DN300", ()=>DN300);
parcelHelpers.export(exports, "DN200", ()=>DN200);
parcelHelpers.export(exports, "DN100", ()=>DN100);
parcelHelpers.export(exports, "DN90", ()=>DN90);
parcelHelpers.export(exports, "DN80", ()=>DN80);
parcelHelpers.export(exports, "DN70", ()=>DN70);
parcelHelpers.export(exports, "DN60", ()=>DN60);
parcelHelpers.export(exports, "DN50", ()=>DN50);
parcelHelpers.export(exports, "DN40", ()=>DN40);
parcelHelpers.export(exports, "DN30", ()=>DN30);
parcelHelpers.export(exports, "DN20", ()=>DN20);
parcelHelpers.export(exports, "DN10", ()=>DN10);
parcelHelpers.export(exports, "DN0", ()=>DN0);
parcelHelpers.export(exports, "DN800A", ()=>DN800A);
parcelHelpers.export(exports, "DN700A", ()=>DN700A);
parcelHelpers.export(exports, "DN600A", ()=>DN600A);
parcelHelpers.export(exports, "DN500A", ()=>DN500A);
parcelHelpers.export(exports, "DN400A", ()=>DN400A);
parcelHelpers.export(exports, "DN300A", ()=>DN300A);
parcelHelpers.export(exports, "DN200A", ()=>DN200A);
parcelHelpers.export(exports, "DN100A", ()=>DN100A);
parcelHelpers.export(exports, "DN90A", ()=>DN90A);
parcelHelpers.export(exports, "DN80A", ()=>DN80A);
parcelHelpers.export(exports, "DN70A", ()=>DN70A);
parcelHelpers.export(exports, "DN60A", ()=>DN60A);
parcelHelpers.export(exports, "DN50A", ()=>DN50A);
parcelHelpers.export(exports, "DN40A", ()=>DN40A);
parcelHelpers.export(exports, "DN30A", ()=>DN30A);
parcelHelpers.export(exports, "DN20A", ()=>DN20A);
parcelHelpers.export(exports, "DN10A", ()=>DN10A);
parcelHelpers.export(exports, "T30", ()=>T30);
parcelHelpers.export(exports, "L50", ()=>L50);
parcelHelpers.export(exports, "L75", ()=>L75);
var R50 = '#FFEBE6';
var R75 = '#FFBDAD';
var R100 = '#FF8F73';
var R200 = '#FF7452';
var R300 = '#FF5630';
var R400 = '#DE350B';
var R500 = '#BF2600';
var Y50 = '#FFFAE6';
var Y75 = '#FFF0B3';
var Y100 = '#FFE380';
var Y200 = '#FFC400';
var Y300 = '#FFAB00';
var Y400 = '#FF991F';
var Y500 = '#FF8B00';
var G50 = '#E3FCEF';
var G75 = '#ABF5D1';
var G100 = '#79F2C0';
var G200 = '#57D9A3';
var G300 = '#36B37E';
var G400 = '#00875A';
var G500 = '#006644';
var B50 = '#DEEBFF';
var B75 = '#B3D4FF';
var B100 = '#4C9AFF';
var B200 = '#2684FF';
var B300 = '#0065FF';
var B400 = '#0052CC';
var B500 = '#0747A6';
var B600 = '#669DF1';
var B700 = '#8FB8F6';
var P50 = '#EAE6FF';
var P75 = '#C0B6F2';
var P100 = '#998DD9';
var P200 = '#8777D9';
var P300 = '#6554C0';
var P400 = '#5243AA';
var P500 = '#403294';
var T50 = '#E6FCFF';
var T75 = '#B3F5FF';
var T100 = '#79E2F2';
var T200 = '#00C7E6';
var T300 = '#00B8D9';
var T400 = '#00A3BF';
var T500 = '#008DA6';
var N0 = '#FFFFFF';
var N10 = '#FAFBFC';
var N20 = '#F4F5F7';
var N30 = '#EBECF0';
var N40 = '#DFE1E6';
var N50 = '#C1C7D0';
var N60 = '#B3BAC5';
var N70 = '#A5ADBA';
var N80 = '#97A0AF';
var N90 = '#8993A4';
var N100 = '#7A869A';
var N200 = '#6B778C';
var N300 = '#5E6C84';
var N400 = '#505F79';
var N500 = '#42526E';
var N600 = '#344563';
var N700 = '#253858';
var N800 = '#172B4D';
var N900 = '#091E42';
var N10A = 'rgba(9, 30, 66, 0.02)';
var N20A = 'rgba(9, 30, 66, 0.04)';
var N30A = 'rgba(9, 30, 66, 0.08)';
var N40A = 'rgba(9, 30, 66, 0.13)';
var N50A = 'rgba(9, 30, 66, 0.25)';
var N60A = 'rgba(9, 30, 66, 0.31)';
var N70A = 'rgba(9, 30, 66, 0.36)';
var N80A = 'rgba(9, 30, 66, 0.42)';
var N90A = 'rgba(9, 30, 66, 0.48)';
var N100A = 'rgba(9, 30, 66, 0.54)';
var N200A = 'rgba(9, 30, 66, 0.60)';
var N300A = 'rgba(9, 30, 66, 0.66)';
var N400A = 'rgba(9, 30, 66, 0.71)';
var N500A = 'rgba(9, 30, 66, 0.77)';
var N600A = 'rgba(9, 30, 66, 0.82)';
var N700A = 'rgba(9, 30, 66, 0.89)';
var N800A = 'rgba(9, 30, 66, 0.95)';
var DN900 = '#E6EDFA';
var DN800 = '#DCE5F5';
var DN700 = '#CED9EB';
var DN600 = '#B8C7E0';
var DN500 = '#ABBBD6';
var DN400 = '#9FB0CC';
var DN300 = '#8C9CB8';
var DN200 = '#7988A3';
var DN100 = '#67758F';
var DN90 = '#56637A';
var DN80 = '#455166';
var DN70 = '#3B475C';
var DN60 = '#313D52';
var DN50 = '#283447';
var DN40 = '#202B3D';
var DN30 = '#1B2638';
var DN20 = '#121A29';
var DN10 = '#0E1624';
var DN0 = '#0D1424';
var DN800A = 'rgba(13, 20, 36, 0.06)';
var DN700A = 'rgba(13, 20, 36, 0.14)';
var DN600A = 'rgba(13, 20, 36, 0.18)';
var DN500A = 'rgba(13, 20, 36, 0.29)';
var DN400A = 'rgba(13, 20, 36, 0.36)';
var DN300A = 'rgba(13, 20, 36, 0.40)';
var DN200A = 'rgba(13, 20, 36, 0.47)';
var DN100A = 'rgba(13, 20, 36, 0.53)';
var DN90A = 'rgba(13, 20, 36, 0.63)';
var DN80A = 'rgba(13, 20, 36, 0.73)';
var DN70A = 'rgba(13, 20, 36, 0.78)';
var DN60A = 'rgba(13, 20, 36, 0.81)';
var DN50A = 'rgba(13, 20, 36, 0.85)';
var DN40A = 'rgba(13, 20, 36, 0.89)';
var DN30A = 'rgba(13, 20, 36, 0.92)';
var DN20A = 'rgba(13, 20, 36, 0.95)';
var DN10A = 'rgba(13, 20, 36, 0.97)';
var T30 = '#292A2E';
var L50 = '#94C748';
var L75 = '#B3DF72';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8t1d7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "presetSizes", ()=>presetSizes);
var presetSizes = {
    xsmall: 8,
    small: 16,
    medium: 24,
    large: 48,
    xlarge: 96
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3w1Pm":[function(require,module,exports,__globalThis) {
/* content.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var styles = {
    text: "_1reo15vq _18m915vq _16jlkb7n _1o9zkb7n _1bto1l2s _o5721q9c",
    icon: "_1e0c1txw _16jlidpf _1o9zidpf _1wpz1h6o _1wybidpf _vwz4idpf _uiztglyw",
    beforeIcon: "_1he91b66 _w795v77o",
    afterIcon: "_1he9v77o _w7951b66",
    common: "_v564g17y",
    fade: "_tzy4idpf"
};
/**
 * __Content__
 *
 * Used for slots within a Button, including icons and text content.
 */ var Content = function Content(_ref) {
    var children = _ref.children, _ref$type = _ref.type, type = _ref$type === void 0 ? 'text' : _ref$type, isLoading = _ref.isLoading, position = _ref.position;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            styles.common,
            type === 'text' && styles.text,
            type === 'icon' && styles.icon,
            isLoading && styles.fade,
            position === 'before' && styles.beforeIcon,
            position === 'after' && styles.afterIcon
        ])
    }, children);
};
exports.default = Content;

},{"@compiled/react/runtime":"56RuF","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dHWAg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function isIconRenderProp(func) {
    return !func.displayName && // most function components and class components have a displayName, negate them
    !func.render && // forwardRef doesn't require a display name, however it does include a render function, negate them
    typeof func === 'function' // at the very least we need to be a function
    ;
}
/**
 * __Icon renderer__
 *
 * Used to support render props with icons.
 *
 */ var IconRenderer = function IconRenderer(_ref) {
    var Icon = _ref.icon;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, isIconRenderProp(Icon) ? Icon({
        label: '',
        color: 'currentColor'
    }) : /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, {
        label: "",
        color: 'currentColor'
    }));
};
exports.default = IconRenderer;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cmOVH":[function(require,module,exports,__globalThis) {
/* link.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _css = require("@atlaskit/css");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _useAutoFocus = require("@atlaskit/ds-lib/use-auto-focus");
var _useAutoFocusDefault = parcelHelpers.interopDefault(_useAutoFocus);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _content = require("../shared/content");
var _contentDefault = parcelHelpers.interopDefault(_content);
var _iconRenderer = require("../shared/icon-renderer");
var _iconRendererDefault = parcelHelpers.interopDefault(_iconRenderer);
var _excluded = [
    "analyticsContext",
    "appearance",
    "aria-label",
    "aria-labelledby",
    "autoFocus",
    "children",
    "href",
    "iconAfter",
    "iconBefore",
    "interactionName",
    "isDisabled",
    "isSelected",
    "onClick",
    "onClickCapture",
    "onKeyDownCapture",
    "onKeyUpCapture",
    "onMouseDownCapture",
    "onMouseUpCapture",
    "onPointerDownCapture",
    "onPointerUpCapture",
    "onTouchEndCapture",
    "onTouchStartCapture",
    "shouldFitContainer",
    "spacing",
    "testId"
], _excluded2 = [
    "className",
    "css",
    "as",
    "style"
];
var styles = {
    base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
    linkDecorationUnset: "_4bfu1snc _1hmsagmp _ajmmvv82 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
    disabled: "_80om13gf _bfhksyzs _syaz1lh4 _aetrglyw _irr3syzs _30l31lh4 _1di6syzs _9h8h1lh4",
    spacingCompact: "_1rjcv77o _gy1p1b66 _4t3i1k8s _y4tiutpp _bozgutpp _s7n4nkob",
    buttonIconBefore: "_bozgu2gc",
    buttonIconAfter: "_y4tiu2gc",
    fullWidth: "_1bsb1osq"
};
var defaultStyles = {
    root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _irr3yw9d _30l310s3 _1di6ip91 _9h8h10s3",
    rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles = {
    root: "_bfhkomb0 _syaz15cr _105315cr _f8pj15cr _30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var warningStyles = {
    root: "_bfhk1ikc _syazal3n _1053al3n _f8pjal3n _30l3al3n _irr31j43 _9h8hal3n _1di6h4op"
};
var dangerStyles = {
    root: "_bfhk1v7l _syaz15cr _105315cr _f8pj15cr _30l315cr _irr31rwk _9h8h15cr _1di6yycf"
};
var discoveryStyles = {
    root: "_bfhk1vbi _syaz15cr _105315cr _f8pj15cr _30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles = {
    root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _irr34mfv _30l310s3 _1di619qy _9h8h10s3",
    rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1mjl _irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles = {
    root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _irr3i1yw _30l31pke _1di619ru _9h8h1pke",
    rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
    warning: "_bfhkvdtc _syaz16q2 _30l31pke _irr3vdtc _9h8h1pke _1di6vdtc",
    danger: "_bfhkbeib _syaz1pke _30l31pke _irr3beib _9h8h1pke _1di6beib",
    discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
/**
 * __Link Button__
 *
 * Renders a link in the style of a button.
 *
 * - [Examples](https://atlassian.design/components/link-button/examples)
 * - [Code](https://atlassian.design/components/link-button/code)
 * - [Usage](https://atlassian.design/components/link-button/usage)
 */ var LinkButtonBase = function LinkButtonBase(_ref, ref) {
    var analyticsContext = _ref.analyticsContext, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance, ariaLabel = _ref['aria-label'], ariaLabelledBy = _ref['aria-labelledby'], _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, children = _ref.children, href = _ref.href, iconAfter = _ref.iconAfter, iconBefore = _ref.iconBefore, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shouldFitContainer = _ref.shouldFitContainer, spacing = _ref.spacing, testId = _ref.testId, unsafeRest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // @ts-expect-error
    var _className = unsafeRest.className, _css1 = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = (0, _objectWithoutPropertiesDefault.default)(unsafeRest, _excluded2);
    var hasIconAfter = Boolean(iconAfter);
    var hasIconBefore = Boolean(iconBefore);
    var localRef = (0, _react.useRef)(null);
    (0, _useAutoFocusDefault.default)(localRef, autoFocus);
    var combinedRef = (0, _mergeRefsDefault.default)([
        localRef,
        ref
    ]);
    return /*#__PURE__*/ _react.createElement((0, _compiled.Anchor), (0, _extendsDefault.default)({
        analyticsContext: analyticsContext,
        ref: combinedRef,
        href: isDisabled ? undefined : href,
        role: isDisabled ? 'link' : undefined,
        "aria-disabled": isDisabled === true ? true : undefined,
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledBy,
        onClick: onClick,
        onClickCapture: onClickCapture,
        onKeyDownCapture: onKeyDownCapture,
        onKeyUpCapture: onKeyUpCapture,
        onMouseDownCapture: onMouseDownCapture,
        onMouseUpCapture: onMouseUpCapture,
        onPointerDownCapture: onPointerDownCapture,
        onPointerUpCapture: onPointerUpCapture,
        onTouchEndCapture: onTouchEndCapture,
        onTouchStartCapture: onTouchStartCapture,
        testId: testId,
        componentName: "LinkButton",
        interactionName: interactionName
    }, saferRest, {
        xcss: (0, _css.cx)(styles.base, appearance === 'default' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? defaultStyles.rootRefreshed : defaultStyles.root), appearance === 'primary' && primaryStyles.root, appearance === 'warning' && warningStyles.root, appearance === 'danger' && dangerStyles.root, appearance === 'discovery' && discoveryStyles.root, appearance === 'subtle' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? subtleStyles.rootRefreshed : subtleStyles.root), styles.linkDecorationUnset, isSelected && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? selectedStyles.rootRefreshed : selectedStyles.root), // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'danger' && selectedStyles.danger, // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'warning' && selectedStyles.warning, // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'discovery' && selectedStyles.discovery, isDisabled && styles.disabled, spacing === 'compact' && styles.spacingCompact, hasIconBefore && styles.buttonIconBefore, hasIconAfter && styles.buttonIconAfter, shouldFitContainer && styles.fullWidth)
    }), iconBefore && /*#__PURE__*/ _react.createElement((0, _contentDefault.default), {
        type: "icon",
        position: "before",
        isLoading: false
    }, /*#__PURE__*/ _react.createElement((0, _iconRendererDefault.default), {
        icon: iconBefore
    })), children && /*#__PURE__*/ _react.createElement((0, _contentDefault.default), {
        isLoading: false
    }, children), iconAfter && /*#__PURE__*/ _react.createElement((0, _contentDefault.default), {
        type: "icon",
        position: "after",
        isLoading: false
    }, /*#__PURE__*/ _react.createElement((0, _iconRendererDefault.default), {
        icon: iconAfter
    })));
};
// Workarounds to support generic types with forwardRef
/**
 * __Link Button__
 *
 * Renders a link in the style of a button.
 *
 * - [Examples](https://atlassian.design/components/link-button/examples)
 * - [Code](https://atlassian.design/components/link-button/code)
 * - [Usage](https://atlassian.design/components/link-button/usage)
 */ var LinkButton = /*#__PURE__*/ (0, _react.forwardRef)(LinkButtonBase);
LinkButton.displayName = 'LinkButton';
exports.default = LinkButton;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"56RuF","@atlaskit/css":"4KsBe","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/ds-lib/use-auto-focus":"493DL","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/primitives/compiled":"29Id4","../shared/content":"3w1Pm","../shared/icon-renderer":"dHWAg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4mDm1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _tooltip = require("@atlaskit/tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var _buttonBase = require("../shared/button-base");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _content = require("../shared/content");
var _contentDefault = parcelHelpers.interopDefault(_content);
var _iconRenderer = require("../shared/icon-renderer");
var _iconRendererDefault = parcelHelpers.interopDefault(_iconRenderer);
var _excluded = [
    "aria-label",
    "aria-labelledby",
    "analyticsContext",
    "appearance",
    "autoFocus",
    "icon",
    "interactionName",
    "isDisabled",
    "isLoading",
    "isSelected",
    "isTooltipDisabled",
    "label",
    "onClick",
    "onClickCapture",
    "onKeyDownCapture",
    "onKeyUpCapture",
    "onMouseDownCapture",
    "onMouseUpCapture",
    "onPointerDownCapture",
    "onPointerUpCapture",
    "onTouchEndCapture",
    "onTouchStartCapture",
    "shape",
    "spacing",
    "testId",
    "tooltip",
    "type"
], _excluded2 = [
    "className",
    "css",
    "as",
    "style"
];
/**
 * __Icon Button__
 *
 * Renders an icon-only button lets people take a common and recognizable action where space is limited.
 *
 * - [Examples](https://atlassian.design/components/button/icon-button/examples)
 * - [Code](https://atlassian.design/components/button/icon-button/code)
 * - [Usage](https://atlassian.design/components/button/icon-button/usage)
 */ var IconButton = /*#__PURE__*/ (0, _reactDefault.default).memo(/*#__PURE__*/ (0, _reactDefault.default).forwardRef(function Button(_ref, ref) {
    var _tooltip$content;
    var preventedAriaLabel = _ref['aria-label'], ariaLabelledBy = _ref['aria-labelledby'], analyticsContext = _ref.analyticsContext, appearance = _ref.appearance, autoFocus = _ref.autoFocus, icon = _ref.icon, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, isSelected = _ref.isSelected, _ref$isTooltipDisable = _ref.isTooltipDisabled, isTooltipDisabled = _ref$isTooltipDisable === void 0 ? true : _ref$isTooltipDisable, label = _ref.label, _onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shape = _ref.shape, spacing = _ref.spacing, testId = _ref.testId, tooltip = _ref.tooltip, _ref$type = _ref.type, type = _ref$type === void 0 ? 'button' : _ref$type, unsafeRest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // @ts-expect-error
    var _className = unsafeRest.className, _css = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = (0, _objectWithoutPropertiesDefault.default)(unsafeRest, _excluded2);
    if (isTooltipDisabled) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _buttonBaseDefault.default), (0, _extendsDefault.default)({}, saferRest, {
        ref: ref,
        appearance: appearance,
        autoFocus: autoFocus,
        isDisabled: isDisabled,
        isLoading: isLoading,
        isSelected: isSelected,
        isIconButton: true,
        isCircle: shape === 'circle',
        hasIconBefore: !!icon,
        spacing: spacing,
        ariaLabelledBy: ariaLabelledBy,
        onClick: _onClick,
        onClickCapture: onClickCapture,
        onKeyDownCapture: onKeyDownCapture,
        onKeyUpCapture: onKeyUpCapture,
        onMouseDownCapture: onMouseDownCapture,
        onMouseUpCapture: onMouseUpCapture,
        onPointerDownCapture: onPointerDownCapture,
        onPointerUpCapture: onPointerUpCapture,
        onTouchStartCapture: onTouchStartCapture,
        onTouchEndCapture: onTouchEndCapture,
        testId: testId,
        componentName: "IconButton",
        analyticsContext: analyticsContext,
        type: type,
        interactionName: interactionName
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _contentDefault.default), {
        type: "icon",
        isLoading: isLoading
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconRendererDefault.default), {
        icon: icon
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), null, label)));
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tooltipDefault.default), {
        content: (_tooltip$content = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label,
        testId: tooltip === null || tooltip === void 0 ? void 0 : tooltip.testId,
        position: tooltip === null || tooltip === void 0 ? void 0 : tooltip.position,
        delay: tooltip === null || tooltip === void 0 ? void 0 : tooltip.delay,
        onShow: tooltip === null || tooltip === void 0 ? void 0 : tooltip.onShow,
        onHide: tooltip === null || tooltip === void 0 ? void 0 : tooltip.onHide,
        mousePosition: tooltip === null || tooltip === void 0 ? void 0 : tooltip.mousePosition,
        analyticsContext: tooltip === null || tooltip === void 0 ? void 0 : tooltip.analyticsContext,
        strategy: tooltip === null || tooltip === void 0 ? void 0 : tooltip.strategy,
        tag: tooltip === null || tooltip === void 0 ? void 0 : tooltip.tag,
        truncate: tooltip === null || tooltip === void 0 ? void 0 : tooltip.truncate,
        component: tooltip === null || tooltip === void 0 ? void 0 : tooltip.component,
        hideTooltipOnClick: tooltip === null || tooltip === void 0 ? void 0 : tooltip.hideTooltipOnClick,
        hideTooltipOnMouseDown: tooltip === null || tooltip === void 0 ? void 0 : tooltip.hideTooltipOnMouseDown,
        ignoreTooltipPointerEvents: tooltip === null || tooltip === void 0 ? void 0 : tooltip.ignoreTooltipPointerEvents
    }, function(triggerProps) {
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _buttonBaseDefault.default), (0, _extendsDefault.default)({}, saferRest, {
            appearance: appearance,
            autoFocus: autoFocus,
            isDisabled: isDisabled,
            isLoading: isLoading,
            isSelected: isSelected,
            isIconButton: true,
            isCircle: shape === 'circle',
            hasIconBefore: false,
            spacing: spacing,
            ariaLabelledBy: ariaLabelledBy,
            onClick: function onClick(e, analyticsEvent) {
                var _triggerProps$onClick;
                _onClick === null || _onClick === void 0 || _onClick(e, analyticsEvent);
                (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, e);
            },
            onMouseOver: function onMouseOver(e) {
                var _triggerProps$onMouse, _saferRest$onMouseOve;
                (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
                (_saferRest$onMouseOve = saferRest.onMouseOver) === null || _saferRest$onMouseOve === void 0 || _saferRest$onMouseOve.call(saferRest, e);
            },
            onMouseOut: function onMouseOut(e) {
                var _triggerProps$onMouse2, _saferRest$onMouseOut;
                (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
                (_saferRest$onMouseOut = saferRest.onMouseOut) === null || _saferRest$onMouseOut === void 0 || _saferRest$onMouseOut.call(saferRest, e);
            },
            onMouseMove: function onMouseMove(e) {
                var _triggerProps$onMouse3, _saferRest$onMouseMov;
                (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
                (_saferRest$onMouseMov = saferRest.onMouseMove) === null || _saferRest$onMouseMov === void 0 || _saferRest$onMouseMov.call(saferRest, e);
            },
            onMouseDown: function onMouseDown(e) {
                var _triggerProps$onMouse4, _saferRest$onMouseDow;
                (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
                (_saferRest$onMouseDow = saferRest.onMouseDown) === null || _saferRest$onMouseDow === void 0 || _saferRest$onMouseDow.call(saferRest, e);
            },
            onFocus: function onFocus(e) {
                var _triggerProps$onFocus, _saferRest$onFocus;
                (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
                (_saferRest$onFocus = saferRest.onFocus) === null || _saferRest$onFocus === void 0 || _saferRest$onFocus.call(saferRest, e);
            },
            onBlur: function onBlur(e) {
                var _triggerProps$onBlur, _saferRest$onBlur;
                (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
                (_saferRest$onBlur = saferRest.onBlur) === null || _saferRest$onBlur === void 0 || _saferRest$onBlur.call(saferRest, e);
            },
            ref: (0, _mergeRefsDefault.default)([
                ref,
                triggerProps === null || triggerProps === void 0 ? void 0 : triggerProps.ref
            ].filter(Boolean)),
            onMouseDownCapture: onMouseDownCapture,
            onMouseUpCapture: onMouseUpCapture,
            onKeyDownCapture: onKeyDownCapture,
            onKeyUpCapture: onKeyUpCapture,
            onTouchStartCapture: onTouchStartCapture,
            onTouchEndCapture: onTouchEndCapture,
            onPointerDownCapture: onPointerDownCapture,
            onPointerUpCapture: onPointerUpCapture,
            onClickCapture: onClickCapture,
            type: type,
            testId: testId,
            analyticsContext: analyticsContext,
            interactionName: interactionName,
            componentName: "IconButton"
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _contentDefault.default), {
            type: "icon",
            isLoading: isLoading
        }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconRendererDefault.default), {
            icon: icon
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), null, label)));
    });
}));
IconButton.displayName = 'IconButton';
exports.default = IconButton;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/tooltip":"hD9bD","@atlaskit/visually-hidden":"jnHN6","../shared/button-base":"1CzA0","../shared/content":"3w1Pm","../shared/icon-renderer":"dHWAg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hD9bD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _tooltipDefault.default));
parcelHelpers.export(exports, "TooltipPrimitive", ()=>(0, _tooltipPrimitiveDefault.default));
var _tooltip = require("./tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
var _tooltipPrimitive = require("./tooltip-primitive");
var _tooltipPrimitiveDefault = parcelHelpers.interopDefault(_tooltipPrimitive);

},{"./tooltip":"1FRxH","./tooltip-primitive":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1FRxH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _bindEventListener = require("bind-event-listener");
var _analyticsNext = require("@atlaskit/analytics-next");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useCloseOnEscapePress = require("@atlaskit/ds-lib/use-close-on-escape-press");
var _useCloseOnEscapePressDefault = parcelHelpers.interopDefault(_useCloseOnEscapePress);
var _useStableRef = require("@atlaskit/ds-lib/use-stable-ref");
var _useStableRefDefault = parcelHelpers.interopDefault(_useStableRef);
var _openLayerObserver = require("@atlaskit/layering/experimental/open-layer-observer");
var _motion = require("@atlaskit/motion");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _popper = require("@atlaskit/popper");
var _portal = require("@atlaskit/portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
var _constants = require("@atlaskit/theme/constants");
var _dragManager = require("./internal/drag-manager");
var _tooltipManager = require("./internal/tooltip-manager");
var _useUniqueId = require("./internal/use-unique-id");
var _useUniqueIdDefault = parcelHelpers.interopDefault(_useUniqueId);
var _tooltipContainer = require("./tooltip-container");
var _tooltipContainerDefault = parcelHelpers.interopDefault(_tooltipContainer);
var _utilities = require("./utilities");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var tooltipZIndex = (0, _constants.layers).tooltip();
var analyticsAttributes = {
    componentName: 'tooltip',
    packageName: "@atlaskit/tooltip",
    packageVersion: "20.3.1"
};
// Inverts motion direction
var invertedDirection = {
    top: 'bottom',
    bottom: 'top',
    left: 'right',
    right: 'left'
};
/**
 * Converts a Popper placement to it's general direction.
 *
 * @param placement - Popper Placement value, e.g. 'top-start'
 * @returns Popper Direction, e.g. 'top'
 */ var getDirectionFromPlacement = function getDirectionFromPlacement(placement) {
    return placement.split('-')[0];
};
/**
 * __Tooltip__
 *
 * A tooltip is a floating, non-actionable label used to explain a user interface element or feature.
 */ function Tooltip(_ref) {
    var children = _ref.children, _ref$position = _ref.position, position = _ref$position === void 0 ? 'bottom' : _ref$position, _ref$mousePosition = _ref.mousePosition, mousePosition = _ref$mousePosition === void 0 ? 'bottom' : _ref$mousePosition, content = _ref.content, _ref$truncate = _ref.truncate, truncate = _ref$truncate === void 0 ? false : _ref$truncate, _ref$component = _ref.component, Container = _ref$component === void 0 ? (0, _tooltipContainerDefault.default) : _ref$component, _ref$tag = _ref.tag, TargetContainer = _ref$tag === void 0 ? 'div' : _ref$tag, testId = _ref.testId, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 300 : _ref$delay, _ref$onShow = _ref.onShow, onShow = _ref$onShow === void 0 ? (0, _noopDefault.default) : _ref$onShow, _ref$onHide = _ref.onHide, onHide = _ref$onHide === void 0 ? (0, _noopDefault.default) : _ref$onHide, canAppear = _ref.canAppear, _ref$hideTooltipOnCli = _ref.hideTooltipOnClick, hideTooltipOnClick = _ref$hideTooltipOnCli === void 0 ? false : _ref$hideTooltipOnCli, _ref$hideTooltipOnMou = _ref.hideTooltipOnMouseDown, hideTooltipOnMouseDown = _ref$hideTooltipOnMou === void 0 ? false : _ref$hideTooltipOnMou, analyticsContext = _ref.analyticsContext, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy, _ref$ignoreTooltipPoi = _ref.ignoreTooltipPointerEvents, ignoreTooltipPointerEvents = _ref$ignoreTooltipPoi === void 0 ? false : _ref$ignoreTooltipPoi, _ref$isScreenReaderAn = _ref.isScreenReaderAnnouncementDisabled, isScreenReaderAnnouncementDisabled = _ref$isScreenReaderAn === void 0 ? false : _ref$isScreenReaderAn;
    var tooltipPosition = position === 'mouse' ? mousePosition : position;
    var onShowHandler = (0, _analyticsNext.usePlatformLeafSyntheticEventHandler)(_objectSpread({
        fn: onShow,
        action: 'displayed',
        analyticsData: analyticsContext
    }, analyticsAttributes));
    var onHideHandler = (0, _analyticsNext.usePlatformLeafSyntheticEventHandler)(_objectSpread({
        fn: onHide,
        action: 'hidden',
        analyticsData: analyticsContext
    }, analyticsAttributes));
    var apiRef = (0, _react.useRef)(null);
    var _useState = (0, _react.useState)('hide'), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), state = _useState2[0], setState = _useState2[1];
    var targetRef = (0, _react.useRef)(null);
    var containerRef = (0, _react.useRef)(null);
    // This function is deliberately _not_ memoized as it needs to re-run every render
    // to pick up any child ref changes. If you use render props you don't have this issue.
    var setImplicitRefFromChildren = function setImplicitRefFromChildren(node) {
        containerRef.current = node;
        targetRef.current = node ? node.firstElementChild : null;
    };
    // This is memoized and passed into the render props callback.
    var setDirectRef = (0, _react.useCallback)(function(node) {
        targetRef.current = node;
    }, []);
    // Putting a few things into refs so that we don't have to break memoization
    var stableState = (0, _useStableRefDefault.default)(state);
    // These props are placed in separate refs instead of a single object to reduce memory usage.
    // Placing them in the same object previously caused an increase in the number of JavaScript event listeners
    // before garbage collection.
    var onShowHandlerStable = (0, _useStableRefDefault.default)(onShowHandler);
    var onHideHandlerStable = (0, _useStableRefDefault.default)(onHideHandler);
    var delayStable = (0, _useStableRefDefault.default)(delay);
    var canAppearStable = (0, _useStableRefDefault.default)(canAppear);
    var hasCalledShowHandler = (0, _react.useRef)(false);
    var start = (0, _react.useCallback)(function(api) {
        // @ts-ignore
        apiRef.current = api;
        hasCalledShowHandler.current = false;
    }, []);
    var done = (0, _react.useCallback)(function() {
        if (!apiRef.current) return;
        // Only call onHideHandler if we have called onShowHandler
        if (hasCalledShowHandler.current) onHideHandlerStable.current();
        // @ts-ignore
        apiRef.current = null;
        // @ts-ignore
        hasCalledShowHandler.current = false;
        // just in case
        setState('hide');
    }, [
        onHideHandlerStable
    ]);
    var abort = (0, _react.useCallback)(function() {
        if (!apiRef.current) return;
        apiRef.current.abort();
        // Only call onHideHandler if we have called onShowHandler
        if (hasCalledShowHandler.current) onHideHandlerStable.current();
        // @ts-ignore
        apiRef.current = null;
    }, [
        onHideHandlerStable
    ]);
    (0, _react.useEffect)(function mount() {
        return function unmount() {
            if (apiRef.current) abort();
        };
    }, [
        abort
    ]);
    var isDraggingRef = (0, _react.useRef)(false);
    (0, _react.useEffect)(function() {
        return (0, _dragManager.register)({
            onRegister: function onRegister(_ref2) {
                var isDragging = _ref2.isDragging;
                isDraggingRef.current = isDragging;
            },
            onDragStart: function onDragStart() {
                var _apiRef$current;
                /**
         * Hiding any visible tooltips when a drag starts because otherwise it
         * looks janky (disappears and reappears), and is not required.
         */ (_apiRef$current = apiRef.current) === null || _apiRef$current === void 0 || _apiRef$current.requestHide({
                    isImmediate: true
                });
                isDraggingRef.current = true;
            },
            onDragEnd: function onDragEnd() {
                isDraggingRef.current = false;
            }
        });
    }, []);
    var tryShowTooltip = (0, _react.useCallback)(function(source) {
        var _canAppearStable$curr;
        /**
     * Prevent tooltips from being shown during a drag. This can occur with
     * the native drag and drop API, where some pointer events can fire
     * when they should not and lead to jank with tooltips.
     */ if (isDraggingRef.current) return;
        // Another tooltip is has been active but we still have the old `api`
        // around. We need to finish up the last usage.
        // Note: just being safe - this should not happen
        if (apiRef.current && !apiRef.current.isActive()) abort();
        // This tooltip is already active, we can exit
        if (apiRef.current && apiRef.current.isActive()) {
            apiRef.current.keep();
            return;
        }
        /**
     * Check if tooltip is allowed to show.
     *
     * Once a tooltip has started, or has scheduled to start
     * we won't be checking `canAppear` again.
     *
     * - We don't want tooltips to disappear once they are shown
     * - For consistency, we start after a single positive `canAppear`.
     *   Otherwise the amount of times we ask consumers would depend on
     *   how many times we get a "mousemove", which _could_ lead to situations
     *   where moving the mouse could result in a different outcome to if
     *   the mouse was not moved.
     */ if (canAppearStable.current && !((_canAppearStable$curr = canAppearStable.current) !== null && _canAppearStable$curr !== void 0 && _canAppearStable$curr.call(canAppearStable))) return;
        var entry = {
            source: source,
            delay: delayStable.current,
            show: function show(_ref3) {
                var isImmediate = _ref3.isImmediate;
                // Call the onShow handler if it hasn't been called yet
                if (!hasCalledShowHandler.current) {
                    hasCalledShowHandler.current = true;
                    onShowHandlerStable.current();
                }
                setState(isImmediate ? 'show-immediate' : 'fade-in');
            },
            hide: function hide(_ref4) {
                var isImmediate = _ref4.isImmediate;
                if (isImmediate) setState('hide');
                else setState('before-fade-out');
            },
            done: done
        };
        var api = (0, _tooltipManager.show)(entry);
        start(api);
    }, [
        canAppearStable,
        delayStable,
        done,
        start,
        abort,
        onShowHandlerStable
    ]);
    var hideTooltipOnEsc = (0, _react.useCallback)(function() {
        var _apiRef$current2;
        (_apiRef$current2 = apiRef.current) === null || _apiRef$current2 === void 0 || _apiRef$current2.requestHide({
            isImmediate: true
        });
    }, [
        apiRef
    ]);
    (0, _useCloseOnEscapePressDefault.default)({
        onClose: hideTooltipOnEsc,
        isDisabled: state === 'hide' || state === 'fade-out'
    });
    (0, _react.useEffect)(function() {
        if (state === 'hide') return 0, _noopDefault.default;
        if (state === 'before-fade-out') setState('fade-out');
        var unbind = (0, _bindEventListener.bind)(window, {
            type: 'scroll',
            listener: function listener() {
                if (apiRef.current) apiRef.current.requestHide({
                    isImmediate: true
                });
            },
            options: {
                capture: true,
                passive: true,
                once: true
            }
        });
        return unbind;
    }, [
        state
    ]);
    var onMouseDown = (0, _react.useCallback)(function() {
        if (hideTooltipOnMouseDown && apiRef.current) apiRef.current.requestHide({
            isImmediate: true
        });
    }, [
        hideTooltipOnMouseDown
    ]);
    var onClick = (0, _react.useCallback)(function() {
        if (hideTooltipOnClick && apiRef.current) apiRef.current.requestHide({
            isImmediate: true
        });
    }, [
        hideTooltipOnClick
    ]);
    // Ideally we would be using onMouseEnter here, but
    // because we are binding the event to the target parent
    // we need to listen for the mouseover of all sub elements
    // This means when moving along a tooltip we are quickly toggling
    // between api.requestHide and api.keep. This it not ideal
    var onMouseOver = (0, _react.useCallback)(function(event) {
        // Ignoring events from the container ref
        if (containerRef.current && event.target === containerRef.current) return;
        // Using prevent default as a signal that parent tooltips
        if (event.defaultPrevented) return;
        event.preventDefault();
        var source = position === 'mouse' ? {
            type: 'mouse',
            // TODO: ideally not recalculating this object each time
            mouse: (0, _utilities.getMousePosition)({
                left: event.clientX,
                top: event.clientY
            })
        } : {
            type: 'keyboard'
        };
        tryShowTooltip(source);
    }, [
        position,
        tryShowTooltip
    ]);
    // Ideally we would be using onMouseEnter here, but
    // because we are binding the event to the target parent
    // we need to listen for the mouseout of all sub elements
    // This means when moving along a tooltip we are quickly toggling
    // between api.requestHide and api.keep. This it not ideal
    var onMouseOut = (0, _react.useCallback)(function(event) {
        // Ignoring events from the container ref
        if (containerRef.current && event.target === containerRef.current) return;
        // Using prevent default as a signal that parent tooltips
        if (event.defaultPrevented) return;
        event.preventDefault();
        if (apiRef.current) apiRef.current.requestHide({
            isImmediate: false
        });
    }, []);
    var onMouseMove = position === 'mouse' ? function(event) {
        var _apiRef$current3;
        if ((_apiRef$current3 = apiRef.current) !== null && _apiRef$current3 !== void 0 && _apiRef$current3.isActive()) apiRef.current.mousePosition = (0, _utilities.getMousePosition)({
            left: event.clientX,
            top: event.clientY
        });
    } : undefined;
    var onMouseOverTooltip = (0, _react.useCallback)(function() {
        if (apiRef.current && apiRef.current.isActive()) {
            apiRef.current.keep();
            return;
        }
    }, []);
    var onFocus = (0, _react.useCallback)(function() {
        // Check if focus-visible
        // Prevents tooltips from showing when focus is not visible,
        // i.e., when focus is moved onto tooltip trigger inside a popup on open
        try {
            if (targetRef.current && !targetRef.current.matches(':focus-visible') && (0, _platformFeatureFlags.fg)('platform-tooltip-focus-visible')) return;
        } catch (_) {
        // Ignore errors from environments that don't support :focus-visible
        }
        // TODO: this does not play well with `hideTooltipOnMouseDown`
        // as "focus" will occur after the "mousedown".
        tryShowTooltip({
            type: 'keyboard'
        });
    }, [
        tryShowTooltip
    ]);
    var onBlur = (0, _react.useCallback)(function() {
        if (apiRef.current) apiRef.current.requestHide({
            isImmediate: false
        });
    }, []);
    var onAnimationFinished = (0, _react.useCallback)(function(transition) {
        // Using lastState here because motion is not picking up the latest value
        if (transition === 'exiting' && stableState.current === 'fade-out' && apiRef.current) // @ts-ignore: refs are writeable
        apiRef.current.finishHideAnimation();
    }, [
        stableState
    ]);
    // Doing a cast because typescript is struggling to narrow the type
    var CastTargetContainer = TargetContainer;
    var shouldRenderTooltipPopup = state !== 'hide' && Boolean(content);
    var shouldRenderHiddenContent = !isScreenReaderAnnouncementDisabled && shouldRenderTooltipPopup;
    var shouldRenderTooltipChildren = state !== 'hide' && state !== 'fade-out';
    var handleOpenLayerObserverCloseSignal = (0, _react.useCallback)(function() {
        var _apiRef$current4;
        (_apiRef$current4 = apiRef.current) === null || _apiRef$current4 === void 0 || _apiRef$current4.requestHide({
            isImmediate: true
        });
    }, []);
    (0, _openLayerObserver.useNotifyOpenLayerObserver)({
        // Layer is only visually open if both the tooltip popup (container) and children are rendered.
        isOpen: shouldRenderTooltipPopup && shouldRenderTooltipChildren,
        /**
     * We don't strictly need to provide an onClose callback at this time, as there is
     * already code that handles hiding the tooltip when a drag is started (and the only
     * usage right now is closing all layers when the user resizes the side nav).
     *
     * However, for future-proofing and semantic reasons, it makes sense to close the tooltip
     * whenever the open layer observer requests a close.
     */ onClose: handleOpenLayerObserverCloseSignal
    });
    var getReferenceElement = function getReferenceElement() {
        var _apiRef$current5;
        if (position === 'mouse' && (_apiRef$current5 = apiRef.current) !== null && _apiRef$current5 !== void 0 && _apiRef$current5.mousePosition) {
            var _apiRef$current6;
            return (_apiRef$current6 = apiRef.current) === null || _apiRef$current6 === void 0 ? void 0 : _apiRef$current6.mousePosition;
        }
        return targetRef.current || undefined;
    };
    var tooltipIdForHiddenContent = (0, _useUniqueIdDefault.default)('tooltip', shouldRenderHiddenContent);
    var tooltipTriggerProps = {
        onMouseOver: onMouseOver,
        onMouseOut: onMouseOut,
        onMouseMove: onMouseMove,
        onMouseDown: onMouseDown,
        onClick: onClick,
        onFocus: onFocus,
        onBlur: onBlur
    };
    // Don't set `data-testid` unless it's defined, as it's not in the interface.
    if (testId) // @ts-expect-error - Adding `data-testid` to the TriggerProps interface breaks Buttons.
    tooltipTriggerProps['data-testid'] = "".concat(testId, "--container");
    // This useEffect is purely for managing the aria attribute when using the
    // wrapped children approach.
    var isChildrenAFunction = typeof children === 'function';
    (0, _react.useEffect)(function() {
        if (isChildrenAFunction) return;
        // If `children` is _not_ a function, we are stepping outside of the public
        // API to add a `aria-describedby` attribute.
        var target = targetRef.current;
        if (!target || !tooltipIdForHiddenContent) return;
        target.setAttribute('aria-describedby', tooltipIdForHiddenContent);
        return function() {
            return target.removeAttribute('aria-describedby');
        };
    }, [
        isChildrenAFunction,
        tooltipIdForHiddenContent
    ]);
    var hiddenContent = shouldRenderHiddenContent ? /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        "data-testid": testId ? "".concat(testId, "-hidden") : undefined,
        hidden: true,
        id: tooltipIdForHiddenContent
    }, typeof content === 'function' ? content({}) : content) : null;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, typeof children === 'function' ? /*#__PURE__*/ // once we deprecate the wrapped approach, we can put the aria
    // attribute back into the tooltipTriggerProps and make it required
    // instead of optional in `types`
    (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, children(_objectSpread(_objectSpread({}, tooltipTriggerProps), {}, {
        'aria-describedby': tooltipIdForHiddenContent,
        ref: setDirectRef
    })), hiddenContent) : /*#__PURE__*/ (0, _reactDefault.default).createElement(CastTargetContainer, (0, _extendsDefault.default)({}, tooltipTriggerProps, {
        ref: setImplicitRefFromChildren,
        role: "presentation"
    }), children, hiddenContent), shouldRenderTooltipPopup ? /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _portalDefault.default), {
        zIndex: tooltipZIndex
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _popper.Popper), {
        placement: tooltipPosition,
        referenceElement: getReferenceElement(),
        strategy: strategy
    }, function(_ref5) {
        var ref = _ref5.ref, style = _ref5.style, update = _ref5.update, placement = _ref5.placement;
        // Invert the entrance and exit directions.
        // E.g. a tooltip's position is on the 'right', it should enter from and exit to the 'left'
        // This gives the effect the tooltip is appearing from the target
        var direction = position === 'mouse' ? undefined : invertedDirection[getDirectionFromPlacement(placement)];
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _motion.ExitingPersistence), {
            appear: true
        }, shouldRenderTooltipChildren && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _motion.FadeIn), {
            distance: "constant",
            entranceDirection: direction,
            exitDirection: direction,
            onFinish: onAnimationFinished,
            duration: state !== 'show-immediate' ? 'medium' : 'none'
        }, function(_ref6) {
            var className = _ref6.className;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(Container, {
                ref: ref,
                className: "Tooltip ".concat(className),
                style: _objectSpread(_objectSpread({}, style), ignoreTooltipPointerEvents && {
                    pointerEvents: 'none'
                }),
                truncate: truncate,
                placement: tooltipPosition,
                testId: getReferenceElement() ? testId : testId && "".concat(testId, "--unresolved"),
                onMouseOut: onMouseOut,
                onMouseOver: onMouseOverTooltip
            }, typeof content === 'function' ? content({
                update: update
            }) : content);
        }));
    })) : null);
}
Tooltip.displayName = 'Tooltip';
exports.default = Tooltip;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","bind-event-listener":"2wrYK","@atlaskit/analytics-next":"3iJRH","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/ds-lib/use-close-on-escape-press":"1xL3O","@atlaskit/ds-lib/use-stable-ref":"2ynXw","@atlaskit/layering/experimental/open-layer-observer":"8p85O","@atlaskit/motion":"dRq2U","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/popper":"b5fVh","@atlaskit/portal":"8ME4i","@atlaskit/theme/constants":"6kRPo","./internal/drag-manager":"3JRsI","./internal/tooltip-manager":"4OpaP","./internal/use-unique-id":"hrmPB","./tooltip-container":"aJOCI","./utilities":"dFnBC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2wrYK":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bindAll = exports.bind = void 0;
var bind_1 = require("8202606026c980e2");
Object.defineProperty(exports, "bind", {
    enumerable: true,
    get: function() {
        return bind_1.bind;
    }
});
var bind_all_1 = require("bbc7be63587375dc");
Object.defineProperty(exports, "bindAll", {
    enumerable: true,
    get: function() {
        return bind_all_1.bindAll;
    }
});

},{"8202606026c980e2":"9BmDQ","bbc7be63587375dc":"8XUQQ"}],"9BmDQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bind = void 0;
function bind(target, _a) {
    var type = _a.type, listener = _a.listener, options = _a.options;
    target.addEventListener(type, listener, options);
    return function unbind() {
        target.removeEventListener(type, listener, options);
    };
}
exports.bind = bind;

},{}],"8XUQQ":[function(require,module,exports,__globalThis) {
"use strict";
var __assign = this && this.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.bindAll = void 0;
var bind_1 = require("f7b0c436af93bbf9");
function toOptions(value) {
    if (typeof value === 'undefined') return undefined;
    if (typeof value === 'boolean') return {
        capture: value
    };
    return value;
}
function getBinding(original, sharedOptions) {
    if (sharedOptions == null) return original;
    var binding = __assign(__assign({}, original), {
        options: __assign(__assign({}, toOptions(sharedOptions)), toOptions(original.options))
    });
    return binding;
}
function bindAll(target, bindings, sharedOptions) {
    var unbinds = bindings.map(function(original) {
        var binding = getBinding(original, sharedOptions);
        return (0, bind_1.bind)(target, binding);
    });
    return function unbindAll() {
        unbinds.forEach(function(unbind) {
            return unbind();
        });
    };
}
exports.bindAll = bindAll;

},{"f7b0c436af93bbf9":"9BmDQ"}],"1xL3O":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useCloseOnEscapePress);
var _react = require("react");
var _bindEventListener = require("bind-event-listener");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _keycodes = require("../utils/keycodes");
function useCloseOnEscapePress(_ref) {
    var onClose = _ref.onClose, isDisabled = _ref.isDisabled;
    var escapePressed = (0, _react.useRef)(false);
    var onKeyDown = (0, _react.useCallback)(function(e) {
        if (isDisabled || escapePressed.current || e.key !== (0, _keycodes.ESCAPE)) // We're either already handling the key down event or it's not escape.
        // Bail early!
        return;
        escapePressed.current = true;
        onClose(e);
    }, [
        onClose,
        isDisabled
    ]);
    var onKeyUp = (0, _react.useCallback)(function() {
        escapePressed.current = false;
    }, []);
    (0, _react.useEffect)(function() {
        // Don't attach document event listeners if the hook is disabled
        if (isDisabled && (0, _platformFeatureFlags.fg)('platform_only_attach_escape_handler_on_view')) return;
        return (0, _bindEventListener.bindAll)(document, [
            {
                type: 'keydown',
                listener: onKeyDown
            },
            {
                type: 'keyup',
                listener: onKeyUp
            }
        ], {
            capture: false
        });
    }, [
        onKeyDown,
        onKeyUp,
        isDisabled
    ]);
}

},{"react":"jMk1U","bind-event-listener":"2wrYK","@atlaskit/platform-feature-flags":"3H8e6","../utils/keycodes":"kjR41","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kjR41":[function(require,module,exports,__globalThis) {
/**
 * Character key codes which can be used in keyboard events.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KEY_UP", ()=>KEY_UP);
parcelHelpers.export(exports, "KEY_DOWN", ()=>KEY_DOWN);
parcelHelpers.export(exports, "KEY_HOME", ()=>KEY_HOME);
parcelHelpers.export(exports, "KEY_END", ()=>KEY_END);
parcelHelpers.export(exports, "KEY_TAB", ()=>KEY_TAB);
parcelHelpers.export(exports, "KEY_ENTER", ()=>KEY_ENTER);
parcelHelpers.export(exports, "KEY_SPACE", ()=>KEY_SPACE);
parcelHelpers.export(exports, "ESCAPE", ()=>ESCAPE);
var KEY_UP = 'ArrowUp';
var KEY_DOWN = 'ArrowDown';
var KEY_HOME = 'Home';
var KEY_END = 'End';
var KEY_TAB = 'Tab';
var KEY_ENTER = 'Enter';
var KEY_SPACE = 'Space';
var ESCAPE = 'Escape';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2ynXw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useStableRef);
var _react = require("react");
function useStableRef(value) {
    var ref = (0, _react.useRef)(value);
    (0, _react.useEffect)(function() {
        ref.current = value;
    }, [
        value
    ]);
    return ref;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8p85O":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpenLayerObserver", ()=>(0, _openLayerObserver.OpenLayerObserver));
parcelHelpers.export(exports, "useNotifyOpenLayerObserver", ()=>(0, _useNotifyOpenLayerObserver.useNotifyOpenLayerObserver));
parcelHelpers.export(exports, "useOpenLayerObserver", ()=>(0, _useOpenLayerObserver.useOpenLayerObserver));
parcelHelpers.export(exports, "OpenLayerObserverNamespaceProvider", ()=>(0, _openLayerObserverNamespaceProvider.OpenLayerObserverNamespaceProvider));
var _openLayerObserver = require("../../components/open-layer-observer/open-layer-observer");
var _useNotifyOpenLayerObserver = require("../../components/open-layer-observer/use-notify-open-layer-observer");
var _useOpenLayerObserver = require("../../components/open-layer-observer/use-open-layer-observer");
var _openLayerObserverNamespaceProvider = require("../../components/open-layer-observer/open-layer-observer-namespace-provider");

},{"../../components/open-layer-observer/open-layer-observer":false,"../../components/open-layer-observer/use-notify-open-layer-observer":"lHFtr","../../components/open-layer-observer/use-open-layer-observer":false,"../../components/open-layer-observer/open-layer-observer-namespace-provider":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lHFtr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Hook that increments/decrements the open layer count when the component mounts/unmounts or becomes visible/hidden.
 * It is used to "notify" the layer observer(s) that a new layer has been added/opened.
 *
 * It takes an object with two arguments:
 * - `isOpen` - used to conditionally update the layer count based on the visibility of the layered component.
 * - `onClose` - callback used to close this layer when the OpenLayerObserver has called `closeLayers`.
 *
 * Example usage:
 * ```tsx
 * const [isOpen, setIsOpen] = useState(false); // State for controlling layer visibility
 * useNotifyLayerObserver({
 *   isOpen,
 *   onClose: () => setIsOpen(false) // Optional callback to close this layer
 * });
 * ```
 */ parcelHelpers.export(exports, "useNotifyOpenLayerObserver", ()=>useNotifyOpenLayerObserver);
var _react = require("react");
var _openLayerObserverContext = require("./open-layer-observer-context");
var _useOpenLayerObserverNamespace = require("./use-open-layer-observer-namespace");
function useNotifyOpenLayerObserver(_ref) {
    var isOpen = _ref.isOpen, onClose = _ref.onClose;
    var context = (0, _react.useContext)((0, _openLayerObserverContext.OpenLayerObserverContext));
    var namespace = (0, _useOpenLayerObserverNamespace.useOpenLayerObserverNamespace)();
    (0, _react.useEffect)(function() {
        /**
     * Registers the `onClose` callback with the OpenLayerObserver.
     */ if (context === null) return;
        if (!isOpen) /**
       * If the layer is not open, we are not registering the `onClose` callback.
       * This is important to prevent the `onClose` from being called for layers that
       * are not open.
       *
       * Some consumers mistakenly pass "toggle" functions to `onClose` callbacks for
       * layer components, as Popup, e.g. `onClose={() => setIsOpen(!isOpen)}`.
       */ return;
        return context.onClose(onClose, {
            namespace: namespace
        });
    }, [
        context,
        isOpen,
        namespace,
        onClose
    ]);
}

},{"react":"jMk1U","./open-layer-observer-context":"7uKvK","./use-open-layer-observer-namespace":"2vduo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7uKvK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpenLayerObserverContext", ()=>OpenLayerObserverContext);
var _react = require("react");
var OpenLayerObserverContext = /*#__PURE__*/ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2vduo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * A hook for use within an `OpenLayerObserver` component. It provides access to the namespace of the
 * `OpenLayerObserver`.
 *
 * This is useful for determining the number of layers open within a section of the page, e.g. the SideNav.
 */ parcelHelpers.export(exports, "useOpenLayerObserverNamespace", ()=>useOpenLayerObserverNamespace);
var _react = require("react");
var _openLayerObserverNamespaceContext = require("./open-layer-observer-namespace-context");
function useOpenLayerObserverNamespace() {
    var namespace = (0, _react.useContext)((0, _openLayerObserverNamespaceContext.OpenLayerObserverNamespaceContext));
    return namespace;
}

},{"react":"jMk1U","./open-layer-observer-namespace-context":"b67jD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b67jD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpenLayerObserverNamespaceContext", ()=>OpenLayerObserverNamespaceContext);
var _react = require("react");
var OpenLayerObserverNamespaceContext = /*#__PURE__*/ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dRq2U":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "durations", ()=>(0, _durations.durations));
parcelHelpers.export(exports, "exitingDurations", ()=>(0, _durations.exitingDurations));
parcelHelpers.export(exports, "durationStep", ()=>(0, _durations.durationStep));
parcelHelpers.export(exports, "easeIn", ()=>(0, _curves.easeIn));
parcelHelpers.export(exports, "easeInOut", ()=>(0, _curves.easeInOut));
parcelHelpers.export(exports, "easeOut", ()=>(0, _curves.easeOut));
parcelHelpers.export(exports, "linear", ()=>(0, _curves.linear));
parcelHelpers.export(exports, "isReducedMotion", ()=>(0, _accessibility.isReducedMotion));
parcelHelpers.export(exports, "useIsReducedMotion", ()=>(0, _accessibility.useIsReducedMotion));
parcelHelpers.export(exports, "reduceMotionAsPerUserPreference", ()=>(0, _accessibility.reduceMotionAsPerUserPreference));
parcelHelpers.export(exports, "prefersReducedMotion", ()=>(0, _accessibility.prefersReducedMotion));
parcelHelpers.export(exports, "FadeIn", ()=>(0, _fadeInDefault.default));
parcelHelpers.export(exports, "StaggeredEntrance", ()=>(0, _staggeredEntranceDefault.default));
parcelHelpers.export(exports, "useResizingHeight", ()=>(0, _height.useResizingHeight));
parcelHelpers.export(exports, "ResizingHeight", ()=>(0, _height.ResizingHeight));
parcelHelpers.export(exports, "ExitingPersistence", ()=>(0, _exitingPersistenceDefault.default));
parcelHelpers.export(exports, "useExitingPersistence", ()=>(0, _exitingPersistence.useExitingPersistence));
parcelHelpers.export(exports, "ZoomIn", ()=>(0, _zoomInDefault.default));
parcelHelpers.export(exports, "SlideIn", ()=>(0, _slideInDefault.default));
parcelHelpers.export(exports, "ShrinkOut", ()=>(0, _shrinkOutDefault.default));
var _durations = require("./utils/durations");
var _curves = require("./utils/curves");
var _accessibility = require("./utils/accessibility");
var _fadeIn = require("./entering/fade-in");
var _fadeInDefault = parcelHelpers.interopDefault(_fadeIn);
var _staggeredEntrance = require("./entering/staggered-entrance");
var _staggeredEntranceDefault = parcelHelpers.interopDefault(_staggeredEntrance);
var _height = require("./resizing/height");
var _exitingPersistence = require("./entering/exiting-persistence");
var _exitingPersistenceDefault = parcelHelpers.interopDefault(_exitingPersistence);
var _zoomIn = require("./entering/zoom-in");
var _zoomInDefault = parcelHelpers.interopDefault(_zoomIn);
var _slideIn = require("./entering/slide-in");
var _slideInDefault = parcelHelpers.interopDefault(_slideIn);
var _shrinkOut = require("./entering/shrink-out");
var _shrinkOutDefault = parcelHelpers.interopDefault(_shrinkOut);

},{"./utils/durations":false,"./utils/curves":false,"./utils/accessibility":false,"./entering/fade-in":"01dXD","./entering/staggered-entrance":false,"./resizing/height":false,"./entering/exiting-persistence":"3mJ6Z","./entering/zoom-in":false,"./entering/slide-in":false,"./entering/shrink-out":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1zZbT":[function(require,module,exports,__globalThis) {
/**
 * Think of this as the motion equivalent of the @atlaskit/theme `grid()`.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "durationStep", ()=>durationStep);
parcelHelpers.export(exports, "durations", ()=>durations);
parcelHelpers.export(exports, "exitingDurations", ()=>exitingDurations);
var durationStep = 25;
var durations = {
    none: 0,
    small: 100,
    medium: 350,
    large: 700
};
/**
 * Used to multiply the initial duration for exiting motions.
 */ var EXITING_MOTION_MULTIPLIER = 0.5;
var exitingDurations = {
    none: durations.none,
    small: durations.small * EXITING_MOTION_MULTIPLIER,
    medium: durations.medium * EXITING_MOTION_MULTIPLIER,
    large: durations.large * EXITING_MOTION_MULTIPLIER
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i4R7D":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "easeInOut", ()=>easeInOut);
parcelHelpers.export(exports, "easeOut", ()=>easeOut);
parcelHelpers.export(exports, "easeIn", ()=>easeIn);
parcelHelpers.export(exports, "linear", ()=>linear);
var easeInOut = 'cubic-bezier(0.15,1,0.3,1)';
var easeOut = 'cubic-bezier(0.2,0,0,1)';
var easeIn = 'cubic-bezier(0.8,0,0,0.8)';
var linear = 'cubic-bezier(0,0,1,1)';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8rpwc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isReducedMotion", ()=>isReducedMotion);
parcelHelpers.export(exports, "useIsReducedMotion", ()=>useIsReducedMotion);
parcelHelpers.export(exports, "reduceMotionAsPerUserPreference", ()=>reduceMotionAsPerUserPreference);
parcelHelpers.export(exports, "prefersReducedMotion", ()=>prefersReducedMotion);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _bindEventListener = require("bind-event-listener");
var isMatchMediaAvailable = function isMatchMediaAvailable() {
    return typeof window !== 'undefined' && 'matchMedia' in window;
};
var isReducedMotion = function isReducedMotion() {
    if (!isMatchMediaAvailable()) return false;
    var _window$matchMedia = window.matchMedia('(prefers-reduced-motion: reduce)'), matches = _window$matchMedia.matches;
    return matches;
};
var useIsReducedMotion = function useIsReducedMotion() {
    var _useState = (0, _react.useState)(isReducedMotion), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), prefersReducedMotion = _useState2[0], setPrefersReducedMotion = _useState2[1];
    (0, _react.useEffect)(function() {
        if (!isMatchMediaAvailable()) return;
        var mediaQueryList = window.matchMedia('(prefers-reduced-motion: reduce)');
        var onChange = function onChange(event) {
            return setPrefersReducedMotion(event.matches);
        };
        return (0, _bindEventListener.bind)(mediaQueryList, {
            type: 'change',
            listener: onChange
        });
    }, []);
    return prefersReducedMotion;
};
var reduceMotionAsPerUserPreference = {
    '@media (prefers-reduced-motion: reduce)': {
        animation: 'none',
        transition: 'none'
    }
};
var prefersReducedMotion = function prefersReducedMotion() {
    return reduceMotionAsPerUserPreference;
};

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","bind-event-listener":"2wrYK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"01dXD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _keyframesMotion = require("./keyframes-motion");
var _keyframesMotionDefault = parcelHelpers.interopDefault(_keyframesMotion);
var invertedDirection = {
    top: 'bottom',
    bottom: 'top',
    left: 'right',
    right: 'left'
};
/**
 * Props for controlling the behavior of the FadeIn animation
 */ /**
 * __FadeIn__
 *
 * Useful for fading in one or more elements.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/motion/docs/entering-motions)
 */ var FadeIn = function FadeIn(_ref) {
    var children = _ref.children, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 'large' : _ref$duration, entranceDirection = _ref.entranceDirection, exitDirection = _ref.exitDirection, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? 'proportional' : _ref$distance, onFinish = _ref.onFinish, isPaused = _ref.isPaused;
    var invertedEntranceDirection = entranceDirection !== undefined ? invertedDirection[entranceDirection] : undefined;
    var isExitDirect = Boolean(exitDirection || invertedEntranceDirection) ? "fade-out-from-".concat(exitDirection || invertedEntranceDirection).concat(distance === 'proportional' ? '' : '-constant') : 'fade-out';
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _keyframesMotionDefault.default), {
        duration: duration,
        enteringAnimation: entranceDirection ? "fade-in-from-".concat(entranceDirection).concat(distance === 'proportional' ? '' : '-constant') : 'fade-in',
        exitingAnimation: isExitDirect,
        animationTimingFunction: "ease-in-out",
        onFinish: onFinish,
        isPaused: isPaused
    }, children);
};
exports.default = FadeIn;

},{"react":"jMk1U","./keyframes-motion":"6v2f2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6v2f2":[function(require,module,exports,__globalThis) {
/* keyframes-motion.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _runtime = require("@compiled/react/runtime");
var _accessibility = require("../utils/accessibility");
var _durations = require("../utils/durations");
var _timerHooks = require("../utils/timer-hooks");
var _exitingPersistence = require("./exiting-persistence");
var _staggeredEntrance = require("./staggered-entrance");
var zoomIn = null;
var zoomOut = null;
var fadeIn = null;
var fadeOut = null;
var fadeInFromTop = null;
var fadeOutFromTop = null;
var fadeInFromLeft = null;
var fadeOutFromLeft = null;
var fadeInFromBottom = null;
var fadeOutFromBottom = null;
var fadeInFromRight = null;
var fadeOutFromRight = null;
var fadeInFromTopConstant = null;
var fadeOutFromTopConstant = null;
var fadeInFromLeftConstant = null;
var fadeOutFromLeftConstant = null;
var fadeInFromBottomConstant = null;
var fadeOutFromBottomConstant = null;
var fadeInFromRightConstant = null;
var fadeOutFromRightConstant = null;
var slideInFromTop = null;
var slideOutFromTop = null;
var slideInFromRight = null;
var slideOutFromRight = null;
var slideInFromBottom = null;
var slideOutFromBottom = null;
var slideInFromLeft = null;
var slideOutFromLeft = null;
/**
 * These are props that motions should use as their external props for consumers.
 * See [FadeIn](packages/helpers/motion/src/entering/fade-in.tsx) for an example usage.
 */ /**
 * This is the base INTERNAL component used for all other entering motions.
 * This does not need Javascript to execute on the client so it will run immediately
 * for any SSR rendered React apps before the JS has executed.
 */ var EnteringMotion = function EnteringMotion(_ref) {
    var children = _ref.children, animationTimingFunction = _ref.animationTimingFunction, _ref$animationTimingF = _ref.animationTimingFunctionExiting, animationTimingFunctionExiting = _ref$animationTimingF === void 0 ? animationTimingFunction : _ref$animationTimingF, enteringAnimation = _ref.enteringAnimation, _ref$exitingAnimation = _ref.exitingAnimation, exitingAnimation = _ref$exitingAnimation === void 0 ? enteringAnimation : _ref$exitingAnimation, isPaused = _ref.isPaused, onFinishMotion = _ref.onFinish, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 'large' : _ref$duration;
    var staggered = (0, _staggeredEntrance.useStaggeredEntrance)();
    var _useExitingPersistenc = (0, _exitingPersistence.useExitingPersistence)(), isExiting = _useExitingPersistenc.isExiting, onExitFinished = _useExitingPersistenc.onFinish, appear = _useExitingPersistenc.appear;
    var setTimeout = (0, _timerHooks.useSetTimeout)();
    var paused = isPaused || !staggered.isReady;
    var delay = isExiting ? 0 : staggered.delay;
    var state = isExiting ? 'exiting' : 'entering';
    var _useState = (0, _react.useState)(appear), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), hasAnimationStyles = _useState2[0], setHasAnimationStyles = _useState2[1];
    (0, _react.useEffect)(function() {
        // Tracking this to prevent changing state on an unmounted component
        var isCancelled = false;
        if (paused) return;
        // On initial mount if elements aren't set to animate on appear, we return early and callback
        if (!appear) {
            onFinishMotion && onFinishMotion(state);
            return;
        }
        /**
     * Updates relevant state.
     * Called when the animation is finished, or immediately with reduced motion.
     */ var onAnimationEnd = function onAnimationEnd() {
            if (state === 'exiting') // Updates the `ExitingPersistence` to remove this child
            onExitFinished === null || onExitFinished === void 0 || onExitFinished();
            if (!isCancelled) setHasAnimationStyles(false);
            onFinishMotion === null || onFinishMotion === void 0 || onFinishMotion(state);
        };
        if ((0, _accessibility.isReducedMotion)()) {
            // If there is reduced motion there is no exit animation, so call this immediately
            onAnimationEnd();
            return;
        }
        // Elements may need animation styles back after initial mount (they could animate out)
        setHasAnimationStyles(true);
        // Queue `onAnimationEnd` for after the animation has finished
        setTimeout(onAnimationEnd, isExiting ? (0, _durations.exitingDurations)[duration] : (0, _durations.durations)[duration] + delay);
        return function() {
            isCancelled = true;
        };
    // We ignore this for onFinishMotion as consumers could potentially inline the function
    // which would then trigger this effect every re-render.
    // We want to make it easier for consumers so we go down this path unfortunately.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        onExitFinished,
        state,
        isExiting,
        duration,
        delay,
        paused,
        setTimeout
    ]);
    return children({
        ref: staggered.ref,
        // @ts-expect-error: `ax` is not typed correctly
        className: hasAnimationStyles ? (0, _runtime.ax)([
            (0, _runtime.ax)([
                "_1o51eoah _1y0co91m _1bumglyw _sedtglyw"
            ]),
            paused && (0, _runtime.ax)([
                "_1y0ctrqk"
            ]),
            duration === 'small' && (0, _runtime.ax)([
                "_5sag1yx9"
            ]),
            duration === 'medium' && (0, _runtime.ax)([
                "_5sag1ttt"
            ]),
            duration === 'large' && (0, _runtime.ax)([
                "_5sagpwmj"
            ]),
            isExiting && duration === 'small' && (0, _runtime.ax)([
                "_5sag14ed"
            ]),
            isExiting && duration === 'medium' && (0, _runtime.ax)([
                "_5sagluct"
            ]),
            isExiting && duration === 'large' && (0, _runtime.ax)([
                "_5sag1ttt"
            ]),
            isExiting && (0, _runtime.ax)([
                "_ju255cps _1o51q7pw"
            ]),
            !isExiting && animationTimingFunction === 'linear' && (0, _runtime.ax)([
                "_1pglp3kn"
            ]),
            !isExiting && animationTimingFunction === 'ease-out' && (0, _runtime.ax)([
                "_1pgldkwg"
            ]),
            !isExiting && animationTimingFunction === 'ease-in' && (0, _runtime.ax)([
                "_1pgl1nzg"
            ]),
            !isExiting && animationTimingFunction === 'ease-in-out' && (0, _runtime.ax)([
                "_1pgl1fu8"
            ]),
            isExiting && animationTimingFunction === 'linear' && (0, _runtime.ax)([
                "_1pglp3kn"
            ]),
            isExiting && animationTimingFunctionExiting === 'ease-out' && (0, _runtime.ax)([
                "_1pgldkwg"
            ]),
            isExiting && animationTimingFunctionExiting === 'ease-in' && (0, _runtime.ax)([
                "_1pgl1nzg"
            ]),
            isExiting && animationTimingFunctionExiting === 'ease-in-out' && (0, _runtime.ax)([
                "_1pgl1fu8"
            ]),
            (!isExiting && enteringAnimation === 'fade-in' || isExiting && exitingAnimation === 'fade-in') && (0, _runtime.ax)([
                "_j7hq1cgr"
            ]),
            (!isExiting && enteringAnimation === 'fade-out' || isExiting && exitingAnimation === 'fade-out') && (0, _runtime.ax)([
                "_j7hq1lln"
            ]),
            (!isExiting && enteringAnimation === 'zoom-in' || isExiting && exitingAnimation === 'zoom-in') && (0, _runtime.ax)([
                "_j7hqe8p0"
            ]),
            (!isExiting && enteringAnimation === 'zoom-out' || isExiting && exitingAnimation === 'zoom-out') && (0, _runtime.ax)([
                "_j7hqy6ql"
            ]),
            (!isExiting && enteringAnimation === 'slide-in-from-top' || isExiting && exitingAnimation === 'slide-in-from-top') && (0, _runtime.ax)([
                "_j7hqqshu"
            ]),
            (!isExiting && enteringAnimation === 'slide-out-from-top' || isExiting && exitingAnimation === 'slide-out-from-top') && (0, _runtime.ax)([
                "_j7hq7ri4"
            ]),
            (!isExiting && enteringAnimation === 'slide-in-from-right' || isExiting && exitingAnimation === 'slide-in-from-right') && (0, _runtime.ax)([
                "_j7hqdfjr"
            ]),
            (!isExiting && enteringAnimation === 'slide-out-from-right' || isExiting && exitingAnimation === 'slide-out-from-right') && (0, _runtime.ax)([
                "_j7hqonfj"
            ]),
            (!isExiting && enteringAnimation === 'slide-in-from-bottom' || isExiting && exitingAnimation === 'slide-in-from-bottom') && (0, _runtime.ax)([
                "_j7hq1liq"
            ]),
            (!isExiting && enteringAnimation === 'slide-out-from-bottom' || isExiting && exitingAnimation === 'slide-out-from-bottom') && (0, _runtime.ax)([
                "_j7hqhnf1"
            ]),
            (!isExiting && enteringAnimation === 'slide-in-from-left' || isExiting && exitingAnimation === 'slide-in-from-left') && (0, _runtime.ax)([
                "_j7hq1bh1"
            ]),
            (!isExiting && enteringAnimation === 'slide-out-from-left' || isExiting && exitingAnimation === 'slide-out-from-left') && (0, _runtime.ax)([
                "_j7hqj08w"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-top' || isExiting && exitingAnimation === 'fade-in-from-top') && (0, _runtime.ax)([
                "_j7hq2iua"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-top' || isExiting && exitingAnimation === 'fade-out-from-top') && (0, _runtime.ax)([
                "_j7hq39va"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-left' || isExiting && exitingAnimation === 'fade-in-from-left') && (0, _runtime.ax)([
                "_j7hq15m2"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-left' || isExiting && exitingAnimation === 'fade-out-from-left') && (0, _runtime.ax)([
                "_j7hq1yiv"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-bottom' || isExiting && exitingAnimation === 'fade-in-from-bottom') && (0, _runtime.ax)([
                "_j7hq1w00"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-bottom' || isExiting && exitingAnimation === 'fade-out-from-bottom') && (0, _runtime.ax)([
                "_j7hqzy3z"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-right' || isExiting && exitingAnimation === 'fade-in-from-right') && (0, _runtime.ax)([
                "_j7hqpqak"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-right' || isExiting && exitingAnimation === 'fade-out-from-right') && (0, _runtime.ax)([
                "_j7hq1ebg"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-top-constant' || isExiting && exitingAnimation === 'fade-in-from-top-constant') && (0, _runtime.ax)([
                "_j7hqm2e2"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-top-constant' || isExiting && exitingAnimation === 'fade-out-from-top-constant') && (0, _runtime.ax)([
                "_j7hq97jn"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-left-constant' || isExiting && exitingAnimation === 'fade-in-from-left-constant') && (0, _runtime.ax)([
                "_j7hqovgq"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-left-constant' || isExiting && exitingAnimation === 'fade-out-from-left-constant') && (0, _runtime.ax)([
                "_j7hq15do"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-bottom-constant' || isExiting && exitingAnimation === 'fade-in-from-bottom-constant') && (0, _runtime.ax)([
                "_j7hq797a"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-bottom-constant' || isExiting && exitingAnimation === 'fade-out-from-bottom-constant') && (0, _runtime.ax)([
                "_j7hqwo7r"
            ]),
            (!isExiting && enteringAnimation === 'fade-in-from-right-constant' || isExiting && exitingAnimation === 'fade-in-from-right-constant') && (0, _runtime.ax)([
                "_j7hqt8u5"
            ]),
            (!isExiting && enteringAnimation === 'fade-out-from-right-constant' || isExiting && exitingAnimation === 'fade-out-from-right-constant') && (0, _runtime.ax)([
                "_j7hq1pgp"
            ])
        ]) : '',
        style: {
            animationDelay: "".concat(delay, "ms")
        }
    }, state);
};
exports.default = EnteringMotion;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@compiled/react/runtime":"b6xDz","../utils/accessibility":"8rpwc","../utils/durations":"1zZbT","../utils/timer-hooks":"8QogF","./exiting-persistence":"3mJ6Z","./staggered-entrance":"5r4TE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b6xDz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"dnpjY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dnpjY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"5eooo","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5eooo":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8QogF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useRequestAnimationFrame", ()=>useRequestAnimationFrame);
parcelHelpers.export(exports, "useSetTimeout", ()=>useSetTimeout);
var _react = require("react");
var getHookDeps = function getHookDeps(opts) {
    switch(opts.cleanup){
        case 'next-effect':
            return undefined;
        case 'unmount':
        default:
            return [];
    }
};
var useRequestAnimationFrame = function useRequestAnimationFrame() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        cleanup: 'unmount'
    };
    var frames = (0, _react.useRef)([]);
    (0, _react.useEffect)(function() {
        return function() {
            if (frames.current.length) {
                frames.current.forEach(function(id) {
                    return cancelAnimationFrame(id);
                });
                frames.current = [];
            }
        };
    // We dynamically set this so we either clean up on the next effect - or on unmount.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, getHookDeps(opts));
    return (0, _react.useCallback)(function(handler) {
        var id = requestAnimationFrame(function(time) {
            frames.current = frames.current.filter(function(frameId) {
                return frameId !== id;
            });
            handler(time);
        });
        frames.current.push(id);
    }, []);
};
var useSetTimeout = function useSetTimeout() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        cleanup: 'unmount'
    };
    var timeouts = (0, _react.useRef)([]);
    (0, _react.useEffect)(function() {
        return function() {
            if (timeouts.current.length) {
                timeouts.current.forEach(function(id) {
                    return clearTimeout(id);
                });
                timeouts.current = [];
            }
        };
    // We dynamically set this so we either clean up on the next effect - or on unmount.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, getHookDeps(opts));
    return (0, _react.useCallback)(function(handler, timeout) {
        for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++)args[_key - 2] = arguments[_key];
        var id = setTimeout.apply(void 0, [
            function() {
                timeouts.current = timeouts.current.filter(function(timeoutId) {
                    return timeoutId !== id;
                });
                handler();
            },
            timeout
        ].concat(args));
        timeouts.current.push(id);
    }, []);
};

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3mJ6Z":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useExitingPersistence", ()=>useExitingPersistence);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
/**
 * Internally we will be playing with an element that will always have a key defined.
 */ /**
 * Internal data passed to child motions.
 */ // We define empty context here so the object doesn't change.
var emptyContext = {
    // Motions will always appear if not inside a exiting persistence component.
    appear: true,
    isExiting: false
};
/**
 * __Exiting context__
 *
 * An exiting context.
 */ var ExitingContext = /*#__PURE__*/ (0, _react.createContext)(emptyContext);
/**
 * This method will wrap any React element with a context provider. We're using context (instead of
 * cloneElement) so we can communicate between multiple elements without the need of prop drilling
 * (results in a better API for consumers).
 */ var wrapChildWithContextProvider = function wrapChildWithContextProvider(child) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyContext;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(ExitingContext.Provider, {
        key: "".concat(child.key, "-provider"),
        value: value
    }, child);
};
/**
 * This function will convert all children types to an array while also filtering out non-valid React elements.
 */ var childrenToArray = function childrenToArray(children) {
    var childrenAsArray = [];
    // We convert children to an array using this helper method as it will add keys to children that do not
    // have them, such as when we have hardcoded children that are conditionally rendered.
    (0, _react.Children).toArray(children).forEach(function(child) {
        // We ignore any boolean children to make our code a little more simple later on,
        // and also filter out any falsies (empty strings, nulls, and undefined).
        if (typeof child !== 'boolean' && Boolean(child)) // Children WILL have a key after being forced into an array using the React.Children helper.
        childrenAsArray.push(child);
    });
    return childrenAsArray;
};
var spliceNewElementsIntoPrevious = function spliceNewElementsIntoPrevious(current, previous) {
    var splicedChildren = previous.concat([]);
    var previousMap = childrenToObj(previous);
    for(var i = 0; i < current.length; i++){
        var child = current[i];
        var childIsNew = !previousMap[child.key];
        if (childIsNew) // This will insert the new element after the previous element.
        splicedChildren.splice(i + 1, 0, child);
    }
    return splicedChildren;
};
var childrenToObj = function childrenToObj(children) {
    return children.reduce(function(acc, child) {
        acc[child.key] = child;
        return acc;
    }, {});
};
var getMissingKeys = function getMissingKeys(current, previous) {
    var currentMapKeys = new Set(current.map(function(child) {
        return child.key;
    }));
    var missing = new Set();
    for(var i = 0; i < previous.length; i++){
        var element = previous[i];
        var _key = element.key;
        if (!currentMapKeys.has(_key)) missing.add(_key);
    }
    return missing;
};
/**
 * How does this component work?
 *
 * It looks at changes in its children to see what is removed.
 *
 * If a child is removed it clones it and wraps it with context providing an `onFinish` callback.
 *
 * The cloned child will call the `onFinish` when it finishes its exit animation,
 * which lets `ExitingPersistence` know to stop rendering it.
 */ /**
 * __ExitingPersistence__
 *
 * Useful for enabling elements to persist and animate away when they are removed from the DOM.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/motion/docs/entering-motions)
 */ var ExitingPersistence = /*#__PURE__*/ (0, _react.memo)(function(_ref) {
    var _ref$appear = _ref.appear, appear = _ref$appear === void 0 ? false : _ref$appear, children = _ref.children, exitThenEnter = _ref.exitThenEnter;
    var _useState = (0, _react.useState)([
        null,
        children
    ]), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), stateChildren = _useState2[0], setChildren = _useState2[1];
    var _useState3 = (0, _react.useState)([]), _useState4 = (0, _slicedToArrayDefault.default)(_useState3, 2), exitingChildren = _useState4[0], setExitingChildren = _useState4[1];
    var _useState5 = (0, _react.useState)(function() {
        return {
            appear: appear,
            isExiting: false
        };
    }), _useState6 = (0, _slicedToArrayDefault.default)(_useState5, 2), defaultContext = _useState6[0], setDefaultContext = _useState6[1];
    (0, _react.useEffect)(function() {
        if (!defaultContext.appear) setDefaultContext({
            appear: true,
            isExiting: false
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    /**
   * NOTE: This is a workaround for the test case written in Jira where the stateChildren is a boolean value because
   * useState is mocked to return a boolean value.
   */ if (typeof stateChildren === 'boolean') return children;
    var _stateChildren = (0, _slicedToArrayDefault.default)(stateChildren, 2), previousChildren = _stateChildren[0], currentChildren = _stateChildren[1];
    var previous = childrenToArray(previousChildren);
    var current = childrenToArray(currentChildren);
    if (currentChildren !== children) setChildren([
        currentChildren,
        children
    ]);
    var missingKeys = getMissingKeys(current, previous);
    var isSomeChildRemoved = !!missingKeys.size;
    var visibleChildren = current;
    if (isSomeChildRemoved) visibleChildren = spliceNewElementsIntoPrevious(current, previous);
    if (exitThenEnter) {
        if (exitingChildren.length) visibleChildren = exitingChildren;
        else {
            var nextExitingChildren = visibleChildren.filter(function(child) {
                return missingKeys.has(child.key);
            });
            if (nextExitingChildren.length) setExitingChildren(nextExitingChildren);
        }
    }
    if (missingKeys.size) visibleChildren = visibleChildren.map(function(child) {
        var isExiting = missingKeys.has(child.key);
        return wrapChildWithContextProvider(child, {
            appear: true,
            isExiting: isExiting,
            onFinish: isExiting ? function() {
                missingKeys.delete(child.key);
                if (missingKeys.size === 0) {
                    setChildren([
                        null,
                        children
                    ]);
                    setExitingChildren([]);
                }
            } : undefined
        });
    });
    else visibleChildren = visibleChildren.map(function(child) {
        return wrapChildWithContextProvider(child, defaultContext);
    });
    return visibleChildren;
});
var useExitingPersistence = function useExitingPersistence() {
    return (0, _react.useContext)(ExitingContext);
};
ExitingPersistence.displayName = 'ExitingPersistence';
exports.default = ExitingPersistence;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5r4TE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useStaggeredEntrance", ()=>useStaggeredEntrance);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useLayoutEffect = require("../utils/use-layout-effect");
var _useUniqueId = require("../utils/use-unique-id");
var StaggeredEntranceContext = /*#__PURE__*/ (0, _react.createContext)(function() {
    return {
        isReady: true,
        delay: 0,
        ref: (0, _noopDefault.default)
    };
});
var useStaggeredEntrance = function useStaggeredEntrance() {
    var indentifier = (0, _useUniqueId.useUniqueId)();
    var context = (0, _react.useContext)(StaggeredEntranceContext);
    return context(indentifier);
};
/**
 * For a list of elements that need to animate in,
 * this should be used in conjunction with entering components.
 * This does not need Javascript to execute so it will run immediately for any SSR rendered React apps before the JS has executed.
 *
 * Will dynamically add delay to each child entering component.
 * Unfortunately all entering components _NEED_ to be a direct descendant.
 */ var StaggeredEntrance = function StaggeredEntrance(_ref) {
    var children = _ref.children, column = _ref.column, _ref$columns = _ref.columns, columns = _ref$columns === void 0 ? 'responsive' : _ref$columns, _ref$delayStep = _ref.delayStep, delayStep = _ref$delayStep === void 0 ? 50 : _ref$delayStep;
    var elementRefs = (0, _react.useRef)([]);
    var indexes = [];
    var _useState = (0, _react.useState)(function() {
        if (typeof columns === 'number') // A hardcoded columns is set so bail out and set it to that!
        return columns;
        if (typeof column === 'number') // A hardcoded column is set so we will set actualColumns to be 1.
        return 1;
        // We are in "responsive" mode.
        // So we will be calculating when the Javascript executes on the client how many columns there will be.
        return 0;
    }), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), actualColumns = _useState2[0], setActualColumns = _useState2[1];
    (0, _useLayoutEffect.useLayoutEffect)(function() {
        // We want to only run this code when we are in "responsive" mode.
        // It is assumed we are in responsive mode if `columns` is "responsive",
        // we have children element refs ready to be read (i.e. if there are no children this won't run as well)
        // and finally that `actualColumns` is `0` - this is because for the first render cycle `actualColumns` will be `0` (set above)
        // and then after this layout effect runs the value for `actualColumns` will then be calculated and set.
        if (columns === 'responsive' && elementRefs.current.length && actualColumns === 0) {
            var currentTop = 0;
            var numberColumns = 0;
            if (elementRefs.current.length <= 1) {
                setActualColumns(1);
                return;
            }
            // We set the current top to the first elements.
            // We will be comparing this and incrementing the column count
            // until we hit an element that has a different offset top (or we run out of elements).
            currentTop = elementRefs.current[0] ? elementRefs.current[0].offsetTop : 0;
            for(var i = 0; i < elementRefs.current.length; i++){
                var child = elementRefs.current[i];
                if (!child) break;
                if (currentTop === child.offsetTop) {
                    numberColumns += 1;
                    if (elementRefs.current.length - 1 === i) setActualColumns(numberColumns);
                    continue;
                }
                setActualColumns(numberColumns);
                break;
            }
        }
    // We only want this effect to run once - on initial mount.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(StaggeredEntranceContext.Provider, {
        value: function value(id) {
            if (!indexes.includes(id)) indexes.push(id);
            var isReady = actualColumns > 0;
            var index = indexes.indexOf(id);
            var currentColumn = column || index % actualColumns;
            var currentRow = Math.floor(index / actualColumns);
            var distanceFromTopLeftElement = currentRow + currentColumn;
            // We don't want loads of elements to have the same staggered delay as it ends up looking slow for users.
            // To get around that we calculate the logarithm using `distanceFromTopLeftElement` which ends making
            // elements appear faster the further away from the top left element.
            var delay = Math.ceil(Math.log(distanceFromTopLeftElement + 1) * delayStep * 1.5) || 0;
            return {
                delay: delay,
                isReady: isReady,
                ref: function ref(element) {
                    return elementRefs.current[index] = element;
                }
            };
        }
    }, children);
};
exports.default = StaggeredEntrance;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@atlaskit/ds-lib/noop":"gcHCG","../utils/use-layout-effect":"aft8i","../utils/use-unique-id":"krdfF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aft8i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useLayoutEffect", ()=>useLayoutEffect);
var _react = require("react");
var useLayoutEffect = typeof window === 'undefined' ? (0, _react.useEffect) : (0, _react.useLayoutEffect);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"krdfF":[function(require,module,exports,__globalThis) {
/* eslint-disable @repo/internal/react/disallow-unstable-values */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Will return a unique id that does not change between renders.
 * Try not use this to render DOM markup (attributes or otherwise)
 * as you will probably not get the same result on the Server vs. Client.
 */ parcelHelpers.export(exports, "useUniqueId", ()=>useUniqueId);
var _react = require("react");
function useUniqueId() {
    var identifier = (0, _react.useRef)('');
    if (!identifier.current) identifier.current = '_' + (Number(String(Math.random()).slice(2)) + Date.now() + Math.round(performance.now())).toString(36);
    return identifier.current;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b5fVh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>(0, _popper.Popper));
parcelHelpers.export(exports, "placements", ()=>(0, _popper.placements));
parcelHelpers.export(exports, "Manager", ()=>(0, _reactPopper.Manager));
parcelHelpers.export(exports, "Reference", ()=>(0, _reactPopper.Reference));
var _popper = require("./popper");
var _reactPopper = require("react-popper");

},{"./popper":"fnPAJ","react-popper":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fnPAJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "placements", ()=>(0, _core.placements));
parcelHelpers.export(exports, "Popper", ()=>Popper);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactPopper = require("react-popper");
var _maxSize = require("./max-size");
var _core = require("@popperjs/core");
// Export types from PopperJS / React Popper
var viewportPadding = 5;
var constantModifiers = [
    {
        name: 'flip',
        options: {
            flipVariations: false,
            padding: viewportPadding,
            boundary: 'clippingParents',
            rootBoundary: 'viewport'
        }
    }
];
function defaultChildrenFn() {
    return null;
}
var defaultOffset = [
    0,
    8
];
function Popper(_ref) {
    var _ref$children = _ref.children, children = _ref$children === void 0 ? defaultChildrenFn : _ref$children, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? defaultOffset : _ref$offset, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement, _ref$referenceElement = _ref.referenceElement, referenceElement = _ref$referenceElement === void 0 ? undefined : _ref$referenceElement, modifiers = _ref.modifiers, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy, _ref$shouldFitViewpor = _ref.shouldFitViewport, shouldFitViewport = _ref$shouldFitViewpor === void 0 ? false : _ref$shouldFitViewpor;
    var _offset = (0, _slicedToArrayDefault.default)(offset, 2), offsetX = _offset[0], offsetY = _offset[1];
    var internalModifiers = (0, _react.useMemo)(function() {
        var preventOverflowModifier = {
            name: 'preventOverflow',
            options: {
                padding: viewportPadding,
                rootBoundary: shouldFitViewport ? 'viewport' : 'document'
            }
        };
        var offsetModifier = {
            name: 'offset',
            options: {
                offset: [
                    offsetX,
                    offsetY
                ]
            }
        };
        var maxSizeModifiers = shouldFitViewport ? (0, _maxSize.getMaxSizeModifiers)({
            viewportPadding: viewportPadding
        }) : [];
        // @ts-ignore Type errors from incompatible @popperjs/core versions between Jira and AFM Platform... we are using ts-ignore here because ts-expect-error will cause an "Unused '@ts-expect-error' directive." error
        return [].concat(constantModifiers, [
            preventOverflowModifier,
            offsetModifier
        ], (0, _toConsumableArrayDefault.default)(maxSizeModifiers));
    }, [
        offsetX,
        offsetY,
        shouldFitViewport
    ]);
    // Merge custom props and memoize
    var mergedModifiers = (0, _react.useMemo)(function() {
        if (modifiers == null) return internalModifiers;
        return [].concat((0, _toConsumableArrayDefault.default)(internalModifiers), (0, _toConsumableArrayDefault.default)(modifiers));
    }, [
        internalModifiers,
        modifiers
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactPopper.Popper), {
        modifiers: mergedModifiers,
        placement: placement,
        strategy: strategy,
        referenceElement: referenceElement
    }, children);
}

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","react-popper":"c7P1R","./max-size":"707Uz","@popperjs/core":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c7P1R":[function(require,module,exports,__globalThis) {
// Public components
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>(0, _popper.Popper)) // Public types
;
parcelHelpers.export(exports, "Manager", ()=>(0, _manager.Manager));
parcelHelpers.export(exports, "Reference", ()=>(0, _reference.Reference));
parcelHelpers.export(exports, "usePopper", ()=>(0, _usePopper.usePopper));
var _popper = require("./Popper");
var _manager = require("./Manager");
var _reference = require("./Reference");
var _usePopper = require("./usePopper");

},{"./Popper":"l1yik","./Manager":false,"./Reference":false,"./usePopper":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l1yik":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>Popper);
var _react = require("react");
var _manager = require("./Manager");
var _utils = require("./utils");
var _usePopper = require("./usePopper");
var NOOP = function NOOP() {
    return void 0;
};
var NOOP_PROMISE = function NOOP_PROMISE() {
    return Promise.resolve(null);
};
var EMPTY_MODIFIERS = [];
function Popper(_ref) {
    var _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? 'bottom' : _ref$placement, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy, _ref$modifiers = _ref.modifiers, modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers, referenceElement = _ref.referenceElement, onFirstUpdate = _ref.onFirstUpdate, innerRef = _ref.innerRef, children = _ref.children;
    var referenceNode = _react.useContext((0, _manager.ManagerReferenceNodeContext));
    var _React$useState = _react.useState(null), popperElement = _React$useState[0], setPopperElement = _React$useState[1];
    var _React$useState2 = _react.useState(null), arrowElement = _React$useState2[0], setArrowElement = _React$useState2[1];
    _react.useEffect(function() {
        (0, _utils.setRef)(innerRef, popperElement);
    }, [
        innerRef,
        popperElement
    ]);
    var options = _react.useMemo(function() {
        return {
            placement: placement,
            strategy: strategy,
            onFirstUpdate: onFirstUpdate,
            modifiers: [].concat(modifiers, [
                {
                    name: 'arrow',
                    enabled: arrowElement != null,
                    options: {
                        element: arrowElement
                    }
                }
            ])
        };
    }, [
        placement,
        strategy,
        onFirstUpdate,
        modifiers,
        arrowElement
    ]);
    var _usePopper1 = (0, _usePopper.usePopper)(referenceElement || referenceNode, popperElement, options), state = _usePopper1.state, styles = _usePopper1.styles, forceUpdate = _usePopper1.forceUpdate, update = _usePopper1.update;
    var childrenProps = _react.useMemo(function() {
        return {
            ref: setPopperElement,
            style: styles.popper,
            placement: state ? state.placement : placement,
            hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,
            isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,
            arrowProps: {
                style: styles.arrow,
                ref: setArrowElement
            },
            forceUpdate: forceUpdate || NOOP,
            update: update || NOOP_PROMISE
        };
    }, [
        setPopperElement,
        setArrowElement,
        placement,
        state,
        styles,
        update,
        forceUpdate
    ]);
    return (0, _utils.unwrapArray)(children)(childrenProps);
}

},{"react":"jMk1U","./Manager":"hRxAT","./utils":"6osvP","./usePopper":"jgRvu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hRxAT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ManagerReferenceNodeContext", ()=>ManagerReferenceNodeContext);
parcelHelpers.export(exports, "ManagerReferenceNodeSetterContext", ()=>ManagerReferenceNodeSetterContext);
parcelHelpers.export(exports, "Manager", ()=>Manager);
var _react = require("react");
var ManagerReferenceNodeContext = _react.createContext();
var ManagerReferenceNodeSetterContext = _react.createContext();
function Manager(_ref) {
    var children = _ref.children;
    var _React$useState = _react.useState(null), referenceNode = _React$useState[0], setReferenceNode = _React$useState[1];
    var hasUnmounted = _react.useRef(false);
    _react.useEffect(function() {
        return function() {
            hasUnmounted.current = true;
        };
    }, []);
    var handleSetReferenceNode = _react.useCallback(function(node) {
        if (!hasUnmounted.current) setReferenceNode(node);
    }, []);
    return /*#__PURE__*/ _react.createElement(ManagerReferenceNodeContext.Provider, {
        value: referenceNode
    }, /*#__PURE__*/ _react.createElement(ManagerReferenceNodeSetterContext.Provider, {
        value: handleSetReferenceNode
    }, children));
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6osvP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unwrapArray", ()=>unwrapArray);
parcelHelpers.export(exports, "safeInvoke", ()=>safeInvoke);
parcelHelpers.export(exports, "setRef", ()=>setRef);
parcelHelpers.export(exports, "fromEntries", ()=>fromEntries);
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>useIsomorphicLayoutEffect);
var _react = require("react");
var unwrapArray = function unwrapArray(arg) {
    return Array.isArray(arg) ? arg[0] : arg;
};
var safeInvoke = function safeInvoke(fn) {
    if (typeof fn === 'function') {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return fn.apply(void 0, args);
    }
};
var setRef = function setRef(ref, node) {
    // if its a function call it
    if (typeof ref === 'function') return safeInvoke(ref, node);
    else if (ref != null) ref.current = node;
};
var fromEntries = function fromEntries(entries) {
    return entries.reduce(function(acc, _ref) {
        var key = _ref[0], value = _ref[1];
        acc[key] = value;
        return acc;
    }, {});
};
var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? _react.useLayoutEffect : _react.useEffect;

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jgRvu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "usePopper", ()=>usePopper);
var _react = require("react");
var _reactDom = require("react-dom");
var _core = require("@popperjs/core");
var _reactFastCompare = require("react-fast-compare");
var _reactFastCompareDefault = parcelHelpers.interopDefault(_reactFastCompare);
var _utils = require("./utils");
var EMPTY_MODIFIERS = [];
var usePopper = function usePopper(referenceElement, popperElement, options) {
    if (options === void 0) options = {};
    var prevOptions = _react.useRef(null);
    var optionsWithDefaults = {
        onFirstUpdate: options.onFirstUpdate,
        placement: options.placement || 'bottom',
        strategy: options.strategy || 'absolute',
        modifiers: options.modifiers || EMPTY_MODIFIERS
    };
    var _React$useState = _react.useState({
        styles: {
            popper: {
                position: optionsWithDefaults.strategy,
                left: '0',
                top: '0'
            },
            arrow: {
                position: 'absolute'
            }
        },
        attributes: {}
    }), state = _React$useState[0], setState = _React$useState[1];
    var updateStateModifier = _react.useMemo(function() {
        return {
            name: 'updateState',
            enabled: true,
            phase: 'write',
            fn: function fn(_ref) {
                var state = _ref.state;
                var elements = Object.keys(state.elements);
                _reactDom.flushSync(function() {
                    setState({
                        styles: (0, _utils.fromEntries)(elements.map(function(element) {
                            return [
                                element,
                                state.styles[element] || {}
                            ];
                        })),
                        attributes: (0, _utils.fromEntries)(elements.map(function(element) {
                            return [
                                element,
                                state.attributes[element]
                            ];
                        }))
                    });
                });
            },
            requires: [
                'computeStyles'
            ]
        };
    }, []);
    var popperOptions = _react.useMemo(function() {
        var newOptions = {
            onFirstUpdate: optionsWithDefaults.onFirstUpdate,
            placement: optionsWithDefaults.placement,
            strategy: optionsWithDefaults.strategy,
            modifiers: [].concat(optionsWithDefaults.modifiers, [
                updateStateModifier,
                {
                    name: 'applyStyles',
                    enabled: false
                }
            ])
        };
        if ((0, _reactFastCompareDefault.default)(prevOptions.current, newOptions)) return prevOptions.current || newOptions;
        else {
            prevOptions.current = newOptions;
            return newOptions;
        }
    }, [
        optionsWithDefaults.onFirstUpdate,
        optionsWithDefaults.placement,
        optionsWithDefaults.strategy,
        optionsWithDefaults.modifiers,
        updateStateModifier
    ]);
    var popperInstanceRef = _react.useRef();
    (0, _utils.useIsomorphicLayoutEffect)(function() {
        if (popperInstanceRef.current) popperInstanceRef.current.setOptions(popperOptions);
    }, [
        popperOptions
    ]);
    (0, _utils.useIsomorphicLayoutEffect)(function() {
        if (referenceElement == null || popperElement == null) return;
        var createPopper = options.createPopper || (0, _core.createPopper);
        var popperInstance = createPopper(referenceElement, popperElement, popperOptions);
        popperInstanceRef.current = popperInstance;
        return function() {
            popperInstance.destroy();
            popperInstanceRef.current = null;
        };
    }, [
        referenceElement,
        popperElement,
        options.createPopper
    ]);
    return {
        state: popperInstanceRef.current ? popperInstanceRef.current.state : null,
        styles: state.styles,
        attributes: state.attributes,
        update: popperInstanceRef.current ? popperInstanceRef.current.update : null,
        forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null
    };
};

},{"react":"jMk1U","react-dom":"i4X7T","@popperjs/core":"gYaaZ","react-fast-compare":"20eS9","./utils":"6osvP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gYaaZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>(0, _createPopperJs.popperGenerator)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _createPopperJs.detectOverflow));
parcelHelpers.export(exports, "createPopperBase", ()=>(0, _createPopperJs.createPopper));
parcelHelpers.export(exports, "createPopper", ()=>(0, _popperJs.createPopper)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "createPopperLite", ()=>(0, _popperLiteJs.createPopper));
var _enumsJs = require("./enums.js");
parcelHelpers.exportAll(_enumsJs, exports);
var _indexJs = require("./modifiers/index.js"); // eslint-disable-next-line import/no-unused-modules
parcelHelpers.exportAll(_indexJs, exports);
var _createPopperJs = require("./createPopper.js");
var _popperJs = require("./popper.js");
var _popperLiteJs = require("./popper-lite.js");

},{"./enums.js":false,"./modifiers/index.js":false,"./createPopper.js":false,"./popper.js":"aM4Q6","./popper-lite.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jVhmu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "top", ()=>top);
parcelHelpers.export(exports, "bottom", ()=>bottom);
parcelHelpers.export(exports, "right", ()=>right);
parcelHelpers.export(exports, "left", ()=>left);
parcelHelpers.export(exports, "auto", ()=>auto);
parcelHelpers.export(exports, "basePlacements", ()=>basePlacements);
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "end", ()=>end);
parcelHelpers.export(exports, "clippingParents", ()=>clippingParents);
parcelHelpers.export(exports, "viewport", ()=>viewport);
parcelHelpers.export(exports, "popper", ()=>popper);
parcelHelpers.export(exports, "reference", ()=>reference);
parcelHelpers.export(exports, "variationPlacements", ()=>variationPlacements);
parcelHelpers.export(exports, "placements", ()=>placements);
parcelHelpers.export(exports, "beforeRead", ()=>beforeRead);
parcelHelpers.export(exports, "read", ()=>read);
parcelHelpers.export(exports, "afterRead", ()=>afterRead);
parcelHelpers.export(exports, "beforeMain", ()=>beforeMain);
parcelHelpers.export(exports, "main", ()=>main);
parcelHelpers.export(exports, "afterMain", ()=>afterMain);
parcelHelpers.export(exports, "beforeWrite", ()=>beforeWrite);
parcelHelpers.export(exports, "write", ()=>write);
parcelHelpers.export(exports, "afterWrite", ()=>afterWrite);
parcelHelpers.export(exports, "modifierPhases", ()=>modifierPhases);
var top = 'top';
var bottom = 'bottom';
var right = 'right';
var left = 'left';
var auto = 'auto';
var basePlacements = [
    top,
    bottom,
    right,
    left
];
var start = 'start';
var end = 'end';
var clippingParents = 'clippingParents';
var viewport = 'viewport';
var popper = 'popper';
var reference = 'reference';
var variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {
    return acc.concat([
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []);
var placements = /*#__PURE__*/ [].concat(basePlacements, [
    auto
]).reduce(function(acc, placement) {
    return acc.concat([
        placement,
        placement + "-" + start,
        placement + "-" + end
    ]);
}, []); // modifiers that need to read the DOM
var beforeRead = 'beforeRead';
var read = 'read';
var afterRead = 'afterRead'; // pure-logic modifiers
var beforeMain = 'beforeMain';
var main = 'main';
var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)
var beforeWrite = 'beforeWrite';
var write = 'write';
var afterWrite = 'afterWrite';
var modifierPhases = [
    beforeRead,
    read,
    afterRead,
    beforeMain,
    main,
    afterMain,
    beforeWrite,
    write,
    afterWrite
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3NuA9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "popperGenerator", ()=>popperGenerator);
parcelHelpers.export(exports, "createPopper", ()=>createPopper);
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _detectOverflowJsDefault.default));
var _getCompositeRectJs = require("./dom-utils/getCompositeRect.js");
var _getCompositeRectJsDefault = parcelHelpers.interopDefault(_getCompositeRectJs);
var _getLayoutRectJs = require("./dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _listScrollParentsJs = require("./dom-utils/listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _orderModifiersJs = require("./utils/orderModifiers.js");
var _orderModifiersJsDefault = parcelHelpers.interopDefault(_orderModifiersJs);
var _debounceJs = require("./utils/debounce.js");
var _debounceJsDefault = parcelHelpers.interopDefault(_debounceJs);
var _mergeByNameJs = require("./utils/mergeByName.js");
var _mergeByNameJsDefault = parcelHelpers.interopDefault(_mergeByNameJs);
var _detectOverflowJs = require("./utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _instanceOfJs = require("./dom-utils/instanceOf.js");
var DEFAULT_OPTIONS = {
    placement: 'bottom',
    modifiers: [],
    strategy: 'absolute'
};
function areValidElements() {
    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
    return !args.some(function(element) {
        return !(element && typeof element.getBoundingClientRect === 'function');
    });
}
function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) generatorOptions = {};
    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper(reference, popper, options) {
        if (options === void 0) options = defaultOptions;
        var state = {
            placement: 'bottom',
            orderedModifiers: [],
            options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
            modifiersData: {},
            elements: {
                reference: reference,
                popper: popper
            },
            attributes: {},
            styles: {}
        };
        var effectCleanupFns = [];
        var isDestroyed = false;
        var instance = {
            state: state,
            setOptions: function setOptions(setOptionsAction) {
                var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
                cleanupModifierEffects();
                state.options = Object.assign({}, defaultOptions, state.options, options);
                state.scrollParents = {
                    reference: (0, _instanceOfJs.isElement)(reference) ? (0, _listScrollParentsJsDefault.default)(reference) : reference.contextElement ? (0, _listScrollParentsJsDefault.default)(reference.contextElement) : [],
                    popper: (0, _listScrollParentsJsDefault.default)(popper)
                }; // Orders the modifiers based on their dependencies and `phase`
                // properties
                var orderedModifiers = (0, _orderModifiersJsDefault.default)((0, _mergeByNameJsDefault.default)([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers
                state.orderedModifiers = orderedModifiers.filter(function(m) {
                    return m.enabled;
                });
                runModifierEffects();
                return instance.update();
            },
            // Sync update – it will always be executed, even if not necessary. This
            // is useful for low frequency updates where sync behavior simplifies the
            // logic.
            // For high frequency updates (e.g. `resize` and `scroll` events), always
            // prefer the async Popper#update method
            forceUpdate: function forceUpdate() {
                if (isDestroyed) return;
                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
                // anymore
                if (!areValidElements(reference, popper)) return;
                 // Store the reference and popper rects to be read by modifiers
                state.rects = {
                    reference: (0, _getCompositeRectJsDefault.default)(reference, (0, _getOffsetParentJsDefault.default)(popper), state.options.strategy === 'fixed'),
                    popper: (0, _getLayoutRectJsDefault.default)(popper)
                }; // Modifiers have the ability to reset the current update cycle. The
                // most common use case for this is the `flip` modifier changing the
                // placement, which then needs to re-run all the modifiers, because the
                // logic was previously ran for the previous placement and is therefore
                // stale/incorrect
                state.reset = false;
                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
                // is filled with the initial data specified by the modifier. This means
                // it doesn't persist and is fresh on each update.
                // To ensure persistent data, use `${name}#persistent`
                state.orderedModifiers.forEach(function(modifier) {
                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
                });
                for(var index = 0; index < state.orderedModifiers.length; index++){
                    if (state.reset === true) {
                        state.reset = false;
                        index = -1;
                        continue;
                    }
                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
                    if (typeof fn === 'function') state = fn({
                        state: state,
                        options: _options,
                        name: name,
                        instance: instance
                    }) || state;
                }
            },
            // Async and optimistically optimized update – it will not be executed if
            // not necessary (debounced to run at most once-per-tick)
            update: (0, _debounceJsDefault.default)(function() {
                return new Promise(function(resolve) {
                    instance.forceUpdate();
                    resolve(state);
                });
            }),
            destroy: function destroy() {
                cleanupModifierEffects();
                isDestroyed = true;
            }
        };
        if (!areValidElements(reference, popper)) return instance;
        instance.setOptions(options).then(function(state) {
            if (!isDestroyed && options.onFirstUpdate) options.onFirstUpdate(state);
        }); // Modifiers have the ability to execute arbitrary code before the first
        // update cycle runs. They will be executed in the same order as the update
        // cycle. This is useful when a modifier adds some persistent data that
        // other modifiers need to use, but the modifier is run after the dependent
        // one.
        function runModifierEffects() {
            state.orderedModifiers.forEach(function(_ref) {
                var name = _ref.name, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, effect = _ref.effect;
                if (typeof effect === 'function') {
                    var cleanupFn = effect({
                        state: state,
                        name: name,
                        instance: instance,
                        options: options
                    });
                    var noopFn = function noopFn() {};
                    effectCleanupFns.push(cleanupFn || noopFn);
                }
            });
        }
        function cleanupModifierEffects() {
            effectCleanupFns.forEach(function(fn) {
                return fn();
            });
            effectCleanupFns = [];
        }
        return instance;
    };
}
var createPopper = /*#__PURE__*/ popperGenerator(); // eslint-disable-next-line import/no-unused-modules

},{"./dom-utils/getCompositeRect.js":"ghVTw","./dom-utils/getLayoutRect.js":"76Hja","./dom-utils/listScrollParents.js":"b5rfb","./dom-utils/getOffsetParent.js":"fac6D","./utils/orderModifiers.js":"6x9qu","./utils/debounce.js":"gWj20","./utils/mergeByName.js":"8Xt9o","./utils/detectOverflow.js":false,"./dom-utils/instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ghVTw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getCompositeRect);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getNodeScrollJs = require("./getNodeScroll.js");
var _getNodeScrollJsDefault = parcelHelpers.interopDefault(_getNodeScrollJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _mathJs = require("../utils/math.js");
function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = (0, _mathJs.round)(rect.width) / element.offsetWidth || 1;
    var scaleY = (0, _mathJs.round)(rect.height) / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
} // Returns the composite rect of an element relative to its offsetParent.
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) isFixed = false;
    var isOffsetParentAnElement = (0, _instanceOfJs.isHTMLElement)(offsetParent);
    var offsetParentIsScaled = (0, _instanceOfJs.isHTMLElement)(offsetParent) && isElementScaled(offsetParent);
    var documentElement = (0, _getDocumentElementJsDefault.default)(offsetParent);
    var rect = (0, _getBoundingClientRectJsDefault.default)(elementOrVirtualElement, offsetParentIsScaled, isFixed);
    var scroll = {
        scrollLeft: 0,
        scrollTop: 0
    };
    var offsets = {
        x: 0,
        y: 0
    };
    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if ((0, _getNodeNameJsDefault.default)(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
        (0, _isScrollParentJsDefault.default)(documentElement)) scroll = (0, _getNodeScrollJsDefault.default)(offsetParent);
        if ((0, _instanceOfJs.isHTMLElement)(offsetParent)) {
            offsets = (0, _getBoundingClientRectJsDefault.default)(offsetParent, true);
            offsets.x += offsetParent.clientLeft;
            offsets.y += offsetParent.clientTop;
        } else if (documentElement) offsets.x = (0, _getWindowScrollBarXJsDefault.default)(documentElement);
    }
    return {
        x: rect.left + scroll.scrollLeft - offsets.x,
        y: rect.top + scroll.scrollTop - offsets.y,
        width: rect.width,
        height: rect.height
    };
}

},{"./getBoundingClientRect.js":"8WtHW","./getNodeScroll.js":"DCVjT","./getNodeName.js":"4Hnqb","./instanceOf.js":"ipye8","./getWindowScrollBarX.js":"dZ6cX","./getDocumentElement.js":"av3Bt","./isScrollParent.js":"kF6fv","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8WtHW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getBoundingClientRect);
var _instanceOfJs = require("./instanceOf.js");
var _mathJs = require("../utils/math.js");
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _isLayoutViewportJs = require("./isLayoutViewport.js");
var _isLayoutViewportJsDefault = parcelHelpers.interopDefault(_isLayoutViewportJs);
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
    if (includeScale === void 0) includeScale = false;
    if (isFixedStrategy === void 0) isFixedStrategy = false;
    var clientRect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;
    if (includeScale && (0, _instanceOfJs.isHTMLElement)(element)) {
        scaleX = element.offsetWidth > 0 ? (0, _mathJs.round)(clientRect.width) / element.offsetWidth || 1 : 1;
        scaleY = element.offsetHeight > 0 ? (0, _mathJs.round)(clientRect.height) / element.offsetHeight || 1 : 1;
    }
    var _ref = (0, _instanceOfJs.isElement)(element) ? (0, _getWindowJsDefault.default)(element) : window, visualViewport = _ref.visualViewport;
    var addVisualOffsets = !(0, _isLayoutViewportJsDefault.default)() && isFixedStrategy;
    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
    var width = clientRect.width / scaleX;
    var height = clientRect.height / scaleY;
    return {
        width: width,
        height: height,
        top: y,
        right: x + width,
        bottom: y + height,
        left: x,
        x: x,
        y: y
    };
}

},{"./instanceOf.js":"ipye8","../utils/math.js":"aHRaj","./getWindow.js":"fYC42","./isLayoutViewport.js":"lbQUA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ipye8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isElement", ()=>isElement);
parcelHelpers.export(exports, "isHTMLElement", ()=>isHTMLElement);
parcelHelpers.export(exports, "isShadowRoot", ()=>isShadowRoot);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function isElement(node) {
    var OwnElement = (0, _getWindowJsDefault.default)(node).Element;
    return node instanceof OwnElement || node instanceof Element;
}
function isHTMLElement(node) {
    var OwnElement = (0, _getWindowJsDefault.default)(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
}
function isShadowRoot(node) {
    // IE 11 has no ShadowRoot
    if (typeof ShadowRoot === 'undefined') return false;
    var OwnElement = (0, _getWindowJsDefault.default)(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fYC42":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindow);
function getWindow(node) {
    if (node == null) return window;
    if (node.toString() !== '[object Window]') {
        var ownerDocument = node.ownerDocument;
        return ownerDocument ? ownerDocument.defaultView || window : window;
    }
    return node;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aHRaj":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "round", ()=>round);
var max = Math.max;
var min = Math.min;
var round = Math.round;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lbQUA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isLayoutViewport);
var _userAgentJs = require("../utils/userAgent.js");
var _userAgentJsDefault = parcelHelpers.interopDefault(_userAgentJs);
function isLayoutViewport() {
    return !/^((?!chrome|android).)*safari/i.test((0, _userAgentJsDefault.default)());
}

},{"../utils/userAgent.js":"cKJ5P","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cKJ5P":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getUAString);
function getUAString() {
    var uaData = navigator.userAgentData;
    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) return uaData.brands.map(function(item) {
        return item.brand + "/" + item.version;
    }).join(' ');
    return navigator.userAgent;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"DCVjT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getNodeScroll);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _instanceOfJs = require("./instanceOf.js");
var _getHTMLElementScrollJs = require("./getHTMLElementScroll.js");
var _getHTMLElementScrollJsDefault = parcelHelpers.interopDefault(_getHTMLElementScrollJs);
function getNodeScroll(node) {
    if (node === (0, _getWindowJsDefault.default)(node) || !(0, _instanceOfJs.isHTMLElement)(node)) return (0, _getWindowScrollJsDefault.default)(node);
    else return (0, _getHTMLElementScrollJsDefault.default)(node);
}

},{"./getWindowScroll.js":"28xxo","./getWindow.js":"fYC42","./instanceOf.js":"ipye8","./getHTMLElementScroll.js":"lJ0P1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"28xxo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindowScroll);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getWindowScroll(node) {
    var win = (0, _getWindowJsDefault.default)(node);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
        scrollLeft: scrollLeft,
        scrollTop: scrollTop
    };
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lJ0P1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getHTMLElementScroll);
function getHTMLElementScroll(element) {
    return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4Hnqb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getNodeName);
function getNodeName(element) {
    return element ? (element.nodeName || '').toLowerCase() : null;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dZ6cX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getWindowScrollBarX);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
function getWindowScrollBarX(element) {
    // If <html> has a CSS width greater than the viewport, then this will be
    // incorrect for RTL.
    // Popper 1 is broken in this case and never had a bug report so let's assume
    // it's not an issue. I don't think anyone ever specifies width on <html>
    // anyway.
    // Browsers where the left scrollbar doesn't cause an issue report `0` for
    // this (e.g. Edge 2019, IE11, Safari)
    return (0, _getBoundingClientRectJsDefault.default)((0, _getDocumentElementJsDefault.default)(element)).left + (0, _getWindowScrollJsDefault.default)(element).scrollLeft;
}

},{"./getBoundingClientRect.js":"8WtHW","./getDocumentElement.js":"av3Bt","./getWindowScroll.js":"28xxo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"av3Bt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getDocumentElement);
var _instanceOfJs = require("./instanceOf.js");
function getDocumentElement(element) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return (((0, _instanceOfJs.isElement)(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}

},{"./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kF6fv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isScrollParent);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
function isScrollParent(element) {
    // Firefox wants us to check `-x` and `-y` variations as well
    var _getComputedStyle = (0, _getComputedStyleJsDefault.default)(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}

},{"./getComputedStyle.js":"jbfT5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jbfT5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getComputedStyle);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
function getComputedStyle(element) {
    return (0, _getWindowJsDefault.default)(element).getComputedStyle(element);
}

},{"./getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"76Hja":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getLayoutRect);
var _getBoundingClientRectJs = require("./getBoundingClientRect.js"); // Returns the layout rect of an element relative to its offsetParent. Layout
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
function getLayoutRect(element) {
    var clientRect = (0, _getBoundingClientRectJsDefault.default)(element); // Use the clientRect sizes if it's not been transformed.
    // Fixes https://github.com/popperjs/popper-core/issues/1223
    var width = element.offsetWidth;
    var height = element.offsetHeight;
    if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;
    if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;
    return {
        x: element.offsetLeft,
        y: element.offsetTop,
        width: width,
        height: height
    };
}

},{"./getBoundingClientRect.js":"8WtHW","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b5rfb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>listScrollParents);
var _getScrollParentJs = require("./getScrollParent.js");
var _getScrollParentJsDefault = parcelHelpers.interopDefault(_getScrollParentJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
function listScrollParents(element, list) {
    var _element$ownerDocumen;
    if (list === void 0) list = [];
    var scrollParent = (0, _getScrollParentJsDefault.default)(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = (0, _getWindowJsDefault.default)(scrollParent);
    var target = isBody ? [
        win
    ].concat(win.visualViewport || [], (0, _isScrollParentJsDefault.default)(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : updatedList.concat(listScrollParents((0, _getParentNodeJsDefault.default)(target)));
}

},{"./getScrollParent.js":"jG2vI","./getParentNode.js":"aEx5x","./getWindow.js":"fYC42","./isScrollParent.js":"kF6fv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jG2vI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getScrollParent);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _isScrollParentJs = require("./isScrollParent.js");
var _isScrollParentJsDefault = parcelHelpers.interopDefault(_isScrollParentJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("./instanceOf.js");
function getScrollParent(node) {
    if ([
        'html',
        'body',
        '#document'
    ].indexOf((0, _getNodeNameJsDefault.default)(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available
    return node.ownerDocument.body;
    if ((0, _instanceOfJs.isHTMLElement)(node) && (0, _isScrollParentJsDefault.default)(node)) return node;
    return getScrollParent((0, _getParentNodeJsDefault.default)(node));
}

},{"./getParentNode.js":"aEx5x","./isScrollParent.js":"kF6fv","./getNodeName.js":"4Hnqb","./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aEx5x":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getParentNode);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _instanceOfJs = require("./instanceOf.js");
function getParentNode(element) {
    if ((0, _getNodeNameJsDefault.default)(element) === 'html') return element;
    return(// $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    element.parentNode || ((0, _instanceOfJs.isShadowRoot)(element) ? element.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    (0, _getDocumentElementJsDefault.default)(element) // fallback
    );
}

},{"./getNodeName.js":"4Hnqb","./getDocumentElement.js":"av3Bt","./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fac6D":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOffsetParent);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _isTableElementJs = require("./isTableElement.js");
var _isTableElementJsDefault = parcelHelpers.interopDefault(_isTableElementJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _userAgentJs = require("../utils/userAgent.js");
var _userAgentJsDefault = parcelHelpers.interopDefault(_userAgentJs);
function getTrueOffsetParent(element) {
    if (!(0, _instanceOfJs.isHTMLElement)(element) || // https://github.com/popperjs/popper-core/issues/837
    (0, _getComputedStyleJsDefault.default)(element).position === 'fixed') return null;
    return element.offsetParent;
} // `.offsetParent` reports `null` for fixed elements, while absolute elements
// return the containing block
function getContainingBlock(element) {
    var isFirefox = /firefox/i.test((0, _userAgentJsDefault.default)());
    var isIE = /Trident/i.test((0, _userAgentJsDefault.default)());
    if (isIE && (0, _instanceOfJs.isHTMLElement)(element)) {
        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
        var elementCss = (0, _getComputedStyleJsDefault.default)(element);
        if (elementCss.position === 'fixed') return null;
    }
    var currentNode = (0, _getParentNodeJsDefault.default)(element);
    if ((0, _instanceOfJs.isShadowRoot)(currentNode)) currentNode = currentNode.host;
    while((0, _instanceOfJs.isHTMLElement)(currentNode) && [
        'html',
        'body'
    ].indexOf((0, _getNodeNameJsDefault.default)(currentNode)) < 0){
        var css = (0, _getComputedStyleJsDefault.default)(currentNode); // This is non-exhaustive but covers the most common CSS properties that
        // create a containing block.
        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block
        if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || [
            'transform',
            'perspective'
        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') return currentNode;
        else currentNode = currentNode.parentNode;
    }
    return null;
} // Gets the closest ancestor positioned element. Handles some edge cases,
function getOffsetParent(element) {
    var window = (0, _getWindowJsDefault.default)(element);
    var offsetParent = getTrueOffsetParent(element);
    while(offsetParent && (0, _isTableElementJsDefault.default)(offsetParent) && (0, _getComputedStyleJsDefault.default)(offsetParent).position === 'static')offsetParent = getTrueOffsetParent(offsetParent);
    if (offsetParent && ((0, _getNodeNameJsDefault.default)(offsetParent) === 'html' || (0, _getNodeNameJsDefault.default)(offsetParent) === 'body' && (0, _getComputedStyleJsDefault.default)(offsetParent).position === 'static')) return window;
    return offsetParent || getContainingBlock(element) || window;
}

},{"./getWindow.js":"fYC42","./getNodeName.js":"4Hnqb","./getComputedStyle.js":"jbfT5","./instanceOf.js":"ipye8","./isTableElement.js":"7W8QO","./getParentNode.js":"aEx5x","../utils/userAgent.js":"cKJ5P","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7W8QO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>isTableElement);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
function isTableElement(element) {
    return [
        'table',
        'td',
        'th'
    ].indexOf((0, _getNodeNameJsDefault.default)(element)) >= 0;
}

},{"./getNodeName.js":"4Hnqb","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6x9qu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>orderModifiers);
var _enumsJs = require("../enums.js"); // source: https://stackoverflow.com/questions/49875255
function order(modifiers) {
    var map = new Map();
    var visited = new Set();
    var result = [];
    modifiers.forEach(function(modifier) {
        map.set(modifier.name, modifier);
    }); // On visiting object, check for its dependencies and visit them recursively
    function sort(modifier) {
        visited.add(modifier.name);
        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
        requires.forEach(function(dep) {
            if (!visited.has(dep)) {
                var depModifier = map.get(dep);
                if (depModifier) sort(depModifier);
            }
        });
        result.push(modifier);
    }
    modifiers.forEach(function(modifier) {
        if (!visited.has(modifier.name)) // check for visited object
        sort(modifier);
    });
    return result;
}
function orderModifiers(modifiers) {
    // order based on dependencies
    var orderedModifiers = order(modifiers); // order based on phase
    return (0, _enumsJs.modifierPhases).reduce(function(acc, phase) {
        return acc.concat(orderedModifiers.filter(function(modifier) {
            return modifier.phase === phase;
        }));
    }, []);
}

},{"../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gWj20":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>debounce);
function debounce(fn) {
    var pending;
    return function() {
        if (!pending) pending = new Promise(function(resolve) {
            Promise.resolve().then(function() {
                pending = undefined;
                resolve(fn());
            });
        });
        return pending;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8Xt9o":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergeByName);
function mergeByName(modifiers) {
    var merged = modifiers.reduce(function(merged, current) {
        var existing = merged[current.name];
        merged[current.name] = existing ? Object.assign({}, existing, current, {
            options: Object.assign({}, existing.options, current.options),
            data: Object.assign({}, existing.data, current.data)
        }) : current;
        return merged;
    }, {}); // IE11 does not support Object.values
    return Object.keys(merged).map(function(key) {
        return merged[key];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2YWVs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>detectOverflow);
var _getClippingRectJs = require("../dom-utils/getClippingRect.js");
var _getClippingRectJsDefault = parcelHelpers.interopDefault(_getClippingRectJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getBoundingClientRectJs = require("../dom-utils/getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _computeOffsetsJs = require("./computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
var _rectToClientRectJs = require("./rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _enumsJs = require("../enums.js");
var _instanceOfJs = require("../dom-utils/instanceOf.js");
var _mergePaddingObjectJs = require("./mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("./expandToHashMap.js"); // eslint-disable-next-line import/no-unused-modules
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
function detectOverflow(state, options) {
    if (options === void 0) options = {};
    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? (0, _enumsJs.clippingParents) : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? (0, _enumsJs.viewport) : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? (0, _enumsJs.popper) : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = (0, _mergePaddingObjectJsDefault.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMapJsDefault.default)(padding, (0, _enumsJs.basePlacements)));
    var altContext = elementContext === (0, _enumsJs.popper) ? (0, _enumsJs.reference) : (0, _enumsJs.popper);
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = (0, _getClippingRectJsDefault.default)((0, _instanceOfJs.isElement)(element) ? element : element.contextElement || (0, _getDocumentElementJsDefault.default)(state.elements.popper), boundary, rootBoundary, strategy);
    var referenceClientRect = (0, _getBoundingClientRectJsDefault.default)(state.elements.reference);
    var popperOffsets = (0, _computeOffsetsJsDefault.default)({
        reference: referenceClientRect,
        element: popperRect,
        strategy: 'absolute',
        placement: placement
    });
    var popperClientRect = (0, _rectToClientRectJsDefault.default)(Object.assign({}, popperRect, popperOffsets));
    var elementClientRect = elementContext === (0, _enumsJs.popper) ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
    // 0 or negative = within the clipping rect
    var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element
    if (elementContext === (0, _enumsJs.popper) && offsetData) {
        var offset = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key) {
            var multiply = [
                (0, _enumsJs.right),
                (0, _enumsJs.bottom)
            ].indexOf(key) >= 0 ? 1 : -1;
            var axis = [
                (0, _enumsJs.top),
                (0, _enumsJs.bottom)
            ].indexOf(key) >= 0 ? 'y' : 'x';
            overflowOffsets[key] += offset[axis] * multiply;
        });
    }
    return overflowOffsets;
}

},{"../dom-utils/getClippingRect.js":"heMj5","../dom-utils/getDocumentElement.js":"av3Bt","../dom-utils/getBoundingClientRect.js":"8WtHW","./computeOffsets.js":"hCFQM","./rectToClientRect.js":"h62Ik","../enums.js":"jVhmu","../dom-utils/instanceOf.js":"ipye8","./mergePaddingObject.js":"4nxAg","./expandToHashMap.js":"57Ue6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"heMj5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getClippingRect);
var _enumsJs = require("../enums.js");
var _getViewportRectJs = require("./getViewportRect.js");
var _getViewportRectJsDefault = parcelHelpers.interopDefault(_getViewportRectJs);
var _getDocumentRectJs = require("./getDocumentRect.js");
var _getDocumentRectJsDefault = parcelHelpers.interopDefault(_getDocumentRectJs);
var _listScrollParentsJs = require("./listScrollParents.js");
var _listScrollParentsJsDefault = parcelHelpers.interopDefault(_listScrollParentsJs);
var _getOffsetParentJs = require("./getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _instanceOfJs = require("./instanceOf.js");
var _getBoundingClientRectJs = require("./getBoundingClientRect.js");
var _getBoundingClientRectJsDefault = parcelHelpers.interopDefault(_getBoundingClientRectJs);
var _getParentNodeJs = require("./getParentNode.js");
var _getParentNodeJsDefault = parcelHelpers.interopDefault(_getParentNodeJs);
var _containsJs = require("./contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getNodeNameJs = require("./getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _rectToClientRectJs = require("../utils/rectToClientRect.js");
var _rectToClientRectJsDefault = parcelHelpers.interopDefault(_rectToClientRectJs);
var _mathJs = require("../utils/math.js");
function getInnerBoundingClientRect(element, strategy) {
    var rect = (0, _getBoundingClientRectJsDefault.default)(element, false, strategy === 'fixed');
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
}
function getClientRectFromMixedType(element, clippingParent, strategy) {
    return clippingParent === (0, _enumsJs.viewport) ? (0, _rectToClientRectJsDefault.default)((0, _getViewportRectJsDefault.default)(element, strategy)) : (0, _instanceOfJs.isElement)(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : (0, _rectToClientRectJsDefault.default)((0, _getDocumentRectJsDefault.default)((0, _getDocumentElementJsDefault.default)(element)));
} // A "clipping parent" is an overflowable container with the characteristic of
// clipping (or hiding) overflowing elements with a position different from
// `initial`
function getClippingParents(element) {
    var clippingParents = (0, _listScrollParentsJsDefault.default)((0, _getParentNodeJsDefault.default)(element));
    var canEscapeClipping = [
        'absolute',
        'fixed'
    ].indexOf((0, _getComputedStyleJsDefault.default)(element).position) >= 0;
    var clipperElement = canEscapeClipping && (0, _instanceOfJs.isHTMLElement)(element) ? (0, _getOffsetParentJsDefault.default)(element) : element;
    if (!(0, _instanceOfJs.isElement)(clipperElement)) return [];
     // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414
    return clippingParents.filter(function(clippingParent) {
        return (0, _instanceOfJs.isElement)(clippingParent) && (0, _containsJsDefault.default)(clippingParent, clipperElement) && (0, _getNodeNameJsDefault.default)(clippingParent) !== 'body';
    });
} // Gets the maximum area that the element is visible in due to any number of
function getClippingRect(element, boundary, rootBoundary, strategy) {
    var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
    var clippingParents = [].concat(mainClippingParents, [
        rootBoundary
    ]);
    var firstClippingParent = clippingParents[0];
    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {
        var rect = getClientRectFromMixedType(element, clippingParent, strategy);
        accRect.top = (0, _mathJs.max)(rect.top, accRect.top);
        accRect.right = (0, _mathJs.min)(rect.right, accRect.right);
        accRect.bottom = (0, _mathJs.min)(rect.bottom, accRect.bottom);
        accRect.left = (0, _mathJs.max)(rect.left, accRect.left);
        return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent, strategy));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
}

},{"../enums.js":"jVhmu","./getViewportRect.js":"fBHZw","./getDocumentRect.js":"1pyhi","./listScrollParents.js":"b5rfb","./getOffsetParent.js":"fac6D","./getDocumentElement.js":"av3Bt","./getComputedStyle.js":"jbfT5","./instanceOf.js":"ipye8","./getBoundingClientRect.js":"8WtHW","./getParentNode.js":"aEx5x","./contains.js":"dndqI","./getNodeName.js":"4Hnqb","../utils/rectToClientRect.js":"h62Ik","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fBHZw":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getViewportRect);
var _getWindowJs = require("./getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _isLayoutViewportJs = require("./isLayoutViewport.js");
var _isLayoutViewportJsDefault = parcelHelpers.interopDefault(_isLayoutViewportJs);
function getViewportRect(element, strategy) {
    var win = (0, _getWindowJsDefault.default)(element);
    var html = (0, _getDocumentElementJsDefault.default)(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0;
    if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height;
        var layoutViewport = (0, _isLayoutViewportJsDefault.default)();
        if (layoutViewport || !layoutViewport && strategy === 'fixed') {
            x = visualViewport.offsetLeft;
            y = visualViewport.offsetTop;
        }
    }
    return {
        width: width,
        height: height,
        x: x + (0, _getWindowScrollBarXJsDefault.default)(element),
        y: y
    };
}

},{"./getWindow.js":"fYC42","./getDocumentElement.js":"av3Bt","./getWindowScrollBarX.js":"dZ6cX","./isLayoutViewport.js":"lbQUA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1pyhi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getDocumentRect);
var _getDocumentElementJs = require("./getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("./getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getWindowScrollBarXJs = require("./getWindowScrollBarX.js");
var _getWindowScrollBarXJsDefault = parcelHelpers.interopDefault(_getWindowScrollBarXJs);
var _getWindowScrollJs = require("./getWindowScroll.js");
var _getWindowScrollJsDefault = parcelHelpers.interopDefault(_getWindowScrollJs);
var _mathJs = require("../utils/math.js"); // Gets the entire size of the scrollable document area, even extending outside
function getDocumentRect(element) {
    var _element$ownerDocumen;
    var html = (0, _getDocumentElementJsDefault.default)(element);
    var winScroll = (0, _getWindowScrollJsDefault.default)(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = (0, _mathJs.max)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = (0, _mathJs.max)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + (0, _getWindowScrollBarXJsDefault.default)(element);
    var y = -winScroll.scrollTop;
    if ((0, _getComputedStyleJsDefault.default)(body || html).direction === 'rtl') x += (0, _mathJs.max)(html.clientWidth, body ? body.clientWidth : 0) - width;
    return {
        width: width,
        height: height,
        x: x,
        y: y
    };
}

},{"./getDocumentElement.js":"av3Bt","./getComputedStyle.js":"jbfT5","./getWindowScrollBarX.js":"dZ6cX","./getWindowScroll.js":"28xxo","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dndqI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>contains);
var _instanceOfJs = require("./instanceOf.js");
function contains(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method
    if (parent.contains(child)) return true;
    else if (rootNode && (0, _instanceOfJs.isShadowRoot)(rootNode)) {
        var next = child;
        do {
            if (next && parent.isSameNode(next)) return true;
             // $FlowFixMe[prop-missing]: need a better way to handle this...
            next = next.parentNode || next.host;
        }while (next);
    } // Give up, the result is false
    return false;
}

},{"./instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h62Ik":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>rectToClientRect);
function rectToClientRect(rect) {
    return Object.assign({}, rect, {
        left: rect.x,
        top: rect.y,
        right: rect.x + rect.width,
        bottom: rect.y + rect.height
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hCFQM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>computeOffsets);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getMainAxisFromPlacementJs = require("./getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _enumsJs = require("../enums.js");
function computeOffsets(_ref) {
    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;
    var basePlacement = placement ? (0, _getBasePlacementJsDefault.default)(placement) : null;
    var variation = placement ? (0, _getVariationJsDefault.default)(placement) : null;
    var commonX = reference.x + reference.width / 2 - element.width / 2;
    var commonY = reference.y + reference.height / 2 - element.height / 2;
    var offsets;
    switch(basePlacement){
        case 0, _enumsJs.top:
            offsets = {
                x: commonX,
                y: reference.y - element.height
            };
            break;
        case 0, _enumsJs.bottom:
            offsets = {
                x: commonX,
                y: reference.y + reference.height
            };
            break;
        case 0, _enumsJs.right:
            offsets = {
                x: reference.x + reference.width,
                y: commonY
            };
            break;
        case 0, _enumsJs.left:
            offsets = {
                x: reference.x - element.width,
                y: commonY
            };
            break;
        default:
            offsets = {
                x: reference.x,
                y: reference.y
            };
    }
    var mainAxis = basePlacement ? (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement) : null;
    if (mainAxis != null) {
        var len = mainAxis === 'y' ? 'height' : 'width';
        switch(variation){
            case 0, _enumsJs.start:
                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
                break;
            case 0, _enumsJs.end:
                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
                break;
            default:
        }
    }
    return offsets;
}

},{"./getBasePlacement.js":"eyEpU","./getVariation.js":"4mx8J","./getMainAxisFromPlacement.js":"lqRR4","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eyEpU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getBasePlacement);
var _enumsJs = require("../enums.js");
function getBasePlacement(placement) {
    return placement.split('-')[0];
}

},{"../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4mx8J":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getVariation);
function getVariation(placement) {
    return placement.split('-')[1];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lqRR4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getMainAxisFromPlacement);
function getMainAxisFromPlacement(placement) {
    return [
        'top',
        'bottom'
    ].indexOf(placement) >= 0 ? 'x' : 'y';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4nxAg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>mergePaddingObject);
var _getFreshSideObjectJs = require("./getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
function mergePaddingObject(paddingObject) {
    return Object.assign({}, (0, _getFreshSideObjectJsDefault.default)(), paddingObject);
}

},{"./getFreshSideObject.js":"il3RZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"il3RZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getFreshSideObject);
function getFreshSideObject() {
    return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"57Ue6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>expandToHashMap);
function expandToHashMap(value, keys) {
    return keys.reduce(function(hashMap, key) {
        hashMap[key] = value;
        return hashMap;
    }, {});
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aM4Q6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createPopperLite", ()=>(0, _popperLiteJs.createPopper)) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "createPopper", ()=>createPopper) // eslint-disable-next-line import/no-unused-modules
;
parcelHelpers.export(exports, "popperGenerator", ()=>(0, _createPopperJs.popperGenerator));
parcelHelpers.export(exports, "defaultModifiers", ()=>defaultModifiers);
parcelHelpers.export(exports, "detectOverflow", ()=>(0, _createPopperJs.detectOverflow));
var _createPopperJs = require("./createPopper.js");
var _eventListenersJs = require("./modifiers/eventListeners.js");
var _eventListenersJsDefault = parcelHelpers.interopDefault(_eventListenersJs);
var _popperOffsetsJs = require("./modifiers/popperOffsets.js");
var _popperOffsetsJsDefault = parcelHelpers.interopDefault(_popperOffsetsJs);
var _computeStylesJs = require("./modifiers/computeStyles.js");
var _computeStylesJsDefault = parcelHelpers.interopDefault(_computeStylesJs);
var _applyStylesJs = require("./modifiers/applyStyles.js");
var _applyStylesJsDefault = parcelHelpers.interopDefault(_applyStylesJs);
var _offsetJs = require("./modifiers/offset.js");
var _offsetJsDefault = parcelHelpers.interopDefault(_offsetJs);
var _flipJs = require("./modifiers/flip.js");
var _flipJsDefault = parcelHelpers.interopDefault(_flipJs);
var _preventOverflowJs = require("./modifiers/preventOverflow.js");
var _preventOverflowJsDefault = parcelHelpers.interopDefault(_preventOverflowJs);
var _arrowJs = require("./modifiers/arrow.js");
var _arrowJsDefault = parcelHelpers.interopDefault(_arrowJs);
var _hideJs = require("./modifiers/hide.js");
var _hideJsDefault = parcelHelpers.interopDefault(_hideJs);
var _popperLiteJs = require("./popper-lite.js");
var _indexJs = require("./modifiers/index.js");
parcelHelpers.exportAll(_indexJs, exports);
var defaultModifiers = [
    (0, _eventListenersJsDefault.default),
    (0, _popperOffsetsJsDefault.default),
    (0, _computeStylesJsDefault.default),
    (0, _applyStylesJsDefault.default),
    (0, _offsetJsDefault.default),
    (0, _flipJsDefault.default),
    (0, _preventOverflowJsDefault.default),
    (0, _arrowJsDefault.default),
    (0, _hideJsDefault.default)
];
var createPopper = /*#__PURE__*/ (0, _createPopperJs.popperGenerator)({
    defaultModifiers: defaultModifiers
}); // eslint-disable-next-line import/no-unused-modules

},{"./createPopper.js":"3NuA9","./modifiers/eventListeners.js":"b3l2h","./modifiers/popperOffsets.js":"iQIBA","./modifiers/computeStyles.js":"cU0Y8","./modifiers/applyStyles.js":"k3FfN","./modifiers/offset.js":"fv6qu","./modifiers/flip.js":"8TrBc","./modifiers/preventOverflow.js":"hksGy","./modifiers/arrow.js":"5tq5K","./modifiers/hide.js":"1DgVf","./popper-lite.js":false,"./modifiers/index.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b3l2h":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getWindowJs = require("../dom-utils/getWindow.js"); // eslint-disable-next-line import/no-unused-modules
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var passive = {
    passive: true
};
function effect(_ref) {
    var state = _ref.state, instance = _ref.instance, options = _ref.options;
    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
    var window = (0, _getWindowJsDefault.default)(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    if (scroll) scrollParents.forEach(function(scrollParent) {
        scrollParent.addEventListener('scroll', instance.update, passive);
    });
    if (resize) window.addEventListener('resize', instance.update, passive);
    return function() {
        if (scroll) scrollParents.forEach(function(scrollParent) {
            scrollParent.removeEventListener('scroll', instance.update, passive);
        });
        if (resize) window.removeEventListener('resize', instance.update, passive);
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'eventListeners',
    enabled: true,
    phase: 'write',
    fn: function fn() {},
    effect: effect,
    data: {}
};

},{"../dom-utils/getWindow.js":"fYC42","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iQIBA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _computeOffsetsJs = require("../utils/computeOffsets.js");
var _computeOffsetsJsDefault = parcelHelpers.interopDefault(_computeOffsetsJs);
function popperOffsets(_ref) {
    var state = _ref.state, name = _ref.name;
    // Offsets are the actual position the popper needs to have to be
    // properly positioned near its reference element
    // This is the most basic placement, and will be adjusted by
    // the modifiers in the next step
    state.modifiersData[name] = (0, _computeOffsetsJsDefault.default)({
        reference: state.rects.reference,
        element: state.rects.popper,
        strategy: 'absolute',
        placement: state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'popperOffsets',
    enabled: true,
    phase: 'read',
    fn: popperOffsets,
    data: {}
};

},{"../utils/computeOffsets.js":"hCFQM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cU0Y8":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapToStyles", ()=>mapToStyles);
var _enumsJs = require("../enums.js");
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getWindowJs = require("../dom-utils/getWindow.js");
var _getWindowJsDefault = parcelHelpers.interopDefault(_getWindowJs);
var _getDocumentElementJs = require("../dom-utils/getDocumentElement.js");
var _getDocumentElementJsDefault = parcelHelpers.interopDefault(_getDocumentElementJs);
var _getComputedStyleJs = require("../dom-utils/getComputedStyle.js");
var _getComputedStyleJsDefault = parcelHelpers.interopDefault(_getComputedStyleJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _mathJs = require("../utils/math.js"); // eslint-disable-next-line import/no-unused-modules
var unsetSides = {
    top: 'auto',
    right: 'auto',
    bottom: 'auto',
    left: 'auto'
}; // Round the offsets to the nearest suitable subpixel based on the DPR.
// Zooming can change the DPR, but it seems to report a value that will
// cleanly divide the values into the appropriate subpixels.
function roundOffsetsByDPR(_ref, win) {
    var x = _ref.x, y = _ref.y;
    var dpr = win.devicePixelRatio || 1;
    return {
        x: (0, _mathJs.round)(x * dpr) / dpr || 0,
        y: (0, _mathJs.round)(y * dpr) / dpr || 0
    };
}
function mapToStyles(_ref2) {
    var _Object$assign2;
    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
        x: x,
        y: y
    }) : {
        x: x,
        y: y
    };
    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty('x');
    var hasY = offsets.hasOwnProperty('y');
    var sideX = (0, _enumsJs.left);
    var sideY = (0, _enumsJs.top);
    var win = window;
    if (adaptive) {
        var offsetParent = (0, _getOffsetParentJsDefault.default)(popper);
        var heightProp = 'clientHeight';
        var widthProp = 'clientWidth';
        if (offsetParent === (0, _getWindowJsDefault.default)(popper)) {
            offsetParent = (0, _getDocumentElementJsDefault.default)(popper);
            if ((0, _getComputedStyleJsDefault.default)(offsetParent).position !== 'static' && position === 'absolute') {
                heightProp = 'scrollHeight';
                widthProp = 'scrollWidth';
            }
        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it
        offsetParent;
        if (placement === (0, _enumsJs.top) || (placement === (0, _enumsJs.left) || placement === (0, _enumsJs.right)) && variation === (0, _enumsJs.end)) {
            sideY = (0, _enumsJs.bottom);
            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
            y -= offsetY - popperRect.height;
            y *= gpuAcceleration ? 1 : -1;
        }
        if (placement === (0, _enumsJs.left) || (placement === (0, _enumsJs.top) || placement === (0, _enumsJs.bottom)) && variation === (0, _enumsJs.end)) {
            sideX = (0, _enumsJs.right);
            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
            x -= offsetX - popperRect.width;
            x *= gpuAcceleration ? 1 : -1;
        }
    }
    var commonStyles = Object.assign({
        position: position
    }, adaptive && unsetSides);
    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
        x: x,
        y: y
    }, (0, _getWindowJsDefault.default)(popper)) : {
        x: x,
        y: y
    };
    x = _ref4.x;
    y = _ref4.y;
    if (gpuAcceleration) {
        var _Object$assign;
        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }
    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
}
function computeStyles(_ref5) {
    var state = _ref5.state, options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
        placement: (0, _getBasePlacementJsDefault.default)(state.placement),
        variation: (0, _getVariationJsDefault.default)(state.placement),
        popper: state.elements.popper,
        popperRect: state.rects.popper,
        gpuAcceleration: gpuAcceleration,
        isFixed: state.options.strategy === 'fixed'
    };
    if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive: adaptive,
        roundOffsets: roundOffsets
    })));
    if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: 'absolute',
        adaptive: false,
        roundOffsets: roundOffsets
    })));
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
        'data-popper-placement': state.placement
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'computeStyles',
    enabled: true,
    phase: 'beforeWrite',
    fn: computeStyles,
    data: {}
};

},{"../enums.js":"jVhmu","../dom-utils/getOffsetParent.js":"fac6D","../dom-utils/getWindow.js":"fYC42","../dom-utils/getDocumentElement.js":"av3Bt","../dom-utils/getComputedStyle.js":"jbfT5","../utils/getBasePlacement.js":"eyEpU","../utils/getVariation.js":"4mx8J","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k3FfN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getNodeNameJs = require("../dom-utils/getNodeName.js");
var _getNodeNameJsDefault = parcelHelpers.interopDefault(_getNodeNameJs);
var _instanceOfJs = require("../dom-utils/instanceOf.js"); // This modifier takes the styles prepared by the `computeStyles` modifier
// and applies them to the HTMLElements such as popper and arrow
function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function(name) {
        var style = state.styles[name] || {};
        var attributes = state.attributes[name] || {};
        var element = state.elements[name]; // arrow is optional + virtual elements
        if (!(0, _instanceOfJs.isHTMLElement)(element) || !(0, _getNodeNameJsDefault.default)(element)) return;
         // Flow doesn't support to extend this property, but it's the most
        // effective way to apply styles to an HTMLElement
        // $FlowFixMe[cannot-write]
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(name) {
            var value = attributes[name];
            if (value === false) element.removeAttribute(name);
            else element.setAttribute(name, value === true ? '' : value);
        });
    });
}
function effect(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
        popper: {
            position: state.options.strategy,
            left: '0',
            top: '0',
            margin: '0'
        },
        arrow: {
            position: 'absolute'
        },
        reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;
    if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);
    return function() {
        Object.keys(state.elements).forEach(function(name) {
            var element = state.elements[name];
            var attributes = state.attributes[name] || {};
            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them
            var style = styleProperties.reduce(function(style, property) {
                style[property] = '';
                return style;
            }, {}); // arrow is optional + virtual elements
            if (!(0, _instanceOfJs.isHTMLElement)(element) || !(0, _getNodeNameJsDefault.default)(element)) return;
            Object.assign(element.style, style);
            Object.keys(attributes).forEach(function(attribute) {
                element.removeAttribute(attribute);
            });
        });
    };
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'applyStyles',
    enabled: true,
    phase: 'write',
    fn: applyStyles,
    effect: effect,
    requires: [
        'computeStyles'
    ]
};

},{"../dom-utils/getNodeName.js":"4Hnqb","../dom-utils/instanceOf.js":"ipye8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fv6qu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "distanceAndSkiddingToXY", ()=>distanceAndSkiddingToXY);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _enumsJs = require("../enums.js"); // eslint-disable-next-line import/no-unused-modules
function distanceAndSkiddingToXY(placement, rects, offset) {
    var basePlacement = (0, _getBasePlacementJsDefault.default)(placement);
    var invertDistance = [
        (0, _enumsJs.left),
        (0, _enumsJs.top)
    ].indexOf(basePlacement) >= 0 ? -1 : 1;
    var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
        placement: placement
    })) : offset, skidding = _ref[0], distance = _ref[1];
    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [
        (0, _enumsJs.left),
        (0, _enumsJs.right)
    ].indexOf(basePlacement) >= 0 ? {
        x: distance,
        y: skidding
    } : {
        x: skidding,
        y: distance
    };
}
function offset(_ref2) {
    var state = _ref2.state, options = _ref2.options, name = _ref2.name;
    var _options$offset = options.offset, offset = _options$offset === void 0 ? [
        0,
        0
    ] : _options$offset;
    var data = (0, _enumsJs.placements).reduce(function(acc, placement) {
        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
        return acc;
    }, {});
    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
    if (state.modifiersData.popperOffsets != null) {
        state.modifiersData.popperOffsets.x += x;
        state.modifiersData.popperOffsets.y += y;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'offset',
    enabled: true,
    phase: 'main',
    requires: [
        'popperOffsets'
    ],
    fn: offset
};

},{"../utils/getBasePlacement.js":"eyEpU","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8TrBc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getOppositePlacementJs = require("../utils/getOppositePlacement.js");
var _getOppositePlacementJsDefault = parcelHelpers.interopDefault(_getOppositePlacementJs);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getOppositeVariationPlacementJs = require("../utils/getOppositeVariationPlacement.js");
var _getOppositeVariationPlacementJsDefault = parcelHelpers.interopDefault(_getOppositeVariationPlacementJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _computeAutoPlacementJs = require("../utils/computeAutoPlacement.js");
var _computeAutoPlacementJsDefault = parcelHelpers.interopDefault(_computeAutoPlacementJs);
var _enumsJs = require("../enums.js");
var _getVariationJs = require("../utils/getVariation.js"); // eslint-disable-next-line import/no-unused-modules
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
function getExpandedFallbackPlacements(placement) {
    if ((0, _getBasePlacementJsDefault.default)(placement) === (0, _enumsJs.auto)) return [];
    var oppositePlacement = (0, _getOppositePlacementJsDefault.default)(placement);
    return [
        (0, _getOppositeVariationPlacementJsDefault.default)(placement),
        oppositePlacement,
        (0, _getOppositeVariationPlacementJsDefault.default)(oppositePlacement)
    ];
}
function flip(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    if (state.modifiersData[name]._skip) return;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = (0, _getBasePlacementJsDefault.default)(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [
        (0, _getOppositePlacementJsDefault.default)(preferredPlacement)
    ] : getExpandedFallbackPlacements(preferredPlacement));
    var placements = [
        preferredPlacement
    ].concat(fallbackPlacements).reduce(function(acc, placement) {
        return acc.concat((0, _getBasePlacementJsDefault.default)(placement) === (0, _enumsJs.auto) ? (0, _computeAutoPlacementJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding,
            flipVariations: flipVariations,
            allowedAutoPlacements: allowedAutoPlacements
        }) : placement);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements[0];
    for(var i = 0; i < placements.length; i++){
        var placement = placements[i];
        var _basePlacement = (0, _getBasePlacementJsDefault.default)(placement);
        var isStartVariation = (0, _getVariationJsDefault.default)(placement) === (0, _enumsJs.start);
        var isVertical = [
            (0, _enumsJs.top),
            (0, _enumsJs.bottom)
        ].indexOf(_basePlacement) >= 0;
        var len = isVertical ? 'width' : 'height';
        var overflow = (0, _detectOverflowJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            altBoundary: altBoundary,
            padding: padding
        });
        var mainVariationSide = isVertical ? isStartVariation ? (0, _enumsJs.right) : (0, _enumsJs.left) : isStartVariation ? (0, _enumsJs.bottom) : (0, _enumsJs.top);
        if (referenceRect[len] > popperRect[len]) mainVariationSide = (0, _getOppositePlacementJsDefault.default)(mainVariationSide);
        var altVariationSide = (0, _getOppositePlacementJsDefault.default)(mainVariationSide);
        var checks = [];
        if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);
        if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
        if (checks.every(function(check) {
            return check;
        })) {
            firstFittingPlacement = placement;
            makeFallbackChecks = false;
            break;
        }
        checksMap.set(placement, checks);
    }
    if (makeFallbackChecks) {
        // `2` may be desired in some cases – research later
        var numberOfChecks = flipVariations ? 3 : 1;
        var _loop = function _loop(_i) {
            var fittingPlacement = placements.find(function(placement) {
                var checks = checksMap.get(placement);
                if (checks) return checks.slice(0, _i).every(function(check) {
                    return check;
                });
            });
            if (fittingPlacement) {
                firstFittingPlacement = fittingPlacement;
                return "break";
            }
        };
        for(var _i = numberOfChecks; _i > 0; _i--){
            var _ret = _loop(_i);
            if (_ret === "break") break;
        }
    }
    if (state.placement !== firstFittingPlacement) {
        state.modifiersData[name]._skip = true;
        state.placement = firstFittingPlacement;
        state.reset = true;
    }
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'flip',
    enabled: true,
    phase: 'main',
    fn: flip,
    requiresIfExists: [
        'offset'
    ],
    data: {
        _skip: false
    }
};

},{"../utils/getOppositePlacement.js":"98Iju","../utils/getBasePlacement.js":"eyEpU","../utils/getOppositeVariationPlacement.js":"l3jQn","../utils/detectOverflow.js":"2YWVs","../utils/computeAutoPlacement.js":"2ataH","../enums.js":"jVhmu","../utils/getVariation.js":"4mx8J","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"98Iju":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOppositePlacement);
var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
};
function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l3jQn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getOppositeVariationPlacement);
var hash = {
    start: 'end',
    end: 'start'
};
function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function(matched) {
        return hash[matched];
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2ataH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>computeAutoPlacement);
var _getVariationJs = require("./getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("./detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getBasePlacementJs = require("./getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
function computeAutoPlacement(state, options) {
    if (options === void 0) options = {};
    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? (0, _enumsJs.placements) : _options$allowedAutoP;
    var variation = (0, _getVariationJsDefault.default)(placement);
    var placements = variation ? flipVariations ? (0, _enumsJs.variationPlacements) : (0, _enumsJs.variationPlacements).filter(function(placement) {
        return (0, _getVariationJsDefault.default)(placement) === variation;
    }) : (0, _enumsJs.basePlacements);
    var allowedPlacements = placements.filter(function(placement) {
        return allowedAutoPlacements.indexOf(placement) >= 0;
    });
    if (allowedPlacements.length === 0) allowedPlacements = placements;
     // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...
    var overflows = allowedPlacements.reduce(function(acc, placement) {
        acc[placement] = (0, _detectOverflowJsDefault.default)(state, {
            placement: placement,
            boundary: boundary,
            rootBoundary: rootBoundary,
            padding: padding
        })[(0, _getBasePlacementJsDefault.default)(placement)];
        return acc;
    }, {});
    return Object.keys(overflows).sort(function(a, b) {
        return overflows[a] - overflows[b];
    });
}

},{"./getVariation.js":"4mx8J","../enums.js":"jVhmu","./detectOverflow.js":"2YWVs","./getBasePlacement.js":"eyEpU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hksGy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _getAltAxisJs = require("../utils/getAltAxis.js");
var _getAltAxisJsDefault = parcelHelpers.interopDefault(_getAltAxisJs);
var _withinJs = require("../utils/within.js");
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
var _getVariationJs = require("../utils/getVariation.js");
var _getVariationJsDefault = parcelHelpers.interopDefault(_getVariationJs);
var _getFreshSideObjectJs = require("../utils/getFreshSideObject.js");
var _getFreshSideObjectJsDefault = parcelHelpers.interopDefault(_getFreshSideObjectJs);
var _mathJs = require("../utils/math.js");
function preventOverflow(_ref) {
    var state = _ref.state, options = _ref.options, name = _ref.name;
    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = (0, _detectOverflowJsDefault.default)(state, {
        boundary: boundary,
        rootBoundary: rootBoundary,
        padding: padding,
        altBoundary: altBoundary
    });
    var basePlacement = (0, _getBasePlacementJsDefault.default)(state.placement);
    var variation = (0, _getVariationJsDefault.default)(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement);
    var altAxis = (0, _getAltAxisJsDefault.default)(mainAxis);
    var popperOffsets = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
        placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
        mainAxis: tetherOffsetValue,
        altAxis: tetherOffsetValue
    } : Object.assign({
        mainAxis: 0,
        altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data = {
        x: 0,
        y: 0
    };
    if (!popperOffsets) return;
    if (checkMainAxis) {
        var _offsetModifierState$;
        var mainSide = mainAxis === 'y' ? (0, _enumsJs.top) : (0, _enumsJs.left);
        var altSide = mainAxis === 'y' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
        var len = mainAxis === 'y' ? 'height' : 'width';
        var offset = popperOffsets[mainAxis];
        var min = offset + overflow[mainSide];
        var max = offset - overflow[altSide];
        var additive = tether ? -popperRect[len] / 2 : 0;
        var minLen = variation === (0, _enumsJs.start) ? referenceRect[len] : popperRect[len];
        var maxLen = variation === (0, _enumsJs.start) ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
        // outside the reference bounds
        var arrowElement = state.elements.arrow;
        var arrowRect = tether && arrowElement ? (0, _getLayoutRectJsDefault.default)(arrowElement) : {
            width: 0,
            height: 0
        };
        var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0, _getFreshSideObjectJsDefault.default)();
        var arrowPaddingMin = arrowPaddingObject[mainSide];
        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
        // to include its full size in the calculation. If the reference is small
        // and near the edge of a boundary, the popper can overflow even if the
        // reference is not overflowing as well (e.g. virtual elements with no
        // width or height)
        var arrowLen = (0, _withinJs.within)(0, referenceRect[len], arrowRect[len]);
        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
        var arrowOffsetParent = state.elements.arrow && (0, _getOffsetParentJsDefault.default)(state.elements.arrow);
        var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
        var tetherMax = offset + maxOffset - offsetModifierValue;
        var preventedOffset = (0, _withinJs.within)(tether ? (0, _mathJs.min)(min, tetherMin) : min, offset, tether ? (0, _mathJs.max)(max, tetherMax) : max);
        popperOffsets[mainAxis] = preventedOffset;
        data[mainAxis] = preventedOffset - offset;
    }
    if (checkAltAxis) {
        var _offsetModifierState$2;
        var _mainSide = mainAxis === 'x' ? (0, _enumsJs.top) : (0, _enumsJs.left);
        var _altSide = mainAxis === 'x' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
        var _offset = popperOffsets[altAxis];
        var _len = altAxis === 'y' ? 'height' : 'width';
        var _min = _offset + overflow[_mainSide];
        var _max = _offset - overflow[_altSide];
        var isOriginSide = [
            (0, _enumsJs.top),
            (0, _enumsJs.left)
        ].indexOf(basePlacement) !== -1;
        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
        var _preventedOffset = tether && isOriginSide ? (0, _withinJs.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0, _withinJs.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
        popperOffsets[altAxis] = _preventedOffset;
        data[altAxis] = _preventedOffset - _offset;
    }
    state.modifiersData[name] = data;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'preventOverflow',
    enabled: true,
    phase: 'main',
    fn: preventOverflow,
    requiresIfExists: [
        'offset'
    ]
};

},{"../enums.js":"jVhmu","../utils/getBasePlacement.js":"eyEpU","../utils/getMainAxisFromPlacement.js":"lqRR4","../utils/getAltAxis.js":"hB6bd","../utils/within.js":"82Rs6","../dom-utils/getLayoutRect.js":"76Hja","../dom-utils/getOffsetParent.js":"fac6D","../utils/detectOverflow.js":"2YWVs","../utils/getVariation.js":"4mx8J","../utils/getFreshSideObject.js":"il3RZ","../utils/math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hB6bd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getAltAxis);
function getAltAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"82Rs6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "within", ()=>within);
parcelHelpers.export(exports, "withinMaxClamp", ()=>withinMaxClamp);
var _mathJs = require("./math.js");
function within(min, value, max) {
    return (0, _mathJs.max)(min, (0, _mathJs.min)(value, max));
}
function withinMaxClamp(min, value, max) {
    var v = within(min, value, max);
    return v > max ? max : v;
}

},{"./math.js":"aHRaj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5tq5K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _getBasePlacementJs = require("../utils/getBasePlacement.js");
var _getBasePlacementJsDefault = parcelHelpers.interopDefault(_getBasePlacementJs);
var _getLayoutRectJs = require("../dom-utils/getLayoutRect.js");
var _getLayoutRectJsDefault = parcelHelpers.interopDefault(_getLayoutRectJs);
var _containsJs = require("../dom-utils/contains.js");
var _containsJsDefault = parcelHelpers.interopDefault(_containsJs);
var _getOffsetParentJs = require("../dom-utils/getOffsetParent.js");
var _getOffsetParentJsDefault = parcelHelpers.interopDefault(_getOffsetParentJs);
var _getMainAxisFromPlacementJs = require("../utils/getMainAxisFromPlacement.js");
var _getMainAxisFromPlacementJsDefault = parcelHelpers.interopDefault(_getMainAxisFromPlacementJs);
var _withinJs = require("../utils/within.js");
var _mergePaddingObjectJs = require("../utils/mergePaddingObject.js");
var _mergePaddingObjectJsDefault = parcelHelpers.interopDefault(_mergePaddingObjectJs);
var _expandToHashMapJs = require("../utils/expandToHashMap.js");
var _expandToHashMapJsDefault = parcelHelpers.interopDefault(_expandToHashMapJs);
var _enumsJs = require("../enums.js"); // eslint-disable-next-line import/no-unused-modules
var toPaddingObject = function toPaddingObject(padding, state) {
    padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
        placement: state.placement
    })) : padding;
    return (0, _mergePaddingObjectJsDefault.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMapJsDefault.default)(padding, (0, _enumsJs.basePlacements)));
};
function arrow(_ref) {
    var _state$modifiersData$;
    var state = _ref.state, name = _ref.name, options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets = state.modifiersData.popperOffsets;
    var basePlacement = (0, _getBasePlacementJsDefault.default)(state.placement);
    var axis = (0, _getMainAxisFromPlacementJsDefault.default)(basePlacement);
    var isVertical = [
        (0, _enumsJs.left),
        (0, _enumsJs.right)
    ].indexOf(basePlacement) >= 0;
    var len = isVertical ? 'height' : 'width';
    if (!arrowElement || !popperOffsets) return;
    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = (0, _getLayoutRectJsDefault.default)(arrowElement);
    var minProp = axis === 'y' ? (0, _enumsJs.top) : (0, _enumsJs.left);
    var maxProp = axis === 'y' ? (0, _enumsJs.bottom) : (0, _enumsJs.right);
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
    var startDiff = popperOffsets[axis] - state.rects.reference[axis];
    var arrowOffsetParent = (0, _getOffsetParentJsDefault.default)(arrowElement);
    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
    // outside of the popper bounds
    var min = paddingObject[minProp];
    var max = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset = (0, _withinJs.within)(min, center, max); // Prevents breaking syntax highlighting...
    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
}
function effect(_ref2) {
    var state = _ref2.state, options = _ref2.options;
    var _options$element = options.element, arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;
    if (arrowElement == null) return;
     // CSS selector
    if (typeof arrowElement === 'string') {
        arrowElement = state.elements.popper.querySelector(arrowElement);
        if (!arrowElement) return;
    }
    if (!(0, _containsJsDefault.default)(state.elements.popper, arrowElement)) return;
    state.elements.arrow = arrowElement;
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'arrow',
    enabled: true,
    phase: 'main',
    fn: arrow,
    effect: effect,
    requires: [
        'popperOffsets'
    ],
    requiresIfExists: [
        'preventOverflow'
    ]
};

},{"../utils/getBasePlacement.js":"eyEpU","../dom-utils/getLayoutRect.js":"76Hja","../dom-utils/contains.js":"dndqI","../dom-utils/getOffsetParent.js":"fac6D","../utils/getMainAxisFromPlacement.js":"lqRR4","../utils/within.js":"82Rs6","../utils/mergePaddingObject.js":"4nxAg","../utils/expandToHashMap.js":"57Ue6","../enums.js":"jVhmu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1DgVf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _enumsJs = require("../enums.js");
var _detectOverflowJs = require("../utils/detectOverflow.js");
var _detectOverflowJsDefault = parcelHelpers.interopDefault(_detectOverflowJs);
function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) preventedOffsets = {
        x: 0,
        y: 0
    };
    return {
        top: overflow.top - rect.height - preventedOffsets.y,
        right: overflow.right - rect.width + preventedOffsets.x,
        bottom: overflow.bottom - rect.height + preventedOffsets.y,
        left: overflow.left - rect.width - preventedOffsets.x
    };
}
function isAnySideFullyClipped(overflow) {
    return [
        (0, _enumsJs.top),
        (0, _enumsJs.right),
        (0, _enumsJs.bottom),
        (0, _enumsJs.left)
    ].some(function(side) {
        return overflow[side] >= 0;
    });
}
function hide(_ref) {
    var state = _ref.state, name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = (0, _detectOverflowJsDefault.default)(state, {
        elementContext: 'reference'
    });
    var popperAltOverflow = (0, _detectOverflowJsDefault.default)(state, {
        altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
        referenceClippingOffsets: referenceClippingOffsets,
        popperEscapeOffsets: popperEscapeOffsets,
        isReferenceHidden: isReferenceHidden,
        hasPopperEscaped: hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
        'data-popper-reference-hidden': isReferenceHidden,
        'data-popper-escaped': hasPopperEscaped
    });
} // eslint-disable-next-line import/no-unused-modules
exports.default = {
    name: 'hide',
    enabled: true,
    phase: 'main',
    requiresIfExists: [
        'preventOverflow'
    ],
    fn: hide
};

},{"../enums.js":"jVhmu","../utils/detectOverflow.js":"2YWVs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"20eS9":[function(require,module,exports,__globalThis) {
/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */ var hasElementType = typeof Element !== 'undefined';
var hasMap = typeof Map === 'function';
var hasSet = typeof Set === 'function';
var hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;
// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js
function equal(a, b) {
    // START: fast-deep-equal es6/index.js 3.1.3
    if (a === b) return true;
    if (a && b && typeof a == 'object' && typeof b == 'object') {
        if (a.constructor !== b.constructor) return false;
        var length, i, keys;
        if (Array.isArray(a)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (!equal(a[i], b[i])) return false;
            return true;
        }
        // START: Modifications:
        // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code
        //    to co-exist with es5.
        // 2. Replace `for of` with es5 compliant iteration using `for`.
        //    Basically, take:
        //
        //    ```js
        //    for (i of a.entries())
        //      if (!b.has(i[0])) return false;
        //    ```
        //
        //    ... and convert to:
        //
        //    ```js
        //    it = a.entries();
        //    while (!(i = it.next()).done)
        //      if (!b.has(i.value[0])) return false;
        //    ```
        //
        //    **Note**: `i` access switches to `i.value`.
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!equal(i.value[1], b.get(i.value[0]))) return false;
            return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
            if (a.size !== b.size) return false;
            it = a.entries();
            while(!(i = it.next()).done)if (!b.has(i.value[0])) return false;
            return true;
        }
        // END: Modifications
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
            length = a.length;
            if (length != b.length) return false;
            for(i = length; i-- !== 0;)if (a[i] !== b[i]) return false;
            return true;
        }
        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
        // START: Modifications:
        // Apply guards for `Object.create(null)` handling. See:
        // - https://github.com/FormidableLabs/react-fast-compare/issues/64
        // - https://github.com/epoberezkin/fast-deep-equal/issues/49
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();
        // END: Modifications
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length) return false;
        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
        // END: fast-deep-equal
        // START: react-fast-compare
        // custom handling for DOM elements
        if (hasElementType && a instanceof Element) return false;
        // custom handling for React/Preact
        for(i = length; i-- !== 0;){
            if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) continue;
            // all other properties should be traversed as usual
            if (!equal(a[keys[i]], b[keys[i]])) return false;
        }
        // END: react-fast-compare
        // START: fast-deep-equal
        return true;
    }
    return a !== a && b !== b;
}
// end fast-deep-equal
module.exports = function isEqual(a, b) {
    try {
        return equal(a, b);
    } catch (error) {
        if ((error.message || '').match(/stack|recursion/i)) {
            // warn on circular references, don't crash
            // browsers give this different errors name and messages:
            // chrome/safari: "RangeError", "Maximum call stack size exceeded"
            // firefox: "InternalError", too much recursion"
            // edge: "Error", "Out of stack space"
            console.warn('react-fast-compare cannot handle circular refs');
            return false;
        }
        // some other error. we should definitely know about these
        throw error;
    }
};

},{}],"707Uz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getMaxSizeModifiers", ()=>getMaxSizeModifiers);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
function getMaxSizeModifiers(_ref) {
    var viewportPadding = _ref.viewportPadding;
    return [
        {
            /**
     * Performing DOM measurements in the 'read' phase,
     * which is the convention for popper modifiers
     */ name: 'maxSizeData',
            enabled: true,
            phase: 'read',
            fn: function fn(_ref2) {
                var state = _ref2.state, name = _ref2.name;
                if (!window.visualViewport) return;
                state.modifiersData[name] = {
                    viewport: {
                        width: window.visualViewport.width,
                        height: window.visualViewport.height
                    }
                };
            }
        },
        {
            /**
     * Applying max size CSS
     */ name: 'maxSize',
            enabled: true,
            phase: 'beforeWrite',
            requiresIfExists: [
                'offset',
                'preventOverflow',
                'flip'
            ],
            fn: function fn(_ref3) {
                var _data$viewport, _data$viewport2, _state$modifiersData$2, _state$modifiersData;
                var state = _ref3.state;
                var data = state.modifiersData.maxSizeData;
                if (typeof (data === null || data === void 0 || (_data$viewport = data.viewport) === null || _data$viewport === void 0 ? void 0 : _data$viewport.width) !== 'number' || typeof (data === null || data === void 0 || (_data$viewport2 = data.viewport) === null || _data$viewport2 === void 0 ? void 0 : _data$viewport2.height) !== 'number') // This shouldn't occur in a real browser but might in non-browser test environments
                return;
                var viewport = data.viewport;
                var _state$modifiersData$ = state.modifiersData.popperOffsets, popperOffsets = _state$modifiersData$ === void 0 ? {
                    x: 0,
                    y: 0
                } : _state$modifiersData$;
                var _state$placement$spli = state.placement.split('-'), _state$placement$spli2 = (0, _slicedToArrayDefault.default)(_state$placement$spli, 1), basePlacement = _state$placement$spli2[0];
                var placementOffset = (_state$modifiersData$2 = (_state$modifiersData = state.modifiersData) === null || _state$modifiersData === void 0 || (_state$modifiersData = _state$modifiersData.offset) === null || _state$modifiersData === void 0 ? void 0 : _state$modifiersData[state.placement]) !== null && _state$modifiersData$2 !== void 0 ? _state$modifiersData$2 : {
                    x: 0,
                    y: 0
                };
                // By default we set these to the entire viewport (minus padding)
                // Each placement direction will overwrite one of these
                var maxWidth = viewport.width - 2 * viewportPadding;
                var maxHeight = viewport.height - 2 * viewportPadding;
                if (basePlacement === 'top') maxHeight = state.rects.reference.y + // Viewport-relative position of reference element
                placementOffset.y - // Space between popper and reference
                viewportPadding;
                if (basePlacement === 'bottom') maxHeight = viewport.height - popperOffsets.y - // Viewport-relative position of popper
                viewportPadding;
                if (basePlacement === 'left') maxWidth = state.rects.reference.x + // Viewport-relative position of reference element
                placementOffset.x - // Space between popper and reference
                viewportPadding;
                if (basePlacement === 'right') maxWidth = viewport.width - popperOffsets.x - // Viewport-relative position of popper
                viewportPadding;
                state.styles.popper.maxWidth = "".concat(maxWidth, "px");
                state.styles.popper.maxHeight = "".concat(maxHeight, "px");
            }
        }
    ];
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8ME4i":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _portalDefault.default));
parcelHelpers.export(exports, "PORTAL_MOUNT_EVENT", ()=>(0, _constants.PORTAL_MOUNT_EVENT));
parcelHelpers.export(exports, "PORTAL_UNMOUNT_EVENT", ()=>(0, _constants.PORTAL_UNMOUNT_EVENT));
var _portal = require("./portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
var _constants = require("./constants");

},{"./portal":"aH8Jk","./constants":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aH8Jk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Portal);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _internalPortal = require("./internal/components/internal-portal");
var _internalPortalDefault = parcelHelpers.interopDefault(_internalPortal);
var _internalPortalNew = require("./internal/components/internal-portal-new");
var _internalPortalNewDefault = parcelHelpers.interopDefault(_internalPortalNew);
var _useIsSubsequentRender = require("./internal/hooks/use-is-subsequent-render");
var _useIsSubsequentRenderDefault = parcelHelpers.interopDefault(_useIsSubsequentRender);
var _usePortalEvent = require("./internal/hooks/use-portal-event");
var _usePortalEventDefault = parcelHelpers.interopDefault(_usePortalEvent);
function Portal(_ref) {
    var _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex, children = _ref.children, _ref$mountStrategy = _ref.mountStrategy, mountStrategy = _ref$mountStrategy === void 0 ? 'effect' : _ref$mountStrategy;
    var isSubsequentRender = (0, _useIsSubsequentRenderDefault.default)(mountStrategy);
    (0, _usePortalEventDefault.default)(zIndex);
    return !(0, _platformFeatureFlags.fg)('platform_design_system_team_portal_logic_r18_fix') ? isSubsequentRender ? /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _internalPortalDefault.default), {
        zIndex: zIndex
    }, children) : null : /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _internalPortalNewDefault.default), {
        zIndex: zIndex
    }, children);
}

},{"react":"jMk1U","@atlaskit/platform-feature-flags":"3H8e6","./internal/components/internal-portal":"nZInc","./internal/components/internal-portal-new":"2vjgm","./internal/hooks/use-is-subsequent-render":"lhP1e","./internal/hooks/use-portal-event":"9l48w","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"nZInc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>InternalPortal);
var _react = require("react");
var _reactDom = require("react-dom");
var _portalDomUtils = require("../utils/portal-dom-utils");
function InternalPortal(props) {
    var zIndex = props.zIndex, children = props.children;
    var container = (0, _react.useMemo)(function() {
        return (0, _portalDomUtils.createContainer)(zIndex);
    }, [
        zIndex
    ]);
    // This is in the render method instead of useEffect so that
    // the portal will be added to the DOM before the children render.
    // For any further changes, ensure that the container does not have a
    // parent besides the portal parent.
    (0, _portalDomUtils.appendPortalContainerIfNotAppended)(container);
    (0, _react.useEffect)(function() {
        return function() {
            (0, _portalDomUtils.removePortalContainer)(container);
        };
    }, [
        container
    ]);
    return /*#__PURE__*/ (0, _reactDom.createPortal)(children, container);
}

},{"react":"jMk1U","react-dom":"i4X7T","../utils/portal-dom-utils":"Qujwx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"Qujwx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createContainer", ()=>createContainer);
parcelHelpers.export(exports, "removePortalContainer", ()=>removePortalContainer);
parcelHelpers.export(exports, "appendPortalContainerIfNotAppended", ()=>appendPortalContainerIfNotAppended);
parcelHelpers.export(exports, "createAtlaskitPortal", ()=>createAtlaskitPortal);
parcelHelpers.export(exports, "createPortalParent", ()=>createPortalParent);
var _constants = require("../constants");
var createContainer = function createContainer(zIndex) {
    var container = document.createElement('div');
    container.className = (0, _constants.portalClassName);
    container.style.zIndex = "".concat(zIndex);
    return container;
};
/**
 * Returns document body element
 * @return {number} - The document body element
 */ var getBody = function getBody() {
    return document.body;
};
/**
 * Returns portal parent container. If no container exists already then it creates a new container with class name 'atlaskit-portal-container'
 * @return {Element} - The portal parent container div element
 */ var getPortalParent = function getPortalParent() {
    var parentElement = document.querySelector((0, _constants.portalParentSelector));
    if (!parentElement) {
        var _getBody;
        var parent = document.createElement('div');
        parent.className = (0, _constants.portalParentClassName);
        // we are setting display to flex because we want each portal to create a new stacking context
        // See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
        parent.style.display = 'flex';
        (_getBody = getBody()) === null || _getBody === void 0 || _getBody.appendChild(parent);
        return parent;
    }
    return parentElement;
};
var removePortalContainer = function removePortalContainer(container) {
    getPortalParent().removeChild(container);
};
var appendPortalContainerIfNotAppended = function appendPortalContainerIfNotAppended(container) {
    if (!container.parentElement) getPortalParent().appendChild(container);
};
var isDocumentDefined = function isDocumentDefined() {
    return document !== undefined;
};
var createAtlaskitPortal = function createAtlaskitPortal(zIndex) {
    //atlaskit-portal div
    if (isDocumentDefined()) {
        var atlaskitportal = document.createElement('div');
        atlaskitportal.className = (0, _constants.portalClassName);
        atlaskitportal.style.zIndex = "".concat(zIndex);
        return atlaskitportal;
    }
};
var createPortalParent = function createPortalParent() {
    //atlaskit-portal-container div
    if (isDocumentDefined()) {
        var parentElement = document.querySelector((0, _constants.portalParentSelector));
        if (!parentElement) {
            var _getBody2;
            var parent = document.createElement('div');
            parent.className = (0, _constants.portalParentClassName);
            parent.style.display = 'flex';
            (_getBody2 = getBody()) === null || _getBody2 === void 0 || _getBody2.appendChild(parent);
            return parent;
        }
        return parentElement;
    }
};

},{"../constants":"fhlin","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fhlin":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "portalParentClassName", ()=>portalParentClassName);
parcelHelpers.export(exports, "portalParentSelector", ()=>portalParentSelector);
parcelHelpers.export(exports, "portalClassName", ()=>portalClassName);
var portalParentClassName = 'atlaskit-portal-container';
var portalParentSelector = 'body > .atlaskit-portal-container';
var portalClassName = 'atlaskit-portal';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2vjgm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>InternalPortalNew);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _useIsomorphicLayoutEffect = require("../hooks/use-isomorphic-layout-effect");
var _portalDomUtils = require("../utils/portal-dom-utils");
function InternalPortalNew(props) {
    var zIndex = props.zIndex, children = props.children;
    var _useState = (0, _react.useState)(null), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), atlaskitPortal = _useState2[0], setAtlaskitPortal = _useState2[1];
    (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function() {
        var tempPortalContainer = (0, _portalDomUtils.createAtlaskitPortal)(zIndex);
        setAtlaskitPortal(tempPortalContainer);
        var portalParent = (0, _portalDomUtils.createPortalParent)();
        if (!tempPortalContainer || !portalParent) return;
        portalParent.appendChild(tempPortalContainer);
        return function() {
            if (tempPortalContainer) portalParent.removeChild(tempPortalContainer);
            setAtlaskitPortal(null);
        };
    }, [
        zIndex
    ]);
    /**
   * We wrap portal children with a Suspense boundary because in React 18 concurrent,
   * if you suspend from _within_ a portal to a Suspense boundary _outside_ the portal,
   * our portal gets in an infinite loop of rendering.
   */ var suspendedChildren = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Suspense), {
        fallback: null
    }, children);
    return atlaskitPortal ? /*#__PURE__*/ (0, _reactDom.createPortal)(suspendedChildren, atlaskitPortal) : null;
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","react-dom":"i4X7T","../hooks/use-isomorphic-layout-effect":"iodHF","../utils/portal-dom-utils":"Qujwx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iodHF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIsomorphicLayoutEffect", ()=>useIsomorphicLayoutEffect);
var _react = require("react");
var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? (0, _react.useLayoutEffect) : (0, _react.useEffect);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lhP1e":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _useIsomorphicLayoutEffect = require("./use-isomorphic-layout-effect");
var useIsSubsequentRender = function useIsSubsequentRender(mountStrategy) {
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), isSubsequentRender = _useState2[0], setIsSubsequentRender = _useState2[1];
    var _useState3 = (0, _react.useState)(function() {
        return mountStrategy === 'layoutEffect' ? (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect) : (0, _react.useEffect);
    }), _useState4 = (0, _slicedToArrayDefault.default)(_useState3, 1), useMountEffect = _useState4[0];
    useMountEffect(function() {
        setIsSubsequentRender(true);
    }, []);
    return isSubsequentRender;
};
exports.default = useIsSubsequentRender;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","./use-isomorphic-layout-effect":"iodHF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9l48w":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _constants = require("../../constants");
var _portalCustomEvent = require("../utils/portal-custom-event");
var _portalCustomEventDefault = parcelHelpers.interopDefault(_portalCustomEvent);
var useFirePortalEvent = function useFirePortalEvent(zIndex) {
    var zIndexNumber = Number(zIndex);
    (0, _react.useEffect)(function() {
        (0, _portalCustomEventDefault.default)((0, _constants.PORTAL_MOUNT_EVENT), zIndexNumber);
        return function() {
            (0, _portalCustomEventDefault.default)((0, _constants.PORTAL_UNMOUNT_EVENT), zIndexNumber);
        };
    }, [
        zIndexNumber
    ]);
};
exports.default = useFirePortalEvent;

},{"react":"jMk1U","../../constants":"cRLQa","../utils/portal-custom-event":"j9bSv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cRLQa":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PORTAL_MOUNT_EVENT", ()=>PORTAL_MOUNT_EVENT);
parcelHelpers.export(exports, "PORTAL_UNMOUNT_EVENT", ()=>PORTAL_UNMOUNT_EVENT);
var PORTAL_MOUNT_EVENT = 'akPortalMount';
var PORTAL_UNMOUNT_EVENT = 'akPortalUnmount';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j9bSv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>firePortalEvent);
var zIndexToName = {
    100: 'card',
    200: 'navigation',
    300: 'dialog',
    400: 'layer',
    500: 'blanket',
    510: 'modal',
    600: 'flag',
    700: 'spotlight',
    9999: 'tooltip'
};
/**
 * return layer name in Atlassian design system corresponding to given z-index
 * @param {number} zIndex - z-index value for which layer name is needed
 * @returns {LayerName | null} - The layer name for given z-index. If layer name is not found then null is returned
 */ var getLayerName = function getLayerName(zIndex) {
    return zIndexToName.hasOwnProperty(zIndex) ? zIndexToName[zIndex] : null;
};
/**
 * Creates a PortalEvent object with given eventName, given zIndex and corresponding layer
 * @param {string} eventName - either of Mount or Unmount event name
 * @param {number} zIndex - z-index value which will be included in the event to be dispatched
 * @returns {PortalEvent} - The newly created PortalEvent object
 */ var getEvent = function getEvent(eventName, zIndex) {
    var detail = {
        layer: getLayerName(Number(zIndex)),
        zIndex: zIndex
    };
    return new CustomEvent(eventName, {
        detail: detail
    });
};
function firePortalEvent(eventName, zIndex) {
    var event = getEvent(eventName, zIndex);
    window.dispatchEvent(event);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6kRPo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CHANNEL", ()=>CHANNEL);
parcelHelpers.export(exports, "DEFAULT_THEME_MODE", ()=>DEFAULT_THEME_MODE);
parcelHelpers.export(exports, "THEME_MODES", ()=>THEME_MODES);
parcelHelpers.export(exports, "borderRadius", ()=>borderRadius);
parcelHelpers.export(exports, "gridSize", ()=>gridSize);
parcelHelpers.export(exports, "focusRing", ()=>focusRing);
parcelHelpers.export(exports, "noFocusRing", ()=>noFocusRing);
parcelHelpers.export(exports, "layers", ()=>layers);
parcelHelpers.export(exports, "visuallyHidden", ()=>visuallyHidden);
parcelHelpers.export(exports, "assistive", ()=>assistive);
parcelHelpers.export(exports, "skeletonShimmer", ()=>skeletonShimmer);
var _deprecationWarning = require("@atlaskit/ds-lib/deprecation-warning");
var _deprecationWarningDefault = parcelHelpers.interopDefault(_deprecationWarning);
var _colors = require("./colors");
var CHANNEL = '__ATLASKIT_THEME__';
var DEFAULT_THEME_MODE = 'light';
var THEME_MODES = [
    'light',
    'dark'
];
var borderRadius = function borderRadius() {
    return 3;
};
var gridSize = function gridSize() {
    return 8;
};
var focusRing = function focusRing() {
    var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "var(--ds-border-focused, ".concat((0, _colors.B200), ")");
    var outlineWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : gridSize() / 4;
    (0, _deprecationWarningDefault.default)('@atlaskit/theme', 'focus ring mixin', 'Please use `@atlaskit/focus-ring` instead.');
    return "\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 0px ".concat(outlineWidth, "px ").concat(color, ";\n  }\n");
};
var noFocusRing = function noFocusRing() {
    return "\n  box-shadow: none;\n";
};
var layers = {
    card: function card() {
        return 100;
    },
    navigation: function navigation() {
        return 200;
    },
    dialog: function dialog() {
        return 300;
    },
    layer: function layer() {
        return 400;
    },
    blanket: function blanket() {
        return 500;
    },
    modal: function modal() {
        return 510;
    },
    flag: function flag() {
        return 600;
    },
    spotlight: function spotlight() {
        return 700;
    },
    tooltip: function tooltip() {
        return 9999;
    }
};
var visuallyHidden = function visuallyHidden() {
    (0, _deprecationWarningDefault.default)('@atlaskit/theme', 'visually hidden mixin', 'Please use `@atlaskit/visually-hidden` instead.');
    return {
        border: '0 !important',
        clip: 'rect(1px, 1px, 1px, 1px) !important',
        height: '1px !important',
        overflow: 'hidden !important',
        padding: '0 !important',
        position: 'absolute !important',
        width: '1px !important',
        whiteSpace: 'nowrap !important'
    };
};
var assistive = visuallyHidden;
var skeletonShimmer = function skeletonShimmer() {
    return {
        css: {
            backgroundColor: "var(--ds-skeleton, ".concat((0, _colors.N20A), ")"),
            animationDuration: '1.5s',
            animationIterationCount: 'infinite',
            animationTimingFunction: 'linear',
            animationDirection: 'alternate'
        },
        keyframes: {
            from: {
                backgroundColor: "var(--ds-skeleton, ".concat((0, _colors.N20A), ")")
            },
            to: {
                backgroundColor: "var(--ds-skeleton-subtle, ".concat((0, _colors.N30A), ")")
            }
        }
    };
};

},{"@atlaskit/ds-lib/deprecation-warning":"gHlle","./colors":"iIuwU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gHlle":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>deprecationWarning);
/**
 * Logs a prop deprecation warning to console once during a session.
 *
 * @param packageName Use `process.env._PACKAGE_NAME_` instead of a static string.
 * @param propName Prop that is deprecated.
 * @param predicate If true the deprecation warning will be logged to console.
 * @param deprecationAnnouncementOnDAC Link to the public announcement on DAC.
 */ parcelHelpers.export(exports, "propDeprecationWarning", ()=>propDeprecationWarning);
var _warnOnce = require("./warn-once");
var _warnOnceDefault = parcelHelpers.interopDefault(_warnOnce);
function deprecationWarning(packageName, api, additionalMessage) {
    (0, _warnOnceDefault.default)("[".concat(packageName, "]: The ").concat(api, " is deprecated.").concat(additionalMessage && " ".concat(additionalMessage)));
}
function propDeprecationWarning(packageName, propName, predicate, deprecationAnnouncementOnDAC) {}

},{"./warn-once":"3kIGX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3kIGX":[function(require,module,exports,__globalThis) {
/* eslint-disable no-console */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>warnOnce);
var printed = {};
function warnOnce(message) {
    if (printed[message]) return;
    printed[message] = true;
    if (typeof window !== 'undefined') console.warn(message);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3JRsI":[function(require,module,exports,__globalThis) {
/* eslint-disable @atlaskit/design-system/no-direct-use-of-web-platform-drag-and-drop */ /**
 * We are listening directly to drag events instead of using a monitor from
 * `@atlaskit/pragmatic-drag-and-drop` to avoid the bundle size cost, as it
 * would affect almost every view in every product.
 *
 * We can reconsider this choice in the future.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "register", ()=>register);
var _bindEventListener = require("bind-event-listener");
var registrations = new Set();
var cleanupEndEventListeners = null;
function onDragStart() {
    if (cleanupEndEventListeners) // If the cleanup function exists then we've already run this
    return;
    cleanupEndEventListeners = (0, _bindEventListener.bindAll)(window, [
        {
            type: 'dragend',
            listener: onDragEnd
        },
        {
            type: 'pointerdown',
            listener: onDragEnd
        },
        {
            type: 'pointermove',
            listener: function() {
                var callCount = 0;
                return function listener() {
                    // Using 20 as it is far bigger than the most observed (3)
                    if (callCount < 20) {
                        callCount++;
                        return;
                    }
                    onDragEnd();
                };
            }()
        }
    ]);
    var clone = Array.from(registrations);
    clone.forEach(function(subscriber) {
        subscriber.onDragStart();
    });
}
function onDragEnd() {
    var _cleanupEndEventListe;
    (_cleanupEndEventListe = cleanupEndEventListeners) === null || _cleanupEndEventListe === void 0 || _cleanupEndEventListe();
    cleanupEndEventListeners = null;
    var clone = Array.from(registrations);
    clone.forEach(function(subscriber) {
        subscriber.onDragEnd();
    });
}
function bindStartEvents() {
    return (0, _bindEventListener.bindAll)(window, [
        {
            type: 'dragstart',
            listener: onDragStart
        },
        {
            type: 'dragenter',
            listener: onDragStart
        }
    ]);
}
var cleanupStartEventListeners = null;
function register(registration) {
    // if first registration, bind event listeners
    if (!cleanupStartEventListeners) // note: currently never unbinding these event listeners
    cleanupStartEventListeners = bindStartEvents();
    registrations.add(registration);
    /**
   * The reasoning for this behavior is so that if a tooltip mounts during
   * a drag it can still be suppressed.
   *
   * We use a separate callback instead of onDragStart to avoid infinite loops.
   */ registration.onRegister({
        isDragging: cleanupEndEventListeners !== null
    });
    return function unregister() {
        registrations.delete(registration);
        if (registrations.size === 0) {
            var _cleanupStartEventLis;
            (_cleanupStartEventLis = cleanupStartEventListeners) === null || _cleanupStartEventLis === void 0 || _cleanupStartEventLis();
            cleanupStartEventListeners = null;
        }
    };
}

},{"bind-event-listener":"2wrYK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4OpaP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "show", ()=>show);
var _sharedSchedule = require("./shared-schedule");
// This file is a singleton for managing tooltips
var active = null;
function show(entry) {
    var phase = 'waiting-to-show';
    function isActive() {
        return Boolean(active && active.entry === entry);
    }
    function cleanup() {
        if (isActive()) {
            (0, _sharedSchedule.clearScheduled)();
            active = null;
        }
    }
    function done() {
        if (isActive()) entry.done();
        phase = 'done';
        cleanup();
    }
    function immediatelyHideAndDone() {
        if (isActive()) entry.hide({
            isImmediate: true
        });
        done();
    }
    function keep() {
        if (!isActive()) return;
        // aborting a wait to hide
        if (phase === 'waiting-to-hide') {
            phase = 'shown';
            (0, _sharedSchedule.clearScheduled)();
            return;
        }
        // aborting hide animation
        if (phase === 'hide-animating') {
            phase = 'shown';
            (0, _sharedSchedule.clearScheduled)();
            entry.show({
                isImmediate: false
            });
            return;
        }
    }
    function requestHide(_ref) {
        var isImmediate = _ref.isImmediate;
        if (!isActive()) return;
        // If we were not showing yet anyway; finish straight away
        if (phase === 'waiting-to-show') {
            immediatelyHideAndDone();
            return;
        }
        // already waiting to hide
        if (phase === 'waiting-to-hide') return;
        if (isImmediate) {
            immediatelyHideAndDone();
            return;
        }
        phase = 'waiting-to-hide';
        (0, _sharedSchedule.scheduleTimeout)(function() {
            phase = 'hide-animating';
            entry.hide({
                isImmediate: false
            });
        }, entry.delay);
    }
    function finishHideAnimation() {
        if (isActive() && phase === 'hide-animating') done();
    }
    function isVisible() {
        return phase === 'shown' || phase === 'waiting-to-hide' || phase === 'hide-animating';
    }
    function getInitialMouse() {
        if (entry.source.type === 'mouse') return entry.source.mouse;
        return null;
    }
    function start() {
        var showImmediately = Boolean(active && active.isVisible());
        // If there was an active tooltip; we tell it to remove itself at once!
        if (active) {
            (0, _sharedSchedule.clearScheduled)();
            active.entry.hide({
                isImmediate: true
            });
            active.entry.done();
            active = null;
        }
        // this tooltip is now the active tooltip
        active = {
            entry: entry,
            isVisible: isVisible
        };
        function show() {
            phase = 'shown';
            entry.show({
                isImmediate: showImmediately
            });
        }
        if (showImmediately) {
            show();
            return;
        }
        phase = 'waiting-to-show';
        (0, _sharedSchedule.scheduleTimeout)(show, entry.delay);
    }
    // let's get started!
    start();
    var result = {
        keep: keep,
        abort: cleanup,
        isActive: isActive,
        requestHide: requestHide,
        finishHideAnimation: finishHideAnimation,
        mousePosition: getInitialMouse()
    };
    return result;
}

},{"./shared-schedule":"juW64","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"juW64":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clearScheduled", ()=>clearScheduled);
parcelHelpers.export(exports, "scheduleTimeout", ()=>scheduleTimeout);
var delayId = null;
function clearScheduled() {
    if (delayId != null) {
        window.clearTimeout(delayId);
        delayId = null;
    }
}
function scheduleTimeout(fn, delay) {
    clearScheduled();
    delayId = window.setTimeout(function() {
        delayId = null;
        fn();
    }, delay);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrmPB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useUniqueId);
var _useId = require("@atlaskit/ds-lib/use-id");
function useUniqueId(prefix, shouldRenderId) {
    var seed = (0, _useId.useIdSeed)();
    return shouldRenderId ? "".concat(seed(prefix)) : undefined;
}

},{"@atlaskit/ds-lib/use-id":"jrARK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aJOCI":[function(require,module,exports,__globalThis) {
/* tooltip-container.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _colors = require("@atlaskit/theme/colors");
var _tooltipPrimitive = require("./tooltip-primitive");
var _tooltipPrimitiveDefault = parcelHelpers.interopDefault(_tooltipPrimitive);
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var baseStyles = null;
var truncateStyles = null;
/**
 * Used as the default tooltip container component for the exported `Tooltip` component.
 * Adds some styles to the tooltip primitive.
 */ var TooltipContainer = /*#__PURE__*/ (0, _react.forwardRef)(function TooltipContainer(_ref, ref) {
    var style = _ref.style, className = _ref.className, children = _ref.children, truncate = _ref.truncate, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
    return /*#__PURE__*/ _react.createElement((0, _tooltipPrimitiveDefault.default), {
        ref: ref,
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
        className: (0, _runtime.ax)([
            "_2rko1sit _11c8dcr7 _vchhusvi _p12fp3fh _bfhkpioe _syaz1i9p _152tze3t _1e02ze3t _1i4q1hna _85i5v77o _1q51v77o _y4ti12x7 _bozg12x7 _slp31hna",
            truncate && "_1reo15vq _18m915vq _p12f1pna _1bto1l2s _o5721q9c",
            className
        ]),
        placement: placement,
        testId: testId,
        id: id,
        onMouseOut: onMouseOut,
        onMouseOver: onMouseOver,
        style: _objectSpread(_objectSpread({}, style), {}, {
            "--_yr7xfv": (0, _runtime.ix)("var(--ds-background-neutral-bold, ".concat((0, _colors.N800), ")")),
            "--_ywovvi": (0, _runtime.ix)("var(--ds-text-inverse, ".concat((0, _colors.N0), ")"))
        })
    }, children);
});
TooltipContainer.displayName = 'TooltipContainer';
exports.default = TooltipContainer;

},{"@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@compiled/react/runtime":"hKCIX","@atlaskit/theme/colors":"iIuwU","./tooltip-primitive":"4tkDg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hKCIX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"4SsXn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4SsXn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"14XR4","./ac":false,"./css-custom-property":"ihI6q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"14XR4":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ihI6q":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4tkDg":[function(require,module,exports,__globalThis) {
/* tooltip-primitive.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var primitiveStyles = null;
/**
 * The lower level component for rendering a tooltip.
 */ var TooltipPrimitive = /*#__PURE__*/ (0, _react.forwardRef)(function TooltipPrimitive(_ref, ref) {
    var style = _ref.style, className = _ref.className, children = _ref.children, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
    return /*#__PURE__*/ _react.createElement("div", {
        ref: ref,
        style: style,
        "data-testid": testId ? "".concat(testId, "--wrapper") : undefined
    }, /*#__PURE__*/ _react.createElement("div", {
        role: "tooltip",
        className: (0, _runtime.ax)([
            "_80om73ad",
            className
        ]),
        onMouseOut: onMouseOut,
        onMouseOver: onMouseOver,
        "data-placement": placement,
        "data-testid": testId,
        id: id
    }, children));
});
TooltipPrimitive.displayName = 'TooltipPrimitive';
exports.default = TooltipPrimitive;

},{"react":"jMk1U","@compiled/react/runtime":"hKCIX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dFnBC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getMousePosition", ()=>getMousePosition);
function getMousePosition(mouseCoordinates) {
    var safeMouse = mouseCoordinates || {
        top: 0,
        left: 0
    };
    var getBoundingClientRect = function getBoundingClientRect() {
        return {
            top: safeMouse.top,
            left: safeMouse.left,
            bottom: safeMouse.top,
            right: safeMouse.left,
            width: 0,
            height: 0
        };
    };
    return {
        getBoundingClientRect: getBoundingClientRect,
        clientWidth: 0,
        clientHeight: 0
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lqjhK":[function(require,module,exports,__globalThis) {
/* link.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _css = require("@atlaskit/css");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _useAutoFocus = require("@atlaskit/ds-lib/use-auto-focus");
var _useAutoFocusDefault = parcelHelpers.interopDefault(_useAutoFocus);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _compiled = require("@atlaskit/primitives/compiled");
var _tooltip = require("@atlaskit/tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var _content = require("../shared/content");
var _contentDefault = parcelHelpers.interopDefault(_content);
var _iconRenderer = require("../shared/icon-renderer");
var _iconRendererDefault = parcelHelpers.interopDefault(_iconRenderer);
var _excluded = [
    "aria-label",
    "aria-labelledby",
    "analyticsContext",
    "appearance",
    "autoFocus",
    "href",
    "icon",
    "interactionName",
    "isDisabled",
    "isSelected",
    "isTooltipDisabled",
    "label",
    "onClick",
    "onClickCapture",
    "onKeyDownCapture",
    "onKeyUpCapture",
    "onMouseDownCapture",
    "onMouseUpCapture",
    "onPointerDownCapture",
    "onPointerUpCapture",
    "onTouchEndCapture",
    "onTouchStartCapture",
    "shape",
    "spacing",
    "testId",
    "tooltip"
], _excluded2 = [
    "className",
    "css",
    "as",
    "style"
];
var styles = {
    base: "_2rkosqtm _11c82smr _v5649dqc _189eidpf _1rjc12x7 _1e0c116y _vchhusvi _1bsb1wug _p12f1osq _kqswh2mm _4cvr1q9y _1bah1h6o _gy1p1b66 _1o9zidpf _4t3iviql _k48p1wq8 _y4tiutpp _bozgutpp _y3gn1h6o _s7n4nkob _14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _11fnglyw _18postnw",
    linkDecorationUnset: "_4bfu1snc _1hmsagmp _ajmmvv82 _1a3b1r31 _4fprglyw _5goinqa1 _9oik1r31 _1bnxglyw _jf4cnqa1 _1nrm1r31 _c2waglyw _1iohnqa1",
    disabled: "_80om13gf _bfhksyzs _syaz1lh4 _aetrglyw _irr3syzs _30l31lh4 _1di6syzs _9h8h1lh4",
    spacingCompact: "_1rjcv77o _gy1p1b66 _y4tiutpp _bozgutpp _s7n4nkob _4t3i1k8s _1bsb1k8s",
    iconButton: "_4t3iviql _1bsbviql _y4tize3t _bozgze3t",
    circle: "_2rko14q2"
};
var defaultStyles = {
    root: "_bfhk1j54 _syaz10s3 _105310s3 _f8pj10s3 _irr3yw9d _30l310s3 _1di6ip91 _9h8h10s3",
    rootRefreshed: "_bfhksm61 _syaz1gjq _8l3mmuej _aetrb3bt _10531gjq _f8pj1gjq _irr3166n _30l31gjq _1di61dty _9h8h1gjq"
};
var primaryStyles = {
    root: "_bfhkomb0 _syaz15cr _105315cr _30l315cr _irr31wqm _9h8h15cr _1di617hq"
};
var discoveryStyles = {
    root: "_bfhk1vbi _syaz15cr _105315cr _30l315cr _irr37gr8 _9h8h15cr _1di61wu2"
};
var subtleStyles = {
    root: "_bfhkqtfy _syaz10s3 _105310s3 _f8pj10s3 _irr34mfv _30l310s3 _1di619qy _9h8h10s3",
    rootRefreshed: "_bfhkqtfy _syaz1gjq _10531gjq _f8pj1mjl _irr34mfv _30l31gjq _1di619qy _9h8h1gjq"
};
var selectedStyles = {
    root: "_bfhk7btw _syaz1pke _10531pke _f8pj1pke _irr3i1yw _30l3aqb7 _1di619ru _9h8haqb7",
    rootRefreshed: "_bfhkfg4m _syaz1ldt _8l3mcoux _aetrb3bt _10531ldt _f8pj1ldt _30l31ldt _9h8h1ldt",
    discovery: "_bfhk1g49 _syaz1pke _30l31pke _irr31g49 _9h8h1pke _1di61g49"
};
var LinkIconButtonBase = function LinkIconButtonBase(_ref, ref) {
    var preventedAriaLabel = _ref['aria-label'], ariaLabelledBy = _ref['aria-labelledby'], analyticsContext = _ref.analyticsContext, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? false : _ref$autoFocus, href = _ref.href, icon = _ref.icon, interactionName = _ref.interactionName, isDisabled = _ref.isDisabled, isSelected = _ref.isSelected, _ref$isTooltipDisable = _ref.isTooltipDisabled, isTooltipDisabled = _ref$isTooltipDisable === void 0 ? true : _ref$isTooltipDisable, label = _ref.label, _onClick = _ref.onClick, onClickCapture = _ref.onClickCapture, onKeyDownCapture = _ref.onKeyDownCapture, onKeyUpCapture = _ref.onKeyUpCapture, onMouseDownCapture = _ref.onMouseDownCapture, onMouseUpCapture = _ref.onMouseUpCapture, onPointerDownCapture = _ref.onPointerDownCapture, onPointerUpCapture = _ref.onPointerUpCapture, onTouchEndCapture = _ref.onTouchEndCapture, onTouchStartCapture = _ref.onTouchStartCapture, shape = _ref.shape, spacing = _ref.spacing, testId = _ref.testId, tooltip = _ref.tooltip, unsafeRest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // @ts-expect-error
    var _className = unsafeRest.className, _css1 = unsafeRest.css, _as = unsafeRest.as, _style = unsafeRest.style, saferRest = (0, _objectWithoutPropertiesDefault.default)(unsafeRest, _excluded2);
    var localRef = (0, _react.useRef)(null);
    (0, _useAutoFocusDefault.default)(localRef, autoFocus);
    if (!isTooltipDisabled) {
        var _tooltip$content;
        return /*#__PURE__*/ _react.createElement((0, _tooltipDefault.default), {
            content: (_tooltip$content = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label,
            testId: tooltip === null || tooltip === void 0 ? void 0 : tooltip.testId,
            position: tooltip === null || tooltip === void 0 ? void 0 : tooltip.position,
            delay: tooltip === null || tooltip === void 0 ? void 0 : tooltip.delay,
            onShow: tooltip === null || tooltip === void 0 ? void 0 : tooltip.onShow,
            onHide: tooltip === null || tooltip === void 0 ? void 0 : tooltip.onHide,
            mousePosition: tooltip === null || tooltip === void 0 ? void 0 : tooltip.mousePosition,
            analyticsContext: tooltip === null || tooltip === void 0 ? void 0 : tooltip.analyticsContext,
            strategy: tooltip === null || tooltip === void 0 ? void 0 : tooltip.strategy,
            tag: tooltip === null || tooltip === void 0 ? void 0 : tooltip.tag,
            truncate: tooltip === null || tooltip === void 0 ? void 0 : tooltip.truncate,
            component: tooltip === null || tooltip === void 0 ? void 0 : tooltip.component,
            hideTooltipOnClick: tooltip === null || tooltip === void 0 ? void 0 : tooltip.hideTooltipOnClick,
            hideTooltipOnMouseDown: tooltip === null || tooltip === void 0 ? void 0 : tooltip.hideTooltipOnMouseDown,
            ignoreTooltipPointerEvents: tooltip === null || tooltip === void 0 ? void 0 : tooltip.ignoreTooltipPointerEvents
        }, function(triggerProps) {
            return /*#__PURE__*/ _react.createElement((0, _compiled.Anchor), (0, _extendsDefault.default)({}, saferRest, {
                "aria-labelledby": ariaLabelledBy,
                testId: testId,
                componentName: "LinkIconButton",
                analyticsContext: analyticsContext,
                interactionName: interactionName,
                onMouseOver: function onMouseOver(e) {
                    var _triggerProps$onMouse, _saferRest$onMouseOve;
                    (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
                    (_saferRest$onMouseOve = saferRest.onMouseOver) === null || _saferRest$onMouseOve === void 0 || _saferRest$onMouseOve.call(saferRest, e);
                },
                onMouseOut: function onMouseOut(e) {
                    var _triggerProps$onMouse2, _saferRest$onMouseOut;
                    (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
                    (_saferRest$onMouseOut = saferRest.onMouseOut) === null || _saferRest$onMouseOut === void 0 || _saferRest$onMouseOut.call(saferRest, e);
                },
                onMouseMove: function onMouseMove(e) {
                    var _triggerProps$onMouse3, _saferRest$onMouseMov;
                    (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
                    (_saferRest$onMouseMov = saferRest.onMouseMove) === null || _saferRest$onMouseMov === void 0 || _saferRest$onMouseMov.call(saferRest, e);
                },
                onMouseDown: function onMouseDown(e) {
                    var _triggerProps$onMouse4, _saferRest$onMouseDow;
                    (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
                    (_saferRest$onMouseDow = saferRest.onMouseDown) === null || _saferRest$onMouseDow === void 0 || _saferRest$onMouseDow.call(saferRest, e);
                },
                onFocus: function onFocus(e) {
                    var _triggerProps$onFocus, _saferRest$onFocus;
                    (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
                    (_saferRest$onFocus = saferRest.onFocus) === null || _saferRest$onFocus === void 0 || _saferRest$onFocus.call(saferRest, e);
                },
                onBlur: function onBlur(e) {
                    var _triggerProps$onBlur, _saferRest$onBlur;
                    (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
                    (_saferRest$onBlur = saferRest.onBlur) === null || _saferRest$onBlur === void 0 || _saferRest$onBlur.call(saferRest, e);
                },
                onClick: function onClick(event, analyticsEvent) {
                    var _triggerProps$onClick;
                    _onClick === null || _onClick === void 0 || _onClick(event, analyticsEvent);
                    triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, event);
                },
                ref: (0, _mergeRefsDefault.default)([
                    localRef,
                    ref,
                    triggerProps.ref
                ].filter(Boolean)),
                xcss: (0, _css.cx)(styles.base, appearance === 'default' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? defaultStyles.rootRefreshed : defaultStyles.root), appearance === 'primary' && primaryStyles.root, appearance === 'discovery' && discoveryStyles.root, appearance === 'subtle' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? subtleStyles.rootRefreshed : subtleStyles.root), styles.linkDecorationUnset, isSelected && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? selectedStyles.rootRefreshed : selectedStyles.root), // TODO: remove me once we kill color fallbacks
                isSelected && appearance === 'discovery' && selectedStyles.discovery, isDisabled && styles.disabled, spacing === 'compact' && styles.spacingCompact, styles.iconButton, shape === 'circle' && styles.circle),
                onMouseDownCapture: onMouseDownCapture,
                onMouseUpCapture: onMouseUpCapture,
                onKeyDownCapture: onKeyDownCapture,
                onKeyUpCapture: onKeyUpCapture,
                onTouchStartCapture: onTouchStartCapture,
                onTouchEndCapture: onTouchEndCapture,
                onPointerDownCapture: onPointerDownCapture,
                onPointerUpCapture: onPointerUpCapture,
                onClickCapture: onClickCapture,
                href: isDisabled ? undefined : href,
                role: isDisabled ? 'link' : undefined,
                "aria-disabled": isDisabled === true ? true : undefined
            }), /*#__PURE__*/ _react.createElement((0, _contentDefault.default), {
                type: "icon",
                isLoading: false
            }, /*#__PURE__*/ _react.createElement((0, _iconRendererDefault.default), {
                icon: icon
            }), /*#__PURE__*/ _react.createElement((0, _visuallyHiddenDefault.default), null, label)));
        });
    }
    return /*#__PURE__*/ _react.createElement((0, _compiled.Anchor), (0, _extendsDefault.default)({}, saferRest, {
        // aria-label={preventedAriaLabel}
        "aria-labelledby": ariaLabelledBy,
        ref: (0, _mergeRefsDefault.default)([
            localRef,
            ref
        ]),
        xcss: (0, _css.cx)(styles.base, appearance === 'default' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? defaultStyles.rootRefreshed : defaultStyles.root), appearance === 'primary' && primaryStyles.root, appearance === 'discovery' && discoveryStyles.root, appearance === 'subtle' && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? subtleStyles.rootRefreshed : subtleStyles.root), styles.linkDecorationUnset, isSelected && ((0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? selectedStyles.rootRefreshed : selectedStyles.root), // TODO: remove me once we kill color fallbacks
        isSelected && appearance === 'discovery' && selectedStyles.discovery, isDisabled && styles.disabled, styles.iconButton, spacing === 'compact' && styles.spacingCompact, shape === 'circle' && styles.circle),
        onClick: _onClick,
        onMouseDownCapture: onMouseDownCapture,
        onMouseUpCapture: onMouseUpCapture,
        onKeyDownCapture: onKeyDownCapture,
        onKeyUpCapture: onKeyUpCapture,
        onTouchStartCapture: onTouchStartCapture,
        onTouchEndCapture: onTouchEndCapture,
        onPointerDownCapture: onPointerDownCapture,
        onPointerUpCapture: onPointerUpCapture,
        onClickCapture: onClickCapture,
        testId: testId,
        href: isDisabled ? undefined : href,
        role: isDisabled ? 'link' : undefined,
        "aria-disabled": isDisabled === true ? true : undefined,
        componentName: "LinkIconButton",
        analyticsContext: analyticsContext,
        interactionName: interactionName
    }), /*#__PURE__*/ _react.createElement((0, _contentDefault.default), {
        type: "icon",
        isLoading: false
    }, /*#__PURE__*/ _react.createElement((0, _iconRendererDefault.default), {
        icon: icon
    }), /*#__PURE__*/ _react.createElement((0, _visuallyHiddenDefault.default), null, label)));
};
// Workarounds to support generic types with forwardRef + memo
var WithRef = /*#__PURE__*/ (0, _react.forwardRef)(LinkIconButtonBase);
/**
 * __Link Icon Button__
 *
 * Renders a link in the style of an icon button.
 *
 * - [Examples](https://atlassian.design/components/button/link-icon-button/examples)
 * - [Code](https://atlassian.design/components/button/link-icon-button/code)
 * - [Usage](https://atlassian.design/components/button/link-icon-button/usage)
 */ var LinkIconButton = /*#__PURE__*/ (0, _react.memo)(WithRef);
exports.default = LinkIconButton;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"56RuF","@atlaskit/css":"4KsBe","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/ds-lib/use-auto-focus":"493DL","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/primitives/compiled":"29Id4","@atlaskit/tooltip":"hD9bD","@atlaskit/visually-hidden":"jnHN6","../shared/content":"3w1Pm","../shared/icon-renderer":"dHWAg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b24QE":[function(require,module,exports,__globalThis) {
/* button.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "themedButtonBackground", ()=>themedButtonBackground);
parcelHelpers.export(exports, "themedButtonBackgroundHovered", ()=>themedButtonBackgroundHovered);
parcelHelpers.export(exports, "themedButtonBackgroundPressed", ()=>themedButtonBackgroundPressed);
parcelHelpers.export(exports, "themedButtonBorder", ()=>themedButtonBorder);
parcelHelpers.export(exports, "themedButtonPrimaryText", ()=>themedButtonPrimaryText);
parcelHelpers.export(exports, "themedButtonPrimaryBackground", ()=>themedButtonPrimaryBackground);
parcelHelpers.export(exports, "themedButtonPrimaryBackgroundHovered", ()=>themedButtonPrimaryBackgroundHovered);
parcelHelpers.export(exports, "themedButtonPrimaryBackgroundPressed", ()=>themedButtonPrimaryBackgroundPressed);
parcelHelpers.export(exports, "themedButtonSelectedText", ()=>themedButtonSelectedText);
parcelHelpers.export(exports, "themedButtonSelectedBackground", ()=>themedButtonSelectedBackground);
parcelHelpers.export(exports, "themedButtonSelectedBackgroundHovered", ()=>themedButtonSelectedBackgroundHovered);
parcelHelpers.export(exports, "themedButtonSelectedBackgroundPressed", ()=>themedButtonSelectedBackgroundPressed);
parcelHelpers.export(exports, "themedButtonSelectedBorder", ()=>themedButtonSelectedBorder);
parcelHelpers.export(exports, "themedButtonDisabledText", ()=>themedButtonDisabledText);
parcelHelpers.export(exports, "themedButtonDisabledBackground", ()=>themedButtonDisabledBackground);
parcelHelpers.export(exports, "ThemedButton", ()=>ThemedButton);
parcelHelpers.export(exports, "ThemedLinkButton", ()=>ThemedLinkButton);
parcelHelpers.export(exports, "ThemedIconButton", ()=>ThemedIconButton);
parcelHelpers.export(exports, "ThemedLinkIconButton", ()=>ThemedLinkIconButton);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _react1 = require("@compiled/react");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _compiled = require("@atlaskit/primitives/compiled");
var _tooltip = require("@atlaskit/tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var _forwardRefWithGeneric = require("../../../components/forward-ref-with-generic");
var _excluded = [
    "style",
    "xcss",
    "backgroundColor",
    "padding",
    "paddingBlock",
    "paddingBlockStart",
    "paddingBlockEnd",
    "paddingInline",
    "paddingInlineStart",
    "paddingInlineEnd"
], _excluded2 = [
    "appearance",
    "shape",
    "isSelected",
    "isDisabled"
], _excluded3 = [
    "appearance",
    "shape",
    "isSelected",
    "isDisabled"
], _excluded4 = [
    "iconBefore",
    "children"
], _excluded5 = [
    "iconBefore",
    "children"
], _excluded6 = [
    "icon",
    "label",
    "tooltip"
], _excluded7 = [
    "icon",
    "label",
    "tooltip"
];
/**
 * Props from primitives that we explicitly ignore and remove from spread props,
 * because they apply styles.
 *
 * `css` / `className` are not here because primitives don't support them.
 *
 * See `packages/design-system/primitives/src/components/anchor.tsx` and `packages/design-system/primitives/src/components/pressable.tsx`
 * for where these are defined. These shouldn't change very often as the direction is `xcss` over individual props.
 */ /**
 * Returns the spread props to pass through to underlying primitive components.
 *
 * It removes the props which apply styles.
 */ function getPrimitiveSpreadProps(_ref) {
    var style = _ref.style, xcss = _ref.xcss, backgroundColor = _ref.backgroundColor, padding = _ref.padding, paddingBlock = _ref.paddingBlock, paddingBlockStart = _ref.paddingBlockStart, paddingBlockEnd = _ref.paddingBlockEnd, paddingInline = _ref.paddingInline, paddingInlineStart = _ref.paddingInlineStart, paddingInlineEnd = _ref.paddingInlineEnd, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return props;
}
var themedButtonBackground = '--ds-top-bar-button-background';
var themedButtonBackgroundHovered = '--ds-top-bar-button-background-hovered';
var themedButtonBackgroundPressed = '--ds-top-bar-button-background-pressed';
var themedButtonBorder = '--ds-top-bar-button-border';
var themedButtonPrimaryText = '--ds-top-bar-button-primary-text';
var themedButtonPrimaryBackground = '--ds-top-bar-button-primary-background';
var themedButtonPrimaryBackgroundHovered = '--ds-top-bar-button-primary-background-hovered';
var themedButtonPrimaryBackgroundPressed = '--ds-top-bar-button-primary-background-pressed';
var themedButtonSelectedText = '--ds-top-bar-button-selected-text';
var themedButtonSelectedBackground = '--ds-top-bar-button-selected-background';
var themedButtonSelectedBackgroundHovered = '--ds-top-bar-button-selected-background-hovered';
var themedButtonSelectedBackgroundPressed = '--ds-top-bar-button-selected-background-pressed';
var themedButtonSelectedBorder = '--ds-top-bar-button-selected-border';
var themedButtonDisabledText = '--ds-top-bar-button-disabled-text';
var themedButtonDisabledBackground = '--ds-top-bar-button-disabled-background';
var styles = {
    root: "_zulp12x7 _11c82smr _2rkosqtm _v5649dqc _4bfu1r31 _1hmsglyw _ajmmnqa1 _1rjcze3t _1e0c1txw _4cvr1h6o _1bah1h6o _4t3i5r7u _kqswh2mm _1nrm1r31 _1a3b1r31 _9oik1r31 _c2waglyw _4fprglyw _1bnxglyw _1iohnqa1 _5goinqa1 _jf4cnqa1",
    border: "_14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _aetrb3bt _18postnw",
    selected: "_11q71qds _syazw5ct _8l3m15jn _f8pjw5ct _1053w5ct _19lcjrv1 _30l3w5ct _j6xtnh62 _9h8hw5ct",
    disabled: "_11q71c9b _syaz1i3i _8l3m1j28 _f8pj1i3i _10531i3i _19lc1c9b _30l31i3i _j6xt1c9b _9h8h1i3i"
};
var shapeStyles = {
    default: "_18zrutpp",
    square: "_18zrze3t _1bsb5r7u _vwz4idpf"
};
var appearanceStyles = {
    default: "_11q7pkxg _syaz1r31 _8l3maykr _f8pj1r31 _10531r31 _19lc1rps _30l31r31 _j6xtqtgh _9h8h1r31",
    subtle: "_11q7pkxg _syaz1r31 _f8pj1r31 _10531r31 _19lc1rps _30l31r31 _j6xtqtgh _9h8h1r31",
    primary: "_11q7esko _syaz15o7 _f8pj15o7 _105315o7 _19lcp6hf _30l315o7 _j6xt5sko _9h8h15o7"
};
/**
 * Props shared by `ThemedPressable` and `ThemedAnchor`
 */ /**
 * Intentionally an almost-duplicate of `ThemedAnchor` - make sure to update both.
 *
 * See `ThemedAnchor` for more context.
 */ var ThemedPressable = /*#__PURE__*/ (0, _react.forwardRef)(function ThemedPressable(_ref2, ref) {
    var _ref2$appearance = _ref2.appearance, appearance = _ref2$appearance === void 0 ? 'default' : _ref2$appearance, _ref2$shape = _ref2.shape, shape = _ref2$shape === void 0 ? 'default' : _ref2$shape, isSelected = _ref2.isSelected, isDisabled = _ref2.isDisabled, props = (0, _objectWithoutPropertiesDefault.default)(_ref2, _excluded2);
    var hasBorder = appearance === 'default' || isSelected;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Pressable), (0, _extendsDefault.default)({}, getPrimitiveSpreadProps(props), {
        ref: ref,
        type: "button",
        xcss: (0, _react1.cx)(styles.root, shapeStyles[shape], hasBorder && styles.border, appearanceStyles[appearance], isSelected && styles.selected, isDisabled && styles.disabled),
        isDisabled: isDisabled
    }));
});
/**
 * Intentionally an almost-duplicate of `ThemedPressable` - make sure to update both.
 *
 * More 'clever' solutions were tried but I couldn't get them working in an acceptable state.
 *
 * Polymorphism had many typing issues and required sacrificing type safety.
 *
 * Render props had problems passing down styles through `xcss` to the `children` function.
 */ var ThemedAnchor = (0, _forwardRefWithGeneric.forwardRefWithGeneric)(function ThemedAnchor(_ref3, ref) {
    var _ref3$appearance = _ref3.appearance, appearance = _ref3$appearance === void 0 ? 'default' : _ref3$appearance, _ref3$shape = _ref3.shape, shape = _ref3$shape === void 0 ? 'default' : _ref3$shape, isSelected = _ref3.isSelected, isDisabled = _ref3.isDisabled, props = (0, _objectWithoutPropertiesDefault.default)(_ref3, _excluded3);
    var hasBorder = appearance === 'default' || isSelected;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Anchor), (0, _extendsDefault.default)({}, getPrimitiveSpreadProps(props), {
        ref: ref,
        xcss: (0, _react1.cx)(styles.root, shapeStyles[shape], hasBorder && styles.border, appearanceStyles[appearance], isSelected && styles.selected, isDisabled && styles.disabled)
    }));
});
var textButtonStyles = {
    iconBefore: "_vwz4idpf",
    text: "_k48p1wq8"
};
var ThemedButton = /*#__PURE__*/ (0, _react.forwardRef)(function ThemedButton(_ref4, ref) {
    var IconBefore = _ref4.iconBefore, children = _ref4.children, props = (0, _objectWithoutPropertiesDefault.default)(_ref4, _excluded4);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(ThemedPressable, (0, _extendsDefault.default)({}, props, {
        ref: ref
    }), IconBefore && /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            textButtonStyles.iconBefore
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(IconBefore, {
        label: "",
        color: "currentColor"
    })), /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            textButtonStyles.text
        ])
    }, children));
});
var ThemedLinkButton = (0, _forwardRefWithGeneric.forwardRefWithGeneric)(function ThemedLinkButton(_ref5, ref) {
    var IconBefore = _ref5.iconBefore, children = _ref5.children, props = (0, _objectWithoutPropertiesDefault.default)(_ref5, _excluded5);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(ThemedAnchor, (0, _extendsDefault.default)({}, props, {
        ref: ref
    }), IconBefore && /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            textButtonStyles.iconBefore
        ])
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(IconBefore, {
        label: "",
        color: "currentColor"
    })), /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            textButtonStyles.text
        ])
    }, children));
});
var ThemedIconButton = /*#__PURE__*/ (0, _react.forwardRef)(function ThemedIconButton(_ref6, ref) {
    var _tooltip$content;
    var Icon = _ref6.icon, label = _ref6.label, tooltip = _ref6.tooltip, props = (0, _objectWithoutPropertiesDefault.default)(_ref6, _excluded6);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tooltipDefault.default), (0, _extendsDefault.default)({}, tooltip, {
        content: (_tooltip$content = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label
    }), function(triggerProps) {
        return(/*#__PURE__*/ /**
       * The `aria-describedby` from `triggerProps` is intentionally not passed down,
       * because it would cause double announcements with the `VisuallyHidden` label.
       *
       * The `@atlaskit/button` IconButton uses the same approach.
       */ (0, _reactDefault.default).createElement(ThemedPressable, (0, _extendsDefault.default)({}, props, {
            shape: "square",
            ref: (0, _mergeRefsDefault.default)([
                ref,
                triggerProps.ref
            ]),
            onClick: function onClick(event, analyticsEvent) {
                var _props$onClick, _triggerProps$onClick;
                (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event, analyticsEvent);
                triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, event);
            },
            onMouseOver: function onMouseOver(e) {
                var _triggerProps$onMouse, _props$onMouseOver;
                (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
                (_props$onMouseOver = props.onMouseOver) === null || _props$onMouseOver === void 0 || _props$onMouseOver.call(props, e);
            },
            onMouseOut: function onMouseOut(e) {
                var _triggerProps$onMouse2, _props$onMouseOut;
                (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
                (_props$onMouseOut = props.onMouseOut) === null || _props$onMouseOut === void 0 || _props$onMouseOut.call(props, e);
            },
            onMouseMove: function onMouseMove(e) {
                var _triggerProps$onMouse3, _props$onMouseMove;
                (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
                (_props$onMouseMove = props.onMouseMove) === null || _props$onMouseMove === void 0 || _props$onMouseMove.call(props, e);
            },
            onMouseDown: function onMouseDown(e) {
                var _triggerProps$onMouse4, _props$onMouseDown;
                (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
                (_props$onMouseDown = props.onMouseDown) === null || _props$onMouseDown === void 0 || _props$onMouseDown.call(props, e);
            },
            onFocus: function onFocus(e) {
                var _triggerProps$onFocus, _props$onFocus;
                (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
                (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, e);
            },
            onBlur: function onBlur(e) {
                var _triggerProps$onBlur, _props$onBlur;
                (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
                (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, e);
            }
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, {
            label: "",
            color: "currentColor"
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), null, label)));
    });
});
var ThemedLinkIconButton = (0, _forwardRefWithGeneric.forwardRefWithGeneric)(function ThemedLinkIconButton(_ref7, ref) {
    var _tooltip$content2;
    var Icon = _ref7.icon, label = _ref7.label, tooltip = _ref7.tooltip, props = (0, _objectWithoutPropertiesDefault.default)(_ref7, _excluded7);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tooltipDefault.default), (0, _extendsDefault.default)({}, tooltip, {
        content: (_tooltip$content2 = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content2 !== void 0 ? _tooltip$content2 : label
    }), function(triggerProps) {
        return(/*#__PURE__*/ /**
       * The `aria-describedby` from `triggerProps` is intentionally not passed down,
       * because it would cause double announcements with the `VisuallyHidden` label.
       *
       * The `@atlaskit/button` IconButton uses the same approach.
       */ (0, _reactDefault.default).createElement(ThemedAnchor, (0, _extendsDefault.default)({}, props, {
            shape: "square",
            ref: (0, _mergeRefsDefault.default)([
                ref,
                triggerProps.ref
            ]),
            onClick: function onClick(event, analyticsEvent) {
                var _props$onClick2, _triggerProps$onClick2;
                (_props$onClick2 = props.onClick) === null || _props$onClick2 === void 0 || _props$onClick2.call(props, event, analyticsEvent);
                triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick2 = triggerProps.onClick) === null || _triggerProps$onClick2 === void 0 || _triggerProps$onClick2.call(triggerProps, event);
            },
            onMouseOver: function onMouseOver(e) {
                var _triggerProps$onMouse5, _props$onMouseOver2;
                (_triggerProps$onMouse5 = triggerProps.onMouseOver) === null || _triggerProps$onMouse5 === void 0 || _triggerProps$onMouse5.call(triggerProps, e);
                (_props$onMouseOver2 = props.onMouseOver) === null || _props$onMouseOver2 === void 0 || _props$onMouseOver2.call(props, e);
            },
            onMouseOut: function onMouseOut(e) {
                var _triggerProps$onMouse6, _props$onMouseOut2;
                (_triggerProps$onMouse6 = triggerProps.onMouseOut) === null || _triggerProps$onMouse6 === void 0 || _triggerProps$onMouse6.call(triggerProps, e);
                (_props$onMouseOut2 = props.onMouseOut) === null || _props$onMouseOut2 === void 0 || _props$onMouseOut2.call(props, e);
            },
            onMouseMove: function onMouseMove(e) {
                var _triggerProps$onMouse7, _props$onMouseMove2;
                (_triggerProps$onMouse7 = triggerProps.onMouseMove) === null || _triggerProps$onMouse7 === void 0 || _triggerProps$onMouse7.call(triggerProps, e);
                (_props$onMouseMove2 = props.onMouseMove) === null || _props$onMouseMove2 === void 0 || _props$onMouseMove2.call(props, e);
            },
            onMouseDown: function onMouseDown(e) {
                var _triggerProps$onMouse8, _props$onMouseDown2;
                (_triggerProps$onMouse8 = triggerProps.onMouseDown) === null || _triggerProps$onMouse8 === void 0 || _triggerProps$onMouse8.call(triggerProps, e);
                (_props$onMouseDown2 = props.onMouseDown) === null || _props$onMouseDown2 === void 0 || _props$onMouseDown2.call(props, e);
            },
            onFocus: function onFocus(e) {
                var _triggerProps$onFocus2, _props$onFocus2;
                (_triggerProps$onFocus2 = triggerProps.onFocus) === null || _triggerProps$onFocus2 === void 0 || _triggerProps$onFocus2.call(triggerProps, e);
                (_props$onFocus2 = props.onFocus) === null || _props$onFocus2 === void 0 || _props$onFocus2.call(props, e);
            },
            onBlur: function onBlur(e) {
                var _triggerProps$onBlur2, _props$onBlur2;
                (_triggerProps$onBlur2 = triggerProps.onBlur) === null || _triggerProps$onBlur2 === void 0 || _triggerProps$onBlur2.call(triggerProps, e);
                (_props$onBlur2 = props.onBlur) === null || _props$onBlur2 === void 0 || _props$onBlur2.call(props, e);
            }
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, {
            label: "",
            color: "currentColor"
        }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), null, label)));
    });
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@compiled/react/runtime":"1aoKn","react":"jMk1U","@compiled/react":"51gjz","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/primitives/compiled":"29Id4","@atlaskit/tooltip":"hD9bD","@atlaskit/visually-hidden":"jnHN6","../../../components/forward-ref-with-generic":"giiiE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"51gjz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ClassNames", ()=>(0, _classNames.ClassNames));
parcelHelpers.export(exports, "createStrictAPI", ()=>(0, _createStrictApi.createStrictAPI));
parcelHelpers.export(exports, "css", ()=>(0, _cssDefault.default));
parcelHelpers.export(exports, "cssMap", ()=>(0, _cssMapDefault.default));
parcelHelpers.export(exports, "keyframes", ()=>(0, _keyframes.keyframes));
parcelHelpers.export(exports, "styled", ()=>(0, _styled.styled));
parcelHelpers.export(exports, "cx", ()=>(0, _xcssProp.cx));
parcelHelpers.export(exports, "jsx", ()=>jsx);
var _react = require("react");
var _classNames = require("./class-names");
var _createStrictApi = require("./create-strict-api");
var _css = require("./css");
var _cssDefault = parcelHelpers.interopDefault(_css);
var _cssMap = require("./css-map");
var _cssMapDefault = parcelHelpers.interopDefault(_cssMap);
var _keyframes = require("./keyframes");
var _styled = require("./styled");
var _xcssProp = require("./xcss-prop");
const jsx = (0, _react.createElement);

},{"react":"jMk1U","./class-names":false,"./create-strict-api":false,"./css":false,"./css-map":false,"./keyframes":false,"./styled":false,"./xcss-prop":"3lO4o","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3lO4o":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cx", ()=>cx);
var _runtime = require("../runtime");
const cx = (...styles)=>{
    // At runtime TStyles is resolved down to strings, but not at compile time.
    // We circumvent the type system here because of that.
    const actualStyles = styles;
    // The output should be a union type of passed in styles. This ensures the call
    // site of xcss prop can raise violations when disallowed styles have been passed.
    return (0, _runtime.ax)(actualStyles);
};

},{"../runtime":"1aoKn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"giiiE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "forwardRefWithGeneric", ()=>forwardRefWithGeneric);
var _react = require("react");
var forwardRefWithGeneric = (0, _react.forwardRef);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hHO85":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HasCustomThemeContext", ()=>HasCustomThemeContext);
/**
 * Returns whether a custom theme is being applied.
 */ parcelHelpers.export(exports, "useHasCustomTheme", ()=>useHasCustomTheme);
var _react = require("react");
var HasCustomThemeContext = /*#__PURE__*/ (0, _react.createContext)(false);
function useHasCustomTheme() {
    return (0, _react.useContext)(HasCustomThemeContext);
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fmgsv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CreateButton", ()=>CreateButton);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _add = require("@atlaskit/icon/core/add");
var _addDefault = parcelHelpers.interopDefault(_add);
var _migration = require("./themed/migration");
var CreateButton = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var children = _ref.children, onClick = _ref.onClick, testId = _ref.testId, interactionName = _ref.interactionName;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _migration.Button), {
        ref: ref,
        appearance: "primary",
        iconBefore: (0, _addDefault.default),
        onClick: onClick,
        testId: testId,
        interactionName: interactionName
    }, children);
});

},{"react":"jMk1U","@atlaskit/icon/core/add":"lxaZq","./themed/migration":"5ACd9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lxaZq":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::e570c2c471e9f2c44e5e57e4d5245eb9>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("23d887308fb2b67"));
var _baseNew = _interopRequireDefault(require("c1700f2730073c6d"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Add".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Single purpose - Reserved for creating and adding an object.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const AddIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M7.25 8.75V15h1.5V8.75H15v-1.5H8.75V1h-1.5v6.25H1v1.5z" clip-rule="evenodd"/>`
    }, props));
AddIcon.displayName = 'AddIcon';
var _default = exports.default = AddIcon;

},{"23d887308fb2b67":"jMk1U","c1700f2730073c6d":"7XBhL"}],"94cat":[function() {},{}],"8E01h":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _tabsDefault.default));
parcelHelpers.export(exports, "TabPanel", ()=>(0, _tabPanelDefault.default));
parcelHelpers.export(exports, "Tab", ()=>(0, _tabDefault.default));
parcelHelpers.export(exports, "TabList", ()=>(0, _tabListDefault.default));
parcelHelpers.export(exports, "useTab", ()=>(0, _hooks.useTab));
parcelHelpers.export(exports, "useTabPanel", ()=>(0, _hooks.useTabPanel));
var _tabs = require("./components/tabs");
var _tabsDefault = parcelHelpers.interopDefault(_tabs);
var _tabPanel = require("./components/tab-panel");
var _tabPanelDefault = parcelHelpers.interopDefault(_tabPanel);
var _tab = require("./components/tab");
var _tabDefault = parcelHelpers.interopDefault(_tab);
var _tabList = require("./components/tab-list");
var _tabListDefault = parcelHelpers.interopDefault(_tabList);
var _hooks = require("./hooks");

},{"./components/tabs":"fZqfG","./components/tab-panel":"dILBz","./components/tab":"1FcaV","./components/tab-list":"6IIaN","./hooks":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZqfG":[function(require,module,exports,__globalThis) {
/* tabs.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _toArray = require("@babel/runtime/helpers/toArray");
var _toArrayDefault = parcelHelpers.interopDefault(_toArray);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _usePlatformLeafEventHandler = require("@atlaskit/analytics-next/usePlatformLeafEventHandler");
var _context = require("../internal/context");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var baseStyles = null;
var tabsStyles = null;
var analyticsAttributes = {
    componentName: 'tabs',
    packageName: "@atlaskit/tabs",
    packageVersion: "18.1.3"
};
var getTabPanelWithContext = function getTabPanelWithContext(_ref) {
    var tabPanel = _ref.tabPanel, index = _ref.index, isSelected = _ref.isSelected, tabsId = _ref.tabsId;
    return(// Ensure tabPanel exists in case it has been removed
    tabPanel && /*#__PURE__*/ _react.createElement((0, _context.TabPanelContext).Provider, {
        value: {
            role: 'tabpanel',
            id: "".concat(tabsId, "-").concat(index, "-tab"),
            hidden: isSelected ? undefined : true,
            'aria-labelledby': "".concat(tabsId, "-").concat(index),
            tabIndex: isSelected ? 0 : -1
        },
        key: index
    }, tabPanel));
};
/**
 * __Tabs__
 *
 * Tabs acts as a container for all Tab components.
 *
 * - [Examples](https://atlassian.design/components/tabs/examples)
 * - [Code](https://atlassian.design/components/tabs/code)
 * - [Usage](https://atlassian.design/components/tabs/usage)
 */ var Tabs = function Tabs(props) {
    var _props$shouldUnmountT = props.shouldUnmountTabPanelOnChange, shouldUnmountTabPanelOnChange = _props$shouldUnmountT === void 0 ? false : _props$shouldUnmountT, SelectedType = props.selected, defaultSelected = props.defaultSelected, onChangeProp = props.onChange, id = props.id, analyticsContext = props.analyticsContext, children = props.children, testId = props.testId;
    var _useState = (0, _react.useState)(SelectedType || defaultSelected || 0), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), selectedState = _useState2[0], setSelected = _useState2[1];
    var selected = SelectedType === undefined ? selectedState : SelectedType;
    var childrenArray = (0, _react.Children).toArray(children)// Don't include any conditional children
    .filter(function(child) {
        return Boolean(child);
    });
    // First child should be a tabList followed by tab panels
    var _childrenArray = (0, _toArrayDefault.default)(childrenArray), tabList = _childrenArray[0], tabPanels = _childrenArray.slice(1);
    // Keep track of visited and add to a set
    var visited = (0, _react.useRef)(new Set([
        selected
    ]));
    if (!visited.current.has(selected)) visited.current.add(selected);
    var onChange = (0, _react.useCallback)(function(index, analyticsEvent) {
        if (onChangeProp) onChangeProp(index, analyticsEvent);
        setSelected(index);
    }, [
        onChangeProp
    ]);
    var onChangeAnalytics = (0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler)(_objectSpread({
        fn: onChange,
        action: 'clicked',
        analyticsData: analyticsContext
    }, analyticsAttributes));
    var tabPanelsWithContext = shouldUnmountTabPanelOnChange ? getTabPanelWithContext({
        tabPanel: tabPanels[selected],
        index: selected,
        isSelected: true,
        tabsId: id
    }) : // If a panel has already been visited, don't unmount it
    Array.from(visited.current).map(function(tabIndex) {
        return getTabPanelWithContext({
            tabPanel: tabPanels[tabIndex],
            index: tabIndex,
            isSelected: tabIndex === selected,
            tabsId: id
        });
    });
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            "_1e0c1txw _p12f1osq _1tkeidpf _i0dl1osq _2lx21bp4 _16jlkb7n",
            "_1c3y1txw _ftfaidpf _18i0kb7n _185bglyw"
        ])
    }, /*#__PURE__*/ _react.createElement((0, _context.TabListContext).Provider, {
        value: {
            selected: selected,
            onChange: onChangeAnalytics,
            tabsId: id
        }
    }, tabList), /*#__PURE__*/ _react.createElement((0, _react.Fragment), null, tabPanelsWithContext));
};
exports.default = Tabs;

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/toArray":"eJZrF","@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@compiled/react/runtime":"kQ51v","@atlaskit/analytics-next/usePlatformLeafEventHandler":"jTLaA","../internal/context":"goppp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eJZrF":[function(require,module,exports,__globalThis) {
var arrayWithHoles = require("a523d37c9a7c1f3a");
var iterableToArray = require("fb23b4257a729240");
var unsupportedIterableToArray = require("a2e2713b09ae7ebe");
var nonIterableRest = require("bd587012c18585f6");
function _toArray(r) {
    return arrayWithHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableRest();
}
module.exports = _toArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"a523d37c9a7c1f3a":"ikHM3","fb23b4257a729240":"fNMvm","a2e2713b09ae7ebe":"klYG5","bd587012c18585f6":"4xd1q"}],"kQ51v":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"hSmbU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hSmbU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"3PkX4","./ac":false,"./css-custom-property":"1aLc4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3PkX4":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1aLc4":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"goppp":[function(require,module,exports,__globalThis) {
/* eslint-disable @repo/internal/react/require-jsdoc */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TabContext", ()=>TabContext);
parcelHelpers.export(exports, "TabListContext", ()=>TabListContext);
parcelHelpers.export(exports, "TabPanelContext", ()=>TabPanelContext);
var _react = require("react");
var TabContext = /*#__PURE__*/ (0, _react.createContext)(null);
var TabListContext = /*#__PURE__*/ (0, _react.createContext)(null);
var TabPanelContext = /*#__PURE__*/ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dILBz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _compiled = require("@atlaskit/primitives/compiled");
var _hooks = require("../hooks");
// Note this is not being memoized as children is an unstable reference
/**
 * __TabPanel__
 *
 * A TabPanel houses the contents of a Tab.
 *
 * - [Examples](https://atlassian.design/components/tabs/examples)
 * - [Code](https://atlassian.design/components/tabs/code)
 * - [Usage](https://atlassian.design/components/tabs/usage)
 */ var TabPanel = function TabPanel(_ref) {
    var children = _ref.children, testId = _ref.testId;
    var _useTabPanel = (0, _hooks.useTabPanel)(), role = _useTabPanel.role, id = _useTabPanel.id, hidden = _useTabPanel.hidden, ariaLabelledBy = _useTabPanel['aria-labelledby'], tabIndex = _useTabPanel.tabIndex;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Focusable), {
        as: "div",
        isInset: true,
        testId: testId,
        role: role,
        id: id,
        hidden: hidden,
        "aria-labelledby": ariaLabelledBy,
        tabIndex: tabIndex
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Fragment), null, children));
};
exports.default = TabPanel;

},{"react":"jMk1U","@atlaskit/primitives/compiled":"29Id4","../hooks":"03uDv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"03uDv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useTab", ()=>useTab);
parcelHelpers.export(exports, "useTabList", ()=>useTabList);
parcelHelpers.export(exports, "useTabPanel", ()=>useTabPanel);
var _react = require("react");
var _context = require("./internal/context");
var useTab = function useTab() {
    var tabData = (0, _react.useContext)((0, _context.TabContext));
    if (tabData == null || typeof tabData === 'undefined') throw Error('@atlaskit/tabs: A Tab must have a TabList parent.');
    return tabData;
};
var useTabList = function useTabList() {
    var tabListData = (0, _react.useContext)((0, _context.TabListContext));
    if (tabListData === null || typeof tabListData === 'undefined') throw Error('@atlaskit/tabs: A TabList must have a Tabs parent.');
    return tabListData;
};
var useTabPanel = function useTabPanel() {
    var tabPanelData = (0, _react.useContext)((0, _context.TabPanelContext));
    if (tabPanelData === null || typeof tabPanelData === 'undefined') throw Error('@atlaskit/tabs:  A TabPanel must have a Tabs parent.');
    return tabPanelData;
};

},{"react":"jMk1U","./internal/context":"goppp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1FcaV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _compiled = require("@atlaskit/primitives/compiled");
var _hooks = require("../hooks");
/**
 * __Tab__
 *
 * Tab represents an indivudal Tab displayed in a TabList.
 *
 * - [Examples](https://atlassian.design/components/tabs/examples)
 * - [Code](https://atlassian.design/components/tabs/code)
 * - [Usage](https://atlassian.design/components/tabs/usage)
 */ var Tab = /*#__PURE__*/ (0, _react.forwardRef)(function Tab(_ref, ref) {
    var children = _ref.children, testId = _ref.testId;
    var _useTab = (0, _hooks.useTab)(), onClick = _useTab.onClick, id = _useTab.id, ariaControls = _useTab['aria-controls'], ariaPosinset = _useTab['aria-posinset'], ariaSelected = _useTab['aria-selected'], ariaSetsize = _useTab['aria-setsize'], onKeyDown = _useTab.onKeyDown, role = _useTab.role, tabIndex = _useTab.tabIndex;
    return(/*#__PURE__*/ // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    (0, _reactDefault.default).createElement((0, _compiled.Focusable), {
        as: "div",
        isInset: true,
        testId: testId,
        onClick: onClick,
        id: id,
        "aria-controls": ariaControls,
        "aria-posinset": ariaPosinset,
        "aria-selected": ariaSelected,
        "aria-setsize": ariaSetsize,
        onKeyDown: onKeyDown,
        role: role,
        tabIndex: tabIndex,
        ref: ref
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Text), {
        weight: "medium",
        color: "inherit",
        maxLines: 1
    }, children)));
});
exports.default = Tab;

},{"react":"jMk1U","@atlaskit/primitives/compiled":"29Id4","../hooks":"03uDv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6IIaN":[function(require,module,exports,__globalThis) {
/* tab-list.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
var _hooks = require("../hooks");
var _context = require("../internal/context");
var baseStyles = null;
var tabListStyles = null;
var tabListStylesOld = null;
/**
 * __TabList__
 *
 * A TabList groups `Tab` components together.
 *
 * - [Examples](https://atlassian.design/components/tabs/examples)
 * - [Code](https://atlassian.design/components/tabs/code)
 * - [Usage](https://atlassian.design/components/tabs/usage)
 */ var TabList = function TabList(_ref) {
    var children = _ref.children;
    var _useTabList = (0, _hooks.useTabList)(), tabsId = _useTabList.tabsId, selected = _useTabList.selected, onChange = _useTabList.onChange;
    var ref = /*#__PURE__*/ (0, _react.createRef)();
    // Don't include any conditional children
    var childrenArray = (0, _react.Children).toArray(children).filter(Boolean);
    var length = childrenArray.length;
    var selectTabByIndex = (0, _react.useCallback)(function(index) {
        var _ref$current;
        var newSelectedNode = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelector("[id='".concat(tabsId, "-").concat(index, "']"));
        if (newSelectedNode) newSelectedNode.focus();
        onChange(index);
    }, [
        tabsId,
        ref,
        onChange
    ]);
    var onKeyDown = (0, _react.useCallback)(function(e) {
        if (![
            'ArrowRight',
            'ArrowLeft',
            'Home',
            'End'
        ].includes(e.key)) return;
        // preventing horizontal or vertical scroll
        e.preventDefault();
        var lastTabIndex = length - 1;
        if ([
            'Home',
            'End'
        ].includes(e.key)) {
            var _newSelected = e.key === 'Home' ? 0 : lastTabIndex;
            selectTabByIndex(_newSelected);
            return;
        }
        // We use aria-posinset so we don't rely on the selected variable
        // If we used the selected variable this would regenerate each time
        // and create an unstable reference
        var selectedIndex = parseInt(e.currentTarget.getAttribute('aria-posinset') || '0') - 1;
        var modifier = e.key === 'ArrowRight' ? 1 : -1;
        var newSelected = selectedIndex + modifier;
        if (newSelected < 0 || newSelected >= length) // Cycling focus to move from last to first and from first to last
        newSelected = newSelected < 0 ? lastTabIndex : 0;
        selectTabByIndex(newSelected);
    }, [
        length,
        selectTabByIndex
    ]);
    // Memoized so the function isn't recreated each time
    var getTabWithContext = (0, _react.useCallback)(function(_ref2) {
        var tab = _ref2.tab, isSelected = _ref2.isSelected, index = _ref2.index;
        return /*#__PURE__*/ _react.createElement((0, _context.TabContext).Provider, {
            value: {
                onClick: function onClick() {
                    return onChange(index);
                },
                onKeyDown: onKeyDown,
                'aria-setsize': length,
                role: 'tab',
                id: "".concat(tabsId, "-").concat(index),
                'aria-posinset': index + 1,
                'aria-selected': isSelected,
                'aria-controls': "".concat(tabsId, "-").concat(index, "-tab"),
                tabIndex: isSelected ? 0 : -1
            },
            key: index
        }, tab);
    }, [
        length,
        onKeyDown,
        onChange,
        tabsId
    ]);
    return /*#__PURE__*/ _react.createElement("div", {
        role: "tablist",
        ref: ref,
        className: (0, _runtime.ax)([
            "_1e0c1txw _kqswh2mm _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t",
            (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? "_k48p1wq8 _ahbqx0bf _gpbcidpf _10vzidpf _1mmwidpf _15plidpf _7hip15vq _1fud15vq _bb0mh2mm _1quz1425 _rzxytlke _1ofh12x7 _pryi12x7 _1a85u2gc _rmpau2gc _1dze1l2s _1tms1q9c _fiizidpf _1xrmidpf _xyihidpf _166qidpf _1lzu1hjo _24g71kw7 _140sidpf _lycustnw _15d8b3bt _1fztidpf _wd7eu2gc _1olcu2gc _1oaz1fgx _w9ewidpf _170tidpf _y1g1idpf _1nvfidpf _1b8d1hjo _1n121kw7 _7p9oidpf _o2e1stnw _16u6b3bt _1yk1idpf _1lbou2gc _1c9uu2gc _1i2072d1 _bppridpf _1mbxidpf _kn0bidpf _wsgdidpf _rsmzmfou _1m0e1kw7 _93pdidpf _1sglstnw _1ksob3bt _1p9sidpf _1qa1u2gc _1jjcu2gc _fiemln51 _pascidpf _eid3idpf _zr3eidpf _fntnidpf _1mp41kw7 _kfgte4h9 _1cs8stnw _1russudh _1kt9b3bt _1fkridpf _1enwidpf _z5wtu2gc" : "_k48p1wq8 _ahbqx0bf _gpbcidpf _10vzidpf _1mmwidpf _15plidpf _7hip15vq _1fud15vq _bb0mh2mm _1quz1425 _rzxytlke _1ofh12x7 _pryi12x7 _1a85u2gc _rmpau2gc _1dze1l2s _1tms1q9c _fiizidpf _1xrmidpf _xyihidpf _166qidpf _17hygqwt _1lzupl7t _24g71kw7 _140sidpf _lycustnw _15d8b3bt _1fztidpf _wd7eu2gc _1olcu2gc _1oaz1fgx _w9ewidpf _170tidpf _y1g1idpf _1nvfidpf _1jakgqwt _1b8dpl7t _1n121kw7 _7p9oidpf _o2e1stnw _16u6b3bt _1yk1idpf _1lbou2gc _1c9uu2gc _1i2072d1 _bppridpf _1mbxidpf _kn0bidpf _wsgdidpf _9r9ugqwt _rsmz8hos _1m0e1kw7 _93pdidpf _1sglstnw _1ksob3bt _1p9sidpf _1qa1u2gc _1jjcu2gc _fiemln51 _pascidpf _eid3idpf _zr3eidpf _fntnidpf _rfx3gqwt _1mp41kw7 _kfgt1bk5 _1cs8stnw _1russudh _1kt9b3bt _1fkridpf _1enwidpf _z5wtu2gc"
        ]),
        style: {
            "--_13a5t4u": (0, _runtime.ix)("var(--ds-text-subtle, ".concat((0, _colors.N500), ")")),
            "--_kkbq40": (0, _runtime.ix)("var(--ds-text-subtle, ".concat((0, _colors.B400), ")")),
            "--_1nddtxm": (0, _runtime.ix)("var(--ds-border-width-indicator, 3px)".concat(" solid ", "var(--ds-border, transparent)")),
            "--_71dbsd": (0, _runtime.ix)("var(--ds-text, ".concat((0, _colors.B500), ")")),
            "--_1hfkvbo": (0, _runtime.ix)("var(--ds-text-selected, ".concat((0, _colors.B400), ")")),
            "--_hdabma": (0, _runtime.ix)("var(--ds-border-width-indicator, 3px)".concat(" solid ", "var(--ds-border-selected, ".concat((0, _colors.B400), ")"))),
            "--_lvpq93": (0, _runtime.ix)("var(--ds-border, ".concat((0, _colors.N30), ")")),
            "--_1b4y4br": (0, _runtime.ix)("var(--ds-border-width-outline, 2px)".concat(" solid ", "var(--ds-border, transparent)")),
            "--_1rlpysg": (0, _runtime.ix)("var(--ds-border-width-outline, 2px)".concat(" solid ", "var(--ds-border-selected, ".concat((0, _colors.B400), ")")))
        }
    }, childrenArray.map(function(child, index) {
        return getTabWithContext({
            tab: child,
            index: index,
            isSelected: index === selected
        });
    }));
};
exports.default = TabList;

},{"react":"jMk1U","@compiled/react/runtime":"kQ51v","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/theme/colors":"iIuwU","../hooks":"03uDv","../internal/context":"goppp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iWm4W":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _textFieldDefault.default));
var _textField = require("./text-field");
var _textFieldDefault = parcelHelpers.interopDefault(_textField);

},{"./text-field":"9MY4T","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9MY4T":[function(require,module,exports,__globalThis) {
/* text-field.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _analyticsNext = require("@atlaskit/analytics-next");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _excluded = [
    "appearance",
    "className",
    "elemAfterInput",
    "elemBeforeInput",
    "isCompact",
    "isDisabled",
    "isInvalid",
    "isMonospaced",
    "isReadOnly",
    "isRequired",
    "name",
    "onBlur",
    "onChange",
    "onFocus",
    "onMouseDown",
    "placeholder",
    "testId",
    "width"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var containerMedia = {
    invalid: "_msj6gir2",
    disabled: "_6up518qt"
};
var inputMediaDisabled = null;
var analyticsParams = {
    componentName: 'textField',
    packageName: "@atlaskit/textfield",
    packageVersion: "8.0.6"
};
var disabledStyle = {
    standard: "_1h6dsyzs _bfhksyzs _syaz1lh4 _80om13gf",
    subtle: "_1h6d1j28 _bfhk1j28 _syaz1lh4 _80om13gf",
    none: "_1h6d1j28 _bfhk1j28 _syaz1lh4 _80om13gf"
};
var invalidStyle = null;
var focusWithinStyle = {
    standard: "_1p9x1p6i _qao9r01l _q433q049",
    subtle: "_1p9x1p6i _qao9r01l _q433q049",
    none: "_1p9x1j28 _qao91j28 _q4333sij"
};
var hoverStyle = {
    standard: "_4cvx1elr _irr31d5g",
    subtle: "_4cvx1elr _irr31d5g",
    none: "_4cvx1j28 _irr31j28"
};
var getContainerTextBgAndBorderColor = {
    standard: "_1h6d1elr _1dqonqa1 _syaz1fxt _80om1kdv _bfhk1j9a _msj6gir2",
    subtle: "_1h6d1j28 _1dqonqa1 _syaz1fxt _80om1kdv _16hg1j28 _msj6gir2",
    none: "_1h6d1j28 _1dqoglyw _syaz1fxt _80om1kdv _16hg1j28 _msj6gir2"
};
var widthMap = {
    xsmall: 80,
    small: 160,
    medium: 240,
    large: 320,
    xlarge: 480
};
var getMaxWidth = function getMaxWidth(width) {
    return !width ? "100%" : width in widthMap ? "".concat(widthMap[width], "px") : "".concat(+width, "px");
};
var containerStyleAppearance = {
    standard: "_1dqonqa1 _1q51e4h9 _85i5e4h9 _bozgidpf _y4tiidpf",
    subtle: "_1dqonqa1 _1q51e4h9 _85i5e4h9 _bozgidpf _y4tiidpf",
    none: "_1dqoglyw"
};
var containerStyles = null;
var inputDisabledStyle = null;
var inputCompactStyleWithFg = null;
var inputCompactStyle = null;
var inputMonospacedStyle = null;
var inputFontStyleWithFG = null;
var inputStyleMonospacedWithFg = null;
var inputStyleNotDataCompactWithFG = null;
var inputStyle = null;
/**
 * __Textfield__
 *
 * A text field is an input that allows a user to write or edit text.
 *
 * - [Examples](https://atlassian.design/components/textfield/examples)
 * - [Code](https://atlassian.design/components/textfield/code)
 * - [Usage](https://atlassian.design/components/textfield/usage)
 */ var Textfield = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? 'standard' : _props$appearance, className = props.className, elemAfterInput = props.elemAfterInput, elemBeforeInput = props.elemBeforeInput, _props$isCompact = props.isCompact, isCompact = _props$isCompact === void 0 ? false : _props$isCompact, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$isInvalid = props.isInvalid, isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid, _props$isMonospaced = props.isMonospaced, isMonospaced = _props$isMonospaced === void 0 ? false : _props$isMonospaced, _props$isReadOnly = props.isReadOnly, isReadOnly = _props$isReadOnly === void 0 ? false : _props$isReadOnly, _props$isRequired = props.isRequired, isRequired = _props$isRequired === void 0 ? false : _props$isRequired, name = props.name, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, onMouseDown = props.onMouseDown, placeholder = props.placeholder, testId = props.testId, width = props.width, spreadProps = (0, _objectWithoutPropertiesDefault.default)(props, _excluded);
    var inputRef = (0, _react.useRef)(null);
    var handleOnFocus = (0, _analyticsNext.usePlatformLeafEventHandler)(_objectSpread({
        fn: function fn(event) {
            onFocus && onFocus(event);
        },
        action: 'focused'
    }, analyticsParams));
    var handleOnBlur = (0, _analyticsNext.usePlatformLeafEventHandler)(_objectSpread({
        fn: function fn(event) {
            onBlur && onBlur(event);
        },
        action: 'blurred'
    }, analyticsParams));
    var handleOnMouseDown = (0, _react.useCallback)(function(event) {
        // Running e.preventDefault() on the INPUT prevents double click behaviour
        // Sadly we needed this cast as the target type is being correctly set
        var target = event.target;
        if (target.tagName !== 'INPUT') event.preventDefault();
        if (inputRef && inputRef.current && !isDisabled && document.activeElement !== inputRef.current) inputRef.current.focus();
        onMouseDown && onMouseDown(event);
    }, [
        onMouseDown,
        isDisabled
    ]);
    var setInputRef = (0, _react.useCallback)(function(inputElement) {
        inputRef.current = inputElement;
        if (!ref) return;
        if ((0, _typeofDefault.default)(ref) === 'object') ref.current = inputElement;
        if (typeof ref === 'function') ref(inputElement);
    }, [
        ref
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        role: "presentation",
        "data-disabled": isDisabled ? isDisabled : undefined,
        "data-invalid": isInvalid ? isInvalid : undefined,
        "data-ds--text-field--container": true,
        "data-testid": testId && "".concat(testId, "-container"),
        onMouseDown: handleOnMouseDown,
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
        className: (0, _runtime.ax)([
            "_16jlkb7n _1o9zkb7n _i0dl1osq _11c82smr _1reo15vq _18m915vq _v564r5cv _189ee4h9 _1e0c1txw _vchhusvi _4cvr1h6o _1bah1yb4 _lcxv1wug _s7n4jp4b _slp31hna _1tnq1l7b",
            getContainerTextBgAndBorderColor[appearance],
            containerStyleAppearance[appearance],
            !isDisabled && focusWithinStyle[appearance],
            !isDisabled && hoverStyle[appearance],
            isDisabled && containerMedia.disabled,
            isDisabled && disabledStyle[appearance],
            isInvalid && containerMedia.invalid,
            isInvalid && "_1h6d1bqt _4cvx1bqt _16qs13x5 _1dbz13x5 _uk1sr01l",
            className
        ]),
        style: {
            maxWidth: "".concat(getMaxWidth(width)),
            "--_x5k4n9": (0, _runtime.ix)("inset 0 0 0 ".concat("var(--ds-border-width, 1px)", " ", "var(--ds-border-danger, #E2483D)"))
        }
    }, elemBeforeInput, /*#__PURE__*/ (0, _reactDefault.default).createElement("input", (0, _extendsDefault.default)({}, spreadProps, {
        "aria-invalid": isInvalid ? isInvalid : undefined,
        "data-compact": isCompact ? isCompact : undefined,
        "data-ds--text-field--input": true,
        "data-monospaced": isMonospaced ? isMonospaced : undefined,
        "data-testid": testId,
        disabled: isDisabled,
        name: name,
        onBlur: handleOnBlur,
        onChange: onChange,
        onFocus: handleOnFocus,
        placeholder: placeholder,
        readOnly: isReadOnly,
        ref: setInputRef,
        required: isRequired,
        className: (0, _runtime.ax)([
            "_19itidpf _11c82smr _12ji1r31 _1qu2glyw _12y31o36 _vchhusvi _1bsb1osq _1ul9idpf _bfhk1j28 _syaz1kw7 _80om1kw7 _14jiu2gc _olc6u2gc _1kod12x7 _7ba012x7 _1goxglyw _13xeglyw _1n7e1l2s _1idr131l",
            isMonospaced && "_ect41odn",
            isCompact && "_85i51b66 _1q511b66 _y4ti12x7 _bozg12x7",
            isDisabled && "_syaz1lh4 _1idr1lh4",
            isDisabled && "_1fnx18qt",
            !isCompact && (0, _platformFeatureFlags.fg)('platform_design_system_team_safari_input_fix') && "_14ji12x7 _olc612x7 _1kod12x7 _7ba012x7 _l9oiu2gc _549yu2gc _1h5w12x7 _124212x7",
            (0, _platformFeatureFlags.fg)('platform_design_system_team_safari_input_fix') && "_11c81ixg _1tn22smr",
            isCompact && (0, _platformFeatureFlags.fg)('platform_design_system_team_safari_input_fix') && "_11zpv77o _1l02v77o _daj712x7 _141f12x7 _1srd1b66 _oi9h1b66 _1e3012x7 _1txv12x7",
            isMonospaced && (0, _platformFeatureFlags.fg)('platform_design_system_team_safari_input_fix') && "_ect41odn _14md1odn"
        ])
    })), elemAfterInput);
});
exports.default = Textfield;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@compiled/react/runtime":"7loON","react":"jMk1U","@atlaskit/analytics-next":"3iJRH","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7loON":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"gU67q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gU67q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"eGXL5","./ac":false,"./css-custom-property":"kheHe","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eGXL5":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kheHe":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dbg8K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _statefulDefault.default));
parcelHelpers.export(exports, "DynamicTableStateless", ()=>(0, _statelessDefault.default));
var _stateful = require("./components/stateful");
var _statefulDefault = parcelHelpers.interopDefault(_stateful);
var _stateless = require("./components/stateless");
var _statelessDefault = parcelHelpers.interopDefault(_stateless);

},{"./components/stateful":"b61K2","./components/stateless":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b61K2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>DynamicTable);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _helpers = require("../internal/helpers");
var _stateless = require("./stateless");
var _statelessDefault = parcelHelpers.interopDefault(_stateless);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
/**
 * __Dynamic Table__
 *
 * A table displays rows of data with built-in pagination, sorting, and re-ordering functionality.
 *
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/dynamic-table)
 * - [Code](https://bitbucket.org/atlassian/atlassian-frontend/packages/design-system/dynamic-table)
 *
 * @example
 * ```jsx
 * import DynamicTable from '@atlaskit/dynamic-table';
 *
 * export default function TableUncontrolled() {
 *  return (
 *   <DynamicTable
 *    head={head}
 *    rows={rows}
 *    rowsPerPage={10}
 *    defaultPage={1}
 *    loadingSpinnerSize="large"
 *    isLoading={false}
 *   />
 *  );
 * }
 * ```
 */ var DynamicTable = /*#__PURE__*/ function(_React$Component) {
    function DynamicTable() {
        var _this;
        (0, _classCallCheckDefault.default)(this, DynamicTable);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, DynamicTable, [].concat(args));
        (0, _definePropertyDefault.default)(_this, "state", {
            page: _this.props.defaultPage,
            sortKey: _this.props.defaultSortKey,
            sortOrder: _this.props.defaultSortOrder,
            rows: _this.props.rows
        });
        (0, _definePropertyDefault.default)(_this, "onSetPageHandler", function(page, analyticsEvent) {
            var onSetPage = _this.props.onSetPage;
            if (onSetPage) {
                onSetPage(page, analyticsEvent);
                _this.setState({
                    page: page
                });
            }
        });
        (0, _definePropertyDefault.default)(_this, "onSortHandler", function(_ref, analyticsEvent) {
            var key = _ref.key, item = _ref.item, sortOrder = _ref.sortOrder;
            var onSort = _this.props.onSort;
            if (onSort) {
                onSort({
                    key: key,
                    item: item,
                    sortOrder: sortOrder
                }, analyticsEvent);
                _this.setState({
                    sortKey: key,
                    sortOrder: sortOrder
                });
            }
        });
        (0, _definePropertyDefault.default)(_this, "onRankEndIfExistsHandler", function(params) {
            if (_this.props.onRankEnd) _this.props.onRankEnd(params);
        });
        (0, _definePropertyDefault.default)(_this, "onRankEndHandler", function(params) {
            var destination = params.destination;
            var _this$state = _this.state, rows = _this$state.rows, page = _this$state.page;
            var rowsPerPage = _this.props.rowsPerPage;
            if (!destination || !rows) {
                _this.onRankEndIfExistsHandler(params);
                return;
            }
            var reordered = (0, _helpers.reorderRows)(params, rows, page, rowsPerPage);
            _this.setState({
                rows: reordered
            });
            _this.onRankEndIfExistsHandler(params);
        });
        return _this;
    }
    (0, _inheritsDefault.default)(DynamicTable, _React$Component);
    return (0, _createClassDefault.default)(DynamicTable, [
        {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(newProps) {
                var sortKey = newProps.sortKey || this.state.sortKey;
                var sortOrder = newProps.sortOrder || this.state.sortOrder;
                var page = newProps.page || this.state.page;
                this.setState({
                    page: page,
                    sortKey: sortKey,
                    sortOrder: sortOrder,
                    rows: newProps.rows
                });
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$state2 = this.state, page = _this$state2.page, sortKey = _this$state2.sortKey, sortOrder = _this$state2.sortOrder, rows = _this$state2.rows;
                var _this$props = this.props, caption = _this$props.caption, emptyView = _this$props.emptyView, head = _this$props.head, highlightedRowIndex = _this$props.highlightedRowIndex, loadingSpinnerSize = _this$props.loadingSpinnerSize, isLoading = _this$props.isLoading, loadingLabel = _this$props.loadingLabel, isFixedSize = _this$props.isFixedSize, isRankable = _this$props.isRankable, isRankingDisabled = _this$props.isRankingDisabled, rowsPerPage = _this$props.rowsPerPage, paginationi18n = _this$props.paginationi18n, onRankStart = _this$props.onRankStart, onPageRowsUpdate = _this$props.onPageRowsUpdate, testId = _this$props.testId, label = _this$props.label;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _statelessDefault.default), {
                    paginationi18n: paginationi18n,
                    caption: caption,
                    emptyView: emptyView,
                    head: head,
                    highlightedRowIndex: highlightedRowIndex,
                    loadingSpinnerSize: loadingSpinnerSize,
                    isLoading: isLoading,
                    loadingLabel: loadingLabel,
                    isFixedSize: isFixedSize,
                    onSetPage: this.onSetPageHandler,
                    onSort: this.onSortHandler,
                    page: page,
                    rows: rows,
                    rowsPerPage: rowsPerPage,
                    sortKey: sortKey,
                    sortOrder: sortOrder,
                    isRankable: isRankable,
                    isRankingDisabled: isRankingDisabled,
                    onRankEnd: this.onRankEndHandler,
                    onRankStart: onRankStart,
                    onPageRowsUpdate: onPageRowsUpdate,
                    testId: testId,
                    label: label
                });
            }
        }
    ]);
}((0, _reactDefault.default).Component);
(0, _definePropertyDefault.default)(DynamicTable, "defaultProps", {
    defaultPage: 1,
    isLoading: false,
    isFixedSize: false,
    isRankable: false,
    onSetPage: (0, _noopDefault.default),
    onSort: (0, _noopDefault.default),
    rowsPerPage: Infinity
});

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@atlaskit/ds-lib/noop":"gcHCG","../internal/helpers":"bljM3","./stateless":"bbixg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bljM3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPageRows", ()=>getPageRows);
parcelHelpers.export(exports, "assertIsSortable", ()=>assertIsSortable);
parcelHelpers.export(exports, "validateSortKey", ()=>validateSortKey);
parcelHelpers.export(exports, "inlineStylesIfRanking", ()=>inlineStylesIfRanking);
parcelHelpers.export(exports, "computeIndex", ()=>computeIndex);
parcelHelpers.export(exports, "reorderRows", ()=>reorderRows);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var getPageRows = function getPageRows(allRows, pageNumber, rowsPerPage) {
    if (!pageNumber || !rowsPerPage || !allRows.length) return [];
    return allRows.slice((pageNumber - 1) * rowsPerPage, pageNumber * rowsPerPage);
};
var assertIsSortable = function assertIsSortable(head) {
    if (!head || !head.cells) return;
    head.cells.forEach(function(cell) {
        if (cell.isSortable && !cell.key) try {
            throw Error("isSortable can't be set to true, if the 'key' prop is missing.");
        } catch (e) {
            // eslint-disable-next-line no-console
            console.error(e);
        }
    });
};
var validateSortKey = function validateSortKey(sortKey, head) {
    if (!sortKey) return;
    var headHasKey = head && head.cells.map(function(cell) {
        return cell.key;
    }).includes(sortKey);
    if (!headHasKey) try {
        throw Error("Cell with ".concat(sortKey, " key not found in head."));
    } catch (e) {
        // eslint-disable-next-line no-console
        console.error(e);
    }
};
var inlineStylesIfRanking = function inlineStylesIfRanking(isRanking, width, height) {
    if (!isRanking) return {};
    if (height) return {
        width: width,
        height: height
    };
    return {
        width: width
    };
};
var computeIndex = function computeIndex(index, page, rowsPerPage) {
    var itemOnPreviousPages = rowsPerPage && isFinite(rowsPerPage) ? (page - 1) * rowsPerPage : 0;
    return index + itemOnPreviousPages;
};
var reorderRows = function reorderRows(rankEnd, rows) {
    var page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
    var rowsPerPage = arguments.length > 3 ? arguments[3] : undefined;
    var destination = rankEnd.destination, sourceIndex = rankEnd.sourceIndex;
    if (!destination) return rows;
    var fromIndex = computeIndex(sourceIndex, page, rowsPerPage);
    var toIndex = computeIndex(destination.index, page, rowsPerPage);
    var reordered = rows.slice();
    var _reordered$splice = reordered.splice(fromIndex, 1), _reordered$splice2 = (0, _slicedToArrayDefault.default)(_reordered$splice, 1), removed = _reordered$splice2[0];
    reordered.splice(toIndex, 0, removed);
    return reordered;
};

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bbixg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _analyticsNext = require("@atlaskit/analytics-next");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _constants = require("../internal/constants");
var _helpers = require("../internal/helpers");
var _dynamicTable = require("../styled/dynamic-table");
var _emptyBody = require("../styled/empty-body");
var _body = require("./body");
var _bodyDefault = parcelHelpers.interopDefault(_body);
var _errorBoundary = require("./error-boundary");
var _loadingContainer = require("./loading-container");
var _loadingContainerDefault = parcelHelpers.interopDefault(_loadingContainer);
var _loadingContainerAdvanced = require("./loading-container-advanced");
var _loadingContainerAdvancedDefault = parcelHelpers.interopDefault(_loadingContainerAdvanced);
var _managedPagination = require("./managed-pagination");
var _managedPaginationDefault = parcelHelpers.interopDefault(_managedPagination);
var _tableHead = require("./table-head");
var _tableHeadDefault = parcelHelpers.interopDefault(_tableHead);
var _excluded = [
    "isRankable",
    "isRanking",
    "onRankStart",
    "onRankEnd",
    "isRankingDisabled"
];
function toggleSortOrder(currentSortOrder) {
    switch(currentSortOrder){
        case 0, _constants.DESC:
            return 0, _constants.ASC;
        case 0, _constants.ASC:
            return 0, _constants.DESC;
        default:
            return currentSortOrder;
    }
}
var DynamicTable = function DynamicTable(_ref) {
    var caption = _ref.caption, head = _ref.head, highlightedRowIndex = _ref.highlightedRowIndex, rows = _ref.rows, sortKey = _ref.sortKey, sortOrder = _ref.sortOrder, loadingLabel = _ref.loadingLabel, onPageRowsUpdate = _ref.onPageRowsUpdate, testId = _ref.testId, passedDownTotalRows = _ref.totalRows, label = _ref.label, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, _ref$isFixedSize = _ref.isFixedSize, isFixedSize = _ref$isFixedSize === void 0 ? false : _ref$isFixedSize, _ref$rowsPerPage = _ref.rowsPerPage, rowsPerPage = _ref$rowsPerPage === void 0 ? Infinity : _ref$rowsPerPage, _ref$onSetPage = _ref.onSetPage, onSetPage = _ref$onSetPage === void 0 ? (0, _noopDefault.default) : _ref$onSetPage, _ref$onSort = _ref.onSort, providedOnSort = _ref$onSort === void 0 ? (0, _noopDefault.default) : _ref$onSort, _ref$page = _ref.page, page = _ref$page === void 0 ? 1 : _ref$page, emptyView = _ref.emptyView, _ref$isRankable = _ref.isRankable, isRankable = _ref$isRankable === void 0 ? false : _ref$isRankable, _ref$isRankingDisable = _ref.isRankingDisabled, isRankingDisabled = _ref$isRankingDisable === void 0 ? false : _ref$isRankingDisable, _ref$onRankStart = _ref.onRankStart, onRankStart = _ref$onRankStart === void 0 ? (0, _noopDefault.default) : _ref$onRankStart, _ref$onRankEnd = _ref.onRankEnd, providedOnRankEnd = _ref$onRankEnd === void 0 ? (0, _noopDefault.default) : _ref$onRankEnd, loadingSpinnerSize = _ref.loadingSpinnerSize, _ref$paginationi18n = _ref.paginationi18n, paginationi18n = _ref$paginationi18n === void 0 ? {
        prev: 'Previous Page',
        next: 'Next Page',
        label: 'Pagination',
        pageLabel: 'Page'
    } : _ref$paginationi18n;
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), isRanking = _useState2[0], setIsRanking = _useState2[1];
    var tableBodyRef = (0, _react.useRef)(null);
    var onSort = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: providedOnSort,
        action: 'sorted',
        componentName: 'dynamicTable',
        packageName: "@atlaskit/dynamic-table",
        packageVersion: "18.2.4"
    });
    var onRankEnd = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: providedOnRankEnd,
        action: 'ranked',
        componentName: 'dynamicTable',
        packageName: "@atlaskit/dynamic-table",
        packageVersion: "18.2.4"
    });
    (0, _react.useEffect)(function() {
        (0, _helpers.validateSortKey)(sortKey, head);
        (0, _helpers.assertIsSortable)(head);
    }, [
        sortKey,
        head
    ]);
    var onSortHandler = function onSortHandler(item) {
        return function() {
            var key = item.key;
            if (!key) return;
            if (onSort && isRankable && key === sortKey && sortOrder === (0, _constants.DESC)) {
                onSort({
                    key: null,
                    sortOrder: null,
                    item: item
                });
                return;
            }
            var sortOrderFormatted = key !== sortKey ? (0, _constants.ASC) : toggleSortOrder(sortOrder);
            if (onSort) onSort({
                key: key,
                item: item,
                sortOrder: sortOrderFormatted
            });
        };
    };
    var onSetPageHandler = function onSetPageHandler(page, event) {
        onSetPage(page, event);
    };
    var onRankStartHandler = function onRankStartHandler(params) {
        setIsRanking(true);
        onRankStart(params);
    };
    var onRankEndHandler = function onRankEndHandler(params) {
        setIsRanking(false);
        onRankEnd(params);
    };
    var getSpinnerSize = function getSpinnerSize() {
        if (loadingSpinnerSize) return loadingSpinnerSize;
        return (0, _helpers.getPageRows)(rows || [], page, rowsPerPage).length > 2 ? (0, _constants.LARGE) : (0, _constants.SMALL);
    };
    var renderEmptyBody = function renderEmptyBody() {
        if (isLoading) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _emptyBody.EmptyViewWithFixedHeight), {
            testId: testId
        });
        return emptyView && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _emptyBody.EmptyViewContainer), {
            testId: testId
        }, emptyView);
    };
    var rowsLength = rows && rows.length;
    var totalPages;
    // set a flag to denote the dynamic table might get only one page of data
    // for paginated data
    var isTotalPagesControlledExternally = false;
    if (passedDownTotalRows && Number.isInteger(passedDownTotalRows) && rowsPerPage && rowsLength && rowsLength <= passedDownTotalRows) {
        /**
     * If total number of rows / records have been passed down as prop
     * Then table is being fed paginated data from server or other sources
     * In this case, we want to respect information passed down by server or external source
     * Rather than relying on our computation based on number of rows
     */ totalPages = Math.ceil(passedDownTotalRows / rowsPerPage);
        isTotalPagesControlledExternally = true;
    } else totalPages = rowsLength && rowsPerPage ? Math.ceil(rowsLength / rowsPerPage) : 0;
    totalPages = totalPages < 1 ? 1 : totalPages;
    var getPageNumber = page > totalPages ? totalPages : page; // page! required, because typescript can't yet see defaultProps to know that this won't be undefined
    var rowsExist = !!rowsLength;
    var spinnerSize = getSpinnerSize();
    var emptyBody = renderEmptyBody();
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainerAdvancedDefault.default), {
        isLoading: isLoading && rowsExist,
        spinnerSize: spinnerSize,
        targetRef: function targetRef() {
            return tableBodyRef.current;
        },
        testId: testId,
        loadingLabel: loadingLabel
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dynamicTable.Table), {
        isFixedSize: isFixedSize,
        "aria-label": label,
        hasDataRow: rowsExist,
        testId: testId,
        isLoading: isLoading
    }, !!caption && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _dynamicTable.Caption), null, caption), head && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHeadDefault.default), {
        head: head,
        onSort: onSortHandler,
        sortKey: sortKey,
        sortOrder: sortOrder,
        isRanking: isRanking,
        isRankable: isRankable,
        testId: testId
    }), rowsExist && /*#__PURE__*/ (0, _reactDefault.default).createElement(TableBody, {
        ref: tableBodyRef,
        highlightedRowIndex: highlightedRowIndex,
        rows: rows,
        head: head,
        sortKey: sortKey,
        sortOrder: sortOrder,
        rowsPerPage: rowsPerPage,
        page: getPageNumber,
        isFixedSize: isFixedSize || false,
        onPageRowsUpdate: onPageRowsUpdate,
        isTotalPagesControlledExternally: isTotalPagesControlledExternally,
        testId: testId,
        isRankable: isRankable,
        isRanking: isRanking,
        onRankStart: onRankStartHandler,
        onRankEnd: onRankEndHandler,
        isRankingDisabled: isRankingDisabled || isLoading || false
    }))), totalPages <= 1 ? null : /*#__PURE__*/ // only show pagination if there's MORE than 1 page
    (0, _reactDefault.default).createElement((0, _dynamicTable.PaginationWrapper), {
        testId: testId
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _managedPaginationDefault.default), {
        value: getPageNumber,
        onChange: onSetPageHandler,
        total: totalPages,
        i18n: paginationi18n,
        isDisabled: isLoading,
        testId: testId
    })), !rowsExist && emptyBody && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainerDefault.default), {
        isLoading: isLoading,
        spinnerSize: (0, _constants.LARGE),
        testId: testId,
        loadingLabel: loadingLabel
    }, emptyBody));
};
var RankableTableBody = /*#__PURE__*/ (0, _react.lazy)(function() {
    return require(/* webpackChunkName: '@atlaskit-internal_dynamic-table' */ "33e4c7df737b4f77");
});
var TableBody = /*#__PURE__*/ (0, _react.forwardRef)(function TableBody(_ref2, ref) {
    var _ref2$isRankable = _ref2.isRankable, isRankable = _ref2$isRankable === void 0 ? false : _ref2$isRankable, isRanking = _ref2.isRanking, onRankStart = _ref2.onRankStart, onRankEnd = _ref2.onRankEnd, isRankingDisabled = _ref2.isRankingDisabled, bodyProps = (0, _objectWithoutPropertiesDefault.default)(_ref2, _excluded);
    var canRank = isRankable && !bodyProps.sortKey;
    /**
   * React 16 does not support SSR for lazy components,
   * so we avoid rendering the `Suspense` on the server.
   */ var _useState3 = (0, _react.useState)(false), _useState4 = (0, _slicedToArrayDefault.default)(_useState3, 2), canRenderRankable = _useState4[0], setCanRenderRankable = _useState4[1];
    (0, _react.useEffect)(function() {
        if (canRank) setCanRenderRankable(true);
    }, [
        canRank
    ]);
    var nonRankableBody = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _bodyDefault.default), (0, _extendsDefault.default)({
        ref: ref
    }, bodyProps));
    return canRank && canRenderRankable ? /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _errorBoundary.ErrorBoundary), {
        fallback: nonRankableBody
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Suspense), {
        fallback: nonRankableBody
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(RankableTableBody, (0, _extendsDefault.default)({
        ref: ref
    }, bodyProps, {
        isRanking: isRanking,
        onRankStart: onRankStart,
        onRankEnd: onRankEnd,
        isRankingDisabled: isRankingDisabled
    })))) : nonRankableBody;
});
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = DynamicTable;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@atlaskit/analytics-next":"3iJRH","@atlaskit/ds-lib/noop":"gcHCG","../internal/constants":"dNwVR","../internal/helpers":"bljM3","../styled/dynamic-table":"cfelm","../styled/empty-body":"joiy7","./body":"jNiAC","./error-boundary":"izsVM","./loading-container":"lNKow","./loading-container-advanced":"hFUJB","./managed-pagination":"c107c","./table-head":"efej1","33e4c7df737b4f77":"fTZq0","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dNwVR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ASC", ()=>ASC);
parcelHelpers.export(exports, "DESC", ()=>DESC);
parcelHelpers.export(exports, "SMALL", ()=>SMALL);
parcelHelpers.export(exports, "LARGE", ()=>LARGE);
parcelHelpers.export(exports, "LOADING_CONTENTS_OPACITY", ()=>LOADING_CONTENTS_OPACITY);
var ASC = 'ASC';
var DESC = 'DESC';
var SMALL = 'small';
var LARGE = 'large';
var LOADING_CONTENTS_OPACITY = 0.22;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cfelm":[function(require,module,exports,__globalThis) {
/* dynamic-table.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Table", ()=>Table);
parcelHelpers.export(exports, "Caption", ()=>Caption);
parcelHelpers.export(exports, "PaginationWrapper", ()=>PaginationWrapper);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _colors = require("@atlaskit/theme/colors");
var _excluded = [
    "isFixedSize",
    "hasDataRow",
    "children",
    "testId",
    "isLoading"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var fixedSizeTableStyles = null;
var tableStyles = null;
var bodyBorder = null;
var Table = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var isFixedSize = _ref.isFixedSize, hasDataRow = _ref.hasDataRow, children = _ref.children, testId = _ref.testId, isLoading = _ref.isLoading, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return /*#__PURE__*/ _react.createElement("table", (0, _extendsDefault.default)({
        inert: isLoading ? '' : undefined,
        ref: ref
    }, rest, {
        "data-testid": testId && "".concat(testId, "--table"),
        className: (0, _runtime.ax)([
            "_1bsb1osq _yq5hus1c _btyzidpf _ect41gqc",
            isFixedSize && "_1kqm1n9t",
            hasDataRow && "_179rralu"
        ]),
        style: _objectSpread(_objectSpread({}, {
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
            '--local-dynamic-table-hover-bg': "var(--ds-background-neutral-subtle-hovered, ".concat((0, _colors.N10), ")"),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
            '--local-dynamic-table-highlighted-bg': "var(--ds-background-selected, ".concat((0, _colors.B50), ")"),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
            '--local-dynamic-table-hover-highlighted-bg': "var(--ds-background-selected-hovered, ".concat((0, _colors.B75), ")"),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
            '--local-dynamic-table-row-focus-outline': "var(--ds-border-focused, ".concat((0, _colors.B100), ")")
        }), {}, {
            "--_k02y3n": (0, _runtime.ix)("2px solid ".concat("var(--ds-border, ".concat((0, _colors.N40), ")")))
        })
    }), children);
});
var captionStyles = null;
var Caption = function Caption(_ref2) {
    var children = _ref2.children;
    return /*#__PURE__*/ _react.createElement("caption", {
        className: (0, _runtime.ax)([
            "_11c8lodh _6rthu2gc _1pfh1ejb _m6k41e03"
        ])
    }, children);
};
var paginationWrapperStyles = null;
var PaginationWrapper = function PaginationWrapper(_ref3) {
    var children = _ref3.children, testId = _ref3.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--pagination--container"),
        className: (0, _runtime.ax)([
            "_1e0c1txw _1bah1h6o"
        ])
    }, children);
};

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"ks1OO","@atlaskit/theme/colors":"iIuwU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ks1OO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"kIZLJ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kIZLJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"95MCE","./ac":false,"./css-custom-property":"gW7ag","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"95MCE":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gW7ag":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"joiy7":[function(require,module,exports,__globalThis) {
/* empty-body.tsx generated by @compiled/babel-plugin v0.36.1 */ /* eslint-disable @repo/internal/react/require-jsdoc */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EmptyViewWithFixedHeight", ()=>EmptyViewWithFixedHeight);
parcelHelpers.export(exports, "EmptyViewContainer", ()=>EmptyViewContainer);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var fixedHeightStyles = null;
var EmptyViewWithFixedHeight = function EmptyViewWithFixedHeight(_ref) {
    var children = _ref.children, testId = _ref.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--empty-view-with-fixed-height"),
        className: (0, _runtime.ax)([
            "_4t3i1jdh"
        ])
    }, children);
};
var emptyViewContainerStyles = null;
var EmptyViewContainer = function EmptyViewContainer(props) {
    var children = props.children, testId = props.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--empty-view-container"),
        className: (0, _runtime.ax)([
            "_19pk1wug _2hwx1wug _otyr1wug _18u01wug _ca0q19bv _u5f319bv _n3td19bv _19bv19bv _1bsb1ssb _y3gn1h6o"
        ])
    }, children);
};

},{"react":"jMk1U","@compiled/react/runtime":"ks1OO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jNiAC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _withSortedPageRows = require("../hoc/with-sorted-page-rows");
var _withSortedPageRowsDefault = parcelHelpers.interopDefault(_withSortedPageRows);
var _tableRow = require("./table-row");
var _tableRowDefault = parcelHelpers.interopDefault(_tableRow);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var BodyComponent = /*#__PURE__*/ function(_React$Component) {
    function BodyComponent() {
        (0, _classCallCheckDefault.default)(this, BodyComponent);
        return _callSuper(this, BodyComponent, arguments);
    }
    (0, _inheritsDefault.default)(BodyComponent, _React$Component);
    return (0, _createClassDefault.default)(BodyComponent, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, pageRows = _this$props.pageRows, head = _this$props.head, isFixedSize = _this$props.isFixedSize, highlightedRowIndex = _this$props.highlightedRowIndex, testId = _this$props.testId, forwardedRef = _this$props.forwardedRef;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement("tbody", {
                    "data-testid": testId && "".concat(testId, "--body"),
                    ref: forwardedRef
                }, pageRows.map(function(row, rowIndex) {
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableRowDefault.default), {
                        head: head,
                        isFixedSize: isFixedSize,
                        key: row.key || rowIndex,
                        row: row,
                        isHighlighted: row.isHighlighted || !!highlightedRowIndex && (typeof highlightedRowIndex === 'number' ? highlightedRowIndex === rowIndex : highlightedRowIndex.indexOf(rowIndex) > -1),
                        testId: testId
                    });
                }));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
var Body = (0, _withSortedPageRowsDefault.default)(/*#__PURE__*/ (0, _reactDefault.default).forwardRef(function(props, ref) {
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(BodyComponent, (0, _extendsDefault.default)({}, props, {
        forwardedRef: ref
    }));
}));
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = Body;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","react":"jMk1U","../hoc/with-sorted-page-rows":"8gjGN","./table-row":"8sCCC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8gjGN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>withSortedPageRows);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _constants = require("../internal/constants");
var _helpers = require("../internal/helpers");
var _excluded = [
    "rows",
    "head",
    "sortKey",
    "sortOrder",
    "rowsPerPage",
    "page",
    "forwardedRef"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var getSortingCellValue = function getSortingCellValue(cells, head, sortKey) {
    for(var i = 0; i < cells.length; i++){
        var _head$cells$i;
        if (head.cells[i] && ((_head$cells$i = head.cells[i]) === null || _head$cells$i === void 0 ? void 0 : _head$cells$i.key) === sortKey) {
            var _cells$i;
            return (_cells$i = cells[i]) === null || _cells$i === void 0 ? void 0 : _cells$i.key;
        }
    }
    return undefined;
};
// sort all rows based on sort key and order
var getSortedRows = function getSortedRows(head, rows, sortKey, sortOrder) {
    if (!sortKey || !head) return rows;
    if (!rows) return [];
    var modifier = sortOrder === (0, _constants.ASC) ? 1 : -1;
    // Re-initialising an I18n Collator on every sort is performance intensive, thus constructed outside
    var collator = new Intl.Collator(undefined, {
        numeric: true,
        sensitivity: 'accent'
    });
    // Get copy of rows to avoid sorting prop in place
    var sortableRows = Array.from(rows);
    // Reorder rows in table based on sorting cell value
    // Algorithm will sort numerics or strings, but not both
    return sortableRows.sort(function(a, b) {
        var valA = getSortingCellValue(a.cells, head, sortKey);
        var valB = getSortingCellValue(b.cells, head, sortKey);
        if (valA === undefined || valB === undefined) return modifier;
        if ((0, _typeofDefault.default)(valA) !== (0, _typeofDefault.default)(valB)) {
            // numbers are always grouped higher in the sort
            if (typeof valA === 'number') return -1;
            if (typeof valB === 'number') return 1;
            // strings are grouped next
            if (typeof valA === 'string') return -1;
            if (typeof valB === 'string') return 1;
        }
        if (typeof valA === 'string' && typeof valB === 'string') return modifier * collator.compare(valA, valB);
        if (!valA && valA !== 0 || valA < valB) return -modifier;
        if (!valB && valB !== 0 || valA > valB) return modifier;
        if (valA === valB) return 0;
        return 1;
    });
};
function withSortedPageRows(WrappedComponent) {
    var WithSortedPageRows = /*#__PURE__*/ function(_React$Component) {
        function WithSortedPageRows() {
            var _this;
            (0, _classCallCheckDefault.default)(this, WithSortedPageRows);
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            _this = _callSuper(this, WithSortedPageRows, [].concat(args));
            (0, _definePropertyDefault.default)(_this, "state", {
                pageRows: []
            });
            return _this;
        }
        (0, _inheritsDefault.default)(WithSortedPageRows, _React$Component);
        return (0, _createClassDefault.default)(WithSortedPageRows, [
            {
                key: "componentDidMount",
                value: function componentDidMount() {
                    this.props.onPageRowsUpdate && this.props.onPageRowsUpdate(this.state.pageRows);
                }
            },
            {
                key: "componentDidUpdate",
                value: function componentDidUpdate(_prevProps, prevState) {
                    if (this.props.onPageRowsUpdate && this.state.pageRows !== prevState.pageRows) this.props.onPageRowsUpdate(this.state.pageRows);
                }
            },
            {
                key: "render",
                value: function render() {
                    var _this$props = this.props, rows = _this$props.rows, head = _this$props.head, sortKey = _this$props.sortKey, sortOrder = _this$props.sortOrder, rowsPerPage = _this$props.rowsPerPage, page = _this$props.page, forwardedRef = _this$props.forwardedRef, restProps = (0, _objectWithoutPropertiesDefault.default)(_this$props, _excluded);
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement(WrappedComponent, (0, _extendsDefault.default)({
                        pageRows: this.state.pageRows,
                        head: head
                    }, restProps, {
                        ref: forwardedRef
                    }));
                }
            }
        ], [
            {
                key: "getDerivedStateFromProps",
                value: function getDerivedStateFromProps(props, state) {
                    var rows = props.rows, head = props.head, sortKey = props.sortKey, sortOrder = props.sortOrder, page = props.page, rowsPerPage = props.rowsPerPage, isTotalPagesControlledExternally = props.isTotalPagesControlledExternally;
                    (0, _helpers.validateSortKey)(sortKey, head);
                    var sortedRows;
                    var pageRows;
                    if (isTotalPagesControlledExternally) {
                        sortedRows = rows;
                        pageRows = rows;
                    } else {
                        sortedRows = getSortedRows(head, rows, sortKey, sortOrder) || [];
                        pageRows = (0, _helpers.getPageRows)(sortedRows, page, rowsPerPage);
                    }
                    return _objectSpread(_objectSpread({}, state), {}, {
                        pageRows: pageRows
                    });
                }
            }
        ]);
    }((0, _reactDefault.default).Component);
    return /*#__PURE__*/ (0, _reactDefault.default).forwardRef(function(props, ref) {
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(WithSortedPageRows, (0, _extendsDefault.default)({}, props, {
            forwardedRef: ref
        }));
    });
}

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/typeof":"7EL9t","react":"jMk1U","../internal/constants":"dNwVR","../internal/helpers":"bljM3","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8sCCC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tableCell = require("../styled/table-cell");
var _tableRow = require("../styled/table-row");
var _excluded = [
    "cells"
], _excluded2 = [
    "content",
    "testId"
];
var Row = function Row(_ref) {
    var row = _ref.row, head = _ref.head, testId = _ref.testId, isFixedSize = _ref.isFixedSize, isHighlighted = _ref.isHighlighted;
    var cells = row.cells, restRowProps = (0, _objectWithoutPropertiesDefault.default)(row, _excluded);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableRow.TableBodyRow), (0, _extendsDefault.default)({}, restRowProps, {
        isHighlighted: isHighlighted
    }, isHighlighted ? {
        'data-ts--dynamic-table--table-row--highlighted': true
    } : null, {
        testId: row.testId || testId && "".concat(testId, "--row-").concat(restRowProps.key)
    }), cells.map(function(cell, cellIndex) {
        var content = cell.content, cellTestId = cell.testId, restCellProps = (0, _objectWithoutPropertiesDefault.default)(cell, _excluded2);
        var _ref2 = (head || {
            cells: []
        }).cells[cellIndex] || {}, shouldTruncate = _ref2.shouldTruncate, width = _ref2.width;
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableCell.TableBodyCell), (0, _extendsDefault.default)({
            "data-testid": cellTestId || testId && "".concat(testId, "--cell-").concat(cellIndex)
        }, restCellProps, {
            isFixedSize: isFixedSize,
            key: cellIndex,
            shouldTruncate: shouldTruncate,
            width: width
        }), content);
    }));
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = Row;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","../styled/table-cell":"gfHdZ","../styled/table-row":"aNTsF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gfHdZ":[function(require,module,exports,__globalThis) {
/* table-cell.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableBodyCell", ()=>TableBodyCell);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _constants = require("./constants");
var _excluded = [
    "width",
    "isFixedSize",
    "shouldTruncate",
    "innerRef"
];
var fixedSizeTruncateStyles = null;
var overflowTruncateStyles = null;
var truncationWidthStyles = null;
var cellStyles = null;
var TableBodyCell = function TableBodyCell(_ref) {
    var width = _ref.width, isFixedSize = _ref.isFixedSize, shouldTruncate = _ref.shouldTruncate, innerRef = _ref.innerRef, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return /*#__PURE__*/ _react.createElement("td", (0, _extendsDefault.default)({
        // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        style: (0, _constants.getTruncationStyleVars)({
            width: width
        }),
        // HOC withDimensions complains about the types but it is working fine
        // @ts-ignore
        ref: innerRef,
        className: (0, _runtime.ax)([
            "_1bsb8a2a",
            isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c",
            isFixedSize && "_1reo15vq _18m915vq",
            "_19itglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t",
            props.className
        ])
    }, props));
};

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"ks1OO","./constants":"doOmM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"doOmM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTruncationStyleVars", ()=>getTruncationStyleVars);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var CSS_VAR_WIDTH = '--local-dynamic-table-width';
var getTruncationStyleVars = function getTruncationStyleVars(_ref) {
    var width = _ref.width;
    return typeof width !== 'undefined' ? (0, _definePropertyDefault.default)({}, CSS_VAR_WIDTH, "".concat(width, "%")) : undefined;
};

},{"@babel/runtime/helpers/defineProperty":"azbUC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aNTsF":[function(require,module,exports,__globalThis) {
/* table-row.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableBodyRow", ()=>TableBodyRow);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _excluded = [
    "isHighlighted",
    "children",
    "style",
    "testId",
    "className"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var rowStyles = null;
var rowBackgroundStyles = null;
var rowHighlightedBackgroundStyles = null;
var TableBodyRow = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var isHighlighted = _ref.isHighlighted, children = _ref.children, style = _ref.style, testId = _ref.testId, className = _ref.className, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return /*#__PURE__*/ _react.createElement("tr", (0, _extendsDefault.default)({
        /**
     * We rely on this `className` for the `RankableTableBodyRow` to apply extra styles.
     * With Compiled it needs to be statically analyzable. It does not get applied via spread props.
     */ // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
        className: (0, _runtime.ax)([
            "_bfhkqtfy _1ygb1852 _1ah312gs",
            isHighlighted ? "_bfhktkjs _irr31ae3" : "_irr3s8ts",
            className
        ])
    }, rest, {
        ref: ref,
        "data-testid": testId,
        style: _objectSpread(_objectSpread({}, style), {}, {
            "--_akp1ox": (0, _runtime.ix)("2px solid ".concat("var(--ds-border-focused, var(--local-dynamic-table-hover-bg))"))
        })
    }), children);
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"ks1OO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"izsVM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ErrorBoundary", ()=>ErrorBoundary);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var ErrorBoundary = /*#__PURE__*/ function(_React$Component) {
    function ErrorBoundary(props) {
        var _this;
        (0, _classCallCheckDefault.default)(this, ErrorBoundary);
        _this = _callSuper(this, ErrorBoundary, [
            props
        ]);
        _this.state = {
            hasError: false
        };
        return _this;
    }
    (0, _inheritsDefault.default)(ErrorBoundary, _React$Component);
    return (0, _createClassDefault.default)(ErrorBoundary, [
        {
            key: "render",
            value: function render() {
                if (this.state.hasError) // You can render any custom fallback UI
                return this.props.fallback;
                return this.props.children;
            }
        }
    ], [
        {
            key: "getDerivedStateFromError",
            value: function getDerivedStateFromError() {
                // Update state so the next render will show the fallback UI.
                return {
                    hasError: true
                };
            }
        }
    ]);
}((0, _reactDefault.default).Component);

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lNKow":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>LoadingContainer);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _spinner = require("@atlaskit/spinner");
var _spinnerDefault = parcelHelpers.interopDefault(_spinner);
var _constants = require("../internal/constants");
var _loadingContainer = require("../styled/loading-container");
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var LoadingContainer = /*#__PURE__*/ function(_React$Component) {
    function LoadingContainer() {
        (0, _classCallCheckDefault.default)(this, LoadingContainer);
        return _callSuper(this, LoadingContainer, arguments);
    }
    (0, _inheritsDefault.default)(LoadingContainer, _React$Component);
    return (0, _createClassDefault.default)(LoadingContainer, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, children = _this$props.children, isLoading = _this$props.isLoading, spinnerSize = _this$props.spinnerSize, contentsOpacity = _this$props.contentsOpacity, testId = _this$props.testId, loadingLabel = _this$props.loadingLabel;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainer.Container), {
                    testId: testId
                }, !isLoading ? children : /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainer.ContentsContainer), {
                    contentsOpacity: contentsOpacity,
                    testId: testId
                }, children), isLoading && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainer.SpinnerContainer), {
                    testId: testId
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _spinnerDefault.default), {
                    size: spinnerSize,
                    testId: testId && "".concat(testId, "--loadingSpinner"),
                    label: loadingLabel
                })));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
(0, _definePropertyDefault.default)(LoadingContainer, "defaultProps", {
    isLoading: true,
    spinnerSize: (0, _constants.LARGE),
    contentsOpacity: (0, _constants.LOADING_CONTENTS_OPACITY),
    loadingLabel: 'Loading table'
});

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@atlaskit/spinner":"hHHVB","../internal/constants":"dNwVR","../styled/loading-container":"4RzVD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4RzVD":[function(require,module,exports,__globalThis) {
/* loading-container.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSS_VAR_CONTENTS_OPACITY", ()=>CSS_VAR_CONTENTS_OPACITY);
parcelHelpers.export(exports, "Container", ()=>Container);
parcelHelpers.export(exports, "ContentsContainer", ()=>ContentsContainer);
parcelHelpers.export(exports, "SpinnerContainer", ()=>SpinnerContainer);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var CSS_VAR_CONTENTS_OPACITY = '--contents-opacity';
var containerStyles = null;
var Container = function Container(_ref) {
    var children = _ref.children, testId = _ref.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--container"),
        className: (0, _runtime.ax)([
            "_kqswh2mm"
        ])
    }, children);
};
var contentsContainerStyles = null;
var ContentsContainer = function ContentsContainer(_ref2) {
    var children = _ref2.children, contentsOpacity = _ref2.contentsOpacity, testId = _ref2.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--contents--container"),
        className: (0, _runtime.ax)([
            "_tzy47hfw _lcxvglyw"
        ]),
        style: _objectSpread(_objectSpread({}, (0, _definePropertyDefault.default)({}, CSS_VAR_CONTENTS_OPACITY, contentsOpacity)), {}, {
            "--_cnddr8": (0, _runtime.ix)("var(".concat(CSS_VAR_CONTENTS_OPACITY, ")"))
        })
    }, children);
};
var spinnerContainerStyles = null;
var SpinnerContainer = function SpinnerContainer(_ref3) {
    var children = _ref3.children, testId = _ref3.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--spinner--container"),
        className: (0, _runtime.ax)([
            "_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o"
        ])
    }, children);
};

},{"@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@compiled/react/runtime":"ks1OO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hFUJB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>LoadingContainerAdvanced);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
/* eslint-disable @repo/internal/dom-events/no-unsafe-event-listeners */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _spinner = require("@atlaskit/spinner");
var _spinnerDefault = parcelHelpers.interopDefault(_spinner);
var _constants = require("../internal/constants");
var _loadingContainerAdvanced = require("../styled/loading-container-advanced");
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var LoadingContainerAdvanced = /*#__PURE__*/ function(_React$Component) {
    function LoadingContainerAdvanced() {
        var _this;
        (0, _classCallCheckDefault.default)(this, LoadingContainerAdvanced);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, LoadingContainerAdvanced, [].concat(args));
        (0, _definePropertyDefault.default)(_this, "spinnerRef", /*#__PURE__*/ (0, _reactDefault.default).createRef());
        (0, _definePropertyDefault.default)(_this, "containerRef", /*#__PURE__*/ (0, _reactDefault.default).createRef());
        (0, _definePropertyDefault.default)(_this, "componentDidMount", function() {
            if (_this.props.isLoading && _this.hasTargetNode()) {
                _this.attachListeners();
                _this.updateTargetAppearance();
                _this.updateSpinnerPosition();
            }
        });
        (0, _definePropertyDefault.default)(_this, "UNSAFE_componentWillReceiveProps", function(nextProps) {
            if (!nextProps.isLoading || !_this.hasTargetNode(nextProps)) _this.detachListeners();
            else if (!_this.props.isLoading) _this.attachListeners();
        });
        (0, _definePropertyDefault.default)(_this, "componentDidUpdate", function() {
            if (_this.hasTargetNode()) {
                _this.updateTargetAppearance();
                if (_this.props.isLoading) _this.updateSpinnerPosition();
            }
        });
        (0, _definePropertyDefault.default)(_this, "componentWillUnmount", function() {
            _this.detachListeners();
        });
        (0, _definePropertyDefault.default)(_this, "getTargetNode", function() {
            var nextProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
            var targetRef = nextProps.targetRef;
            var target = targetRef === null || targetRef === void 0 ? void 0 : targetRef();
            return target || _this.containerRef.current;
        });
        (0, _definePropertyDefault.default)(_this, "hasTargetNode", function(nextProps) {
            return !!_this.getTargetNode(nextProps);
        });
        (0, _definePropertyDefault.default)(_this, "isVerticallyVisible", function(elementRect, viewportHeight) {
            var top = elementRect.top, bottom = elementRect.bottom;
            if (bottom <= 0) return false;
            return top < viewportHeight;
        });
        (0, _definePropertyDefault.default)(_this, "isFullyVerticallyVisible", function(elementRect, viewportHeight) {
            var top = elementRect.top, bottom = elementRect.bottom;
            return top >= 0 && bottom <= viewportHeight;
        });
        (0, _definePropertyDefault.default)(_this, "handleResize", function() {
            _this.updateSpinnerPosition();
        });
        (0, _definePropertyDefault.default)(_this, "handleScroll", function() {
            _this.updateSpinnerPosition();
        });
        (0, _definePropertyDefault.default)(_this, "translateSpinner", function(spinnerNode, transformY, isFixed) {
            spinnerNode.style.position = isFixed ? 'fixed' : '';
            spinnerNode.style.transform = transformY !== 0 ? "translate3d(0, ".concat(transformY, "px, 0)") : '';
        });
        (0, _definePropertyDefault.default)(_this, "updateTargetAppearance", function() {
            var targetNode = _this.getTargetNode();
            var _this$props = _this.props, isLoading = _this$props.isLoading, contentsOpacity = _this$props.contentsOpacity;
            if (targetNode && targetNode.style && (0, _typeofDefault.default)(targetNode.style) === 'object') {
                targetNode.style.pointerEvents = isLoading ? 'none' : '';
                targetNode.style.opacity = isLoading ? contentsOpacity.toString() : '';
            }
        });
        return _this;
    }
    (0, _inheritsDefault.default)(LoadingContainerAdvanced, _React$Component);
    return (0, _createClassDefault.default)(LoadingContainerAdvanced, [
        {
            key: "attachListeners",
            value: function attachListeners() {
                window.addEventListener('scroll', this.handleScroll);
                window.addEventListener('resize', this.handleResize);
            }
        },
        {
            key: "detachListeners",
            value: function detachListeners() {
                window.removeEventListener('scroll', this.handleScroll);
                window.removeEventListener('resize', this.handleResize);
            }
        },
        {
            key: "updateSpinnerPosition",
            value: function updateSpinnerPosition() {
                var _this$spinnerRef, _this$containerRef;
                var viewportHeight = window.innerHeight;
                var targetNode = this.getTargetNode();
                var spinnerNode = (_this$spinnerRef = this.spinnerRef) === null || _this$spinnerRef === void 0 ? void 0 : _this$spinnerRef.current;
                if (!targetNode || typeof targetNode.getBoundingClientRect !== 'function' || !spinnerNode) return;
                var targetRect = targetNode.getBoundingClientRect();
                var spinnerRect = spinnerNode.getBoundingClientRect();
                var spinnerHeight = spinnerRect.height;
                var isInViewport = this.isVerticallyVisible(targetRect, viewportHeight);
                var top = targetRect.top, bottom = targetRect.bottom, height = targetRect.height;
                if (isInViewport) {
                    // The spinner may follow the element only if there is enough space:
                    // Let's say the element can fit at least three spinners (vertically)
                    var canFollow = height >= spinnerHeight * 3;
                    if (canFollow && !this.isFullyVerticallyVisible(targetRect, viewportHeight)) {
                        if (top >= 0) {
                            // Only the head of the element is visible
                            var viewportSpaceTakenByElement = viewportHeight - top;
                            var diff = viewportSpaceTakenByElement / 2 + top - spinnerHeight / 2;
                            var y = viewportSpaceTakenByElement < spinnerHeight * 3 ? top + spinnerHeight : diff;
                            this.translateSpinner(spinnerNode, y, true);
                        } else if (top < 0 && bottom > viewportHeight) {
                            // The element takes all viewport, nor its head nor tail are visible
                            var _y = viewportHeight / 2 - spinnerHeight / 2;
                            this.translateSpinner(spinnerNode, _y, true);
                        } else {
                            // Only the tail of the element is visible
                            var _diff = bottom / 2 - spinnerHeight / 2;
                            var _y2 = _diff < spinnerHeight ? _diff - (spinnerHeight - _diff) : _diff;
                            this.translateSpinner(spinnerNode, _y2, true);
                        }
                        return;
                    }
                } else {
                    // If both the element and the spinner are off screen - quit
                    if (!this.isVerticallyVisible(spinnerRect, viewportHeight)) return;
                }
                // Three options here:
                // 1) the element is fully visible
                // 2) the element is too small for the spinner to follow
                // 3) the spinner might still be visible while the element isn't
                var containerNode = (_this$containerRef = this.containerRef) === null || _this$containerRef === void 0 ? void 0 : _this$containerRef.current;
                if (containerNode && typeof containerNode.getBoundingClientRect === 'function') {
                    var thisTop = containerNode.getBoundingClientRect().top;
                    var _y3 = (top - thisTop) / 2;
                    this.translateSpinner(spinnerNode, _y3, false);
                }
            }
        },
        {
            key: "render",
            value: function render() {
                var _this$props2 = this.props, children = _this$props2.children, isLoading = _this$props2.isLoading, spinnerSize = _this$props2.spinnerSize, testId = _this$props2.testId, loadingLabel = _this$props2.loadingLabel;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainerAdvanced.Container), {
                    testId: testId && "".concat(testId, "--loading--container--advanced"),
                    ref: this.containerRef
                }, children, isLoading && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainerAdvanced.SpinnerBackdrop), {
                    testId: testId
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loadingContainerAdvanced.SpinnerContainer), {
                    ref: this.spinnerRef
                }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _spinnerDefault.default), {
                    size: spinnerSize,
                    testId: testId && "".concat(testId, "--loadingSpinner"),
                    label: loadingLabel
                }))));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
(0, _definePropertyDefault.default)(LoadingContainerAdvanced, "defaultProps", {
    isLoading: true,
    spinnerSize: (0, _constants.LARGE),
    contentsOpacity: "var(--ds-opacity-loading, ".concat("".concat((0, _constants.LOADING_CONTENTS_OPACITY)), ")"),
    loadingLabel: 'Loading table'
});

},{"@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@atlaskit/spinner":"hHHVB","../internal/constants":"dNwVR","../styled/loading-container-advanced":"2AZT8","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2AZT8":[function(require,module,exports,__globalThis) {
/* loading-container-advanced.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Container", ()=>Container);
parcelHelpers.export(exports, "SpinnerBackdrop", ()=>SpinnerBackdrop);
parcelHelpers.export(exports, "SpinnerContainer", ()=>SpinnerContainer);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _excluded = [
    "children",
    "testId"
];
var containerStyles = null;
var Container = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
    var children = props.children, testId = props.testId, rest = (0, _objectWithoutPropertiesDefault.default)(props, _excluded);
    return /*#__PURE__*/ _react.createElement("div", (0, _extendsDefault.default)({}, rest, {
        "data-testid": testId,
        ref: ref,
        className: (0, _runtime.ax)([
            "_kqswh2mm _6rth1ejb"
        ])
    }), children);
});
var spinnerBackdropStyles = null;
var SpinnerBackdrop = function SpinnerBackdrop(_ref) {
    var children = _ref.children, testId = _ref.testId;
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId && "".concat(testId, "--spinner-backdrop"),
        className: (0, _runtime.ax)([
            "_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o _lcxvglyw"
        ])
    }, children);
};
var spinnerContainerStyles = null;
var SpinnerContainer = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref2, ref) {
    var children = _ref2.children;
    return /*#__PURE__*/ _react.createElement("div", {
        ref: ref,
        className: (0, _runtime.ax)([
            "_kqswh2mm _152tidpf"
        ])
    }, children);
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"ks1OO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"c107c":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ManagedPagination);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _pagination = require("@atlaskit/pagination");
var _paginationDefault = parcelHelpers.interopDefault(_pagination);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var ManagedPagination = /*#__PURE__*/ function(_React$Component) {
    function ManagedPagination() {
        var _this;
        (0, _classCallCheckDefault.default)(this, ManagedPagination);
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _callSuper(this, ManagedPagination, [].concat(args));
        (0, _definePropertyDefault.default)(_this, "onChange", function(_event, newValue, analyticsEvent) {
            _this.props.onChange(newValue, analyticsEvent);
        });
        return _this;
    }
    (0, _inheritsDefault.default)(ManagedPagination, _React$Component);
    return (0, _createClassDefault.default)(ManagedPagination, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, total = _this$props.total, _this$props$value = _this$props.value, value = _this$props$value === void 0 ? 1 : _this$props$value, i18n = _this$props.i18n, testId = _this$props.testId, isDisabled = _this$props.isDisabled;
                var pages = (0, _toConsumableArrayDefault.default)(Array(total)).map(function(_, index) {
                    return index + 1;
                });
                // Pagination accepts array now thus selectedIndex starts with 0
                // So, we are substracting value by one thus not breaking dynamic table
                var selectedIndex = value - 1;
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _paginationDefault.default), {
                    selectedIndex: selectedIndex,
                    isDisabled: isDisabled,
                    label: i18n === null || i18n === void 0 ? void 0 : i18n.label,
                    nextLabel: i18n === null || i18n === void 0 ? void 0 : i18n.next,
                    previousLabel: i18n === null || i18n === void 0 ? void 0 : i18n.prev,
                    pageLabel: i18n === null || i18n === void 0 ? void 0 : i18n.pageLabel,
                    onChange: this.onChange,
                    pages: pages,
                    testId: testId && "".concat(testId, "--pagination")
                });
            }
        }
    ]);
}((0, _reactDefault.default).Component);

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@atlaskit/pagination":"dTuij","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dTuij":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _paginationDefault.default));
var _pagination = require("./pagination");
var _paginationDefault = parcelHelpers.interopDefault(_pagination);

},{"./pagination":"aPreK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aPreK":[function(require,module,exports,__globalThis) {
/* pagination.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _analyticsNext = require("@atlaskit/analytics-next");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useControlled = require("@atlaskit/ds-lib/use-controlled");
var _useControlledDefault = parcelHelpers.interopDefault(_useControlled);
var _chevronLeftChevronLeftLarge = require("@atlaskit/icon/core/migration/chevron-left--chevron-left-large");
var _chevronLeftChevronLeftLargeDefault = parcelHelpers.interopDefault(_chevronLeftChevronLeftLarge);
var _chevronRightChevronRightLarge = require("@atlaskit/icon/core/migration/chevron-right--chevron-right-large");
var _chevronRightChevronRightLargeDefault = parcelHelpers.interopDefault(_chevronRightChevronRightLarge);
var _compiled = require("@atlaskit/primitives/compiled");
var _navigator = require("./internal/components/navigator");
var _navigatorDefault = parcelHelpers.interopDefault(_navigator);
var _page = require("./internal/components/page");
var _pageDefault = parcelHelpers.interopDefault(_page);
var _renderEllipsis = require("./internal/components/render-ellipsis");
var _renderEllipsisDefault = parcelHelpers.interopDefault(_renderEllipsis);
var _constants = require("./internal/constants");
var _collapseRange = require("./internal/utils/collapse-range");
var _collapseRangeDefault = parcelHelpers.interopDefault(_collapseRange);
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var styles = {
    paginationMenu: "_ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _19pkze3t _2hwxze3t _otyrze3t _18u0ze3t",
    paginationMenuItem: "_1pfhze3t _ect41gqc",
    navigatorIconWrapper: "_18zr12x7"
};
var analyticsAttributes = {
    componentName: 'pagination',
    packageName: "@atlaskit/pagination",
    packageVersion: "16.1.5"
};
function NavigatorIcon(_ref) {
    var chevronDirection = _ref.chevronDirection;
    var Chevron = chevronDirection === 'left' ? (0, _chevronLeftChevronLeftLargeDefault.default) : (0, _chevronRightChevronRightLargeDefault.default);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Box), {
        as: "span",
        xcss: styles.navigatorIconWrapper
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(Chevron, {
        label: "",
        LEGACY_margin: "0 ".concat("var(--ds-space-negative-075, -6px)"),
        color: "currentColor",
        size: "small"
    }));
}
function InnerPagination(_ref2, ref) {
    var _ref2$components = _ref2.components, components = _ref2$components === void 0 ? (0, _constants.emptyObject) : _ref2$components, _ref2$defaultSelected = _ref2.defaultSelectedIndex, defaultSelectedIndex = _ref2$defaultSelected === void 0 ? 0 : _ref2$defaultSelected, selectedIndex = _ref2.selectedIndex, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'pagination' : _ref2$label, _ref2$pageLabel = _ref2.pageLabel, pageLabel = _ref2$pageLabel === void 0 ? 'page' : _ref2$pageLabel, _ref2$previousLabel = _ref2.previousLabel, previousLabel = _ref2$previousLabel === void 0 ? 'previous' : _ref2$previousLabel, _ref2$nextLabel = _ref2.nextLabel, nextLabel = _ref2$nextLabel === void 0 ? 'next' : _ref2$nextLabel, _ref2$style = _ref2.style, style = _ref2$style === void 0 ? (0, _constants.emptyObject) : _ref2$style, _ref2$max = _ref2.max, max = _ref2$max === void 0 ? 7 : _ref2$max, _ref2$onChange = _ref2.onChange, onChange = _ref2$onChange === void 0 ? (0, _noopDefault.default) : _ref2$onChange, pages = _ref2.pages, getPageLabel = _ref2.getPageLabel, _ref2$renderEllipsis = _ref2.renderEllipsis, renderEllipsis = _ref2$renderEllipsis === void 0 ? (0, _renderEllipsisDefault.default) : _ref2$renderEllipsis, analyticsContext = _ref2.analyticsContext, testId = _ref2.testId, isDisabled = _ref2.isDisabled;
    var _useControlled = (0, _useControlledDefault.default)(selectedIndex, function() {
        return defaultSelectedIndex || 0;
    }), _useControlled2 = (0, _slicedToArrayDefault.default)(_useControlled, 2), selectedIndexValue = _useControlled2[0], setSelectedIndexValue = _useControlled2[1];
    var onChangeWithAnalytics = (0, _analyticsNext.usePlatformLeafEventHandler)(_objectSpread({
        fn: function fn(value, analyticsEvent) {
            var event = value.event, selectedPageIndex = value.selectedPageIndex;
            if (selectedIndex === undefined) setSelectedIndexValue(selectedPageIndex);
            if (onChange) onChange(event, pages[selectedPageIndex], analyticsEvent);
        },
        action: 'changed',
        actionSubject: 'pageNumber',
        analyticsData: analyticsContext
    }, analyticsAttributes));
    var transform = function transform(page, currPageIndex, testId) {
        var selectedPage = pages[selectedIndexValue];
        var pageIndexLabel = "".concat(pageLabel, " ").concat(getPageLabel ? getPageLabel(page, currPageIndex) : page);
        var isCurrentPage = page === selectedPage;
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Inline), {
            as: "li",
            xcss: styles.paginationMenuItem,
            key: "page-".concat(getPageLabel ? getPageLabel(page, currPageIndex) : currPageIndex)
        }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _pageDefault.default), {
            component: components.Page,
            onClick: function onClick(event) {
                return onChangeWithAnalytics({
                    event: event,
                    selectedPageIndex: currPageIndex
                });
            },
            "aria-current": isCurrentPage ? 'page' : undefined,
            "aria-label": pageIndexLabel,
            isSelected: isCurrentPage,
            isDisabled: isDisabled,
            page: page,
            testId: testId && "".concat(testId, "--").concat(isCurrentPage ? 'current-' : '', "page-").concat(currPageIndex)
        }, getPageLabel ? getPageLabel(page, currPageIndex) : page));
    };
    return(/*#__PURE__*/ // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    (0, _reactDefault.default).createElement((0, _compiled.Box), {
        testId: testId,
        style: style,
        ref: ref,
        "aria-label": label,
        as: "nav"
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Inline), {
        space: "space.0",
        alignBlock: "center"
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _navigatorDefault.default), {
        key: "left-navigator",
        component: components.Previous,
        onClick: function onClick(event) {
            return onChangeWithAnalytics({
                event: event,
                selectedPageIndex: selectedIndexValue - 1
            });
        },
        isDisabled: isDisabled || selectedIndexValue === 0,
        iconBefore: /*#__PURE__*/ (0, _reactDefault.default).createElement(NavigatorIcon, {
            chevronDirection: "left"
        }),
        "aria-label": previousLabel,
        testId: testId && "".concat(testId, "--left-navigator")
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Inline), {
        space: "space.0",
        alignBlock: "baseline",
        as: "ul",
        xcss: styles.paginationMenu
    }, (0, _collapseRangeDefault.default)(pages, selectedIndexValue, {
        max: max,
        ellipsis: renderEllipsis,
        transform: transform
    }, testId)), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _navigatorDefault.default), {
        key: "right-navigator",
        component: components.Next,
        onClick: function onClick(event) {
            return onChangeWithAnalytics({
                event: event,
                selectedPageIndex: selectedIndexValue + 1
            });
        },
        isDisabled: isDisabled || selectedIndexValue === pages.length - 1,
        iconBefore: /*#__PURE__*/ (0, _reactDefault.default).createElement(NavigatorIcon, {
            chevronDirection: "right"
        }),
        "aria-label": nextLabel,
        testId: testId && "".concat(testId, "--right-navigator")
    }))));
}
/**
 * __Pagination__
 *
 * Pagination allows you to divide large amounts of content into smaller chunks across multiple pages.
 *
 * - [Examples](https://atlassian.design/components/pagination/examples)
 * - [Code](https://atlassian.design/components/pagination/code)
 * - [Usage](https://atlassian.design/components/pagination/usage)
 */ var Pagination = /*#__PURE__*/ (0, _react.memo)(/*#__PURE__*/ (0, _react.forwardRef)(InnerPagination));
exports.default = Pagination;

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/slicedToArray":"lvO5K","@compiled/react/runtime":"eGqVd","react":"jMk1U","@atlaskit/analytics-next":"3iJRH","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/ds-lib/use-controlled":"a8VcV","@atlaskit/icon/core/migration/chevron-left--chevron-left-large":"76hWJ","@atlaskit/icon/core/migration/chevron-right--chevron-right-large":"5xsCQ","@atlaskit/primitives/compiled":"29Id4","./internal/components/navigator":"9htg4","./internal/components/page":"5MmiK","./internal/components/render-ellipsis":"hV0Zn","./internal/constants":"eZ4kN","./internal/utils/collapse-range":"96nfx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eGqVd":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"gSUnp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gSUnp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"cMOwy","./style-cache":"42BeD","./ax":"eAyOR","./ac":"hGCJm","./css-custom-property":"fj753","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cMOwy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"bfBQR","./is-server-environment":"fLo0O","./sheet":"f9hg9","./style-cache":"42BeD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bfBQR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fLo0O":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f9hg9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
var _shorthand = require("./shorthand");
const styleBucketOrdering = [
    // shorthand properties
    's-0',
    's-1',
    's-2',
    's-3',
    's-4',
    's-5',
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everything else will make their way to the catch all style bucket.
 * We reduce the pseudo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    const firstBracket = sheet.indexOf('{');
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th characters could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) {
        // We send through a subset of the string instead of the full pseudo name.
        // For example `"focus-visible"` name would instead of `"us-visible"`.
        // Return a mapped pseudo else the default catch all bucket.
        const mapped = pseudosMap[sheet.slice(14, firstBracket)];
        if (mapped) return mapped;
    }
    const property = sheet.slice(firstBracket + 1, sheet.indexOf(':', firstBracket)).trim();
    const shorthandDepth = (0, _shorthand.getShorthandDepth)(property);
    if (typeof shorthandDepth === 'number') return `s-${shorthandDepth}`;
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"90lD6","./shorthand":"2URNC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"90lD6":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2URNC":[function(require,module,exports,__globalThis) {
// Copied from packages/utils/src/shorthand.ts so that we avoid
// inflating the bundle size of @compiled/react/runtime with the contents
// of @compiled/utils
//
// Keep this `shorthandBuckets` in sync with the `shorthandBuckets` defined in
// packages/utils/src/shorthand.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getShorthandDepth", ()=>getShorthandDepth);
const shorthandBuckets = {
    all: 0,
    animation: 1,
    'animation-range': 1,
    background: 1,
    border: 1,
    'border-color': 2,
    'border-style': 2,
    'border-width': 2,
    'border-block': 3,
    'border-inline': 3,
    'border-top': 4,
    'border-right': 4,
    'border-bottom': 4,
    'border-left': 4,
    'border-block-start': 5,
    'border-block-end': 5,
    'border-inline-start': 5,
    'border-inline-end': 5,
    'border-image': 1,
    'border-radius': 1,
    'column-rule': 1,
    columns: 1,
    'contain-intrinsic-size': 1,
    container: 1,
    flex: 1,
    'flex-flow': 1,
    font: 1,
    'font-synthesis': 1,
    'font-variant': 2,
    gap: 1,
    grid: 1,
    'grid-area': 1,
    'grid-column': 2,
    'grid-row': 2,
    'grid-template': 2,
    inset: 1,
    'inset-block': 2,
    'inset-inline': 2,
    'list-style': 1,
    margin: 1,
    'margin-block': 2,
    'margin-inline': 2,
    mask: 1,
    'mask-border': 1,
    offset: 1,
    outline: 1,
    overflow: 1,
    'overscroll-behavior': 1,
    padding: 1,
    'padding-block': 2,
    'padding-inline': 2,
    'place-content': 1,
    'place-items': 1,
    'place-self': 1,
    'position-try': 1,
    'scroll-margin': 1,
    'scroll-margin-block': 2,
    'scroll-margin-inline': 2,
    'scroll-padding': 1,
    'scroll-padding-block': 2,
    'scroll-padding-inline': 2,
    'scroll-timeline': 1,
    'text-decoration': 1,
    'text-emphasis': 1,
    'text-wrap': 1,
    transition: 1,
    'view-timeline': 1
};
const getShorthandDepth = (shorthand)=>{
    var _a;
    return (_a = shorthandBuckets[shorthand]) !== null && _a !== void 0 ? _a : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"42BeD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
if (typeof document !== 'undefined') {
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}
const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"90lD6","./is-server-environment":"fLo0O","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eAyOR":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hGCJm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */ parcelHelpers.export(exports, "ac", ()=>ac);
parcelHelpers.export(exports, "memoizedAc", ()=>memoizedAc);
/**
 * Provide an opportunity to clear the cache to prevent memory leak.
 */ parcelHelpers.export(exports, "clearCache", ()=>clearCache);
/**
 * Expose cache
 */ parcelHelpers.export(exports, "getCache", ()=>getCache);
var _isServerEnvironment = require("./is-server-environment");
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
/**
 * Memoize the result of ac so if it is called with the same args, it returns immediately.
 * Also, to prevent useless React rerenders
 */ const cache = new Map();
/**
 * `ac` returns an instance of AtomicGroups. The instance holds the knowledge of Atomic Group so we can chain `ac`.
 * e.g. <div className={ax([ax(['_aaaa_b']), '_aaaa_c'])} />
 */ class AtomicGroups {
    constructor(values){
        // An object stores the relation between Atomic group and actual class name
        // e.g. { "aaaa": "a" } `aaaa` is the Atomic group and `a` is the actual class name
        this.values = values;
    }
    toString() {
        let str = '';
        for (const [, value] of this.values)str += value + ' ';
        return str.slice(0, -1);
    }
}
function ac(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    const atomicGroups = new Map();
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        if (typeof cls === 'string') {
            const groups = cls.split(' ');
            for(let x = 0; x < groups.length; x++){
                const atomic = groups[x];
                const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
                const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
                const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH) : atomic;
                atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH + 1) : atomic);
            }
        } else // if cls is an instance of AtomicGroups, transfer its values to `atomicGroups`
        for (const [key, value] of cls.values)atomicGroups.set(key, value);
    }
    return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    // build the cacheKey based on the function argument
    // e.g. if the argument is ["_aaaabbbb", "_aaaa_a", "some-class-name"],
    // then the cacheKey is "_aaaabbbb _aaaa_a some-class-name"
    let cacheKey = '';
    for(let i = 0; i < classNames.length; i += 1){
        const current = classNames[i];
        // continue if current is undefined, false, or ""
        if (!current) continue;
        cacheKey += current + ' ';
    }
    cacheKey = cacheKey.slice(0, -1);
    if (cache.has(cacheKey)) return cache.get(cacheKey);
    const result = ac(classNames);
    cache.set(cacheKey, result);
    return result;
}
// Memoization is primarily used to prevent React from unncessary re-rendering.
// Use unmemoizedAc on server-side because We don't need to worry about re-rendering on server-side.
exports.default = memoizedAc;
function clearCache() {
    cache.clear();
}
function getCache() {
    return cache;
}

},{"./is-server-environment":"fLo0O","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fj753":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a8VcV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useControlled);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
function useControlled(propValue) {
    var getDefaultPropValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function() {
        return propValue;
    };
    var isControlled = propValue !== undefined;
    var _useState = (0, _react.useState)(getDefaultPropValue), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), valueState = _useState2[0], setValue = _useState2[1];
    var isControlledRef = (0, _react.useRef)(isControlled);
    (0, _react.useEffect)(function() {
        isControlledRef.current = isControlled;
    }, [
        isControlled
    ]);
    var value = isControlled ? propValue : valueState;
    var setValueIfUncontrolled = (0, _react.useCallback)(function(newValue) {
        if (!isControlledRef.current) setValue(newValue);
    }, []);
    return [
        value,
        setValueIfUncontrolled
    ];
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"76hWJ":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::e34bc8237f35d48455854b605c0f874a>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("9041582310d69d2b"));
var _chevronLeft = _interopRequireDefault(require("806e84a14d6efb8"));
var _chevronLeftLarge = _interopRequireDefault(require("7535933fd2fc3a02"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Migration Icon component for ChevronLeftIcon.
 * This component is ChevronLeftIcon, with `UNSAFE_fallbackIcon` set to "ChevronLeftLargeIcon".
 *
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Do not use 16px chevrons within buttons, icon buttons, or dropdowns to maintain visual cohesion with ADS which uses 12px chevrons.
Known uses: Navigate back, show previous page of pagination results
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ChevronLeftIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_chevronLeft.default, Object.assign({
        LEGACY_fallbackIcon: _chevronLeftLarge.default
    }, props));
ChevronLeftIcon.Name = 'ChevronLeftIconMigration';
var _default = exports.default = ChevronLeftIcon;

},{"9041582310d69d2b":"jMk1U","806e84a14d6efb8":"hOCSz","7535933fd2fc3a02":"3LmHD"}],"hOCSz":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4b851fec559156e1edca3c5f214f4a7f>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("f15e234903265866"));
var _baseNew = _interopRequireDefault(require("7e3a57a01d031d51"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "ChevronLeft".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Do not use 16px chevrons within buttons, icon buttons, or dropdowns to maintain visual cohesion with ADS which uses 12px chevrons.
Known uses: Navigate back, show previous page of pagination results
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ChevronLeftIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" d="m9.97 1.47-6 6a.75.75 0 0 0-.052 1.004l.052.056 6 6 1.06-1.06L5.56 8l5.47-5.47z"/>`
    }, props));
ChevronLeftIcon.displayName = 'ChevronLeftIcon';
var _default = exports.default = ChevronLeftIcon;

},{"f15e234903265866":"jMk1U","7e3a57a01d031d51":"1Uy6j"}],"1Uy6j":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconNewDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconNew.Icon));
var _iconNew = require("../components/icon-new");
var _iconNewDefault = parcelHelpers.interopDefault(_iconNew);

},{"../components/icon-new":"duZS2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"duZS2":[function(require,module,exports,__globalThis) {
/* icon-new.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
/**
 * We are hiding this props from consumers as it's reserved
 * for use by Icon Tile.
 */ var svgStyles = null;
var iconStyles = null;
var utilityIconStyles = null;
var scaleStyles = null;
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var scaleSize = null;
var coreSizeMedium = {
    none: "_1bsbpxbi _4t3ipxbi",
    compact: "_1bsb1ejb _4t3i1ejb",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var coreSizeSmall = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var utilSizes = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var baseSizeMap = {
    core: 16,
    utility: 12
};
var paddingMap = {
    core: {
        medium: {
            none: 0,
            compact: 4,
            spacious: 4
        },
        small: {
            none: 0,
            compact: 2.66,
            spacious: 8
        }
    },
    utility: {
        medium: {
            none: 0,
            compact: 2,
            spacious: 6
        },
        small: {
            none: 0,
            compact: 2,
            spacious: 6
        }
    }
};
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _props$type;
    var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing;
    var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
    } : undefined;
    // Fall back to old icon
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    if (FallbackIcon && !(0, _platformFeatureFlags.fg)('platform-visual-refresh-icons')) // parse out unnecessary props
    return /*#__PURE__*/ _react.createElement(FallbackIcon, {
        primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
        secondaryColor: LEGACY_secondaryColor,
        size: LEGACY_size,
        label: label,
        testId: testId,
        UNSAFE_margin: LEGACY_margin
    });
    var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core';
    var size = 'size' in props && props.size !== undefined && // This prevents invalid sizes being passed in, which is required
    // for handling unsupported legacy icon sizes which can
    // cause errors.
    (props.size === 'small' || props.size === 'medium') ? props.size : 'medium';
    var baseSize = baseSizeMap[type];
    var viewBoxPadding = paddingMap[type][size][spacing];
    var viewBoxSize = baseSize + 2 * viewBoxPadding;
    return /*#__PURE__*/ _react.createElement("span", {
        "data-testid": testId,
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            color: color
        },
        className: (0, _runtime.ax)([
            "_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9",
            "_12va1onz _jcxd1r8n",
            shouldScale && "_1bsb1kw7 _4t3i1kw7",
            (type === 'utility' || size === 'small') && "_vwz4utpp"
        ])
    }, /*#__PURE__*/ _react.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML: dangerouslySetInnerHTML,
        className: (0, _runtime.ax)([
            "_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31",
            shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === 'utility' ? utilSizes[spacing] : size === 'small' ? coreSizeSmall[spacing] : coreSizeMedium[spacing]
        ])
    }));
});
exports.default = Icon;

},{"react":"jMk1U","@compiled/react/runtime":"eGqVd","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3LmHD":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("36964ab94bf4e134"));
var _base = require("8f96754e6cd4c6db");
var _chevronLeft = _interopRequireDefault(require("b5cae5f9ea91da58"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const ChevronLeftLargeIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="m9.005 10.995 4.593-4.593a.99.99 0 1 1 1.4 1.4l-3.9 3.9 3.9 3.9a.99.99 0 0 1-1.4 1.4L9.005 12.41a1 1 0 0 1 0-1.414"/></svg>`
    }, props, {
        newIcon: _chevronLeft.default
    }));
ChevronLeftLargeIcon.displayName = 'ChevronLeftLargeIcon';
var _default = exports.default = ChevronLeftLargeIcon;

},{"36964ab94bf4e134":"jMk1U","8f96754e6cd4c6db":"2kekB","b5cae5f9ea91da58":"hOCSz"}],"2kekB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _icon.Icon));
parcelHelpers.export(exports, "IconFacade", ()=>(0, _iconFacade.IconFacade));
var _icon = require("../components/icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);
var _iconFacade = require("../components/icon-facade");

},{"../components/icon":"fBQL5","../components/icon-facade":"6heHC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fBQL5":[function(require,module,exports,__globalThis) {
/* icon.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */ var iconStyles = null;
var sizeStyles = {
    small: "_1bsb7vkz _4t3i7vkz _5fdi7vkz _zbji7vkz",
    medium: "_1bsb1tcg _4t3i1tcg _5fdi1tcg _zbji1tcg",
    large: "_1bsbzwfg _4t3izwfg _5fdizwfg _zbjizwfg",
    xlarge: "_1bsbckbl _4t3ickbl _5fdickbl _zbjickbl"
};
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var primaryEqualsSecondaryHcmStyles = null;
var secondaryTransparentHcmStyles = null;
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _ref = props, Glyph = _ref.glyph, dangerouslySetGlyph = _ref.dangerouslySetGlyph, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor, secondaryColor = _ref.secondaryColor, size = _ref.size, testId = _ref.testId, label = _ref.label, width = _ref.width, height = _ref.height, UNSAFE_margin = _ref.UNSAFE_margin;
    var glyphProps = dangerouslySetGlyph ? {
        dangerouslySetInnerHTML: {
            __html: dangerouslySetGlyph
        }
    } : {
        children: Glyph ? /*#__PURE__*/ _react.createElement(Glyph, {
            role: "presentation"
        }) : null
    };
    var customDimensions = width && height ? {
        width: width + 'px',
        height: height + 'px'
    } : null;
    return /*#__PURE__*/ _react.createElement("span", (0, _extendsDefault.default)({
        "data-testid": testId,
        "data-vc": "icon-".concat(testId),
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: _objectSpread(_objectSpread({}, customDimensions), {}, {
            '--icon-primary-color': primaryColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            '--icon-secondary-color': secondaryColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            margin: UNSAFE_margin
        })
    }, glyphProps, {
        className: (0, _runtime.ax)([
            "_1e0c1o8l _1o9zidpf _vyfuvuon _vwz4kb7n _1szv15vq _1tly15vq _rzyw1osq _17jb1osq _1ksvoz0e _3se1x1jp _re2rglyw _1veoyfq0 _1kg81r31",
            "_jcxd1r8n _gq0g1onz _1trkwc43",
            primaryColor === secondaryColor && "_18hbwc43",
            secondaryColor === 'transparent' && "_4fyi1j28",
            size && sizeStyles[size]
        ])
    }));
});
exports.default = Icon;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@compiled/react/runtime":"eGqVd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6heHC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconFacade", ()=>IconFacade);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _icon = require("./icon");
var _excluded = [
    "dangerouslySetGlyph",
    "size"
];
var sizeSpacingMap = {
    utility: {
        small: 'compact',
        medium: 'spacious'
    },
    core: {
        small: 'none',
        medium: 'spacious'
    }
};
var IconFacade = /*#__PURE__*/ (0, _react.memo)(function IconFacade(_ref) {
    var dangerouslySetGlyph = _ref.dangerouslySetGlyph, size = _ref.size, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var NewIcon = props.newIcon;
    // By default, the icon size will be medium for core icons and small for utility icons
    var iconSize = size !== null && size !== void 0 ? size : 'medium';
    var useNewIcon = !props.isFacadeDisabled && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-legacy-facade');
    if (useNewIcon && NewIcon && (iconSize === 'small' || iconSize === 'medium')) {
        if (props.iconType === 'utility') {
            var Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, (0, _extendsDefault.default)({}, props, {
                spacing: (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-facade-button-fix') ? sizeSpacingMap['utility'][iconSize] : 'none',
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        } else {
            var _Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(_Icon, (0, _extendsDefault.default)({}, props, {
                size: iconSize,
                spacing: sizeSpacingMap['core'][iconSize],
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        }
    }
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _icon.Icon), (0, _extendsDefault.default)({
        dangerouslySetGlyph: dangerouslySetGlyph,
        size: size
    }, props));
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/platform-feature-flags":"3H8e6","./icon":"fBQL5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5xsCQ":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::0d4724a1e5dc4e8ab6ea5bb133724929>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("7868e0fad8a0305e"));
var _chevronRight = _interopRequireDefault(require("3fec97180f9a775"));
var _chevronRightLarge = _interopRequireDefault(require("a33c271d84f8fd95"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Migration Icon component for ChevronRightIcon.
 * This component is ChevronRightIcon, with `UNSAFE_fallbackIcon` set to "ChevronRightLargeIcon".
 *
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Do not use 16px chevrons within buttons, icon buttons, or dropdowns to maintain visual cohesion with ADS which uses 12px chevrons.
Known uses: Next page of pagination results, collapsed tree item, expand tree item
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ChevronRightIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_chevronRight.default, Object.assign({
        LEGACY_fallbackIcon: _chevronRightLarge.default
    }, props));
ChevronRightIcon.Name = 'ChevronRightIconMigration';
var _default = exports.default = ChevronRightIcon;

},{"7868e0fad8a0305e":"jMk1U","3fec97180f9a775":"aXlTl","a33c271d84f8fd95":"aw6lQ"}],"aXlTl":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::dc9b5ca0894f9a89607a0f553a633e25>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("13f95496be241274"));
var _baseNew = _interopRequireDefault(require("eba793512b4391b3"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "ChevronRight".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Do not use 16px chevrons within buttons, icon buttons, or dropdowns to maintain visual cohesion with ADS which uses 12px chevrons.
Known uses: Next page of pagination results, collapsed tree item, expand tree item
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ChevronRightIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" d="m6.03 1.47 6 6a.75.75 0 0 1 .052 1.004l-.052.056-6 6-1.06-1.06L10.44 8 4.97 2.53z"/>`
    }, props));
ChevronRightIcon.displayName = 'ChevronRightIcon';
var _default = exports.default = ChevronRightIcon;

},{"13f95496be241274":"jMk1U","eba793512b4391b3":"1Uy6j"}],"aw6lQ":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("e75bb3268fd59eb0"));
var _base = require("5c475927c3fc7e4a");
var _chevronRight = _interopRequireDefault(require("ac6cd2446cbbca64"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const ChevronRightLargeIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M14.995 10.995a1 1 0 0 1 0 1.414l-4.593 4.593a.99.99 0 0 1-1.4-1.4l3.9-3.9-3.9-3.9a.99.99 0 0 1 1.4-1.4z"/></svg>`
    }, props, {
        newIcon: _chevronRight.default
    }));
ChevronRightLargeIcon.displayName = 'ChevronRightLargeIcon';
var _default = exports.default = ChevronRightLargeIcon;

},{"e75bb3268fd59eb0":"jMk1U","5c475927c3fc7e4a":"2kekB","ac6cd2446cbbca64":"aXlTl"}],"9htg4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Navigator);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _standardButton = require("@atlaskit/button/standard-button");
var _standardButtonDefault = parcelHelpers.interopDefault(_standardButton);
function Navigator(props) {
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _standardButtonDefault.default), {
        "aria-label": props['aria-label'],
        isDisabled: props.isDisabled,
        iconBefore: props.iconBefore,
        testId: props.testId,
        onClick: props.onClick,
        component: props.component,
        appearance: "subtle"
    });
}

},{"react":"jMk1U","@atlaskit/button/standard-button":"hrNml","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hrNml":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _buttonDefault.default));
var _button = require("../old-button/button");
var _buttonDefault = parcelHelpers.interopDefault(_button);

},{"../old-button/button":"iDE23","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iDE23":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _components = require("@atlaskit/theme/components");
var _buttonBase = require("./shared/button-base");
var _buttonBaseDefault = parcelHelpers.interopDefault(_buttonBase);
var _css = require("./shared/css");
var _getIsOnlySingleIcon = require("./shared/get-is-only-single-icon");
var _getIsOnlySingleIconDefault = parcelHelpers.interopDefault(_getIsOnlySingleIcon);
var _excluded = [
    "appearance",
    "children",
    "iconBefore",
    "iconAfter",
    "isSelected",
    "onMouseDown",
    "onMouseUp",
    "shouldFitContainer",
    "spacing"
];
var isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;
/**
 * __Button__
 *
 * @deprecated Legacy buttons are deprecated and will be removed from `atlaskit/button` in an upcoming major release. Please use the new Button components from `@atlaskit/button/new`
 *
 * Please refer to the [migration guide](https://atlassian.design/components/button/button-legacy/migration-guide) for further details.
 *
 * A button triggers an event or action. They let users know what will happen next.
 *
 * - [Examples](https://atlassian.design/components/button/button-legacy/examples)
 * - [Code](https://atlassian.design/components/button/button-legacy/code)
 * - [Usage](https://atlassian.design/components/button/button-legacy/usage)
 */ var Button = /*#__PURE__*/ (0, _reactDefault.default).memo(/*#__PURE__*/ (0, _reactDefault.default).forwardRef(function Button(_ref, ref) {
    var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'default' : _ref$appearance, children = _ref.children, iconBefore = _ref.iconBefore, iconAfter = _ref.iconAfter, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$onMouseDown = _ref.onMouseDown, providedOnMouseDown = _ref$onMouseDown === void 0 ? (0, _noopDefault.default) : _ref$onMouseDown, _ref$onMouseUp = _ref.onMouseUp, providedOnMouseUp = _ref$onMouseUp === void 0 ? (0, _noopDefault.default) : _ref$onMouseUp, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? 'default' : _ref$spacing, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var _useGlobalTheme = (0, _components.useGlobalTheme)(), mode = _useGlobalTheme.mode;
    var isOnlySingleIcon = (0, _getIsOnlySingleIconDefault.default)({
        children: children,
        iconBefore: iconBefore,
        iconAfter: iconAfter
    });
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), isActive = _useState2[0], setIsActive = _useState2[1];
    // Wrap onMouseDown / onMouseUp to manually trigger active state
    //  in Firefox
    var onMouseDown = (0, _react.useCallback)(function(event) {
        providedOnMouseDown(event);
        if (isFirefox) setIsActive(true);
    }, [
        providedOnMouseDown,
        setIsActive
    ]);
    var onMouseUp = (0, _react.useCallback)(function(event) {
        providedOnMouseUp(event);
        if (isFirefox) setIsActive(false);
    }, [
        providedOnMouseUp,
        setIsActive
    ]);
    var buttonCss = (0, _react.useMemo)(function() {
        return (0, _css.getCss)({
            appearance: appearance,
            spacing: spacing,
            mode: mode,
            isSelected: isSelected,
            shouldFitContainer: shouldFitContainer,
            isOnlySingleIcon: isOnlySingleIcon
        });
    }, [
        appearance,
        spacing,
        mode,
        isSelected,
        shouldFitContainer,
        isOnlySingleIcon
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _buttonBaseDefault.default), (0, _extendsDefault.default)({}, rest, {
        ref: ref,
        appearance: appearance,
        buttonCss: buttonCss,
        children: children,
        "data-firefox-is-active": isActive ? true : undefined,
        iconAfter: iconAfter,
        iconBefore: iconBefore,
        isSelected: isSelected,
        onMouseDown: onMouseDown,
        onMouseUp: onMouseUp,
        spacing: spacing
    }));
}));
// Tools including enzyme rely on components having a display name
Button.displayName = 'Button';
exports.default = Button;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/theme/components":"b5624","./shared/button-base":"bjpon","./shared/css":"g8VFS","./shared/get-is-only-single-icon":"d7244","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b5624":[function(require,module,exports,__globalThis) {
/*
   This file will become the new index for theme once the codemod is mature enough.
   For now we're keeping the index file to avoid having to do a major change.
   Once the codemod is done and all the AK modules have been codeshifted, we delete index.js and rename this file to index + update all the imports
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getTheme", ()=>(0, _getThemeDefault.default));
parcelHelpers.export(exports, "themed", ()=>(0, _themedDefault.default));
parcelHelpers.export(exports, "default", ()=>(0, _themeDefault.default));
parcelHelpers.export(exports, "useGlobalTheme", ()=>(0, _theme.useGlobalTheme));
parcelHelpers.export(exports, "createTheme", ()=>(0, _createTheme.createTheme));
var _getTheme = require("./utils/get-theme");
var _getThemeDefault = parcelHelpers.interopDefault(_getTheme);
var _themed = require("./utils/themed");
var _themedDefault = parcelHelpers.interopDefault(_themed);
var _theme = require("./components/theme");
var _themeDefault = parcelHelpers.interopDefault(_theme);
var _createTheme = require("./utils/create-theme");

},{"./utils/get-theme":false,"./utils/themed":false,"./components/theme":"jN03u","./utils/create-theme":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jN03u":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useGlobalTheme", ()=>useTheme);
var _createTheme = require("../utils/create-theme");
// Create default global light theme
var _createTheme1 = (0, _createTheme.createTheme)(function() {
    return {
        mode: 'light'
    };
}), Provider = _createTheme1.Provider, Consumer = _createTheme1.Consumer, useTheme = _createTheme1.useTheme;
var Theme = {
    Provider: Provider,
    Consumer: Consumer
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = Theme;

},{"../utils/create-theme":"cgFIZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cgFIZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * createTheme is used to create a set of Providers and Consumers for theming components.
 * - Takes a default theme function; this theme function gets a set of props, and returns tokens
 *  based on those props. An example of this default theme function is one that produces the standard
 *  appearance of the component
 * - Returns three things - a Provider that allow for additional themes to be applied, a Consumer
 *  that can get the current theme and fetch it, and a custom hook - useTheme which provides an alternate (although functionally the same) API
 *  to the Consumer.
 */ parcelHelpers.export(exports, "createTheme", ()=>createTheme);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _excluded = [
    "children"
];
function createTheme(defaultGetTokens) {
    var emptyThemeFn = function emptyThemeFn(getTokens, props) {
        return getTokens(props);
    };
    /**
   * Internally, Theme uses React Context, with internal providers and consumers.
   * The React Context passes only a function that gets props, and turns them into tokens. This
   * function gets mixed as more Providers with their own themes are added. This mixed function
   * is ultimately picked up by Consumers, which implement a context consumer internally to fetch
   * the theme.
   */ var ThemeContext = /*#__PURE__*/ (0, _react.createContext)(defaultGetTokens);
    function useTheme(themeProps) {
        var theme = (0, _react.useContext)(ThemeContext);
        var themeFn = theme || emptyThemeFn;
        var tokens = themeFn(themeProps);
        return tokens;
    }
    // The Theme Consumer takes a function as its child - this function takes tokens, and the
    // return value is generally a set of nodes with the tokens applied appropriately.
    function Consumer(props) {
        var children = props.children, themeProps = (0, _objectWithoutPropertiesDefault.default)(props, _excluded);
        // @ts-ignore See issue for more info: https://github.com/Microsoft/TypeScript/issues/10727
        // Argument of type 'Pick<ThemeProps & { children: (tokens: ThemeTokens) => ReactNode; }, Exclude<keyof ThemeProps, "children">>' is not assignable to parameter of type 'ThemeProps'.ts(2345)
        var tokens = useTheme(themeProps);
        // We add a fragment to ensure we don't break people upgrading.
        // Previously they may have been able to pass in undefined without things blowing up.
        return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, children(tokens));
    }
    /**
   * The Theme Provider takes regular nodes as its children, but also takes a *theme function*
   * - The theme function takes a set of props, as well as a function (getTokens) that can turn props into tokens.
   * - The getTokens function isn't called immediately - instead the props are passed
   *    through a mix of parent theming functions
   * Children of this provider will receive this mixed theme
   */ function Provider(props) {
        var themeFn = (0, _react.useContext)(ThemeContext);
        var valueFn = props.value || emptyThemeFn;
        var mixedFn = (0, _react.useCallback)(function(themeProps) {
            return valueFn(themeFn, themeProps);
        }, [
            themeFn,
            valueFn
        ]);
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(ThemeContext.Provider, {
            value: mixedFn
        }, props.children);
    }
    return {
        Consumer: Consumer,
        Provider: Provider,
        useTheme: useTheme
    };
}

},{"@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bjpon":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
/* eslint-disable @atlaskit/design-system/consistent-css-prop-usage */ /**
 * @jsxRuntime classic
 * @jsx jsx
 */ var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react1 = require("@emotion/react");
var _analyticsNext = require("@atlaskit/analytics-next");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useAutoFocus = require("@atlaskit/ds-lib/use-auto-focus");
var _useAutoFocusDefault = parcelHelpers.interopDefault(_useAutoFocus);
var _focusRing = require("@atlaskit/focus-ring");
var _focusRingDefault = parcelHelpers.interopDefault(_focusRing);
// eslint-disable-next-line no-duplicate-imports
var _interactionContext = require("@atlaskit/interaction-context");
var _interactionContextDefault = parcelHelpers.interopDefault(_interactionContext);
var _colors = require("@atlaskit/theme/colors");
var _blockEvents = require("./block-events");
var _blockEventsDefault = parcelHelpers.interopDefault(_blockEvents);
var _css = require("./css");
var _getIfVisuallyHiddenChildren = require("./get-if-visually-hidden-children");
var _excluded = [
    "analyticsContext",
    "appearance",
    "autoFocus",
    "buttonCss",
    "children",
    "className",
    "href",
    "component",
    "iconAfter",
    "iconBefore",
    "interactionName",
    "isDisabled",
    "isSelected",
    "onBlur",
    "onClick",
    "onFocus",
    "onMouseDown",
    "overlay",
    "shouldFitContainer",
    "spacing",
    "tabIndex",
    "type",
    "testId"
];
// Disabled buttons will still publish events for nested elements in webkit.
// We are disabling pointer events on child elements so that
// the button will always be the target of events
// Note: firefox does not have this behaviour for child elements
var noPointerEventsOnChildrenCss = {
    '> *': {
        pointerEvents: 'none'
    }
};
/**
 * These CSS variables consumed by the new icons, to allow them to have appropriate
 * padding inside Button while also maintaining spacing for the existing icons.
 *
 * These styles can be removed once the new icons are fully rolled out, feature flag
 * platform-visual-refresh-icons is cleaned up,
 * and we bump Button to set padding based on the new icons.
 */ var iconBeforeSpacingFixStyle = (0, _react1.css)({
    '--ds--button--new-icon-padding-end': "var(--ds-space-025, 2px)",
    '--ds--button--new-icon-padding-start': "var(--ds-space-050, 4px)",
    marginInlineStart: "var(--ds-space-negative-025, -2px)"
});
var iconAfterSpacingFixStyle = (0, _react1.css)({
    '--ds--button--new-icon-padding-end': "var(--ds-space-050, 4px)",
    '--ds--button--new-icon-padding-start': "var(--ds-space-025, 2px)",
    marginInlineEnd: "var(--ds-space-negative-025, -2px)"
});
var getSpacingFix = function getSpacingFix(children, spacingStyles) {
    if (!children || (0, _getIfVisuallyHiddenChildren.getIfVisuallyHiddenChildren)(children)) return null;
    return spacingStyles;
};
var getChildren = function getChildren(children, childrenStyles) {
    if ((0, _getIfVisuallyHiddenChildren.getIfVisuallyHiddenChildren)(children)) return children;
    return children ? (0, _react1.jsx)("span", {
        css: childrenStyles
    }, children) : null;
};
var ButtonBase = /*#__PURE__*/ (0, _reactDefault.default).forwardRef(function ButtonBase(props, ref) {
    var analyticsContext = props.analyticsContext, _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? 'default' : _props$appearance, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, buttonCss = props.buttonCss, children = props.children, className = props.className, href = props.href, _props$component = props.component, Component = _props$component === void 0 ? href ? 'a' : 'button' : _props$component, iconAfter = props.iconAfter, iconBefore = props.iconBefore, interactionName = props.interactionName, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$isSelected = props.isSelected, isSelected = _props$isSelected === void 0 ? false : _props$isSelected, onBlur = props.onBlur, _props$onClick = props.onClick, providedOnClick = _props$onClick === void 0 ? (0, _noopDefault.default) : _props$onClick, onFocus = props.onFocus, _props$onMouseDown = props.onMouseDown, providedOnMouseDown = _props$onMouseDown === void 0 ? (0, _noopDefault.default) : _props$onMouseDown, overlay = props.overlay, shouldFitContainer = props.shouldFitContainer, _props$spacing = props.spacing, spacing = _props$spacing === void 0 ? 'default' : _props$spacing, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, _props$type = props.type, type = _props$type === void 0 ? !href ? 'button' : undefined : _props$type, testId = props.testId, rest = (0, _objectWithoutPropertiesDefault.default)(props, _excluded);
    var ourRef = (0, _react.useRef)();
    var setRef = (0, _react.useCallback)(function(node) {
        ourRef.current = node;
        if (ref == null) return;
        if (typeof ref === 'function') {
            ref(node);
            return;
        }
        // We can write to ref's `current` property, but Typescript does not like it.
        // @ts-ignore
        ref.current = node;
    }, [
        ourRef,
        ref
    ]);
    // Cross browser auto focusing is pretty broken, so we are doing it ourselves
    (0, _useAutoFocusDefault.default)(ourRef, autoFocus);
    var interactionContext = (0, _react.useContext)((0, _interactionContextDefault.default));
    var handleClick = (0, _react.useCallback)(function(e, analyticsEvent) {
        interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
        providedOnClick(e, analyticsEvent);
    }, [
        providedOnClick,
        interactionContext,
        interactionName
    ]);
    var onClick = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: handleClick,
        action: 'clicked',
        componentName: 'button',
        packageName: "@atlaskit/button",
        packageVersion: "23.2.5",
        analyticsData: analyticsContext
    });
    // Button currently calls preventDefault, which is not standard button behaviour
    var onMouseDown = (0, _react.useCallback)(function(event) {
        event.preventDefault();
        providedOnMouseDown(event);
    }, [
        providedOnMouseDown
    ]);
    // Lose focus when becoming disabled (standard button behaviour)
    (0, _react.useEffect)(function() {
        var el = ourRef.current;
        if (isDisabled && el && el === document.activeElement) el.blur();
    }, [
        isDisabled
    ]);
    // we are 'disabling' input with a button when there is an overlay
    var hasOverlay = Boolean(overlay);
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    var fadeStyles = (0, _react1.css)((0, _css.getFadingCss)({
        hasOverlay: hasOverlay
    }));
    var isInteractive = !isDisabled && !hasOverlay;
    /**
   * HACK: Spinner needs to have different colours in the "new" tokens design compared to the old design.
   * For now, while we support both, these styles reach into Spinner when a theme is set, applies the right color.
   * Ticket to remove: https://product-fabric.atlassian.net/browse/DSP-2067.
   */ var spinnerHackCss = {};
    if (isSelected || isDisabled || appearance === 'warning') spinnerHackCss = {
        '[data-theme] & circle': {
            stroke: "".concat(isSelected || isDisabled ? "var(--ds-icon-subtle, ".concat((0, _colors.N500), ")") : "var(--ds-icon-warning-inverse, ".concat((0, _colors.N500), ")"), " !important")
        }
    };
    return (0, _react1.jsx)((0, _focusRingDefault.default), null, (0, _react1.jsx)(Component, (0, _extendsDefault.default)({}, rest, {
        ref: setRef,
        className: className,
        css: [
            buttonCss,
            isInteractive ? null : noPointerEventsOnChildrenCss
        ],
        "data-has-overlay": hasOverlay ? true : undefined,
        "data-testid": testId,
        disabled: isDisabled,
        href: isInteractive ? href : undefined,
        onBlur: onBlur,
        onClick: onClick,
        onFocus: onFocus,
        onMouseDown: onMouseDown,
        tabIndex: isDisabled ? -1 : tabIndex,
        type: type
    }, (0, _blockEventsDefault.default)({
        isInteractive: isInteractive
    })), iconBefore ? (0, _react1.jsx)("span", {
        css: [
            fadeStyles,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            (0, _css.getIconStyle)({
                spacing: spacing
            }),
            getSpacingFix(children, iconBeforeSpacingFixStyle)
        ]
    }, iconBefore) : null, getChildren(children, [
        fadeStyles,
        (0, _css.getContentStyle)({
            spacing: spacing
        })
    ]), iconAfter ? (0, _react1.jsx)("span", {
        css: [
            fadeStyles,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            (0, _css.getIconStyle)({
                spacing: spacing
            }),
            getSpacingFix(children, iconAfterSpacingFixStyle)
        ]
    }, iconAfter) : null, overlay ? (0, _react1.jsx)("span", {
        css: [
            (0, _css.overlayCss),
            spinnerHackCss
        ]
    }, overlay) : null));
});
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = ButtonBase;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@emotion/react":"cLTfV","@atlaskit/analytics-next":"3iJRH","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/ds-lib/use-auto-focus":"493DL","@atlaskit/focus-ring":"1OvUo","@atlaskit/interaction-context":"jP4AZ","@atlaskit/theme/colors":"iIuwU","./block-events":"e1KWi","./css":"g8VFS","./get-if-visually-hidden-children":"5u1PZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1OvUo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _focusRingDefault.default));
parcelHelpers.export(exports, "useFocusRing", ()=>(0, _useFocusRingDefault.default));
var _focusRing = require("./focus-ring");
var _focusRingDefault = parcelHelpers.interopDefault(_focusRing);
var _useFocusRing = require("./use-focus-ring");
var _useFocusRingDefault = parcelHelpers.interopDefault(_useFocusRing);

},{"./focus-ring":"hsZMh","./use-focus-ring":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hsZMh":[function(require,module,exports,__globalThis) {
/**
 * @jsxRuntime classic
 * @jsx jsx
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react1 = require("@emotion/react");
var BORDER_WIDTH = 2;
var baseFocusOutsideStyles = (0, _react1.css)({
    outline: "".concat(BORDER_WIDTH, "px solid ", "var(--ds-border-focused, #2684FF)"),
    outlineOffset: BORDER_WIDTH
});
var baseInsetStyles = (0, _react1.css)({
    outlineColor: "var(--ds-border-focused, #2684FF)",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    outlineOffset: -BORDER_WIDTH,
    outlineStyle: 'solid',
    outlineWidth: "var(--ds-border-width-outline, 2px)"
});
var focusRingStyles = (0, _react1.css)({
    // Focus styles used when :focus-visible isn't supported
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
    '&:focus': baseFocusOutsideStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
    '&:focus-visible': baseFocusOutsideStyles,
    // Remove default focus styles for mouse interactions if :focus-visible is supported
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
    '&:focus:not(:focus-visible)': {
        outline: 'none'
    },
    '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {
        '&:focus-visible': {
            outline: '1px solid'
        }
    }
});
var insetFocusRingStyles = (0, _react1.css)({
    // Focus styles used when :focus-visible isn't supported
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
    '&:focus': baseInsetStyles,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
    '&:focus-visible': baseInsetStyles,
    // Remove default focus styles for mouse interactions if :focus-visible is supported
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
    '&:focus:not(:focus-visible)': {
        outline: 'none'
    },
    '@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)': {
        '&:focus-visible': {
            outline: '1px solid',
            // eslint-disable-next-line @atlaskit/design-system/use-tokens-space
            outlineOffset: '-1px'
        }
    }
});
/**
 * __Focus ring__
 *
 * A focus ring visually indicates the currently focused item.
 *
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/focus-ring)
 *
 * @example
 * ```jsx
 * import FocusRing from '@atlaskit/focus-ring';
 *
 * const InteractiveComponent = () => (
 *   <FocusRing>
 *     <button type="button">Hello</button>
 *   </FocusRing>
 * )
 * ```
 */ var FocusRing = /*#__PURE__*/ (0, _react.memo)(function(_ref) {
    var children = _ref.children, isInset = _ref.isInset, focus = _ref.focus;
    var controlledStyles = isInset ? baseInsetStyles : baseFocusOutsideStyles;
    var uncontrolledStyles = isInset ? insetFocusRingStyles : focusRingStyles;
    var focusCls = typeof focus === 'undefined' ? uncontrolledStyles : focus === 'on' && controlledStyles;
    return (0, _react1.jsx)((0, _react1.ClassNames), null, function(_ref2) {
        var css = _ref2.css, cx = _ref2.cx;
        return (0, _react.Children).only(// This may look unwieldy but means we skip applying styles / cloning if no className is applicable
        focusCls ? /*#__PURE__*/ // eslint-disable-next-line @repo/internal/react/no-clone-element
        (0, _react.cloneElement)(children, {
            className: cx([
                css(focusCls),
                children.props.className
            ])
        }) : children);
    });
});
FocusRing.displayName = 'FocusRing';
exports.default = FocusRing;

},{"react":"jMk1U","@emotion/react":"cLTfV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e1KWi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>blockEvents);
function abort(event) {
    event.preventDefault();
    event.stopPropagation();
}
var tabKeyCode = 9;
function onKey(event) {
    // Allowing tab so that a user can move focus away
    if (event.keyCode === tabKeyCode) return;
    abort(event);
}
var block = {
    onMouseDownCapture: abort,
    onMouseUpCapture: abort,
    // because we have tabIndex = -1 when disabled,
    // keyboard events can only occur when there is an overlay
    onKeyDownCapture: onKey,
    onKeyUpCapture: onKey,
    onTouchStartCapture: abort,
    onTouchEndCapture: abort,
    onPointerDownCapture: abort,
    onPointerUpCapture: abort,
    onClickCapture: abort,
    // Just smashing the existing onClick for good measure
    onClick: abort
};
var doNotBlock = {};
function blockEvents(_ref) {
    var isInteractive = _ref.isInteractive;
    return isInteractive ? doNotBlock : block;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g8VFS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCss", ()=>getCss);
// inline-flex child
parcelHelpers.export(exports, "getIconStyle", ()=>getIconStyle);
// inline-flex child
parcelHelpers.export(exports, "getContentStyle", ()=>getContentStyle);
parcelHelpers.export(exports, "getFadingCss", ()=>getFadingCss);
parcelHelpers.export(exports, "overlayCss", ()=>overlayCss);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react = require("@emotion/react");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _constants = require("@atlaskit/theme/constants");
var _colors = require("./colors");
var _colorsDefault = parcelHelpers.interopDefault(_colors);
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var gridSize = (0, _constants.gridSize)();
var HAS_DISABLED_BACKGROUND = [
    'default',
    'primary',
    'danger',
    'warning'
];
// ## Button layout
//
// /------------------------------------------------------------------------------------------------------------------\
// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |
// |  10px →  |  ← 2px  |   icon   |  2px →  |  ← 2px  |           |  2px →  |  ← 2px  |  icon   |  2px →  |  ← 10px  |
// |  padding |  margin |  before  |  margin |  margin |  content  |  margin |  margin |  after  |  margin |  padding |
// |    (12px total)    |          |    (4px total)    |           |    (4px total)    |         |    (12px total)    |
// |       →  |  ←      |          |      →  |  ←      |           |      →  |  ←      |         |      →  |  ←       |
// \------------------------------------------------------------------------------------------------------------------/
//                                           ↑                               ↑
//                                        Margins don't collapse with inline-flex
//
var heights = {
    default: "".concat(32 / 14, "em"),
    // 32px
    compact: "".concat(24 / 14, "em"),
    none: 'auto'
};
var lineHeights = {
    default: heights.default,
    compact: heights.compact,
    none: 'inherit'
};
var padding = {
    // 10px gutter
    default: "0 ".concat(gridSize + gridSize / 4, "px"),
    compact: "0 ".concat(gridSize + gridSize / 4, "px"),
    none: '0'
};
var singleIconPadding = {
    // 2px gutter
    compact: "0 ".concat(gridSize / 4, "px"),
    default: "0 ".concat(gridSize / 4, "px"),
    none: '0'
};
var verticalAlign = {
    default: 'middle',
    compact: 'middle',
    none: 'baseline'
};
var innerMargin = {
    content: "0 ".concat(gridSize / 4, "px"),
    icon: "0 ".concat(gridSize / 4, "px")
};
var defaultAfterStyles = {
    borderRadius: 'inherit',
    inset: "var(--ds-space-0, 0px)",
    borderStyle: 'solid',
    borderWidth: "var(--ds-border-width, 1px)",
    pointerEvents: 'none',
    position: 'absolute'
};
var defaultStyles = {
    background: "var(--ds-background-neutral-subtle, #00000000)",
    color: "var(--ds-text, #172B4D)",
    '&:not([disabled])::after': _objectSpread(_objectSpread({}, defaultAfterStyles), {}, {
        content: '""',
        borderColor: "var(--ds-border, #091E4224)"
    }),
    '&:hover': {
        background: "var(--ds-background-neutral-hovered, #091E4224)"
    },
    '&:active': {
        background: "var(--ds-background-neutral-pressed, #091E424F)"
    },
    '&[data-has-overlay="true"]:not([disabled]):hover': {
        background: "var(--ds-background-neutral-subtle, #00000000)"
    }
};
var primaryStyles = {
    background: "var(--ds-background-brand-bold, #0C66E4)",
    color: "var(--ds-text-inverse, #FFFFFF)",
    '&:hover': {
        background: "var(--ds-background-brand-bold-hovered, #0055CC)"
    },
    '&:active': {
        background: "var(--ds-background-brand-bold-pressed, #09326C)"
    },
    '&[data-has-overlay="true"]:not([disabled]):hover': {
        background: "var(--ds-background-brand-bold, #0C66E4)"
    }
};
var linkStyles = {
    background: 'transparent',
    color: "var(--ds-link, #0C66E4)",
    '&:hover': {
        color: "var(--ds-link, #0C66E4)",
        textDecoration: 'underline'
    },
    '&:active': {
        color: "var(--ds-link-pressed, #0055CC)",
        textDecoration: 'underline'
    }
};
var subtleStyles = {
    background: 'transparent',
    color: "var(--ds-text-subtle, #44546F)",
    '&:hover': {
        background: "var(--ds-background-neutral-subtle-hovered, #091E420F)"
    },
    '&:active': {
        background: "var(--ds-background-neutral-subtle-pressed, #091E4224)"
    },
    '&[data-has-overlay="true"]:not([disabled]):hover': {
        background: 'transparent'
    }
};
var subtleLinkStyles = {
    background: 'transparent',
    color: "var(--ds-text-subtle, #44546F)",
    '&:hover': {
        background: 'transparent',
        color: "var(--ds-text-subtle, #44546F)",
        textDecoration: 'underline'
    },
    '&:active': {
        background: 'transparent',
        color: "var(--ds-text, #172B4D)",
        textDecoration: 'underline'
    }
};
var warningStyles = {
    background: "var(--ds-background-warning-bold, #F5CD47)",
    color: "var(--ds-text-warning-inverse, #172B4D)",
    '&:hover': {
        background: "var(--ds-background-warning-bold-hovered, #E2B203)"
    },
    '&:active': {
        background: "var(--ds-background-warning-bold-pressed, #CF9F02)"
    },
    '&[data-has-overlay="true"]:not([disabled]):hover': {
        background: "var(--ds-background-warning-bold, #F5CD47)"
    }
};
var dangerStyles = {
    background: "var(--ds-background-danger-bold, #C9372C)",
    color: "var(--ds-text-inverse, #FFFFFF)",
    '&:hover': {
        background: "var(--ds-background-danger-bold-hovered, #AE2E24)"
    },
    '&:active': {
        background: "var(--ds-background-danger-bold-pressed, #5D1F1A)"
    },
    '&[data-has-overlay="true"]:not([disabled]):hover': {
        background: "var(--ds-background-danger-bold, #C9372C)"
    }
};
var selectedStyles = {
    background: "var(--ds-background-selected, #E9F2FF)",
    color: "var(--ds-text-selected, #0C66E4)",
    '&:not([disabled])::after': _objectSpread(_objectSpread({}, defaultAfterStyles), {}, {
        content: '""',
        borderColor: "var(--ds-border-selected, #0C66E4)"
    })
};
var hasOverlayStyles = {
    '&[data-has-overlay="true"]': {
        cursor: 'default',
        textDecoration: 'none'
    }
};
function getColor(_ref) {
    var group = _ref.group, key = _ref.key, mode = _ref.mode;
    var rule = group[key] || group.default;
    return rule[mode];
}
function getColors(_ref2) {
    var appearance = _ref2.appearance, key = _ref2.key, mode = _ref2.mode;
    return {
        background: getColor({
            group: (0, _colorsDefault.default).background[appearance],
            key: key,
            mode: mode
        }),
        // Needing to add !important to overcome specificity issue caused by deprecated AtlaskitThemeProvider
        color: "".concat(getColor({
            group: (0, _colorsDefault.default).color[appearance],
            key: key,
            mode: mode
        }), " !important")
    };
}
function getCss(_ref3) {
    var appearance = _ref3.appearance, spacing = _ref3.spacing, mode = _ref3.mode, isSelected = _ref3.isSelected, shouldFitContainer = _ref3.shouldFitContainer, isOnlySingleIcon = _ref3.isOnlySingleIcon;
    var baseColors = getColors({
        appearance: appearance,
        key: isSelected ? 'selected' : 'default',
        mode: mode
    });
    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({
        // 0px margin added to css-reset
        alignItems: 'baseline',
        borderWidth: 0,
        borderRadius: "var(--ds-border-radius, 3px)",
        boxSizing: 'border-box',
        display: 'inline-flex',
        fontSize: 'inherit',
        fontStyle: 'normal',
        // Chrome recently changed button so that they use 'arial' as the font family
        fontFamily: 'inherit',
        fontWeight: "var(--ds-font-weight-medium, 500)",
        // margin for button has been applied to css reset
        maxWidth: '100%',
        // Needed to position overlay
        position: 'relative',
        textAlign: 'center',
        textDecoration: 'none',
        transition: 'background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)',
        whiteSpace: 'nowrap'
    }, !(0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && baseColors), {}, {
        cursor: 'pointer',
        height: heights[spacing],
        lineHeight: lineHeights[spacing],
        padding: isOnlySingleIcon ? singleIconPadding[spacing] : padding[spacing],
        verticalAlign: verticalAlign[spacing],
        width: shouldFitContainer ? '100%' : 'auto',
        // justifyContent required for shouldFitContainer buttons with an icon inside
        justifyContent: 'center'
    }, !(0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && _objectSpread(_objectSpread({
        // Disabling visited styles (just using the base colors)
        '&:visited': _objectSpread({}, baseColors),
        '&:hover': _objectSpread(_objectSpread({}, getColors({
            appearance: appearance,
            key: isSelected ? 'selected' : 'hover',
            mode: mode
        })), {}, {
            textDecoration: !isSelected && (appearance === 'link' || appearance === 'subtle-link') ? 'underline' : 'inherit',
            // background, box-shadow
            transitionDuration: '0s, 0.15s'
        }),
        // giving active styles preference by listing them after focus
        '&:active': _objectSpread(_objectSpread({}, getColors({
            appearance: appearance,
            key: isSelected ? 'selected' : 'active',
            mode: mode
        })), {}, {
            // background, box-shadow
            transitionDuration: '0s, 0s'
        }),
        // preventDefault prevents regular active styles from applying in Firefox
        '&[data-firefox-is-active="true"]': _objectSpread(_objectSpread({}, getColors({
            appearance: appearance,
            key: isSelected ? 'selected' : 'active',
            mode: mode
        })), {}, {
            // background, box-shadow
            transitionDuration: '0s, 0s'
        }),
        // Giving disabled styles preference over active by listing them after.
        // Not using '&:disabled' because :disabled is not a valid state for all element types
        // so we are targeting the attribute
        // Attributes have the same specificity a pseudo classes so we are overriding :disabled here
        '&[disabled]': _objectSpread(_objectSpread({}, getColors({
            appearance: appearance,
            key: 'disabled',
            mode: mode
        })), {}, {
            cursor: 'not-allowed',
            textDecoration: 'none'
        })
    }, hasOverlayStyles), {}, {
        // disabling hover and active color changes when there is an overlay, but the button is not disabled
        '&[data-has-overlay="true"]:not([disabled]):hover, &[data-has-overlay="true"]:not([disabled]):active': _objectSpread({}, getColors({
            appearance: appearance,
            key: isSelected ? 'selected' : 'default',
            mode: mode
        }))
    })), (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') && (isSelected ? selectedStyles : _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, appearance === 'default' && defaultStyles), appearance === 'primary' && primaryStyles), appearance === 'link' && linkStyles), appearance === 'subtle' && subtleStyles), appearance === 'subtle-link' && subtleLinkStyles), appearance === 'warning' && warningStyles), appearance === 'danger' && dangerStyles), {}, {
        '&[disabled]': {
            color: "var(--ds-text-disabled, #091E424F)",
            backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : 'transparent',
            cursor: 'not-allowed',
            textDecoration: 'none',
            '&:hovered': {
                backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : 'transparent'
            },
            '&:active': {
                backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : 'transparent'
            }
        }
    }, hasOverlayStyles))), {}, {
        '&::-moz-focus-inner': {
            border: 0,
            margin: 0,
            padding: 0
        }
    });
}
function getIconStyle(_ref4) {
    var spacing = _ref4.spacing;
    return (0, _react.css)({
        display: 'flex',
        // icon size cannot grow and shrink
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
        margin: spacing === 'none' ? 0 : innerMargin.icon,
        flexGrow: 0,
        flexShrink: 0,
        alignSelf: 'center',
        // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
        fontSize: 0,
        // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
        lineHeight: 0,
        userSelect: 'none'
    });
}
function getContentStyle(_ref5) {
    var spacing = _ref5.spacing;
    return (0, _react.css)({
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
        margin: spacing === 'none' ? 0 : innerMargin.content,
        // content can grow and shrink
        flexGrow: 1,
        flexShrink: 1,
        // ellipsis for overflow text
        overflow: 'hidden',
        textOverflow: 'ellipsis',
        whiteSpace: 'nowrap'
    });
}
function getFadingCss(_ref6) {
    var hasOverlay = _ref6.hasOverlay;
    return (0, _react.css)({
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
        opacity: hasOverlay ? 0 : 1,
        transition: 'opacity 0.3s'
    });
}
var overlayCss = {
    // stretching to full width / height of button
    // this is important as we need it to still block
    // event if clicking in the button's own padding
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    // Putting all children in the center
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center'
};

},{"@babel/runtime/helpers/defineProperty":"azbUC","@emotion/react":"cLTfV","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/theme/constants":"6kRPo","./colors":"TvZ1H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"TvZ1H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _colors = require("@atlaskit/theme/colors");
// Hard coding the active rgba color value rather than using a helper to convert it
// With helper it would be: hex2rgba(colors.B75, 0.6)
var fadedB75 = 'rgba(179, 212, 255, 0.6)';
var values = {
    // Default appearance
    background: {
        default: {
            default: {
                light: "var(--ds-background-neutral, ".concat(_colors.N20A, ")"),
                dark: "var(--ds-background-neutral, ".concat(_colors.DN70, ")")
            },
            hover: {
                light: "var(--ds-background-neutral-hovered, ".concat(_colors.N30A, ")"),
                dark: "var(--ds-background-neutral-hovered, ".concat(_colors.DN60, ")")
            },
            active: {
                light: "var(--ds-background-neutral-pressed, ".concat(fadedB75, ")"),
                dark: "var(--ds-background-neutral-pressed, ".concat(_colors.B75, ")")
            },
            disabled: {
                light: "var(--ds-background-disabled, ".concat(_colors.N20A, ")"),
                dark: "var(--ds-background-disabled, ".concat(_colors.DN70, ")")
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            }
        },
        primary: {
            default: {
                light: "var(--ds-background-brand-bold, ".concat(_colors.B400, ")"),
                dark: "var(--ds-background-brand-bold, ".concat(_colors.B100, ")")
            },
            hover: {
                light: "var(--ds-background-brand-bold-hovered, ".concat(_colors.B300, ")"),
                dark: "var(--ds-background-brand-bold-hovered, ".concat(_colors.B75, ")")
            },
            active: {
                light: "var(--ds-background-brand-bold-pressed, ".concat(_colors.B500, ")"),
                dark: "var(--ds-background-brand-bold-pressed, ".concat(_colors.B200, ")")
            },
            disabled: {
                light: "var(--ds-background-disabled, ".concat(_colors.N20A, ")"),
                dark: "var(--ds-background-disabled, ".concat(_colors.DN70, ")")
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            }
        },
        warning: {
            default: {
                light: "var(--ds-background-warning-bold, ".concat(_colors.Y300, ")"),
                dark: "var(--ds-background-warning-bold, ".concat(_colors.Y300, ")")
            },
            hover: {
                light: "var(--ds-background-warning-bold-hovered, ".concat(_colors.Y200, ")"),
                dark: "var(--ds-background-warning-bold-hovered, ".concat(_colors.Y200, ")")
            },
            active: {
                light: "var(--ds-background-warning-bold-pressed, ".concat(_colors.Y400, ")"),
                dark: "var(--ds-background-warning-bold-pressed, ".concat(_colors.Y400, ")")
            },
            disabled: {
                light: "var(--ds-background-disabled, ".concat(_colors.N20A, ")"),
                dark: "var(--ds-background-disabled, ".concat(_colors.DN70, ")")
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.Y400, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.Y400, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.Y400, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.Y400, ")")
            }
        },
        danger: {
            default: {
                light: "var(--ds-background-danger-bold, ".concat(_colors.R400, ")"),
                dark: "var(--ds-background-danger-bold, ".concat(_colors.R400, ")")
            },
            hover: {
                light: "var(--ds-background-danger-bold-hovered, ".concat(_colors.R300, ")"),
                dark: "var(--ds-background-danger-bold-hovered, ".concat(_colors.R300, ")")
            },
            active: {
                light: "var(--ds-background-danger-bold-pressed, ".concat(_colors.R500, ")"),
                dark: "var(--ds-background-danger-bold-pressed, ".concat(_colors.R500, ")")
            },
            disabled: {
                light: "var(--ds-background-disabled, ".concat(_colors.N20A, ")"),
                dark: "var(--ds-background-disabled, ".concat(_colors.DN70, ")")
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.R500, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.R500, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.R500, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.R500, ")")
            }
        },
        link: {
            default: {
                light: "var(--ds-background-neutral-subtle, none)",
                dark: "var(--ds-background-neutral-subtle, none)"
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.N20, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.N20, ")")
            }
        },
        subtle: {
            default: {
                light: "var(--ds-background-neutral-subtle, none)",
                dark: "var(--ds-background-neutral-subtle, none)"
            },
            hover: {
                light: "var(--ds-background-neutral-subtle-hovered, ".concat(_colors.N30A, ")"),
                dark: "var(--ds-background-neutral-subtle-hovered, ".concat(_colors.DN60, ")")
            },
            active: {
                light: "var(--ds-background-neutral-subtle-pressed, ".concat(fadedB75, ")"),
                dark: "var(--ds-background-neutral-subtle-pressed, ".concat(_colors.B75, ")")
            },
            disabled: {
                light: "var(--ds-background-neutral-subtle, none)",
                dark: "var(--ds-background-neutral-subtle, none)"
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.DN0, ")")
            }
        },
        'subtle-link': {
            default: {
                light: "var(--ds-background-neutral-subtle, none)",
                dark: "var(--ds-background-neutral-subtle, none)"
            },
            selected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.N20, ")")
            },
            focusSelected: {
                light: "var(--ds-background-selected, ".concat(_colors.N700, ")"),
                dark: "var(--ds-background-selected, ".concat(_colors.N20, ")")
            }
        }
    },
    color: {
        default: {
            default: {
                light: "var(--ds-text, ".concat(_colors.N500, ")"),
                dark: "var(--ds-text, ".concat(_colors.DN400, ")")
            },
            active: {
                light: "var(--ds-text, ".concat(_colors.B400, ")"),
                dark: "var(--ds-text, ".concat(_colors.B400, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN30, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            }
        },
        primary: {
            default: {
                light: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
                dark: "var(--ds-text-inverse, ".concat(_colors.DN30, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN30, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            }
        },
        warning: {
            default: {
                light: "var(--ds-text-warning-inverse, ".concat(_colors.N800, ")"),
                dark: "var(--ds-text-warning-inverse, ".concat(_colors.N800, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN30, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N800, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N800, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N800, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N800, ")")
            }
        },
        danger: {
            default: {
                light: "var(--ds-text-inverse, ".concat(_colors.N0, ")"),
                dark: "var(--ds-text-inverse, ".concat(_colors.N0, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN30, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N0, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N0, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N0, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N0, ")")
            }
        },
        link: {
            default: {
                light: "var(--ds-link, ".concat(_colors.B400, ")"),
                dark: "var(--ds-link, ".concat(_colors.B100, ")")
            },
            hover: {
                light: "var(--ds-link, ".concat(_colors.B300, ")"),
                dark: "var(--ds-link, ".concat(_colors.B75, ")")
            },
            active: {
                light: "var(--ds-link-pressed, ".concat(_colors.B500, ")"),
                dark: "var(--ds-link-pressed, ".concat(_colors.B200, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN100, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N700, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.N700, ")")
            }
        },
        subtle: {
            default: {
                light: "var(--ds-text, ".concat(_colors.N500, ")"),
                dark: "var(--ds-text, ".concat(_colors.DN400, ")")
            },
            active: {
                light: "var(--ds-text, ".concat(_colors.B400, ")"),
                dark: "var(--ds-text, ".concat(_colors.B400, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN100, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            }
        },
        'subtle-link': {
            default: {
                light: "var(--ds-text-subtle, ".concat(_colors.N200, ")"),
                dark: "var(--ds-text-subtle, ".concat(_colors.DN400, ")")
            },
            hover: {
                light: "var(--ds-text-subtle, ".concat(_colors.N90, ")"),
                dark: "var(--ds-text-subtle, ".concat(_colors.B50, ")")
            },
            active: {
                light: "var(--ds-text, ".concat(_colors.N400, ")"),
                dark: "var(--ds-text, ".concat(_colors.DN300, ")")
            },
            disabled: {
                light: "var(--ds-text-disabled, ".concat(_colors.N70, ")"),
                dark: "var(--ds-text-disabled, ".concat(_colors.DN100, ")")
            },
            selected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            },
            focusSelected: {
                light: "var(--ds-text-selected, ".concat(_colors.N20, ")"),
                dark: "var(--ds-text-selected, ".concat(_colors.DN400, ")")
            }
        }
    }
};
exports.default = values;

},{"@atlaskit/theme/colors":"iIuwU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5u1PZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getIfVisuallyHiddenChildren", ()=>getIfVisuallyHiddenChildren);
var _react = require("react");
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var getIfVisuallyHiddenChildren = function getIfVisuallyHiddenChildren(children) {
    return children && /*#__PURE__*/ (0, _react.isValidElement)(children) && children.type === (0, _visuallyHiddenDefault.default);
};

},{"react":"jMk1U","@atlaskit/visually-hidden":"jnHN6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d7244":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>getIsOnlySingleIcon);
var _getIfVisuallyHiddenChildren = require("./get-if-visually-hidden-children");
function getIsOnlySingleIcon(_ref) {
    var children = _ref.children, iconBefore = _ref.iconBefore, iconAfter = _ref.iconAfter;
    if ((0, _getIfVisuallyHiddenChildren.getIfVisuallyHiddenChildren)(children)) return true;
    if (children) return false;
    if (iconBefore && !iconAfter) return true;
    if (!iconBefore && iconAfter) return true;
    return false;
}

},{"./get-if-visually-hidden-children":"5u1PZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5MmiK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Page);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _standardButton = require("@atlaskit/button/standard-button");
var _standardButtonDefault = parcelHelpers.interopDefault(_standardButton);
function Page(props) {
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _standardButtonDefault.default), (0, _extendsDefault.default)({}, props, {
        appearance: "subtle"
    }));
}

},{"@babel/runtime/helpers/extends":"lKa0J","react":"jMk1U","@atlaskit/button/standard-button":"hrNml","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hV0Zn":[function(require,module,exports,__globalThis) {
/* render-ellipsis.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>renderEllipsis);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _compiled = require("@atlaskit/primitives/compiled");
var _visuallyHidden = require("@atlaskit/visually-hidden");
var _visuallyHiddenDefault = parcelHelpers.interopDefault(_visuallyHidden);
var styles = {
    container: "_1e0c1txw _kqswh2mm"
};
function renderEllipsis(_ref) {
    var key = _ref.key, testId = _ref.testId, from = _ref.from, to = _ref.to;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Box), {
        as: "li",
        testId: testId,
        key: key,
        xcss: styles.container,
        paddingInline: "space.100"
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Text), {
        testId: testId && "".concat(testId, "-text")
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _visuallyHiddenDefault.default), null, "Skipped pages from ", from, " to ", to), "\u2026"));
}

},{"@compiled/react/runtime":"eGqVd","react":"jMk1U","@atlaskit/primitives/compiled":"29Id4","@atlaskit/visually-hidden":"jnHN6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eZ4kN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "emptyObject", ()=>emptyObject);
var emptyObject = {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"96nfx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _memoizeOne = require("memoize-one");
var _memoizeOneDefault = parcelHelpers.interopDefault(_memoizeOne);
// TODO: comma needed after generic declaration below, or the .tsx file thinks
// it is a JSX element. Tidy up in a future refactor.
var collapseRange = function collapseRange(pages, current, _ref, testId) {
    var max = _ref.max, ellipsis = _ref.ellipsis, transform = _ref.transform;
    var total = pages.length;
    // only need ellipsis if we have more pages than we can display
    var needEllipsis = total > max;
    // show start ellipsis if the current page is further away than max - 4 from the first page
    var hasStartEllipsis = needEllipsis && max - 4 < current;
    // show end ellipsis if the current page is further than total - max + 3 from the last page
    var hasEndEllipsis = needEllipsis && current < total - max + 3;
    var getPageComponents = (0, _memoizeOneDefault.default)(function() {
        var startIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var lastIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : total;
        return pages.slice(startIndex, lastIndex).map(function(page, index) {
            return transform(page, startIndex + index, testId);
        });
    });
    if (!needEllipsis) return getPageComponents(0, total);
    if (hasStartEllipsis && !hasEndEllipsis) {
        var _pageCount = max - 2;
        return [].concat((0, _toConsumableArrayDefault.default)(getPageComponents(0, 1)), [
            ellipsis({
                key: 'ellipsis-1',
                testId: testId && "".concat(testId, "-ellipsis"),
                from: 2,
                to: total - _pageCount
            })
        ], (0, _toConsumableArrayDefault.default)(getPageComponents(total - _pageCount)));
    }
    if (!hasStartEllipsis && hasEndEllipsis) {
        var _pageCount2 = max - 2;
        return [].concat((0, _toConsumableArrayDefault.default)(getPageComponents(0, _pageCount2)), [
            ellipsis({
                key: 'ellipsis-1',
                testId: testId && "".concat(testId, "-ellipsis"),
                from: _pageCount2 + 1,
                to: total - 1
            })
        ], (0, _toConsumableArrayDefault.default)(getPageComponents(total - 1)));
    }
    // we have both start and end ellipsis
    var pageCount = max - 4;
    return [].concat((0, _toConsumableArrayDefault.default)(getPageComponents(0, 1)), [
        ellipsis({
            key: 'ellipsis-1',
            testId: testId && "".concat(testId, "-ellipsis"),
            from: 2,
            to: current - Math.floor(pageCount / 2)
        })
    ], (0, _toConsumableArrayDefault.default)(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [
        ellipsis({
            key: 'ellipsis-2',
            testId: testId && "".concat(testId, "-ellipsis"),
            from: current + 3,
            to: total - 1
        })
    ], (0, _toConsumableArrayDefault.default)(getPageComponents(total - 1)));
};
exports.default = collapseRange;

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","memoize-one":"66OMF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"66OMF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>memoizeOne);
var safeIsNaN = Number.isNaN || function ponyfill(value) {
    return typeof value === 'number' && value !== value;
};
function isEqual(first, second) {
    if (first === second) return true;
    if (safeIsNaN(first) && safeIsNaN(second)) return true;
    return false;
}
function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) return false;
    for(var i = 0; i < newInputs.length; i++){
        if (!isEqual(newInputs[i], lastInputs[i])) return false;
    }
    return true;
}
function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) isEqual = areInputsEqual;
    var cache = null;
    function memoized() {
        var newArgs = [];
        for(var _i = 0; _i < arguments.length; _i++)newArgs[_i] = arguments[_i];
        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) return cache.lastResult;
        var lastResult = resultFn.apply(this, newArgs);
        cache = {
            lastResult: lastResult,
            lastArgs: newArgs,
            lastThis: this
        };
        return lastResult;
    }
    memoized.clear = function clear() {
        cache = null;
    };
    return memoized;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"efej1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _helpers = require("../internal/helpers");
var _tableHead = require("../styled/table-head");
var _tableHeadCell = require("./rankable/table-head-cell");
var _tableHeadCellDefault = parcelHelpers.interopDefault(_tableHeadCell);
var _tableHeadCellOld = require("./rankable/table-head-cell-old");
var _tableHeadCellOldDefault = parcelHelpers.interopDefault(_tableHeadCellOld);
var _tableHeadCell1 = require("./table-head-cell");
var _tableHeadCellDefault1 = parcelHelpers.interopDefault(_tableHeadCell1);
var _tableHeadCellOld1 = require("./table-head-cell-old");
var _tableHeadCellOldDefault1 = parcelHelpers.interopDefault(_tableHeadCellOld1);
var _excluded = [
    "cells"
], _excluded2 = [
    "ascendingSortTooltip",
    "buttonAriaRoleDescription",
    "colSpan",
    "content",
    "descendingSortTooltip",
    "isIconOnlyHeader",
    "isSortable",
    "key",
    "shouldTruncate",
    "testId",
    "width"
];
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var TableHead = /*#__PURE__*/ function(_React$Component) {
    function TableHead(props) {
        var _this;
        (0, _classCallCheckDefault.default)(this, TableHead);
        _this = _callSuper(this, TableHead, [
            props
        ]);
        _this.state = {
            activeSortButtonId: null
        };
        return _this;
    }
    (0, _inheritsDefault.default)(TableHead, _React$Component);
    return (0, _createClassDefault.default)(TableHead, [
        {
            key: "UNSAFE_componentWillMount",
            value: function UNSAFE_componentWillMount() {
                (0, _helpers.validateSortKey)(this.props.sortKey, this.props.head);
            }
        },
        {
            key: "UNSAFE_componentWillReceiveProps",
            value: function UNSAFE_componentWillReceiveProps(nextProps) {
                if (this.props.sortKey !== nextProps.sortKey || this.props.head !== nextProps.head) (0, _helpers.validateSortKey)(nextProps.sortKey, nextProps.head);
            }
        },
        {
            key: "render",
            value: function render() {
                var _this2 = this;
                var _this$props = this.props, head = _this$props.head, sortKey = _this$props.sortKey, sortOrder = _this$props.sortOrder, isFixedSize = _this$props.isFixedSize, onSort = _this$props.onSort, isRanking = _this$props.isRanking, isRankable = _this$props.isRankable, testId = _this$props.testId;
                var activeSortButtonId = this.state.activeSortButtonId;
                if (!head) return null;
                var HeadCellComponentOld = isRankable ? (0, _tableHeadCellOldDefault.default) : (0, _tableHeadCellOldDefault1.default);
                var HeadCellComponent = isRankable ? (0, _tableHeadCellDefault.default) : (0, _tableHeadCellDefault1.default);
                // TODO: Remove `rest` props and use only what is explicitly in the API.
                // Some tests use this to pass in onClick and other stuff within the `head`
                // variable here, but considering it's not in the API, it should probably
                // be removed.
                var cells = head.cells, rest = (0, _objectWithoutPropertiesDefault.default)(head, _excluded);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHead.Head), (0, _extendsDefault.default)({}, rest, {
                    isRanking: isRanking,
                    testId: testId && "".concat(testId, "--head")
                }), /*#__PURE__*/ (0, _reactDefault.default).createElement("tr", null, cells.map(function(cell, index) {
                    var ascendingSortTooltip = cell.ascendingSortTooltip, buttonAriaRoleDescription = cell.buttonAriaRoleDescription, colSpan = cell.colSpan, content = cell.content, descendingSortTooltip = cell.descendingSortTooltip, isIconOnlyHeader = cell.isIconOnlyHeader, isSortable = cell.isSortable, key = cell.key, shouldTruncate = cell.shouldTruncate, cellTestId = cell.testId, width = cell.width, restCellProps = (0, _objectWithoutPropertiesDefault.default)(cell, _excluded2);
                    var headCellId = "head-cell-".concat(index);
                    var handleClick = function handleClick() {
                        _this2.setState({
                            activeSortButtonId: headCellId
                        });
                        if (isSortable) onSort(cell)();
                    };
                    return (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? /*#__PURE__*/ (0, _reactDefault.default).createElement(HeadCellComponent, (0, _extendsDefault.default)({
                        colSpan: colSpan,
                        content: content,
                        isFixedSize: isFixedSize,
                        isIconOnlyHeader: isIconOnlyHeader,
                        isSortable: !!isSortable,
                        isRanking: isRanking,
                        key: key || index,
                        headCellId: headCellId,
                        activeSortButtonId: activeSortButtonId,
                        onClick: handleClick,
                        testId: cellTestId || testId,
                        shouldTruncate: shouldTruncate,
                        sortOrder: key === sortKey ? sortOrder : undefined,
                        width: width,
                        ascendingSortTooltip: ascendingSortTooltip,
                        descendingSortTooltip: descendingSortTooltip,
                        buttonAriaRoleDescription: buttonAriaRoleDescription
                    }, restCellProps)) : /*#__PURE__*/ (0, _reactDefault.default).createElement(HeadCellComponentOld, (0, _extendsDefault.default)({
                        colSpan: colSpan,
                        content: content,
                        isFixedSize: isFixedSize,
                        isSortable: !!isSortable,
                        isRanking: isRanking,
                        key: key || index,
                        onClick: isSortable ? onSort(cell) : undefined,
                        testId: cellTestId || testId,
                        shouldTruncate: shouldTruncate,
                        sortOrder: key === sortKey ? sortOrder : undefined,
                        width: width
                    }, restCellProps));
                })));
            }
        }
    ]);
}((0, _reactDefault.default).Component); // eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = TableHead;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","react":"jMk1U","@atlaskit/platform-feature-flags":"3H8e6","../internal/helpers":"bljM3","../styled/table-head":"2UImB","./rankable/table-head-cell":"7cTfG","./rankable/table-head-cell-old":"bo6iS","./table-head-cell":"64Nip","./table-head-cell-old":"eqXkr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2UImB":[function(require,module,exports,__globalThis) {
/* table-head.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Head", ()=>Head);
parcelHelpers.export(exports, "HeadCell", ()=>HeadCell);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _colors = require("@atlaskit/theme/colors");
var _constants = require("../internal/constants");
var _constants1 = require("./constants");
var _excluded = [
    "isRanking",
    "testId"
], _excluded2 = [
    "width",
    "children",
    "isSortable",
    "sortOrder",
    "isFixedSize",
    "shouldTruncate",
    "onClick",
    "style",
    "testId"
];
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var CSS_VAR_TEXT_COLOR = '--local-dynamic-table-text-color';
var rankingStyles = null;
var headStyles = null;
var overflowTruncateStyles = null;
var truncationWidthStyles = null;
var fixedSizeTruncateStyles = null;
var cellStyles = null;
var Head = function Head(_ref) {
    var isRanking = _ref.isRanking, testId = _ref.testId, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return /*#__PURE__*/ _react.createElement("thead", (0, _extendsDefault.default)({
        "data-testid": testId
    }, props, {
        className: (0, _runtime.ax)([
            "_179rglyw",
            isRanking && "_1e0c1ule"
        ])
    }));
};
var headCellBaseStyles = null;
var headCellBaseStylesOld = null;
var onClickStyles = null;
var baseStyles = null;
var ascendingStyles = null;
var descendingStyles = null;
var HeadCell = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref2, ref) {
    var width = _ref2.width, children = _ref2.children, isSortable = _ref2.isSortable, sortOrder = _ref2.sortOrder, isFixedSize = _ref2.isFixedSize, shouldTruncate = _ref2.shouldTruncate, onClick = _ref2.onClick, style = _ref2.style, testId = _ref2.testId, rest = (0, _objectWithoutPropertiesDefault.default)(_ref2, _excluded2);
    var mergedStyles = _objectSpread(_objectSpread(_objectSpread({}, style), width && (0, _constants1.getTruncationStyleVars)({
        width: width
    })), {}, (0, _definePropertyDefault.default)({}, CSS_VAR_TEXT_COLOR, "var(--ds-text-subtlest, ".concat((0, _colors.N300), ")")));
    var isASC = sortOrder === (0, _constants.ASC);
    var isDESC = sortOrder === (0, _constants.DESC);
    var getFormattedSortOrder = function getFormattedSortOrder() {
        if (isASC) return 'ascending';
        else if (isDESC) return 'descending';
    };
    // If there is no content in the cell, it should be rendered as an empty `td`, not a `th`.
    // https://dequeuniversity.com/rules/axe/4.7/empty-table-header
    var Component = children ? 'th' : 'td';
    var isVisuallyRefreshed = (0, _platformFeatureFlags.fg)('platform-component-visual-refresh');
    return /*#__PURE__*/ _react.createElement(Component, (0, _extendsDefault.default)({
        "aria-sort": getFormattedSortOrder(),
        onClick: !isVisuallyRefreshed ? onClick : undefined,
        ref: ref,
        "data-testid": testId
    }, rest, {
        className: (0, _runtime.ax)([
            "_izbqglyw _h7alglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t",
            isVisuallyRefreshed ? "_11c8dcr7 _179rralu _mqm2glyw _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4nkob _1ygbuwsq" : "_11c8dcr7 _179rralu _mqm2glyw _t51zglyw _191wglyw _vchhusvi _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4jp4b _1ygbuwsq",
            !isVisuallyRefreshed && onClick && "_irr3bfnf _d0altlke",
            "_1bsb8a2a",
            isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c",
            isFixedSize && "_1reo15vq _18m915vq",
            !isVisuallyRefreshed && isSortable && "_173zglyw _pw6dglyw _1xgk1j28 _1wfn1j28 _y9yonqa1 _997wnqa1 _sklb1l7b _1j091l7b _19w61ule _1w611ule _1hvvidpf _n56nidpf _wyc4idpf _1d4oidpf _no7mstnw _qh32stnw _4b5mb3bt _hn3bb3bt _14gsx0bf _cigmx0bf _c77k1f6e _qzvtu2gc _f4731f6e _1fpyidpf _a04fh2mm _xv14glyw _58ej1kw7 _1ay31kw7 _mdbq1kw7 _10pp1kw7 _1yw3ze3t _n2fdze3t _8607ze3t _szhwze3t _1g2wwc43 _ze9fwc43 _1lcgnqa1 _at5qnqa1 _o4d71l7b _npl51l7b _1rp11onz _1iornqa1 _oi051l7b _1ehx1onz _19t8nqa1 _1bog1l7b",
            !isVisuallyRefreshed && isASC && "_c77k2wk4 _142s94yt",
            !isVisuallyRefreshed && isDESC && "_f4732wk4 _17x894yt"
        ]),
        style: _objectSpread(_objectSpread({}, mergedStyles), {}, {
            "--_k02y3n": (0, _runtime.ix)("2px solid ".concat("var(--ds-border, ".concat((0, _colors.N40), ")"))),
            "--_17ckjys": (0, _runtime.ix)("var(--ds-text-subtle, ".concat("var(".concat(CSS_VAR_TEXT_COLOR, ")"), ")")),
            "--_jz8ahf": (0, _runtime.ix)("solid 2px ".concat("var(--ds-border-focused, ".concat((0, _colors.B100), ")"))),
            "--_6j4ewu": (0, _runtime.ix)("var(--ds-background-neutral-hovered, ".concat((0, _colors.N30A), ")")),
            "--_1rdacuj": (0, _runtime.ix)("3px solid ".concat("var(--ds-icon-disabled, ".concat((0, _colors.N40), ")"))),
            "--_1qca9zt": (0, _runtime.ix)("3px solid ".concat("var(--ds-icon-subtle, ".concat((0, _colors.N300), ")")))
        })
    }), children);
});

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"ks1OO","@atlaskit/platform-feature-flags":"3H8e6","@atlaskit/theme/colors":"iIuwU","../internal/constants":"dNwVR","./constants":"doOmM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7cTfG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _withDimensions = require("../../hoc/with-dimensions");
var _withDimensionsDefault = parcelHelpers.interopDefault(_withDimensions);
var _helpers = require("../../internal/helpers");
var _tableHeadCell = require("../table-head-cell");
var _tableHeadCellDefault = parcelHelpers.interopDefault(_tableHeadCell);
var _excluded = [
    "isRanking",
    "refHeight",
    "refWidth"
];
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var RankableTableHeadCellComponent = /*#__PURE__*/ function(_React$Component) {
    function RankableTableHeadCellComponent() {
        (0, _classCallCheckDefault.default)(this, RankableTableHeadCellComponent);
        return _callSuper(this, RankableTableHeadCellComponent, arguments);
    }
    (0, _inheritsDefault.default)(RankableTableHeadCellComponent, _React$Component);
    return (0, _createClassDefault.default)(RankableTableHeadCellComponent, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = (0, _objectWithoutPropertiesDefault.default)(_this$props, _excluded);
                var inlineStyles = (0, _helpers.inlineStylesIfRanking)(isRanking, refWidth);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHeadCellDefault.default), (0, _extendsDefault.default)({
                    inlineStyles: inlineStyles
                }, restProps));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
var RankableTableHeadCell = (0, _withDimensionsDefault.default)(RankableTableHeadCellComponent);
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = RankableTableHeadCell;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","react":"jMk1U","../../hoc/with-dimensions":"h3MgY","../../internal/helpers":"bljM3","../table-head-cell":"64Nip","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h3MgY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>withDimensions);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
function withDimensions(WrappedComponent) {
    return /*#__PURE__*/ function(_React$Component) {
        function WithDimensions() {
            var _this;
            (0, _classCallCheckDefault.default)(this, WithDimensions);
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            _this = _callSuper(this, WithDimensions, [].concat(args));
            (0, _definePropertyDefault.default)(_this, "state", {
                refWidth: 0,
                refHeight: 0
            });
            (0, _definePropertyDefault.default)(_this, "innerRef", function(ref) {
                if (ref && !_this.props.isRanking) _this.ref = ref;
            });
            (0, _definePropertyDefault.default)(_this, "updateDimensions", function() {
                if (!_this.ref) return;
                var clientRect = _this.ref.getBoundingClientRect();
                var width = clientRect.width;
                var height = clientRect.height;
                if (width !== _this.state.refWidth || height !== _this.state.refHeight) _this.setState({
                    refWidth: width,
                    refHeight: height
                });
            });
            return _this;
        }
        (0, _inheritsDefault.default)(WithDimensions, _React$Component);
        return (0, _createClassDefault.default)(WithDimensions, [
            {
                key: "UNSAFE_componentWillReceiveProps",
                value: function UNSAFE_componentWillReceiveProps(nextProps) {
                    var wasRanking = this.props.isRanking;
                    var willRanking = nextProps.isRanking;
                    if (willRanking && !wasRanking) this.updateDimensions();
                }
            },
            {
                key: "render",
                value: function render() {
                    var _this$state = this.state, refWidth = _this$state.refWidth, refHeight = _this$state.refHeight;
                    return /*#__PURE__*/ (0, _reactDefault.default).createElement(WrappedComponent, (0, _extendsDefault.default)({
                        refWidth: refWidth,
                        refHeight: refHeight,
                        innerRef: this.innerRef
                    }, this.props));
                }
            }
        ]);
    }((0, _reactDefault.default).Component);
}

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"64Nip":[function(require,module,exports,__globalThis) {
/* table-head-cell.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _arrowDown = require("@atlaskit/icon/core/arrow-down");
var _arrowDownDefault = parcelHelpers.interopDefault(_arrowDown);
var _arrowUp = require("@atlaskit/icon/core/arrow-up");
var _arrowUpDefault = parcelHelpers.interopDefault(_arrowUp);
var _compiled = require("@atlaskit/primitives/compiled");
var _tooltip = require("@atlaskit/tooltip");
var _tooltipDefault = parcelHelpers.interopDefault(_tooltip);
var _constants = require("../internal/constants");
var _tableHead = require("../styled/table-head");
var _excluded = [
    "content",
    "inlineStyles",
    "testId",
    "isRanking",
    "innerRef",
    "isSortable",
    "sortOrder",
    "onClick",
    "headCellId",
    "activeSortButtonId",
    "ascendingSortTooltip",
    "descendingSortTooltip",
    "buttonAriaRoleDescription",
    "isIconOnlyHeader"
];
var styles = {
    buttonWrapper: "_1e0c1txw _bfhk1j28 _4cvr1h6o _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _d0altlke",
    sortIconHiddenWrapper: "_1e0c1txw _tzy4idpf _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _1h7hkb7n",
    sortIconVisibleWrapper: "_1e0c1txw _tzy4kb7n _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66",
    hideIconHeaderWrapper: "_tzy4idpf _18u010v4",
    visibleHeaderWrapper: "_tzy4kb7n _u5f31b66"
};
var headCellStyles = {
    headCellContainer: "_1e0c1txw _4cvr1h6o",
    text: "_11c81o8v _syaz1gjq _k48pmoej"
};
var TableHeadCell = function TableHeadCell(_ref) {
    var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, sortOrder = _ref.sortOrder, onClick = _ref.onClick, headCellId = _ref.headCellId, activeSortButtonId = _ref.activeSortButtonId, _ref$ascendingSortToo = _ref.ascendingSortTooltip, ascendingSortTooltip = _ref$ascendingSortToo === void 0 ? 'Sort ascending' : _ref$ascendingSortToo, _ref$descendingSortTo = _ref.descendingSortTooltip, descendingSortTooltip = _ref$descendingSortTo === void 0 ? 'Sort descending' : _ref$descendingSortTo, _ref$buttonAriaRoleDe = _ref.buttonAriaRoleDescription, buttonAriaRoleDescription = _ref$buttonAriaRoleDe === void 0 ? 'Sort button' : _ref$buttonAriaRoleDe, isIconOnlyHeader = _ref.isIconOnlyHeader, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), isHovered = _useState2[0], setIsHovered = _useState2[1];
    var _useState3 = (0, _react.useState)(false), _useState4 = (0, _slicedToArrayDefault.default)(_useState3, 2), isFocused = _useState4[0], setIsFocused = _useState4[1];
    var isActive = headCellId === activeSortButtonId || sortOrder !== undefined;
    var isSortIconVisible = isHovered || isActive || isFocused;
    var isVisibleIconOnlyHeader = isSortIconVisible && isIconOnlyHeader;
    var shouldRenderSortIcon = !isIconOnlyHeader || isSortIconVisible || isIconOnlyHeader && !isFocused;
    var handleFocus = (0, _react.useCallback)(function() {
        setIsFocused === null || setIsFocused === void 0 || setIsFocused(true);
    }, [
        setIsFocused
    ]);
    var handleBlur = (0, _react.useCallback)(function() {
        setIsFocused === null || setIsFocused === void 0 || setIsFocused(false);
    }, [
        setIsFocused
    ]);
    var handleMouseEnter = (0, _react.useCallback)(function() {
        setIsHovered(true);
    }, [
        setIsHovered
    ]);
    var handleMouseLeave = (0, _react.useCallback)(function() {
        setIsHovered(false);
    }, [
        setIsHovered
    ]);
    var visuallyRefreshedButton = /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Box), {
        xcss: headCellStyles.headCellContainer,
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        onFocus: handleFocus,
        onBlur: handleBlur
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tooltipDefault.default), {
        content: sortOrder === (0, _constants.ASC) ? ascendingSortTooltip : descendingSortTooltip
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Pressable), {
        onClick: onClick,
        xcss: styles.buttonWrapper,
        "aria-roledescription": buttonAriaRoleDescription
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Flex), {
        xcss: isVisibleIconOnlyHeader ? styles.hideIconHeaderWrapper : styles.visibleHeaderWrapper
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("span", {
        className: (0, _runtime.ax)([
            headCellStyles.text
        ])
    }, content)), shouldRenderSortIcon && /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Flex), {
        xcss: isSortIconVisible ? styles.sortIconVisibleWrapper : styles.sortIconHiddenWrapper
    }, sortOrder === (0, _constants.ASC) ? /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _arrowUpDefault.default), {
        label: "",
        color: "var(--ds-text-subtle, #44546F)",
        testId: testId && "".concat(testId, "--up--icon")
    }) : /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _arrowDownDefault.default), {
        label: "",
        color: "var(--ds-text-subtle, #44546F)",
        testId: testId && "".concat(testId, "--down--icon")
    })))));
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHead.HeadCell), (0, _extendsDefault.default)({
        style: inlineStyles,
        testId: testId && "".concat(testId, "--head--cell"),
        ref: typeof innerRef !== 'string' ? innerRef : null // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
    }, rest, {
        isSortable: isSortable,
        sortOrder: sortOrder
    }), isSortable ? visuallyRefreshedButton : content);
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = TableHeadCell;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@compiled/react/runtime":"ks1OO","react":"jMk1U","@atlaskit/icon/core/arrow-down":"44zDO","@atlaskit/icon/core/arrow-up":"4zDq6","@atlaskit/primitives/compiled":"29Id4","@atlaskit/tooltip":"hD9bD","../internal/constants":"dNwVR","../styled/table-head":"2UImB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"44zDO":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d7f5a6659a6d5dd6eaa41936b6c8533f>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("82e1787d8988b118"));
var _baseNew = _interopRequireDefault(require("d97b3fd2ae485054"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "ArrowDown".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Multi purpose - Know uses: sorting table headers or Bitbucket code difference.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ArrowDownIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 1v11.44l3.72-3.72 1.06 1.06-5 5a.75.75 0 0 1-1.06 0l-5-5 1.06-1.06 3.72 3.72V1z" clip-rule="evenodd"/>`
    }, props));
ArrowDownIcon.displayName = 'ArrowDownIcon';
var _default = exports.default = ArrowDownIcon;

},{"82e1787d8988b118":"jMk1U","d97b3fd2ae485054":"8mvYS"}],"8mvYS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconNewDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconNew.Icon));
var _iconNew = require("../components/icon-new");
var _iconNewDefault = parcelHelpers.interopDefault(_iconNew);

},{"../components/icon-new":"3sfDl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3sfDl":[function(require,module,exports,__globalThis) {
/* icon-new.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
/**
 * We are hiding this props from consumers as it's reserved
 * for use by Icon Tile.
 */ var svgStyles = null;
var iconStyles = null;
var utilityIconStyles = null;
var scaleStyles = null;
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var scaleSize = null;
var coreSizeMedium = {
    none: "_1bsbpxbi _4t3ipxbi",
    compact: "_1bsb1ejb _4t3i1ejb",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var coreSizeSmall = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var utilSizes = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var baseSizeMap = {
    core: 16,
    utility: 12
};
var paddingMap = {
    core: {
        medium: {
            none: 0,
            compact: 4,
            spacious: 4
        },
        small: {
            none: 0,
            compact: 2.66,
            spacious: 8
        }
    },
    utility: {
        medium: {
            none: 0,
            compact: 2,
            spacious: 6
        },
        small: {
            none: 0,
            compact: 2,
            spacious: 6
        }
    }
};
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _props$type;
    var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing;
    var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
    } : undefined;
    // Fall back to old icon
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    if (FallbackIcon && !(0, _platformFeatureFlags.fg)('platform-visual-refresh-icons')) // parse out unnecessary props
    return /*#__PURE__*/ _react.createElement(FallbackIcon, {
        primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
        secondaryColor: LEGACY_secondaryColor,
        size: LEGACY_size,
        label: label,
        testId: testId,
        UNSAFE_margin: LEGACY_margin
    });
    var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core';
    var size = 'size' in props && props.size !== undefined && // This prevents invalid sizes being passed in, which is required
    // for handling unsupported legacy icon sizes which can
    // cause errors.
    (props.size === 'small' || props.size === 'medium') ? props.size : 'medium';
    var baseSize = baseSizeMap[type];
    var viewBoxPadding = paddingMap[type][size][spacing];
    var viewBoxSize = baseSize + 2 * viewBoxPadding;
    return /*#__PURE__*/ _react.createElement("span", {
        "data-testid": testId,
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            color: color
        },
        className: (0, _runtime.ax)([
            "_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9",
            "_12va1onz _jcxd1r8n",
            shouldScale && "_1bsb1kw7 _4t3i1kw7",
            (type === 'utility' || size === 'small') && "_vwz4utpp"
        ])
    }, /*#__PURE__*/ _react.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML: dangerouslySetInnerHTML,
        className: (0, _runtime.ax)([
            "_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31",
            shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === 'utility' ? utilSizes[spacing] : size === 'small' ? coreSizeSmall[spacing] : coreSizeMedium[spacing]
        ])
    }));
});
exports.default = Icon;

},{"react":"jMk1U","@compiled/react/runtime":"ks1OO","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4zDq6":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fd7e8572b743336ba9352499cfa665f1>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("ec61145f097333d8"));
var _baseNew = _interopRequireDefault(require("4ac2ebd641cd8c44"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "ArrowUp".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Multi purpose - Known uses: back to top.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ArrowUpIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 15V3.56l3.72 3.72 1.06-1.06-5-5a.75.75 0 0 0-1.06 0l-5 5 1.06 1.06 3.72-3.72V15z" clip-rule="evenodd"/>`
    }, props));
ArrowUpIcon.displayName = 'ArrowUpIcon';
var _default = exports.default = ArrowUpIcon;

},{"ec61145f097333d8":"jMk1U","4ac2ebd641cd8c44":"8mvYS"}],"bo6iS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _possibleConstructorReturn = require("@babel/runtime/helpers/possibleConstructorReturn");
var _possibleConstructorReturnDefault = parcelHelpers.interopDefault(_possibleConstructorReturn);
var _getPrototypeOf = require("@babel/runtime/helpers/getPrototypeOf");
var _getPrototypeOfDefault = parcelHelpers.interopDefault(_getPrototypeOf);
var _inherits = require("@babel/runtime/helpers/inherits");
var _inheritsDefault = parcelHelpers.interopDefault(_inherits);
// Delete this file when cleaning up platform-component-visual-refresh FG
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _withDimensions = require("../../hoc/with-dimensions");
var _withDimensionsDefault = parcelHelpers.interopDefault(_withDimensions);
var _helpers = require("../../internal/helpers");
var _tableHeadCellOld = require("../table-head-cell-old");
var _tableHeadCellOldDefault = parcelHelpers.interopDefault(_tableHeadCellOld);
var _excluded = [
    "isRanking",
    "refHeight",
    "refWidth"
];
function _callSuper(t, o, e) {
    return o = (0, _getPrototypeOfDefault.default)(o), (0, _possibleConstructorReturnDefault.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOfDefault.default)(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
    try {
        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
    } catch (t) {}
    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
        return !!t;
    })();
}
var RankableTableHeadCellComponentOld = /*#__PURE__*/ function(_React$Component) {
    function RankableTableHeadCellComponentOld() {
        (0, _classCallCheckDefault.default)(this, RankableTableHeadCellComponentOld);
        return _callSuper(this, RankableTableHeadCellComponentOld, arguments);
    }
    (0, _inheritsDefault.default)(RankableTableHeadCellComponentOld, _React$Component);
    return (0, _createClassDefault.default)(RankableTableHeadCellComponentOld, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = (0, _objectWithoutPropertiesDefault.default)(_this$props, _excluded);
                var inlineStyles = (0, _helpers.inlineStylesIfRanking)(isRanking, refWidth);
                return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHeadCellOldDefault.default), (0, _extendsDefault.default)({
                    inlineStyles: inlineStyles
                }, restProps));
            }
        }
    ]);
}((0, _reactDefault.default).Component);
var RankableTableHeadCellOld = (0, _withDimensionsDefault.default)(RankableTableHeadCellComponentOld);
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = RankableTableHeadCellOld;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/possibleConstructorReturn":"3sko5","@babel/runtime/helpers/getPrototypeOf":"aGuV6","@babel/runtime/helpers/inherits":"8CbKS","react":"jMk1U","../../hoc/with-dimensions":"h3MgY","../../internal/helpers":"bljM3","../table-head-cell-old":"eqXkr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eqXkr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
// Delete this file when cleaning up platform-component-visual-refresh FG
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tableHead = require("../styled/table-head");
var _excluded = [
    "content",
    "inlineStyles",
    "testId",
    "isRanking",
    "innerRef",
    "isSortable",
    "onClick"
];
var TableHeadCellOld = function TableHeadCellOld(_ref) {
    var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, onClick = _ref.onClick, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _tableHead.HeadCell), (0, _extendsDefault.default)({
        style: inlineStyles,
        testId: testId && "".concat(testId, "--head--cell"),
        ref: typeof innerRef !== 'string' ? innerRef : null // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
    }, rest, {
        onClick: onClick,
        isSortable: isSortable
    }), isSortable ? /*#__PURE__*/ (0, _reactDefault.default).createElement("button", {
        type: "button",
        "aria-roledescription": "Sort button"
    }, content) : content);
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = TableHeadCellOld;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","../styled/table-head":"2UImB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fTZq0":[function(require,module,exports,__globalThis) {
module.exports = import("./body.151851e3.js").then(()=>module.bundle.root('9QcLa'));

},{"9QcLa":"9QcLa"}],"1Upub":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _modalDialogDefault.default));
parcelHelpers.export(exports, "ModalTransition", ()=>(0, _modalTransitionDefault.default));
parcelHelpers.export(exports, "ModalHeader", ()=>(0, _modalHeaderDefault.default));
parcelHelpers.export(exports, "ModalTitle", ()=>(0, _modalTitleDefault.default));
parcelHelpers.export(exports, "ModalBody", ()=>(0, _modalBodyDefault.default));
parcelHelpers.export(exports, "ModalFooter", ()=>(0, _modalFooterDefault.default));
parcelHelpers.export(exports, "CloseButton", ()=>(0, _closeButton.CloseButton));
parcelHelpers.export(exports, "useModal", ()=>(0, _hooks.useModal));
var _modalDialog = require("./modal-dialog");
var _modalDialogDefault = parcelHelpers.interopDefault(_modalDialog);
var _modalTransition = require("./modal-transition");
var _modalTransitionDefault = parcelHelpers.interopDefault(_modalTransition);
var _modalHeader = require("./modal-header");
var _modalHeaderDefault = parcelHelpers.interopDefault(_modalHeader);
var _modalTitle = require("./modal-title");
var _modalTitleDefault = parcelHelpers.interopDefault(_modalTitle);
var _modalBody = require("./modal-body");
var _modalBodyDefault = parcelHelpers.interopDefault(_modalBody);
var _modalFooter = require("./modal-footer");
var _modalFooterDefault = parcelHelpers.interopDefault(_modalFooter);
var _closeButton = require("./close-button");
var _hooks = require("./hooks");

},{"./modal-dialog":"cQrTb","./modal-transition":false,"./modal-header":"bUJ3a","./modal-title":"ewqbJ","./modal-body":"kOlnr","./modal-footer":"fW5Bk","./close-button":false,"./hooks":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cQrTb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ModalWrapper);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _modalWrapper = require("./internal/components/modal-wrapper");
var _modalWrapperDefault = parcelHelpers.interopDefault(_modalWrapper);
function ModalWrapper(props) {
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _modalWrapperDefault.default), (0, _extendsDefault.default)({}, props, {
        isFullScreen: false
    }));
}

},{"@babel/runtime/helpers/extends":"lKa0J","react":"jMk1U","./internal/components/modal-wrapper":"8m4vO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8m4vO":[function(require,module,exports,__globalThis) {
/* modal-wrapper.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _reactFocusLock = require("react-focus-lock");
var _reactFocusLockDefault = parcelHelpers.interopDefault(_reactFocusLock);
var _reactScrolllock = require("react-scrolllock");
var _reactScrolllockDefault = parcelHelpers.interopDefault(_reactScrolllock);
var _analyticsNext = require("@atlaskit/analytics-next");
var _blanket = require("@atlaskit/blanket");
var _blanketDefault = parcelHelpers.interopDefault(_blanket);
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _layering = require("@atlaskit/layering");
var _fadeIn = require("@atlaskit/motion/fade-in");
var _fadeInDefault = parcelHelpers.interopDefault(_fadeIn);
var _portal = require("@atlaskit/portal");
var _portalDefault = parcelHelpers.interopDefault(_portal);
var _constants = require("@atlaskit/theme/constants");
var _useModalStack = require("../hooks/use-modal-stack");
var _useModalStackDefault = parcelHelpers.interopDefault(_useModalStack);
var _usePreventProgrammaticScroll = require("../hooks/use-prevent-programmatic-scroll");
var _usePreventProgrammaticScrollDefault = parcelHelpers.interopDefault(_usePreventProgrammaticScroll);
var _modalDialog = require("./modal-dialog");
var _modalDialogDefault = parcelHelpers.interopDefault(_modalDialog);
var fillScreenStyles = null;
var allowlistElements = function allowlistElements(element, callback) {
    // Allow focus to reach elements outside the modal:
    // if AUI dialog is allowListed and visible
    if (!!document.querySelector('.aui-blanket:not([hidden])')) return false;
    // allows to pass a callback function to allow elements be ignored by focus lock
    if (typeof callback === 'function') return callback(element);
    return true;
};
/**
 * __Modal wrapper__
 *
 * A modal wrapper displays content that requires user interaction, in a layer above the page.
 * This component is primary container for other modal components.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples)
 * - [Code](https://atlassian.design/components/modal-dialog/code)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */ var InternalModalWrapper = function InternalModalWrapper(props) {
    var _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, focusLockAllowlist = props.focusLockAllowlist, _props$shouldCloseOnE = props.shouldCloseOnEscapePress, shouldCloseOnEscapePress = _props$shouldCloseOnE === void 0 ? true : _props$shouldCloseOnE, _props$shouldCloseOnO = props.shouldCloseOnOverlayClick, shouldCloseOnOverlayClick = _props$shouldCloseOnO === void 0 ? true : _props$shouldCloseOnO, _props$shouldScrollIn = props.shouldScrollInViewport, shouldScrollInViewport = _props$shouldScrollIn === void 0 ? false : _props$shouldScrollIn, _props$shouldReturnFo = props.shouldReturnFocus, shouldReturnFocus = _props$shouldReturnFo === void 0 ? true : _props$shouldReturnFo, stackIndexOverride = props.stackIndex, providedOnClose = props.onClose, _props$onStackChange = props.onStackChange, onStackChange = _props$onStackChange === void 0 ? (0, _noopDefault.default) : _props$onStackChange, isBlanketHidden = props.isBlanketHidden, children = props.children, height = props.height, width = props.width, onCloseComplete = props.onCloseComplete, onOpenComplete = props.onOpenComplete, label = props.label, testId = props.testId, isFullScreen = props.isFullScreen;
    var calculatedStackIndex = (0, _useModalStackDefault.default)({
        onStackChange: onStackChange
    });
    var stackIndex = stackIndexOverride || calculatedStackIndex;
    var isForeground = stackIndex === 0;
    // When a user supplies a ref to focus we skip auto focus via react-focus-lock
    var autoFocusLock = typeof autoFocus === 'boolean' ? autoFocus : false;
    var onCloseHandler = (0, _analyticsNext.usePlatformLeafEventHandler)({
        fn: providedOnClose || (0, _noopDefault.default),
        action: 'closed',
        componentName: 'modalDialog',
        packageName: "@atlaskit/modal-dialog",
        packageVersion: "14.2.12"
    });
    var onBlanketClicked = (0, _react.useCallback)(function(e) {
        if (shouldCloseOnOverlayClick) onCloseHandler(e);
    }, [
        shouldCloseOnOverlayClick,
        onCloseHandler
    ]);
    // This ensures to prevent additional re-renders while nothing is passed to focusLockAllowlist explicitly.
    var allowListCallback = (0, _react.useCallback)(function(element) {
        return allowlistElements(element, focusLockAllowlist);
    }, [
        focusLockAllowlist
    ]);
    (0, _usePreventProgrammaticScrollDefault.default)();
    var modalDialogWithBlanket = /*#__PURE__*/ _react.createElement((0, _blanketDefault.default), {
        isTinted: !isBlanketHidden,
        onBlanketClicked: onBlanketClicked,
        testId: testId && "".concat(testId, "--blanket")
    }, /*#__PURE__*/ _react.createElement((0, _modalDialogDefault.default), {
        testId: testId,
        label: label,
        autoFocus: autoFocus,
        stackIndex: stackIndex,
        onClose: onCloseHandler,
        shouldCloseOnEscapePress: shouldCloseOnEscapePress && isForeground,
        shouldScrollInViewport: shouldScrollInViewport,
        height: height,
        width: width,
        onCloseComplete: onCloseComplete,
        onOpenComplete: onOpenComplete,
        hasProvidedOnClose: Boolean(providedOnClose),
        isFullScreen: isFullScreen
    }, children));
    var returnFocus = true;
    var onDeactivation;
    if ('boolean' === typeof shouldReturnFocus) returnFocus = shouldReturnFocus;
    else onDeactivation = function onDeactivation() {
        window.setTimeout(function() {
            var _shouldReturnFocus$cu;
            (_shouldReturnFocus$cu = shouldReturnFocus.current) === null || _shouldReturnFocus$cu === void 0 || _shouldReturnFocus$cu.focus();
        }, 0);
    };
    return /*#__PURE__*/ _react.createElement((0, _layering.Layering), {
        isDisabled: false
    }, /*#__PURE__*/ _react.createElement((0, _portalDefault.default), {
        zIndex: (0, _constants.layers).modal()
    }, /*#__PURE__*/ _react.createElement((0, _fadeInDefault.default), null, function(fadeInProps) {
        return /*#__PURE__*/ _react.createElement("div", (0, _extendsDefault.default)({}, fadeInProps, {
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
            className: (0, _runtime.ax)([
                "_1bsbauwl _4t3i1kxc _kqsw1n9t _152tze3t _1e02ze3t _18m91wug _8am5i4x0",
                fadeInProps.className
            ]),
            "aria-hidden": !isForeground
        }), /*#__PURE__*/ _react.createElement((0, _reactFocusLockDefault.default), {
            autoFocus: autoFocusLock,
            returnFocus: returnFocus,
            onDeactivation: onDeactivation,
            whiteList: allowListCallback
        }, /*#__PURE__*/ _react.createElement((0, _reactScrolllockDefault.default), null), shouldScrollInViewport ? /*#__PURE__*/ _react.createElement((0, _reactScrolllock.TouchScrollable), null, modalDialogWithBlanket) : modalDialogWithBlanket));
    })));
};
exports.default = InternalModalWrapper;

},{"@babel/runtime/helpers/extends":"lKa0J","react":"jMk1U","@compiled/react/runtime":"8r5np","react-focus-lock":"drrfQ","react-scrolllock":"4lcpi","@atlaskit/analytics-next":"3iJRH","@atlaskit/blanket":"fkTHQ","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/layering":"hp6qP","@atlaskit/motion/fade-in":"eb1Ct","@atlaskit/portal":"8ME4i","@atlaskit/theme/constants":"6kRPo","../hooks/use-modal-stack":"cVqiF","../hooks/use-prevent-programmatic-scroll":"bVvvt","./modal-dialog":"bR0IL","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8r5np":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"1fdBi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1fdBi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":"daaHp","./style-cache":"1No70","./ax":"24wWe","./ac":"87gec","./css-custom-property":"jQQHH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"daaHp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Style);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _devWarnings = require("./dev-warnings");
var _isServerEnvironment = require("./is-server-environment");
var _sheet = require("./sheet");
var _sheetDefault = parcelHelpers.interopDefault(_sheet);
var _styleCache = require("./style-cache");
function Style(props) {
    const inserted = (0, _styleCache.useCache)();
    props.children.forEach((0, _devWarnings.analyzeCssInDev));
    if (props.children.length) {
        var bucket;
        for(let i = 0; i < props.children.length; i++){
            const sheet = props.children[i];
            if (inserted[sheet]) continue;
            inserted[sheet] = true;
            (0, _sheetDefault.default)(sheet, props);
        }
    }
    return null;
}

},{"react":"jMk1U","./dev-warnings":"ejaXr","./is-server-environment":"hkBQ7","./sheet":"9nbh9","./style-cache":"1No70","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ejaXr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "analyzeCssInDev", ()=>analyzeCssInDev);
const selectorsToWarn = [
    ':first-child',
    ':nth-child'
];
const hasWarned = {};
const warn = (str, ...args)=>console.error(`
 \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2557}   \u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2557}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557} \u{2588}\u{2588}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2588}\u{2588}\u{2557}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}   \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}\u{255A}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2554}\u{2550}\u{2550}\u{255D}  \u{2588}\u{2588}\u{2551}  \u{2588}\u{2588}\u{2551}
\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{255A}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}\u{2588}\u{2588}\u{2551} \u{255A}\u{2550}\u{255D} \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2551}     \u{2588}\u{2588}\u{2551}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2557}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2588}\u{2554}\u{255D}
 \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D} \u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{255D}     \u{255A}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}\u{255A}\u{2550}\u{2550}\u{2550}\u{2550}\u{2550}\u{255D}

  @compiled/react/runtime - DEV WARNING

  ${str}
`, ...args);
const analyzeCssInDev = (sheet)=>{
    if (hasWarned[sheet]) return;
    const shouldWarnAboutSelectors = selectorsToWarn.map((selector)=>sheet.includes(selector)).filter(Boolean).length > 0;
    if (shouldWarnAboutSelectors) warn(`Selectors "${selectorsToWarn.join(', ')}" are dangerous to use when server side rendering.
  Alternatively try and use ":nth-of-type", or placing data attributes and targetting those instead.
  Read https://compiledcssinjs.com/docs/server-side-rendering for more advice.`);
    hasWarned[sheet] = true;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hkBQ7":[function(require,module,exports,__globalThis) {
/**
 * @see https://github.com/jsdom/jsdom/releases/tag/12.0.0
 * @see https://github.com/jsdom/jsdom/issues/1537
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isServerEnvironment", ()=>isServerEnvironment);
const isJsDomEnvironment = ()=>window.name === 'nodejs' || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('Node.js')) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes('jsdom'));
const isServerEnvironment = ()=>{
    if (typeof window === 'undefined' || false) return true;
    if (isJsDomEnvironment()) return true;
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9nbh9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "styleBucketOrdering", ()=>styleBucketOrdering);
parcelHelpers.export(exports, "getStyleBucketName", ()=>getStyleBucketName);
parcelHelpers.export(exports, "default", ()=>insertRule);
var _cache = require("./cache");
var _shorthand = require("./shorthand");
const styleBucketOrdering = [
    // shorthand properties
    's-0',
    's-1',
    's-2',
    's-3',
    's-4',
    's-5',
    // catch-all
    '',
    // link
    'l',
    // visited
    'v',
    // focus-within
    'w',
    // focus
    'f',
    // focus-visible
    'i',
    // hover
    'h',
    // active
    'a',
    // at-rules
    'm'
];
/**
 * Holds all style buckets in memory that have been added to the head.
 */ const styleBucketsInHead = {};
/**
 * Maps the long pseudo name to the short pseudo name.
 * Pseudos that match here will be ordered,
 * everything else will make their way to the catch all style bucket.
 * We reduce the pseudo name to save bundlesize.
 * Thankfully there aren't any overlaps, see: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.
 */ const pseudosMap = {
    // link
    k: 'l',
    // visited
    ited: 'v',
    // focus-within
    'us-within': 'w',
    // focus
    us: 'f',
    // focus-visible
    'us-visible': 'i',
    // hover
    er: 'h',
    // active
    ive: 'a'
};
/**
 * Lazily adds a `<style>` bucket to the `<head>`.
 * This will ensure that the style buckets are ordered.
 *
 * @param bucket Bucket to insert in the head.
 */ function lazyAddStyleBucketToHead(bucketName, opts) {
    if (!styleBucketsInHead[bucketName]) {
        let currentBucketIndex = styleBucketOrdering.indexOf(bucketName) + 1;
        let nextBucketFromCache = null;
        // Find the next bucket which we will add our new style bucket before.
        for(; currentBucketIndex < styleBucketOrdering.length; currentBucketIndex++){
            const nextBucket = styleBucketsInHead[styleBucketOrdering[currentBucketIndex]];
            if (nextBucket) {
                nextBucketFromCache = nextBucket;
                break;
            }
        }
        const tag = document.createElement('style');
        opts.nonce && tag.setAttribute('nonce', opts.nonce);
        tag.appendChild(document.createTextNode(''));
        document.head.insertBefore(tag, nextBucketFromCache);
        if ((0, _cache.isCacheDisabled)()) return tag;
        styleBucketsInHead[bucketName] = tag;
    }
    return styleBucketsInHead[bucketName];
}
const getStyleBucketName = (sheet)=>{
    // We are grouping all the at-rules like @media, @supports etc under `m` bucket.
    if (sheet.charCodeAt(0) === 64 /* "@" */ ) return 'm';
    const firstBracket = sheet.indexOf('{');
    /**
     * We assume that classname will always be 9 character long,
     * using this the 10th characters could be a pseudo declaration.
     */ if (sheet.charCodeAt(10) === 58 /* ":" */ ) {
        // We send through a subset of the string instead of the full pseudo name.
        // For example `"focus-visible"` name would instead of `"us-visible"`.
        // Return a mapped pseudo else the default catch all bucket.
        const mapped = pseudosMap[sheet.slice(14, firstBracket)];
        if (mapped) return mapped;
    }
    const property = sheet.slice(firstBracket + 1, sheet.indexOf(':', firstBracket)).trim();
    const shorthandDepth = (0, _shorthand.getShorthandDepth)(property);
    if (typeof shorthandDepth === 'number') return `s-${shorthandDepth}`;
    // Return default catch all bucket
    return '';
};
function insertRule(css, opts) {
    const bucketName = getStyleBucketName(css);
    const style = lazyAddStyleBucketToHead(bucketName, opts);
    var _a;
    style.appendChild(document.createTextNode(css));
}

},{"./cache":"kzd7G","./shorthand":"d6xSP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kzd7G":[function(require,module,exports,__globalThis) {
/**
 * Returns `true` when caching should be disabled, else `false`.
 *
 * Any code within this check will be removed in the output bundles:
 *
 * ```js
 * if (isCacheDisabled()) {
 *   // This code will be removed from the output bundles
 * }
 * ```
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCacheDisabled", ()=>isCacheDisabled);
const isCacheDisabled = ()=>{
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d6xSP":[function(require,module,exports,__globalThis) {
// Copied from packages/utils/src/shorthand.ts so that we avoid
// inflating the bundle size of @compiled/react/runtime with the contents
// of @compiled/utils
//
// Keep this `shorthandBuckets` in sync with the `shorthandBuckets` defined in
// packages/utils/src/shorthand.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getShorthandDepth", ()=>getShorthandDepth);
const shorthandBuckets = {
    all: 0,
    animation: 1,
    'animation-range': 1,
    background: 1,
    border: 1,
    'border-color': 2,
    'border-style': 2,
    'border-width': 2,
    'border-block': 3,
    'border-inline': 3,
    'border-top': 4,
    'border-right': 4,
    'border-bottom': 4,
    'border-left': 4,
    'border-block-start': 5,
    'border-block-end': 5,
    'border-inline-start': 5,
    'border-inline-end': 5,
    'border-image': 1,
    'border-radius': 1,
    'column-rule': 1,
    columns: 1,
    'contain-intrinsic-size': 1,
    container: 1,
    flex: 1,
    'flex-flow': 1,
    font: 1,
    'font-synthesis': 1,
    'font-variant': 2,
    gap: 1,
    grid: 1,
    'grid-area': 1,
    'grid-column': 2,
    'grid-row': 2,
    'grid-template': 2,
    inset: 1,
    'inset-block': 2,
    'inset-inline': 2,
    'list-style': 1,
    margin: 1,
    'margin-block': 2,
    'margin-inline': 2,
    mask: 1,
    'mask-border': 1,
    offset: 1,
    outline: 1,
    overflow: 1,
    'overscroll-behavior': 1,
    padding: 1,
    'padding-block': 2,
    'padding-inline': 2,
    'place-content': 1,
    'place-items': 1,
    'place-self': 1,
    'position-try': 1,
    'scroll-margin': 1,
    'scroll-margin-block': 2,
    'scroll-margin-inline': 2,
    'scroll-padding': 1,
    'scroll-padding-block': 2,
    'scroll-padding-inline': 2,
    'scroll-timeline': 1,
    'text-decoration': 1,
    'text-emphasis': 1,
    'text-wrap': 1,
    transition: 1,
    'view-timeline': 1
};
const getShorthandDepth = (shorthand)=>{
    var _a;
    return (_a = shorthandBuckets[shorthand]) !== null && _a !== void 0 ? _a : null;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1No70":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useCache", ()=>useCache);
var _react = require("react");
var _cache = require("./cache");
var _isServerEnvironment = require("./is-server-environment");
/**
 * Cache to hold already used styles.
 * React Context on the server - singleton object on the client.
 */ const Cache = {};
if (typeof document !== 'undefined') {
    /**
     * Iterates through all found style elements generated when server side rendering.
     *
     * @param cb
     */ const ssrStyles = document.querySelectorAll('style[data-cmpld]');
    for(let i = 0; i < ssrStyles.length; i++)// Move all found server-side rendered style elements to the head before React hydration happens.
    document.head.appendChild(ssrStyles[i]);
}
const useCache = ()=>{
    if ((0, _cache.isCacheDisabled)()) return {};
    // On the client we use the object singleton.
    return Cache;
};
/**
 * On the server this ensures the minimal amount of styles will be rendered
 * safely using React Context.
 *
 * On the browser this turns into a fragment with no React Context.
 */ const StyleCacheProvider = (props)=>{
    return props.children;
};
exports.default = StyleCacheProvider;

},{"react":"jMk1U","./cache":"kzd7G","./is-server-environment":"hkBQ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"24wWe":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"87gec":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Joins classes together and ensures atomic declarations of a single group exist.
 * Atomic declarations take the form of `_{group}{value}` (always prefixed with an underscore),
 * where both `group` and `value` are hashes **four characters long**.
 * Class names can be of any length,
 * this function can take both atomic declarations and class names.
 *
 * Input:
 *
 * ```
 * ax(['_aaaabbbb', '_aaaacccc'])
 * ```
 *
 * Output:
 *
 * ```
 * '_aaaacccc'
 * ```
 *
 * @param classes
 */ parcelHelpers.export(exports, "ac", ()=>ac);
parcelHelpers.export(exports, "memoizedAc", ()=>memoizedAc);
/**
 * Provide an opportunity to clear the cache to prevent memory leak.
 */ parcelHelpers.export(exports, "clearCache", ()=>clearCache);
/**
 * Expose cache
 */ parcelHelpers.export(exports, "getCache", ()=>getCache);
var _isServerEnvironment = require("./is-server-environment");
const UNDERSCORE_UNICODE = 95;
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ const ATOMIC_GROUP_LENGTH = 5;
/**
 * Memoize the result of ac so if it is called with the same args, it returns immediately.
 * Also, to prevent useless React rerenders
 */ const cache = new Map();
/**
 * `ac` returns an instance of AtomicGroups. The instance holds the knowledge of Atomic Group so we can chain `ac`.
 * e.g. <div className={ax([ax(['_aaaa_b']), '_aaaa_c'])} />
 */ class AtomicGroups {
    constructor(values){
        // An object stores the relation between Atomic group and actual class name
        // e.g. { "aaaa": "a" } `aaaa` is the Atomic group and `a` is the actual class name
        this.values = values;
    }
    toString() {
        let str = '';
        for (const [, value] of this.values)str += value + ' ';
        return str.slice(0, -1);
    }
}
function ac(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    const atomicGroups = new Map();
    for(let i = 0; i < classNames.length; i++){
        const cls = classNames[i];
        if (!cls) continue;
        if (typeof cls === 'string') {
            const groups = cls.split(' ');
            for(let x = 0; x < groups.length; x++){
                const atomic = groups[x];
                const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
                const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
                const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH) : atomic;
                atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH + 1) : atomic);
            }
        } else // if cls is an instance of AtomicGroups, transfer its values to `atomicGroups`
        for (const [key, value] of cls.values)atomicGroups.set(key, value);
    }
    return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
    // short circuit if there's no class names.
    if (classNames.length <= 1 && !classNames[0]) return undefined;
    // build the cacheKey based on the function argument
    // e.g. if the argument is ["_aaaabbbb", "_aaaa_a", "some-class-name"],
    // then the cacheKey is "_aaaabbbb _aaaa_a some-class-name"
    let cacheKey = '';
    for(let i = 0; i < classNames.length; i += 1){
        const current = classNames[i];
        // continue if current is undefined, false, or ""
        if (!current) continue;
        cacheKey += current + ' ';
    }
    cacheKey = cacheKey.slice(0, -1);
    if (cache.has(cacheKey)) return cache.get(cacheKey);
    const result = ac(classNames);
    cache.set(cacheKey, result);
    return result;
}
// Memoization is primarily used to prevent React from unncessary re-rendering.
// Use unmemoizedAc on server-side because We don't need to worry about re-rendering on server-side.
exports.default = memoizedAc;
function clearCache() {
    cache.clear();
}
function getCache() {
    return cache;
}

},{"./is-server-environment":"hkBQ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jQQHH":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"drrfQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _combination = require("./Combination");
var _combinationDefault = parcelHelpers.interopDefault(_combination);
var _ui = require("./UI");
parcelHelpers.exportAll(_ui, exports);
exports.default = (0, _combinationDefault.default);

},{"./Combination":"ltOCW","./UI":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ltOCW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _lock = require("./Lock");
var _lockDefault = parcelHelpers.interopDefault(_lock);
var _trap = require("./Trap");
var _trapDefault = parcelHelpers.interopDefault(_trap);
var FocusLockCombination = /*#__PURE__*/ (0, _react.forwardRef)(function FocusLockUICombination(props, ref) {
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _lockDefault.default), (0, _extendsDefault.default)({
        sideCar: (0, _trapDefault.default),
        ref: ref
    }, props));
});
var _ref = (0, _lockDefault.default).propTypes || {}, sideCar = _ref.sideCar, propTypes = (0, _objectWithoutPropertiesLooseDefault.default)(_ref, [
    "sideCar"
]);
FocusLockCombination.propTypes = propTypes;
exports.default = FocusLockCombination;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"fls88","@babel/runtime/helpers/esm/extends":"20my9","react":"jMk1U","./Lock":"58foA","./Trap":"cKTY4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fls88":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_objectWithoutPropertiesLoose);
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"58foA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _constants = require("focus-lock/constants");
var _useCallbackRef = require("use-callback-ref");
var _focusGuard = require("./FocusGuard");
var _medium = require("./medium");
var _scope = require("./scope");
var emptyArray = [];
var FocusLock = /*#__PURE__*/ (0, _react.forwardRef)(function FocusLockUI(props, parentRef) {
    var _extends2;
    var _useState = (0, _react.useState)(), realObserved = _useState[0], setObserved = _useState[1];
    var observed = (0, _react.useRef)();
    var isActive = (0, _react.useRef)(false);
    var originalFocusedElement = (0, _react.useRef)(null);
    var _useState2 = (0, _react.useState)({}), update = _useState2[1];
    var children = props.children, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, _props$noFocusGuards = props.noFocusGuards, noFocusGuards = _props$noFocusGuards === void 0 ? false : _props$noFocusGuards, _props$persistentFocu = props.persistentFocus, persistentFocus = _props$persistentFocu === void 0 ? false : _props$persistentFocu, _props$crossFrame = props.crossFrame, crossFrame = _props$crossFrame === void 0 ? true : _props$crossFrame, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus, allowTextSelection = props.allowTextSelection, group = props.group, className = props.className, whiteList = props.whiteList, hasPositiveIndices = props.hasPositiveIndices, _props$shards = props.shards, shards = _props$shards === void 0 ? emptyArray : _props$shards, _props$as = props.as, Container = _props$as === void 0 ? 'div' : _props$as, _props$lockProps = props.lockProps, containerProps = _props$lockProps === void 0 ? {} : _props$lockProps, SideCar = props.sideCar, _props$returnFocus = props.returnFocus, shouldReturnFocus = _props$returnFocus === void 0 ? false : _props$returnFocus, focusOptions = props.focusOptions, onActivationCallback = props.onActivation, onDeactivationCallback = props.onDeactivation;
    var _useState3 = (0, _react.useState)({}), id = _useState3[0];
    var onActivation = (0, _react.useCallback)(function(_ref) {
        var captureFocusRestore = _ref.captureFocusRestore;
        if (!originalFocusedElement.current) {
            var _document;
            var activeElement = (_document = document) == null ? void 0 : _document.activeElement;
            originalFocusedElement.current = activeElement;
            if (activeElement !== document.body) originalFocusedElement.current = captureFocusRestore(activeElement);
        }
        if (observed.current && onActivationCallback) onActivationCallback(observed.current);
        isActive.current = true;
        update();
    }, [
        onActivationCallback
    ]);
    var onDeactivation = (0, _react.useCallback)(function() {
        isActive.current = false;
        if (onDeactivationCallback) onDeactivationCallback(observed.current);
        update();
    }, [
        onDeactivationCallback
    ]);
    var returnFocus = (0, _react.useCallback)(function(allowDefer) {
        var focusRestore = originalFocusedElement.current;
        if (focusRestore) {
            var returnFocusTo = (typeof focusRestore === 'function' ? focusRestore() : focusRestore) || document.body;
            var howToReturnFocus = typeof shouldReturnFocus === 'function' ? shouldReturnFocus(returnFocusTo) : shouldReturnFocus;
            if (howToReturnFocus) {
                var returnFocusOptions = typeof howToReturnFocus === 'object' ? howToReturnFocus : undefined;
                originalFocusedElement.current = null;
                if (allowDefer) Promise.resolve().then(function() {
                    return returnFocusTo.focus(returnFocusOptions);
                });
                else returnFocusTo.focus(returnFocusOptions);
            }
        }
    }, [
        shouldReturnFocus
    ]);
    var onFocus = (0, _react.useCallback)(function(event) {
        if (isActive.current) (0, _medium.mediumFocus).useMedium(event);
    }, []);
    var onBlur = (0, _medium.mediumBlur).useMedium;
    var setObserveNode = (0, _react.useCallback)(function(newObserved) {
        if (observed.current !== newObserved) {
            observed.current = newObserved;
            setObserved(newObserved);
        }
    }, []);
    if (typeof allowTextSelection !== 'undefined') console.warn('React-Focus-Lock: allowTextSelection is deprecated and enabled by default');
    (0, _react.useEffect)(function() {
        if (!observed.current && typeof Container !== 'string') console.error('FocusLock: could not obtain ref to internal node');
    }, []);
    var lockProps = (0, _extendsDefault.default)((_extends2 = {}, _extends2[0, _constants.FOCUS_DISABLED] = disabled && 'disabled', _extends2[0, _constants.FOCUS_GROUP] = group, _extends2), containerProps);
    var hasLeadingGuards = noFocusGuards !== true;
    var hasTailingGuards = hasLeadingGuards && noFocusGuards !== 'tail';
    var mergedRef = (0, _useCallbackRef.useMergeRefs)([
        parentRef,
        setObserveNode
    ]);
    var focusScopeValue = (0, _react.useMemo)(function() {
        return {
            observed: observed,
            shards: shards,
            enabled: !disabled,
            active: isActive.current
        };
    }, [
        disabled,
        isActive.current,
        shards,
        realObserved
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Fragment), null, hasLeadingGuards && [
        /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
            key: "guard-first",
            "data-focus-guard": true,
            tabIndex: disabled ? -1 : 0,
            style: (0, _focusGuard.hiddenGuard)
        }),
        hasPositiveIndices ? /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
            key: "guard-nearest",
            "data-focus-guard": true,
            tabIndex: disabled ? -1 : 1,
            style: (0, _focusGuard.hiddenGuard)
        }) : null
    ], !disabled && /*#__PURE__*/ (0, _reactDefault.default).createElement(SideCar, {
        id: id,
        sideCar: (0, _medium.mediumSidecar),
        observed: realObserved,
        disabled: disabled,
        persistentFocus: persistentFocus,
        crossFrame: crossFrame,
        autoFocus: autoFocus,
        whiteList: whiteList,
        shards: shards,
        onActivation: onActivation,
        onDeactivation: onDeactivation,
        returnFocus: returnFocus,
        focusOptions: focusOptions,
        noFocusGuards: noFocusGuards
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement(Container, (0, _extendsDefault.default)({
        ref: mergedRef
    }, lockProps, {
        className: className,
        onBlur: onBlur,
        onFocus: onFocus
    }), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _scope.focusScope).Provider, {
        value: focusScopeValue
    }, children)), hasTailingGuards && /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        "data-focus-guard": true,
        tabIndex: disabled ? -1 : 0,
        style: (0, _focusGuard.hiddenGuard)
    }));
});
FocusLock.propTypes = {
    children: (0, _propTypes.node),
    disabled: (0, _propTypes.bool),
    returnFocus: (0, _propTypes.oneOfType)([
        (0, _propTypes.bool),
        (0, _propTypes.object),
        (0, _propTypes.func)
    ]),
    focusOptions: (0, _propTypes.object),
    noFocusGuards: (0, _propTypes.bool),
    hasPositiveIndices: (0, _propTypes.bool),
    allowTextSelection: (0, _propTypes.bool),
    autoFocus: (0, _propTypes.bool),
    persistentFocus: (0, _propTypes.bool),
    crossFrame: (0, _propTypes.bool),
    group: (0, _propTypes.string),
    className: (0, _propTypes.string),
    whiteList: (0, _propTypes.func),
    shards: (0, _propTypes.arrayOf)((0, _propTypes.any)),
    as: (0, _propTypes.oneOfType)([
        (0, _propTypes.string),
        (0, _propTypes.func),
        (0, _propTypes.object)
    ]),
    lockProps: (0, _propTypes.object),
    onActivation: (0, _propTypes.func),
    onDeactivation: (0, _propTypes.func),
    sideCar: (0, _propTypes.any).isRequired
};
exports.default = FocusLock;

},{"@babel/runtime/helpers/esm/extends":"20my9","react":"jMk1U","prop-types":"GNqOQ","focus-lock/constants":"frnmY","use-callback-ref":"aWIcL","./FocusGuard":"2bUZ5","./medium":"PUfQ7","./scope":"3Inge","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"GNqOQ":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"59S9B","cb216452e2171041":"32b0h"}],"32b0h":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"59S9B","c067a60101d8520c":"grVLZ","74a0f89a70b9f3c2":"ggXkd","18441b11647bc78":"cnEYJ","bec3f6ff89f0b072":"gaN1l"}],"grVLZ":[function(require,module,exports,__globalThis) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"ggXkd":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"cnEYJ":[function(require,module,exports,__globalThis) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"gaN1l":[function(require,module,exports,__globalThis) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"ggXkd","898bc82f39d83f7c":"cnEYJ"}],"frnmY":[function(require,module,exports,__globalThis) {
/**
 * defines a focus group
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FOCUS_GROUP", ()=>FOCUS_GROUP);
parcelHelpers.export(exports, "FOCUS_DISABLED", ()=>FOCUS_DISABLED);
parcelHelpers.export(exports, "FOCUS_ALLOW", ()=>FOCUS_ALLOW);
parcelHelpers.export(exports, "FOCUS_AUTO", ()=>FOCUS_AUTO);
parcelHelpers.export(exports, "FOCUS_NO_AUTOFOCUS", ()=>FOCUS_NO_AUTOFOCUS);
var FOCUS_GROUP = 'data-focus-lock';
var FOCUS_DISABLED = 'data-focus-lock-disabled';
var FOCUS_ALLOW = 'data-no-focus-lock';
var FOCUS_AUTO = 'data-autofocus-inside';
var FOCUS_NO_AUTOFOCUS = 'data-no-autofocus';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aWIcL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignRef", ()=>(0, _assignRef.assignRef));
// callback ref
parcelHelpers.export(exports, "useCallbackRef", ()=>(0, _useRef.useCallbackRef));
parcelHelpers.export(exports, "createCallbackRef", ()=>(0, _createRef.createCallbackRef));
// merge ref
parcelHelpers.export(exports, "mergeRefs", ()=>(0, _mergeRef.mergeRefs));
parcelHelpers.export(exports, "useMergeRefs", ()=>(0, _useMergeRef.useMergeRefs));
// transform ref
parcelHelpers.export(exports, "useTransformRef", ()=>(0, _useTransformRef.useTransformRef));
parcelHelpers.export(exports, "transformRef", ()=>(0, _transformRef.transformRef));
// refToCallback
parcelHelpers.export(exports, "refToCallback", ()=>(0, _refToCallback.refToCallback));
parcelHelpers.export(exports, "useRefToCallback", ()=>(0, _refToCallback.useRefToCallback));
var _assignRef = require("./assignRef");
var _useRef = require("./useRef");
var _createRef = require("./createRef");
var _mergeRef = require("./mergeRef");
var _useMergeRef = require("./useMergeRef");
var _useTransformRef = require("./useTransformRef");
var _transformRef = require("./transformRef");
var _refToCallback = require("./refToCallback");

},{"./assignRef":false,"./useRef":false,"./createRef":false,"./mergeRef":false,"./useMergeRef":"asiBb","./useTransformRef":false,"./transformRef":false,"./refToCallback":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8SxUu":[function(require,module,exports,__globalThis) {
/**
 * Assigns a value for a given ref, no matter of the ref format
 * @param {RefObject} ref - a callback function or ref object
 * @param value - a new value
 *
 * @see https://github.com/theKashey/use-callback-ref#assignref
 * @example
 * const refObject = useRef();
 * const refFn = (ref) => {....}
 *
 * assignRef(refObject, "refValue");
 * assignRef(refFn, "refValue");
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "assignRef", ()=>assignRef);
function assignRef(ref, value) {
    if (typeof ref === 'function') ref(value);
    else if (ref) ref.current = value;
    return ref;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i7LVT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * creates a MutableRef with ref change callback
 * @param initialValue - initial ref value
 * @param {Function} callback - a callback to run when value changes
 *
 * @example
 * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);
 * ref.current = 1;
 * // prints 0 -> 1
 *
 * @see https://reactjs.org/docs/hooks-reference.html#useref
 * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref
 * @returns {MutableRefObject}
 */ parcelHelpers.export(exports, "useCallbackRef", ()=>useCallbackRef);
var _react = require("react");
function useCallbackRef(initialValue, callback) {
    var ref = (0, _react.useState)(function() {
        return {
            // value
            value: initialValue,
            // last callback
            callback: callback,
            // "memoized" public interface
            facade: {
                get current () {
                    return ref.value;
                },
                set current (value){
                    var last = ref.value;
                    if (last !== value) {
                        ref.value = value;
                        ref.callback(value, last);
                    }
                }
            }
        };
    })[0];
    // update callback
    ref.callback = callback;
    return ref.facade;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"asiBb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Merges two or more refs together providing a single interface to set their value
 * @param {RefObject|Ref} refs
 * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}
 *
 * @see {@link mergeRefs} a version without buit-in memoization
 * @see https://github.com/theKashey/use-callback-ref#usemergerefs
 * @example
 * const Component = React.forwardRef((props, ref) => {
 *   const ownRef = useRef();
 *   const domRef = useMergeRefs([ref, ownRef]); // 👈 merge together
 *   return <div ref={domRef}>...</div>
 * }
 */ parcelHelpers.export(exports, "useMergeRefs", ()=>useMergeRefs);
var _react = require("react");
var _assignRef = require("./assignRef");
var _useRef = require("./useRef");
var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? _react.useLayoutEffect : _react.useEffect;
var currentValues = new WeakMap();
function useMergeRefs(refs, defaultValue) {
    var callbackRef = (0, _useRef.useCallbackRef)(defaultValue || null, function(newValue) {
        return refs.forEach(function(ref) {
            return (0, _assignRef.assignRef)(ref, newValue);
        });
    });
    // handle refs changes - added or removed
    useIsomorphicLayoutEffect(function() {
        var oldValue = currentValues.get(callbackRef);
        if (oldValue) {
            var prevRefs_1 = new Set(oldValue);
            var nextRefs_1 = new Set(refs);
            var current_1 = callbackRef.current;
            prevRefs_1.forEach(function(ref) {
                if (!nextRefs_1.has(ref)) (0, _assignRef.assignRef)(ref, null);
            });
            nextRefs_1.forEach(function(ref) {
                if (!prevRefs_1.has(ref)) (0, _assignRef.assignRef)(ref, current_1);
            });
        }
        currentValues.set(callbackRef, refs);
    }, [
        refs
    ]);
    return callbackRef;
}

},{"react":"jMk1U","./assignRef":"8SxUu","./useRef":"i7LVT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2bUZ5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hiddenGuard", ()=>hiddenGuard);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var hiddenGuard = {
    width: '1px',
    height: '0px',
    padding: 0,
    overflow: 'hidden',
    position: 'fixed',
    top: '1px',
    left: '1px'
};
var InFocusGuard = function InFocusGuard(_ref) {
    var _ref$children = _ref.children, children = _ref$children === void 0 ? null : _ref$children;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _react.Fragment), null, /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        key: "guard-first",
        "data-focus-guard": true,
        "data-focus-auto-guard": true,
        style: hiddenGuard
    }), children, children && /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        key: "guard-last",
        "data-focus-guard": true,
        "data-focus-auto-guard": true,
        style: hiddenGuard
    }));
};
InFocusGuard.propTypes = {
    children: (0, _propTypesDefault.default).node
};
exports.default = InFocusGuard;

},{"react":"jMk1U","prop-types":"GNqOQ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"PUfQ7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mediumFocus", ()=>mediumFocus);
parcelHelpers.export(exports, "mediumBlur", ()=>mediumBlur);
parcelHelpers.export(exports, "mediumEffect", ()=>mediumEffect);
parcelHelpers.export(exports, "mediumSidecar", ()=>mediumSidecar);
var _useSidecar = require("use-sidecar");
var mediumFocus = (0, _useSidecar.createMedium)({}, function(_ref) {
    var target = _ref.target, currentTarget = _ref.currentTarget;
    return {
        target: target,
        currentTarget: currentTarget
    };
});
var mediumBlur = (0, _useSidecar.createMedium)();
var mediumEffect = (0, _useSidecar.createMedium)();
var mediumSidecar = (0, _useSidecar.createSidecarMedium)({
    async: true,
    ssr: typeof document !== 'undefined'
});

},{"use-sidecar":"9DKys","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9DKys":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sidecar", ()=>(0, _hoc.sidecar));
parcelHelpers.export(exports, "useSidecar", ()=>(0, _hook.useSidecar));
parcelHelpers.export(exports, "setConfig", ()=>(0, _config.setConfig));
parcelHelpers.export(exports, "createMedium", ()=>(0, _medium.createMedium));
parcelHelpers.export(exports, "createSidecarMedium", ()=>(0, _medium.createSidecarMedium));
parcelHelpers.export(exports, "renderCar", ()=>(0, _renderProp.renderCar));
parcelHelpers.export(exports, "exportSidecar", ()=>(0, _exports.exportSidecar));
var _hoc = require("./hoc");
var _hook = require("./hook");
var _config = require("./config");
var _medium = require("./medium");
var _renderProp = require("./renderProp");
var _exports = require("./exports");

},{"./hoc":false,"./hook":false,"./config":false,"./medium":"fJZJz","./renderProp":false,"./exports":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fJZJz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMedium", ()=>createMedium);
// eslint-disable-next-line @typescript-eslint/ban-types
parcelHelpers.export(exports, "createSidecarMedium", ()=>createSidecarMedium);
var _tslib = require("tslib");
function ItoI(a) {
    return a;
}
function innerCreateMedium(defaults, middleware) {
    if (middleware === void 0) middleware = ItoI;
    var buffer = [];
    var assigned = false;
    var medium = {
        read: function() {
            if (assigned) throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');
            if (buffer.length) return buffer[buffer.length - 1];
            return defaults;
        },
        useMedium: function(data) {
            var item = middleware(data, assigned);
            buffer.push(item);
            return function() {
                buffer = buffer.filter(function(x) {
                    return x !== item;
                });
            };
        },
        assignSyncMedium: function(cb) {
            assigned = true;
            while(buffer.length){
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
            }
            buffer = {
                push: function(x) {
                    return cb(x);
                },
                filter: function() {
                    return buffer;
                }
            };
        },
        assignMedium: function(cb) {
            assigned = true;
            var pendingQueue = [];
            if (buffer.length) {
                var cbs = buffer;
                buffer = [];
                cbs.forEach(cb);
                pendingQueue = buffer;
            }
            var executeQueue = function() {
                var cbs = pendingQueue;
                pendingQueue = [];
                cbs.forEach(cb);
            };
            var cycle = function() {
                return Promise.resolve().then(executeQueue);
            };
            cycle();
            buffer = {
                push: function(x) {
                    pendingQueue.push(x);
                    cycle();
                },
                filter: function(filter) {
                    pendingQueue = pendingQueue.filter(filter);
                    return buffer;
                }
            };
        }
    };
    return medium;
}
function createMedium(defaults, middleware) {
    if (middleware === void 0) middleware = ItoI;
    return innerCreateMedium(defaults, middleware);
}
function createSidecarMedium(options) {
    if (options === void 0) options = {};
    var medium = innerCreateMedium(null);
    medium.options = (0, _tslib.__assign)({
        async: true,
        ssr: false
    }, options);
    return medium;
}

},{"tslib":"iC1Dx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iC1Dx":[function(require,module,exports,__globalThis) {
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol, Iterator */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends);
parcelHelpers.export(exports, "__assign", ()=>__assign);
parcelHelpers.export(exports, "__rest", ()=>__rest);
parcelHelpers.export(exports, "__decorate", ()=>__decorate);
parcelHelpers.export(exports, "__param", ()=>__param);
parcelHelpers.export(exports, "__esDecorate", ()=>__esDecorate);
parcelHelpers.export(exports, "__runInitializers", ()=>__runInitializers);
parcelHelpers.export(exports, "__propKey", ()=>__propKey);
parcelHelpers.export(exports, "__setFunctionName", ()=>__setFunctionName);
parcelHelpers.export(exports, "__metadata", ()=>__metadata);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter);
parcelHelpers.export(exports, "__generator", ()=>__generator);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar);
parcelHelpers.export(exports, "__values", ()=>__values);
parcelHelpers.export(exports, "__read", ()=>__read);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray);
parcelHelpers.export(exports, "__await", ()=>__await);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject);
parcelHelpers.export(exports, "__importStar", ()=>__importStar);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet);
parcelHelpers.export(exports, "__classPrivateFieldIn", ()=>__classPrivateFieldIn);
parcelHelpers.export(exports, "__addDisposableResource", ()=>__addDisposableResource);
parcelHelpers.export(exports, "__disposeResources", ()=>__disposeResources);
parcelHelpers.export(exports, "__rewriteRelativeImportExtension", ()=>__rewriteRelativeImportExtension);
var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
        if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
        return f;
    }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for(var i = decorators.length - 1; i >= 0; i--){
        var context = {};
        for(var p in contextIn)context[p] = p === "access" ? {} : contextIn[p];
        for(var p in contextIn.access)context.access[p] = contextIn.access[p];
        context.addInitializer = function(f) {
            if (done) throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
        };
        var result = (0, decorators[i])(kind === "accessor" ? {
            get: descriptor.get,
            set: descriptor.set
        } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.unshift(_);
        } else if (_ = accept(result)) {
            if (kind === "field") initializers.unshift(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
}
function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for(var i = 0; i < initializers.length; i++)value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    return useValue ? value : void 0;
}
function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
}
function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
        configurable: true,
        value: prefix ? "".concat(prefix, " ", name) : name
    });
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function awaitReturn(f) {
        return function(v) {
            return Promise.resolve(v).then(f, reject);
        };
    }
    function verb(n, f) {
        if (g[n]) {
            i[n] = function(v) {
                return new Promise(function(a, b) {
                    q.push([
                        n,
                        v,
                        a,
                        b
                    ]) > 1 || resume(n, v);
                });
            };
            if (f) i[n] = f(i[n]);
        }
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: false
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
var ownKeys = function(o) {
    ownKeys = Object.getOwnPropertyNames || function(o) {
        var ar = [];
        for(var k in o)if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
        return ar;
    };
    return ownKeys(o);
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k = ownKeys(mod), i = 0; i < k.length; i++)if (k[i] !== "default") __createBinding(result, mod, k[i]);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
        if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
        var dispose, inner;
        if (async) {
            if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
        }
        if (dispose === void 0) {
            if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
            if (async) inner = dispose;
        }
        if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
        if (inner) dispose = function() {
            try {
                inner.call(this);
            } catch (e) {
                return Promise.reject(e);
            }
        };
        env.stack.push({
            value: value,
            dispose: dispose,
            async: async
        });
    } else if (async) env.stack.push({
        async: true
    });
    return value;
}
var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};
function __disposeResources(env) {
    function fail(e) {
        env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
        env.hasError = true;
    }
    var r, s = 0;
    function next() {
        while(r = env.stack.pop())try {
            if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);
            if (r.dispose) {
                var result = r.dispose.call(r.value);
                if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) {
                    fail(e);
                    return next();
                });
            } else s |= 1;
        } catch (e) {
            fail(e);
        }
        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();
        if (env.hasError) throw env.error;
    }
    return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
    if (typeof path === "string" && /^\.\.?\//.test(path)) return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m, tsx, d, ext, cm) {
        return tsx ? preserveJsx ? ".jsx" : ".js" : d && (!ext || !cm) ? m : d + ext + "." + cm.toLowerCase() + "js";
    });
    return path;
}
exports.default = {
    __extends: __extends,
    __assign: __assign,
    __rest: __rest,
    __decorate: __decorate,
    __param: __param,
    __esDecorate: __esDecorate,
    __runInitializers: __runInitializers,
    __propKey: __propKey,
    __setFunctionName: __setFunctionName,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __spreadArray: __spreadArray,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __addDisposableResource: __addDisposableResource,
    __disposeResources: __disposeResources,
    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3Inge":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "focusScope", ()=>focusScope);
var _react = require("react");
var focusScope = /*#__PURE__*/ (0, _react.createContext)(undefined);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cKTY4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _reactClientsideEffect = require("react-clientside-effect");
var _reactClientsideEffectDefault = parcelHelpers.interopDefault(_reactClientsideEffect);
var _focusLock = require("focus-lock");
var _util = require("./util");
var _medium = require("./medium");
var focusOnBody = function focusOnBody() {
    return document && document.activeElement === document.body;
};
var isFreeFocus = function isFreeFocus() {
    return focusOnBody() || (0, _focusLock.focusIsHidden)();
};
var lastActiveTrap = null;
var lastActiveFocus = null;
var tryRestoreFocus = function tryRestoreFocus() {
    return null;
};
var lastPortaledElement = null;
var focusWasOutsideWindow = false;
var windowFocused = false;
var defaultWhitelist = function defaultWhitelist() {
    return true;
};
var focusWhitelisted = function focusWhitelisted(activeElement) {
    return (lastActiveTrap.whiteList || defaultWhitelist)(activeElement);
};
var recordPortal = function recordPortal(observerNode, portaledElement) {
    lastPortaledElement = {
        observerNode: observerNode,
        portaledElement: portaledElement
    };
};
var focusIsPortaledPair = function focusIsPortaledPair(element) {
    return lastPortaledElement && lastPortaledElement.portaledElement === element;
};
function autoGuard(startIndex, end, step, allNodes) {
    var lastGuard = null;
    var i = startIndex;
    do {
        var item = allNodes[i];
        if (item.guard) {
            if (item.node.dataset.focusAutoGuard) lastGuard = item;
        } else if (item.lockItem) {
            if (i !== startIndex) return;
            lastGuard = null;
        } else break;
    }while ((i += step) !== end);
    if (lastGuard) lastGuard.node.tabIndex = 0;
}
var focusWasOutside = function focusWasOutside(crossFrameOption) {
    if (crossFrameOption) return Boolean(focusWasOutsideWindow);
    return focusWasOutsideWindow === 'meanwhile';
};
var checkInHost = function checkInHost(check, el, boundary) {
    return el && (el.host === check && (!el.activeElement || boundary.contains(el.activeElement)) || el.parentNode && checkInHost(check, el.parentNode, boundary));
};
var withinHost = function withinHost(activeElement, workingArea) {
    return workingArea.some(function(area) {
        return checkInHost(activeElement, area, area);
    });
};
var getNodeFocusables = function getNodeFocusables(nodes) {
    return (0, _focusLock.getFocusableNodes)(nodes, new Map());
};
var isNotFocusable = function isNotFocusable(node) {
    return !getNodeFocusables([
        node.parentNode
    ]).some(function(el) {
        return el.node === node;
    });
};
var activateTrap = function activateTrap() {
    var result = false;
    if (lastActiveTrap) {
        var _lastActiveTrap = lastActiveTrap, observed = _lastActiveTrap.observed, persistentFocus = _lastActiveTrap.persistentFocus, autoFocus = _lastActiveTrap.autoFocus, shards = _lastActiveTrap.shards, crossFrame = _lastActiveTrap.crossFrame, focusOptions = _lastActiveTrap.focusOptions, noFocusGuards = _lastActiveTrap.noFocusGuards;
        var workingNode = observed || lastPortaledElement && lastPortaledElement.portaledElement;
        if (focusOnBody() && lastActiveFocus && lastActiveFocus !== document.body) {
            if (!document.body.contains(lastActiveFocus) || isNotFocusable(lastActiveFocus)) {
                var newTarget = tryRestoreFocus();
                if (newTarget) newTarget.focus();
            }
        }
        var activeElement = document && document.activeElement;
        if (workingNode) {
            var workingArea = [
                workingNode
            ].concat(shards.map((0, _util.extractRef)).filter(Boolean));
            var shouldForceRestoreFocus = function shouldForceRestoreFocus() {
                if (!focusWasOutside(crossFrame) || !noFocusGuards || !lastActiveFocus || windowFocused) return false;
                var nodes = getNodeFocusables(workingArea);
                var lastIndex = nodes.findIndex(function(_ref) {
                    var node = _ref.node;
                    return node === lastActiveFocus;
                });
                return lastIndex === 0 || lastIndex === nodes.length - 1;
            };
            if (!activeElement || focusWhitelisted(activeElement)) {
                if (persistentFocus || shouldForceRestoreFocus() || !isFreeFocus() || !lastActiveFocus && autoFocus) {
                    if (workingNode && !((0, _focusLock.focusInside)(workingArea) || activeElement && withinHost(activeElement, workingArea) || focusIsPortaledPair(activeElement, workingNode))) {
                        if (document && !lastActiveFocus && activeElement && !autoFocus) {
                            if (activeElement.blur) activeElement.blur();
                            document.body.focus();
                        } else {
                            result = (0, _focusLock.moveFocusInside)(workingArea, lastActiveFocus, {
                                focusOptions: focusOptions
                            });
                            lastPortaledElement = {};
                        }
                    }
                    lastActiveFocus = document && document.activeElement;
                    if (lastActiveFocus !== document.body) tryRestoreFocus = (0, _focusLock.captureFocusRestore)(lastActiveFocus);
                    focusWasOutsideWindow = false;
                }
            }
            if (document && activeElement !== document.activeElement && document.querySelector('[data-focus-auto-guard]')) {
                var newActiveElement = document && document.activeElement;
                var allNodes = (0, _focusLock.expandFocusableNodes)(workingArea);
                var focusedIndex = allNodes.map(function(_ref2) {
                    var node = _ref2.node;
                    return node;
                }).indexOf(newActiveElement);
                if (focusedIndex > -1) {
                    allNodes.filter(function(_ref3) {
                        var guard = _ref3.guard, node = _ref3.node;
                        return guard && node.dataset.focusAutoGuard;
                    }).forEach(function(_ref4) {
                        var node = _ref4.node;
                        return node.removeAttribute('tabIndex');
                    });
                    autoGuard(focusedIndex, allNodes.length, 1, allNodes);
                    autoGuard(focusedIndex, -1, -1, allNodes);
                }
            }
        }
    }
    return result;
};
var onTrap = function onTrap(event) {
    if (activateTrap() && event) {
        event.stopPropagation();
        event.preventDefault();
    }
};
var onBlur = function onBlur() {
    return (0, _util.deferAction)(activateTrap);
};
var onFocus = function onFocus(event) {
    var source = event.target;
    var currentNode = event.currentTarget;
    if (!currentNode.contains(source)) recordPortal(currentNode, source);
};
var FocusWatcher = function FocusWatcher() {
    return null;
};
var FocusTrap = function FocusTrap(_ref5) {
    var children = _ref5.children;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        onBlur: onBlur,
        onFocus: onFocus
    }, children);
};
FocusTrap.propTypes = {
    children: (0, _propTypesDefault.default).node.isRequired
};
var onWindowFocus = function onWindowFocus() {
    windowFocused = true;
};
var onWindowBlur = function onWindowBlur() {
    windowFocused = false;
    focusWasOutsideWindow = 'just';
    (0, _util.deferAction)(function() {
        focusWasOutsideWindow = 'meanwhile';
    });
};
var attachHandler = function attachHandler() {
    document.addEventListener('focusin', onTrap);
    document.addEventListener('focusout', onBlur);
    window.addEventListener('focus', onWindowFocus);
    window.addEventListener('blur', onWindowBlur);
};
var detachHandler = function detachHandler() {
    document.removeEventListener('focusin', onTrap);
    document.removeEventListener('focusout', onBlur);
    window.removeEventListener('focus', onWindowFocus);
    window.removeEventListener('blur', onWindowBlur);
};
function reducePropsToState(propsList) {
    return propsList.filter(function(_ref6) {
        var disabled = _ref6.disabled;
        return !disabled;
    });
}
var focusLockAPI = {
    moveFocusInside: (0, _focusLock.moveFocusInside),
    focusInside: (0, _focusLock.focusInside),
    focusNextElement: (0, _focusLock.focusNextElement),
    focusPrevElement: (0, _focusLock.focusPrevElement),
    focusFirstElement: (0, _focusLock.focusFirstElement),
    focusLastElement: (0, _focusLock.focusLastElement),
    captureFocusRestore: (0, _focusLock.captureFocusRestore)
};
function handleStateChangeOnClient(traps) {
    var trap = traps.slice(-1)[0];
    if (trap && !lastActiveTrap) attachHandler();
    var lastTrap = lastActiveTrap;
    var sameTrap = lastTrap && trap && trap.id === lastTrap.id;
    lastActiveTrap = trap;
    if (lastTrap && !sameTrap) {
        lastTrap.onDeactivation();
        if (!traps.filter(function(_ref7) {
            var id = _ref7.id;
            return id === lastTrap.id;
        }).length) lastTrap.returnFocus(!trap);
    }
    if (trap) {
        lastActiveFocus = null;
        if (!sameTrap || lastTrap.observed !== trap.observed) trap.onActivation(focusLockAPI);
        activateTrap(true);
        (0, _util.deferAction)(activateTrap);
    } else {
        detachHandler();
        lastActiveFocus = null;
    }
}
(0, _medium.mediumFocus).assignSyncMedium(onFocus);
(0, _medium.mediumBlur).assignMedium(onBlur);
(0, _medium.mediumEffect).assignMedium(function(cb) {
    return cb(focusLockAPI);
});
exports.default = (0, _reactClientsideEffectDefault.default)(reducePropsToState, handleStateChangeOnClient)(FocusWatcher);

},{"react":"jMk1U","prop-types":"GNqOQ","react-clientside-effect":"f3zbB","focus-lock":"fZr8o","./util":"9df2e","./medium":"PUfQ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f3zbB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _defineProperty = require("@babel/runtime/helpers/esm/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function withSideEffect(reducePropsToState, handleStateChangeOnClient) {
    if (typeof reducePropsToState !== 'function') throw new Error('Expected reducePropsToState to be a function.');
    if (typeof handleStateChangeOnClient !== 'function') throw new Error('Expected handleStateChangeOnClient to be a function.');
    function getDisplayName(WrappedComponent) {
        return WrappedComponent.displayName || WrappedComponent.name || 'Component';
    }
    return function wrap(WrappedComponent) {
        if (typeof WrappedComponent !== 'function') throw new Error('Expected WrappedComponent to be a React component.');
        var mountedInstances = [];
        var state;
        function emitChange() {
            state = reducePropsToState(mountedInstances.map(function(instance) {
                return instance.props;
            }));
            handleStateChangeOnClient(state);
        }
        var SideEffect = /*#__PURE__*/ function(_PureComponent) {
            (0, _inheritsLooseDefault.default)(SideEffect, _PureComponent);
            function SideEffect() {
                return _PureComponent.apply(this, arguments) || this;
            }
            // Try to use displayName of wrapped component
            SideEffect.peek = function peek() {
                return state;
            };
            var _proto = SideEffect.prototype;
            _proto.componentDidMount = function componentDidMount() {
                mountedInstances.push(this);
                emitChange();
            };
            _proto.componentDidUpdate = function componentDidUpdate() {
                emitChange();
            };
            _proto.componentWillUnmount = function componentWillUnmount() {
                var index = mountedInstances.indexOf(this);
                mountedInstances.splice(index, 1);
                emitChange();
            };
            _proto.render = function render() {
                return /*#__PURE__*/ (0, _reactDefault.default).createElement(WrappedComponent, this.props);
            };
            return SideEffect;
        }((0, _react.PureComponent));
        (0, _definePropertyDefault.default)(SideEffect, "displayName", "SideEffect(" + getDisplayName(WrappedComponent) + ")");
        return SideEffect;
    };
}
exports.default = withSideEffect;

},{"@babel/runtime/helpers/esm/inheritsLoose":"jDIko","@babel/runtime/helpers/esm/defineProperty":"9ZxLF","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jDIko":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_inheritsLoose);
var _setPrototypeOfJs = require("./setPrototypeOf.js");
var _setPrototypeOfJsDefault = parcelHelpers.interopDefault(_setPrototypeOfJs);
function _inheritsLoose(t, o) {
    t.prototype = Object.create(o.prototype), t.prototype.constructor = t, (0, _setPrototypeOfJsDefault.default)(t, o);
}

},{"./setPrototypeOf.js":"5Brd2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Brd2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_setPrototypeOf);
function _setPrototypeOf(t, e) {
    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
        return t.__proto__ = e, t;
    }, _setPrototypeOf(t, e);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9ZxLF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_defineProperty);
var _toPropertyKeyJs = require("./toPropertyKey.js");
var _toPropertyKeyJsDefault = parcelHelpers.interopDefault(_toPropertyKeyJs);
function _defineProperty(e, r, t) {
    return (r = (0, _toPropertyKeyJsDefault.default)(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}

},{"./toPropertyKey.js":"j5oMs","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j5oMs":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>toPropertyKey);
var _typeofJs = require("./typeof.js");
var _typeofJsDefault = parcelHelpers.interopDefault(_typeofJs);
var _toPrimitiveJs = require("./toPrimitive.js");
var _toPrimitiveJsDefault = parcelHelpers.interopDefault(_toPrimitiveJs);
function toPropertyKey(t) {
    var i = (0, _toPrimitiveJsDefault.default)(t, "string");
    return "symbol" == (0, _typeofJsDefault.default)(i) ? i : i + "";
}

},{"./typeof.js":"8tKcH","./toPrimitive.js":"12HW2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8tKcH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>_typeof);
function _typeof(o) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
        return typeof o;
    } : function(o) {
        return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"12HW2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>toPrimitive);
var _typeofJs = require("./typeof.js");
var _typeofJsDefault = parcelHelpers.interopDefault(_typeofJs);
function toPrimitive(t, r) {
    if ("object" != (0, _typeofJsDefault.default)(t) || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != (0, _typeofJsDefault.default)(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}

},{"./typeof.js":"8tKcH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZr8o":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "constants", ()=>constants);
parcelHelpers.export(exports, "focusInside", ()=>//
    (0, _focusInside.focusInside));
parcelHelpers.export(exports, "focusIsHidden", ()=>(0, _focusIsHidden.focusIsHidden));
parcelHelpers.export(exports, "moveFocusInside", ()=>//
    (0, _moveFocusInside.moveFocusInside));
parcelHelpers.export(exports, "focusSolver", ()=>(0, _focusSolver.focusSolver));
parcelHelpers.export(exports, "expandFocusableNodes", ()=>//
    (0, _focusables.expandFocusableNodes));
parcelHelpers.export(exports, "getFocusableNodes", ()=>(0, _domutils.getFocusableNodes));
parcelHelpers.export(exports, "getTabbableNodes", ()=>(0, _domutils.getTabbableNodes));
parcelHelpers.export(exports, "focusNextElement", ()=>//
    (0, _sibling.focusNextElement));
parcelHelpers.export(exports, "focusPrevElement", ()=>(0, _sibling.focusPrevElement));
parcelHelpers.export(exports, "focusFirstElement", ()=>(0, _sibling.focusFirstElement));
parcelHelpers.export(exports, "focusLastElement", ()=>(0, _sibling.focusLastElement));
parcelHelpers.export(exports, "getRelativeFocusable", ()=>(0, _sibling.getRelativeFocusable));
parcelHelpers.export(exports, "captureFocusRestore", ()=>//
    (0, _returnFocus.captureFocusRestore));
var _constants = require("./constants");
var _focusInside = require("./focusInside");
var _focusIsHidden = require("./focusIsHidden");
var _focusSolver = require("./focusSolver");
var _focusables = require("./focusables");
var _moveFocusInside = require("./moveFocusInside");
var _returnFocus = require("./return-focus");
var _sibling = require("./sibling");
var _domutils = require("./utils/DOMutils");
/**
 * magic symbols to control focus behavior from DOM
 * see description of every particular one
 */ var constants = _constants;
/**
 * @deprecated - please use {@link moveFocusInside} named export
 */ var deprecated_default_moveFocusInside = (0, _moveFocusInside.moveFocusInside);
exports.default = deprecated_default_moveFocusInside; //

},{"./constants":"frnmY","./focusInside":"hwMfS","./focusIsHidden":"i1wf4","./focusSolver":false,"./focusables":"em8CO","./moveFocusInside":"jjKXx","./return-focus":"6hw1A","./sibling":"cucvA","./utils/DOMutils":"bjsGC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hwMfS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "focusInside", ()=>focusInside);
var _domutils = require("./utils/DOMutils");
var _allAffected = require("./utils/all-affected");
var _array = require("./utils/array");
var _getActiveElement = require("./utils/getActiveElement");
var focusInFrame = function(frame, activeElement) {
    return frame === activeElement;
};
var focusInsideIframe = function(topNode, activeElement) {
    return Boolean((0, _array.toArray)(topNode.querySelectorAll('iframe')).some(function(node) {
        return focusInFrame(node, activeElement);
    }));
};
var focusInside = function(topNode, activeElement) {
    // const activeElement = document && getActiveElement();
    if (activeElement === void 0) activeElement = (0, _getActiveElement.getActiveElement)((0, _array.getFirst)(topNode).ownerDocument);
    if (!activeElement || activeElement.dataset && activeElement.dataset.focusGuard) return false;
    return (0, _allAffected.getAllAffectedNodes)(topNode).some(function(node) {
        return (0, _domutils.contains)(node, activeElement) || focusInsideIframe(node, activeElement);
    });
};

},{"./utils/DOMutils":"bjsGC","./utils/all-affected":"aMNVU","./utils/array":"e55F4","./utils/getActiveElement":"bS8nm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bjsGC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "filterFocusable", ()=>filterFocusable);
parcelHelpers.export(exports, "filterAutoFocusable", ()=>filterAutoFocusable);
parcelHelpers.export(exports, "getTabbableNodes", ()=>getTabbableNodes);
parcelHelpers.export(exports, "getFocusableNodes", ()=>getFocusableNodes);
parcelHelpers.export(exports, "parentAutofocusables", ()=>parentAutofocusables);
parcelHelpers.export(exports, "contains", ()=>contains);
var _array = require("./array");
var _is = require("./is");
var _tabOrder = require("./tabOrder");
var _tabUtils = require("./tabUtils");
var filterFocusable = function(nodes, visibilityCache) {
    return (0, _array.toArray)(nodes).filter(function(node) {
        return (0, _is.isVisibleCached)(visibilityCache, node);
    }).filter(function(node) {
        return (0, _is.notHiddenInput)(node);
    });
};
var filterAutoFocusable = function(nodes, cache) {
    if (cache === void 0) cache = new Map();
    return (0, _array.toArray)(nodes).filter(function(node) {
        return (0, _is.isAutoFocusAllowedCached)(cache, node);
    });
};
var getTabbableNodes = function(topNodes, visibilityCache, withGuards) {
    return (0, _tabOrder.orderByTabIndex)(filterFocusable((0, _tabUtils.getFocusables)(topNodes, withGuards), visibilityCache), true, withGuards);
};
var getFocusableNodes = function(topNodes, visibilityCache) {
    return (0, _tabOrder.orderByTabIndex)(filterFocusable((0, _tabUtils.getFocusables)(topNodes), visibilityCache), false);
};
var parentAutofocusables = function(topNode, visibilityCache) {
    return filterFocusable((0, _tabUtils.getParentAutofocusables)(topNode), visibilityCache);
};
var contains = function(scope, element) {
    if (scope.shadowRoot) return contains(scope.shadowRoot, element);
    else {
        if (Object.getPrototypeOf(scope).contains !== undefined && Object.getPrototypeOf(scope).contains.call(scope, element)) return true;
        return (0, _array.toArray)(scope.children).some(function(child) {
            var _a;
            if (child instanceof HTMLIFrameElement) {
                var iframeBody = (_a = child.contentDocument) === null || _a === void 0 ? void 0 : _a.body;
                if (iframeBody) return contains(iframeBody, element);
                return false;
            }
            return contains(child, element);
        });
    }
};

},{"./array":"e55F4","./is":"pjvel","./tabOrder":"fuX8Z","./tabUtils":"7pxgV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e55F4":[function(require,module,exports,__globalThis) {
/*
IE11 support
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toArray", ()=>toArray);
parcelHelpers.export(exports, "asArray", ()=>asArray);
parcelHelpers.export(exports, "getFirst", ()=>getFirst);
var toArray = function(a) {
    var ret = Array(a.length);
    for(var i = 0; i < a.length; ++i)ret[i] = a[i];
    return ret;
};
var asArray = function(a) {
    return Array.isArray(a) ? a : [
        a
    ];
};
var getFirst = function(a) {
    return Array.isArray(a) ? a[0] : a;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"pjvel":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isVisibleCached", ()=>isVisibleCached);
parcelHelpers.export(exports, "isAutoFocusAllowedCached", ()=>isAutoFocusAllowedCached);
parcelHelpers.export(exports, "getDataset", ()=>getDataset);
parcelHelpers.export(exports, "isHTMLButtonElement", ()=>isHTMLButtonElement);
parcelHelpers.export(exports, "isHTMLInputElement", ()=>isHTMLInputElement);
parcelHelpers.export(exports, "isRadioElement", ()=>isRadioElement);
parcelHelpers.export(exports, "notHiddenInput", ()=>notHiddenInput);
parcelHelpers.export(exports, "isAutoFocusAllowed", ()=>isAutoFocusAllowed);
parcelHelpers.export(exports, "isGuard", ()=>isGuard);
parcelHelpers.export(exports, "isNotAGuard", ()=>isNotAGuard);
parcelHelpers.export(exports, "isDefined", ()=>isDefined);
var _constants = require("../constants");
var isElementHidden = function(node) {
    // we can measure only "elements"
    // consider others as "visible"
    if (node.nodeType !== Node.ELEMENT_NODE) return false;
    var computedStyle = window.getComputedStyle(node, null);
    if (!computedStyle || !computedStyle.getPropertyValue) return false;
    return computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden';
};
var getParentNode = function(node) {
    // DOCUMENT_FRAGMENT_NODE can also point on ShadowRoot. In this case .host will point on the next node
    return node.parentNode && node.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node.parentNode.host : node.parentNode;
};
var isTopNode = function(node) {
    // @ts-ignore
    return node === document || node && node.nodeType === Node.DOCUMENT_NODE;
};
var isInert = function(node) {
    return node.hasAttribute('inert');
};
/**
 * @see https://github.com/testing-library/jest-dom/blob/main/src/to-be-visible.js
 */ var isVisibleUncached = function(node, checkParent) {
    return !node || isTopNode(node) || !isElementHidden(node) && !isInert(node) && checkParent(getParentNode(node));
};
var isVisibleCached = function(visibilityCache, node) {
    var cached = visibilityCache.get(node);
    if (cached !== undefined) return cached;
    var result = isVisibleUncached(node, isVisibleCached.bind(undefined, visibilityCache));
    visibilityCache.set(node, result);
    return result;
};
var isAutoFocusAllowedUncached = function(node, checkParent) {
    return node && !isTopNode(node) ? isAutoFocusAllowed(node) ? checkParent(getParentNode(node)) : false : true;
};
var isAutoFocusAllowedCached = function(cache, node) {
    var cached = cache.get(node);
    if (cached !== undefined) return cached;
    var result = isAutoFocusAllowedUncached(node, isAutoFocusAllowedCached.bind(undefined, cache));
    cache.set(node, result);
    return result;
};
var getDataset = function(node) {
    // @ts-ignore
    return node.dataset;
};
var isHTMLButtonElement = function(node) {
    return node.tagName === 'BUTTON';
};
var isHTMLInputElement = function(node) {
    return node.tagName === 'INPUT';
};
var isRadioElement = function(node) {
    return isHTMLInputElement(node) && node.type === 'radio';
};
var notHiddenInput = function(node) {
    return !((isHTMLInputElement(node) || isHTMLButtonElement(node)) && (node.type === 'hidden' || node.disabled));
};
var isAutoFocusAllowed = function(node) {
    var attribute = node.getAttribute((0, _constants.FOCUS_NO_AUTOFOCUS));
    return ![
        true,
        'true',
        ''
    ].includes(attribute);
};
var isGuard = function(node) {
    var _a;
    return Boolean(node && ((_a = getDataset(node)) === null || _a === void 0 ? void 0 : _a.focusGuard));
};
var isNotAGuard = function(node) {
    return !isGuard(node);
};
var isDefined = function(x) {
    return Boolean(x);
};

},{"../constants":"frnmY","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fuX8Z":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabSort", ()=>tabSort);
parcelHelpers.export(exports, "orderByTabIndex", ()=>orderByTabIndex);
var _array = require("./array");
var tabSort = function(a, b) {
    var aTab = Math.max(0, a.tabIndex);
    var bTab = Math.max(0, b.tabIndex);
    var tabDiff = aTab - bTab;
    var indexDiff = a.index - b.index;
    if (tabDiff) {
        if (!aTab) return 1;
        if (!bTab) return -1;
    }
    return tabDiff || indexDiff;
};
var getTabIndex = function(node) {
    if (node.tabIndex < 0) {
        // all "focusable" elements are already preselected
        // but some might have implicit negative tabIndex
        // return 0 for <audio without tabIndex attribute - it is "tabbable"
        if (!node.hasAttribute('tabindex')) return 0;
    }
    return node.tabIndex;
};
var orderByTabIndex = function(nodes, filterNegative, keepGuards) {
    return (0, _array.toArray)(nodes).map(function(node, index) {
        var tabIndex = getTabIndex(node);
        return {
            node: node,
            index: index,
            tabIndex: keepGuards && tabIndex === -1 ? (node.dataset || {}).focusGuard ? 0 : -1 : tabIndex
        };
    }).filter(function(data) {
        return !filterNegative || data.tabIndex >= 0;
    }).sort(tabSort);
};

},{"./array":"e55F4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7pxgV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFocusables", ()=>getFocusables);
parcelHelpers.export(exports, "getParentAutofocusables", ()=>getParentAutofocusables);
var _constants = require("../constants");
var _array = require("./array");
var _tabbables = require("./tabbables");
var queryTabbables = (0, _tabbables.tabbables).join(',');
var queryGuardTabbables = "".concat(queryTabbables, ", [data-focus-guard]");
var getFocusablesWithShadowDom = function(parent, withGuards) {
    return (0, _array.toArray)((parent.shadowRoot || parent).children).reduce(function(acc, child) {
        return acc.concat(child.matches(withGuards ? queryGuardTabbables : queryTabbables) ? [
            child
        ] : [], getFocusablesWithShadowDom(child));
    }, []);
};
var getFocusablesWithIFrame = function(parent, withGuards) {
    var _a;
    // contentDocument of iframe will be null if current origin cannot access it
    if (parent instanceof HTMLIFrameElement && ((_a = parent.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) return getFocusables([
        parent.contentDocument.body
    ], withGuards);
    return [
        parent
    ];
};
var getFocusables = function(parents, withGuards) {
    return parents.reduce(function(acc, parent) {
        var _a;
        var focusableWithShadowDom = getFocusablesWithShadowDom(parent, withGuards);
        var focusableWithIframes = (_a = []).concat.apply(_a, focusableWithShadowDom.map(function(node) {
            return getFocusablesWithIFrame(node, withGuards);
        }));
        return acc.concat(// add all tabbables inside and within shadow DOMs in DOM order
        focusableWithIframes, // add if node is tabbable itself
        parent.parentNode ? (0, _array.toArray)(parent.parentNode.querySelectorAll(queryTabbables)).filter(function(node) {
            return node === parent;
        }) : []);
    }, []);
};
var getParentAutofocusables = function(parent) {
    var parentFocus = parent.querySelectorAll("[".concat((0, _constants.FOCUS_AUTO), "]"));
    return (0, _array.toArray)(parentFocus).map(function(node) {
        return getFocusables([
            node
        ]);
    }).reduce(function(acc, nodes) {
        return acc.concat(nodes);
    }, []);
};

},{"../constants":"frnmY","./array":"e55F4","./tabbables":"d64Uv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d64Uv":[function(require,module,exports,__globalThis) {
/**
 * list of the object to be considered as focusable
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tabbables", ()=>tabbables);
var tabbables = [
    'button:enabled',
    'select:enabled',
    'textarea:enabled',
    'input:enabled',
    // elements with explicit roles will also use explicit tabindex
    // '[role="button"]',
    'a[href]',
    'area[href]',
    'summary',
    'iframe',
    'object',
    'embed',
    'audio[controls]',
    'video[controls]',
    '[tabindex]',
    '[contenteditable]',
    '[autofocus]'
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aMNVU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getAllAffectedNodes", ()=>getAllAffectedNodes);
var _constants = require("../constants");
var _array = require("./array");
/**
 * in case of multiple nodes nested inside each other
 * keeps only top ones
 * this is O(nlogn)
 * @param nodes
 * @returns {*}
 */ var filterNested = function(nodes) {
    var contained = new Set();
    var l = nodes.length;
    for(var i = 0; i < l; i += 1)for(var j = i + 1; j < l; j += 1){
        var position = nodes[i].compareDocumentPosition(nodes[j]);
        /* eslint-disable no-bitwise */ if ((position & Node.DOCUMENT_POSITION_CONTAINED_BY) > 0) contained.add(j);
        if ((position & Node.DOCUMENT_POSITION_CONTAINS) > 0) contained.add(i);
    /* eslint-enable */ }
    return nodes.filter(function(_, index) {
        return !contained.has(index);
    });
};
/**
 * finds top most parent for a node
 * @param node
 * @returns {*}
 */ var getTopParent = function(node) {
    return node.parentNode ? getTopParent(node.parentNode) : node;
};
var getAllAffectedNodes = function(node) {
    var nodes = (0, _array.asArray)(node);
    return nodes.filter(Boolean).reduce(function(acc, currentNode) {
        var group = currentNode.getAttribute((0, _constants.FOCUS_GROUP));
        acc.push.apply(acc, group ? filterNested((0, _array.toArray)(getTopParent(currentNode).querySelectorAll("[".concat((0, _constants.FOCUS_GROUP), "=\"").concat(group, "\"]:not([").concat((0, _constants.FOCUS_DISABLED), "=\"disabled\"])")))) : [
            currentNode
        ]);
        return acc;
    }, []);
};

},{"../constants":"frnmY","./array":"e55F4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bS8nm":[function(require,module,exports,__globalThis) {
/**
 * returns active element from document or from nested shadowdoms
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getActiveElement", ()=>getActiveElement);
var _safe = require("./safe");
var getActiveElement = function(inDocument) {
    if (inDocument === void 0) inDocument = document;
    if (!inDocument || !inDocument.activeElement) return undefined;
    var activeElement = inDocument.activeElement;
    return activeElement.shadowRoot ? getActiveElement(activeElement.shadowRoot) : activeElement instanceof HTMLIFrameElement && (0, _safe.safeProbe)(function() {
        return activeElement.contentWindow.document;
    }) ? getActiveElement(activeElement.contentWindow.document) : activeElement;
};

},{"./safe":"4Ayh6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4Ayh6":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "safeProbe", ()=>safeProbe);
var safeProbe = function(cb) {
    try {
        return cb();
    } catch (e) {
        return undefined;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i1wf4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "focusIsHidden", ()=>focusIsHidden);
var _constants = require("./constants");
var _domutils = require("./utils/DOMutils");
var _array = require("./utils/array");
var _getActiveElement = require("./utils/getActiveElement");
var focusIsHidden = function(inDocument) {
    if (inDocument === void 0) inDocument = document;
    var activeElement = (0, _getActiveElement.getActiveElement)(inDocument);
    if (!activeElement) return false;
    // this does not support setting FOCUS_ALLOW within shadow dom
    return (0, _array.toArray)(inDocument.querySelectorAll("[".concat((0, _constants.FOCUS_ALLOW), "]"))).some(function(node) {
        return (0, _domutils.contains)(node, activeElement);
    });
};

},{"./constants":"frnmY","./utils/DOMutils":"bjsGC","./utils/array":"e55F4","./utils/getActiveElement":"bS8nm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bK42V":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "focusSolver", ()=>focusSolver);
var _solver = require("./solver");
var _domutils = require("./utils/DOMutils");
var _allAffected = require("./utils/all-affected");
var _array = require("./utils/array");
var _autoFocus = require("./utils/auto-focus");
var _getActiveElement = require("./utils/getActiveElement");
var _is = require("./utils/is");
var _parenting = require("./utils/parenting");
var reorderNodes = function(srcNodes, dstNodes) {
    var remap = new Map();
    // no Set(dstNodes) for IE11 :(
    dstNodes.forEach(function(entity) {
        return remap.set(entity.node, entity);
    });
    // remap to dstNodes
    return srcNodes.map(function(node) {
        return remap.get(node);
    }).filter((0, _is.isDefined));
};
var focusSolver = function(topNode, lastNode) {
    var activeElement = (0, _getActiveElement.getActiveElement)((0, _array.asArray)(topNode).length > 0 ? document : (0, _array.getFirst)(topNode).ownerDocument);
    var entries = (0, _allAffected.getAllAffectedNodes)(topNode).filter((0, _is.isNotAGuard));
    var commonParent = (0, _parenting.getTopCommonParent)(activeElement || topNode, topNode, entries);
    var visibilityCache = new Map();
    var anyFocusable = (0, _domutils.getFocusableNodes)(entries, visibilityCache);
    var innerElements = anyFocusable.filter(function(_a) {
        var node = _a.node;
        return (0, _is.isNotAGuard)(node);
    });
    if (!innerElements[0]) return undefined;
    var outerNodes = (0, _domutils.getFocusableNodes)([
        commonParent
    ], visibilityCache).map(function(_a) {
        var node = _a.node;
        return node;
    });
    var orderedInnerElements = reorderNodes(outerNodes, innerElements);
    // collect inner focusable and separately tabbables
    var innerFocusables = orderedInnerElements.map(function(_a) {
        var node = _a.node;
        return node;
    });
    var innerTabbable = orderedInnerElements.filter(function(_a) {
        var tabIndex = _a.tabIndex;
        return tabIndex >= 0;
    }).map(function(_a) {
        var node = _a.node;
        return node;
    });
    var newId = (0, _solver.newFocus)(innerFocusables, innerTabbable, outerNodes, activeElement, lastNode);
    if (newId === (0, _solver.NEW_FOCUS)) {
        var focusNode = // first try only tabbable, and the fallback to all focusable, as long as at least one element should be picked for focus
        (0, _autoFocus.pickAutofocus)(anyFocusable, innerTabbable, (0, _parenting.allParentAutofocusables)(entries, visibilityCache)) || (0, _autoFocus.pickAutofocus)(anyFocusable, innerFocusables, (0, _parenting.allParentAutofocusables)(entries, visibilityCache));
        if (focusNode) return {
            node: focusNode
        };
        else {
            console.warn('focus-lock: cannot find any node to move focus into');
            return undefined;
        }
    }
    if (newId === undefined) return newId;
    return orderedInnerElements[newId];
};

},{"./solver":"3te9N","./utils/DOMutils":"bjsGC","./utils/all-affected":"aMNVU","./utils/array":"e55F4","./utils/auto-focus":"C7zCK","./utils/getActiveElement":"bS8nm","./utils/is":"pjvel","./utils/parenting":"3zW7D","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3te9N":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NEW_FOCUS", ()=>NEW_FOCUS);
parcelHelpers.export(exports, "newFocus", ()=>newFocus);
var _correctFocus = require("./utils/correctFocus");
var _firstFocus = require("./utils/firstFocus");
var _is = require("./utils/is");
var NEW_FOCUS = 'NEW_FOCUS';
var newFocus = function(innerNodes, innerTabbables, outerNodes, activeElement, lastNode) {
    var cnt = innerNodes.length;
    var firstFocus = innerNodes[0];
    var lastFocus = innerNodes[cnt - 1];
    var isOnGuard = (0, _is.isGuard)(activeElement);
    // focus is inside
    if (activeElement && innerNodes.indexOf(activeElement) >= 0) return undefined;
    var activeIndex = activeElement !== undefined ? outerNodes.indexOf(activeElement) : -1;
    var lastIndex = lastNode ? outerNodes.indexOf(lastNode) : activeIndex;
    var lastNodeInside = lastNode ? innerNodes.indexOf(lastNode) : -1;
    // no active focus (or focus is on the body)
    if (activeIndex === -1) {
        // known fallback
        if (lastNodeInside !== -1) return lastNodeInside;
        return NEW_FOCUS;
    }
    // new focus, nothing to calculate
    if (lastNodeInside === -1) return NEW_FOCUS;
    var indexDiff = activeIndex - lastIndex;
    var firstNodeIndex = outerNodes.indexOf(firstFocus);
    var lastNodeIndex = outerNodes.indexOf(lastFocus);
    var correctedNodes = (0, _correctFocus.correctNodes)(outerNodes);
    var currentFocusableIndex = activeElement !== undefined ? correctedNodes.indexOf(activeElement) : -1;
    var previousFocusableIndex = lastNode ? correctedNodes.indexOf(lastNode) : currentFocusableIndex;
    var tabbableNodes = correctedNodes.filter(function(node) {
        return node.tabIndex >= 0;
    });
    var currentTabbableIndex = activeElement !== undefined ? tabbableNodes.indexOf(activeElement) : -1;
    var previousTabbableIndex = lastNode ? tabbableNodes.indexOf(lastNode) : currentTabbableIndex;
    var focusIndexDiff = currentTabbableIndex >= 0 && previousTabbableIndex >= 0 ? previousTabbableIndex - currentTabbableIndex : previousFocusableIndex - currentFocusableIndex;
    // old focus
    if (!indexDiff && lastNodeInside >= 0) return lastNodeInside;
    // no tabbable elements, autofocus is not possible
    if (innerTabbables.length === 0) // an edge case with no tabbable elements
    // return the last focusable one
    // with some probability this will prevent focus from cycling across the lock, but there is no tabbale elements to cycle to
    return lastNodeInside;
    var returnFirstNode = (0, _firstFocus.pickFocusable)(innerNodes, innerTabbables[0]);
    var returnLastNode = (0, _firstFocus.pickFocusable)(innerNodes, innerTabbables[innerTabbables.length - 1]);
    // first element
    if (activeIndex <= firstNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) return returnLastNode;
    // last element
    if (activeIndex >= lastNodeIndex && isOnGuard && Math.abs(indexDiff) > 1) return returnFirstNode;
    // jump out, but not on the guard
    if (indexDiff && Math.abs(focusIndexDiff) > 1) return lastNodeInside;
    // focus above lock
    if (activeIndex <= firstNodeIndex) return returnLastNode;
    // focus below lock
    if (activeIndex > lastNodeIndex) return returnFirstNode;
    // index is inside tab order, but outside Lock
    if (indexDiff) {
        if (Math.abs(indexDiff) > 1) return lastNodeInside;
        return (cnt + lastNodeInside + indexDiff) % cnt;
    }
    // do nothing
    return undefined;
};

},{"./utils/correctFocus":"2O6Nf","./utils/firstFocus":"bK38G","./utils/is":"pjvel","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2O6Nf":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "correctNode", ()=>correctNode);
parcelHelpers.export(exports, "correctNodes", ()=>correctNodes);
var _is = require("./is");
var findSelectedRadio = function(node, nodes) {
    return nodes.filter((0, _is.isRadioElement)).filter(function(el) {
        return el.name === node.name;
    }).filter(function(el) {
        return el.checked;
    })[0] || node;
};
var correctNode = function(node, nodes) {
    if ((0, _is.isRadioElement)(node) && node.name) return findSelectedRadio(node, nodes);
    return node;
};
var correctNodes = function(nodes) {
    // IE11 has no Set(array) constructor
    var resultSet = new Set();
    nodes.forEach(function(node) {
        return resultSet.add(correctNode(node, nodes));
    });
    // using filter to support IE11
    return nodes.filter(function(node) {
        return resultSet.has(node);
    });
};

},{"./is":"pjvel","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bK38G":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pickFirstFocus", ()=>pickFirstFocus);
parcelHelpers.export(exports, "pickFocusable", ()=>pickFocusable);
var _correctFocus = require("./correctFocus");
var pickFirstFocus = function(nodes) {
    if (nodes[0] && nodes.length > 1) return (0, _correctFocus.correctNode)(nodes[0], nodes);
    return nodes[0];
};
var pickFocusable = function(nodes, node) {
    return nodes.indexOf((0, _correctFocus.correctNode)(node, nodes));
};

},{"./correctFocus":"2O6Nf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"C7zCK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pickAutofocus", ()=>pickAutofocus);
var _domutils = require("./DOMutils");
var _firstFocus = require("./firstFocus");
var _is = require("./is");
var findAutoFocused = function(autoFocusables) {
    return function(node) {
        var _a;
        var autofocus = (_a = (0, _is.getDataset)(node)) === null || _a === void 0 ? void 0 : _a.autofocus;
        return(// @ts-expect-error
        node.autofocus || //
        autofocus !== undefined && autofocus !== 'false' || //
        autoFocusables.indexOf(node) >= 0);
    };
};
var pickAutofocus = function(nodesIndexes, orderedNodes, groups) {
    var nodes = nodesIndexes.map(function(_a) {
        var node = _a.node;
        return node;
    });
    var autoFocusable = (0, _domutils.filterAutoFocusable)(nodes.filter(findAutoFocused(groups)));
    if (autoFocusable && autoFocusable.length) return (0, _firstFocus.pickFirstFocus)(autoFocusable);
    return (0, _firstFocus.pickFirstFocus)((0, _domutils.filterAutoFocusable)(orderedNodes));
};

},{"./DOMutils":"bjsGC","./firstFocus":"bK38G","./is":"pjvel","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3zW7D":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCommonParent", ()=>getCommonParent);
parcelHelpers.export(exports, "getTopCommonParent", ()=>getTopCommonParent);
parcelHelpers.export(exports, "allParentAutofocusables", ()=>allParentAutofocusables);
var _domutils = require("./DOMutils");
var _array = require("./array");
var getParents = function(node, parents) {
    if (parents === void 0) parents = [];
    parents.push(node);
    if (node.parentNode) getParents(node.parentNode.host || node.parentNode, parents);
    return parents;
};
var getCommonParent = function(nodeA, nodeB) {
    var parentsA = getParents(nodeA);
    var parentsB = getParents(nodeB);
    // tslint:disable-next-line:prefer-for-of
    for(var i = 0; i < parentsA.length; i += 1){
        var currentParent = parentsA[i];
        if (parentsB.indexOf(currentParent) >= 0) return currentParent;
    }
    return false;
};
var getTopCommonParent = function(baseActiveElement, leftEntry, rightEntries) {
    var activeElements = (0, _array.asArray)(baseActiveElement);
    var leftEntries = (0, _array.asArray)(leftEntry);
    var activeElement = activeElements[0];
    var topCommon = false;
    leftEntries.filter(Boolean).forEach(function(entry) {
        topCommon = getCommonParent(topCommon || entry, entry) || topCommon;
        rightEntries.filter(Boolean).forEach(function(subEntry) {
            var common = getCommonParent(activeElement, subEntry);
            if (common) {
                if (!topCommon || (0, _domutils.contains)(common, topCommon)) topCommon = common;
                else topCommon = getCommonParent(common, topCommon);
            }
        });
    });
    // TODO: add assert here?
    return topCommon;
};
var allParentAutofocusables = function(entries, visibilityCache) {
    return entries.reduce(function(acc, node) {
        return acc.concat((0, _domutils.parentAutofocusables)(node, visibilityCache));
    }, []);
};

},{"./DOMutils":"bjsGC","./array":"e55F4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"em8CO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "expandFocusableNodes", ()=>expandFocusableNodes);
var _allAffected = require("./utils/all-affected");
var _is = require("./utils/is");
var _parenting = require("./utils/parenting");
var _tabOrder = require("./utils/tabOrder");
var _tabUtils = require("./utils/tabUtils");
var expandFocusableNodes = function(topNode) {
    var entries = (0, _allAffected.getAllAffectedNodes)(topNode).filter((0, _is.isNotAGuard));
    var commonParent = (0, _parenting.getTopCommonParent)(topNode, topNode, entries);
    var outerNodes = (0, _tabOrder.orderByTabIndex)((0, _tabUtils.getFocusables)([
        commonParent
    ], true), true, true);
    var innerElements = (0, _tabUtils.getFocusables)(entries, false);
    return outerNodes.map(function(_a) {
        var node = _a.node, index = _a.index;
        return {
            node: node,
            index: index,
            lockItem: innerElements.indexOf(node) >= 0,
            guard: (0, _is.isGuard)(node)
        };
    });
};

},{"./utils/all-affected":"aMNVU","./utils/is":"pjvel","./utils/parenting":"3zW7D","./utils/tabOrder":"fuX8Z","./utils/tabUtils":"7pxgV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jjKXx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "moveFocusInside", ()=>moveFocusInside);
var _commands = require("./commands");
var _focusSolver = require("./focusSolver");
var guardCount = 0;
var lockDisabled = false;
var moveFocusInside = function(topNode, lastNode, options) {
    if (options === void 0) options = {};
    var focusable = (0, _focusSolver.focusSolver)(topNode, lastNode);
    // global local side effect to countain recursive lock activation and resolve focus-fighting
    if (lockDisabled) return;
    if (focusable) {
        /** +FOCUS-FIGHTING prevention **/ if (guardCount > 2) {
            // we have recursive entered back the lock activation
            console.error("FocusLock: focus-fighting detected. Only one focus management system could be active. See https://github.com/theKashey/focus-lock/#focus-fighting");
            lockDisabled = true;
            setTimeout(function() {
                lockDisabled = false;
            }, 1);
            return;
        }
        guardCount++;
        (0, _commands.focusOn)(focusable.node, options.focusOptions);
        guardCount--;
    }
};

},{"./commands":"1kVfq","./focusSolver":"bK42V","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1kVfq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "focusOn", ()=>focusOn);
var focusOn = function(target, focusOptions) {
    if (!target) // not clear how, but is possible https://github.com/theKashey/focus-lock/issues/53
    return;
    if ('focus' in target) target.focus(focusOptions);
    if ('contentWindow' in target && target.contentWindow) target.contentWindow.focus();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6hw1A":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "recordElementLocation", ()=>recordElementLocation);
parcelHelpers.export(exports, "captureFocusRestore", ()=>captureFocusRestore);
var _domutils = require("./utils/DOMutils");
function weakRef(value) {
    if (!value) return null;
    // #68 Safari 14.1 dont have it yet
    // FIXME: remove in 2025
    if (typeof WeakRef === 'undefined') return function() {
        return value || null;
    };
    var w = value ? new WeakRef(value) : null;
    return function() {
        return (w === null || w === void 0 ? void 0 : w.deref()) || null;
    };
}
var recordElementLocation = function(element) {
    if (!element) return null;
    var stack = [];
    var currentElement = element;
    while(currentElement && currentElement !== document.body){
        stack.push({
            current: weakRef(currentElement),
            parent: weakRef(currentElement.parentElement),
            left: weakRef(currentElement.previousElementSibling),
            right: weakRef(currentElement.nextElementSibling)
        });
        currentElement = currentElement.parentElement;
    }
    return {
        element: weakRef(element),
        stack: stack,
        ownerDocument: element.ownerDocument
    };
};
var restoreFocusTo = function(location) {
    var _a, _b, _c, _d, _e;
    if (!location) return undefined;
    var stack = location.stack, ownerDocument = location.ownerDocument;
    var visibilityCache = new Map();
    for(var _i = 0, stack_1 = stack; _i < stack_1.length; _i++){
        var line = stack_1[_i];
        var parent_1 = (_a = line.parent) === null || _a === void 0 ? void 0 : _a.call(line);
        // is it still here?
        if (parent_1 && ownerDocument.contains(parent_1)) {
            var left = (_b = line.left) === null || _b === void 0 ? void 0 : _b.call(line);
            var savedCurrent = line.current();
            var current = parent_1.contains(savedCurrent) ? savedCurrent : undefined;
            var right = (_c = line.right) === null || _c === void 0 ? void 0 : _c.call(line);
            var focusables = (0, _domutils.getTabbableNodes)([
                parent_1
            ], visibilityCache);
            var aim = // that is element itself
            (_e = (_d = current !== null && current !== void 0 ? current : // or something in it's place
            left === null || left === void 0 ? void 0 : left.nextElementSibling) !== null && _d !== void 0 ? _d : // or somebody to the right, still close enough
            right) !== null && _e !== void 0 ? _e : // or somebody to the left, something?
            left;
            while(aim){
                for(var _f = 0, focusables_1 = focusables; _f < focusables_1.length; _f++){
                    var focusable = focusables_1[_f];
                    if (aim === null || aim === void 0 ? void 0 : aim.contains(focusable.node)) return focusable.node;
                }
                aim = aim.nextElementSibling;
            }
            if (focusables.length) // if parent contains a focusable - move there
            return focusables[0].node;
        }
    }
    // nothing matched
    return undefined;
};
var captureFocusRestore = function(targetElement) {
    var location = recordElementLocation(targetElement);
    return function() {
        return restoreFocusTo(location);
    };
};

},{"./utils/DOMutils":"bjsGC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cucvA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getRelativeFocusable", ()=>getRelativeFocusable);
parcelHelpers.export(exports, "focusNextElement", ()=>focusNextElement);
parcelHelpers.export(exports, "focusPrevElement", ()=>focusPrevElement);
parcelHelpers.export(exports, "focusFirstElement", ()=>focusFirstElement);
parcelHelpers.export(exports, "focusLastElement", ()=>focusLastElement);
var _commands = require("./commands");
var _domutils = require("./utils/DOMutils");
var _array = require("./utils/array");
var getRelativeFocusable = function(element, scope, useTabbables) {
    if (!element || !scope) {
        console.error('no element or scope given');
        return {};
    }
    var shards = (0, _array.asArray)(scope);
    if (shards.every(function(shard) {
        return !(0, _domutils.contains)(shard, element);
    })) {
        console.error('Active element is not contained in the scope');
        return {};
    }
    var focusables = useTabbables ? (0, _domutils.getTabbableNodes)(shards, new Map()) : (0, _domutils.getFocusableNodes)(shards, new Map());
    var current = focusables.findIndex(function(_a) {
        var node = _a.node;
        return node === element;
    });
    if (current === -1) // an edge case, when anchor element is not found
    return undefined;
    return {
        prev: focusables[current - 1],
        next: focusables[current + 1],
        first: focusables[0],
        last: focusables[focusables.length - 1]
    };
};
var getBoundary = function(shards, useTabbables) {
    var set = useTabbables ? (0, _domutils.getTabbableNodes)((0, _array.asArray)(shards), new Map()) : (0, _domutils.getFocusableNodes)((0, _array.asArray)(shards), new Map());
    return {
        first: set[0],
        last: set[set.length - 1]
    };
};
var defaultOptions = function(options) {
    return Object.assign({
        scope: document.body,
        cycle: true,
        onlyTabbable: true
    }, options);
};
var moveFocus = function(fromElement, options, cb) {
    if (options === void 0) options = {};
    var newOptions = defaultOptions(options);
    var solution = getRelativeFocusable(fromElement, newOptions.scope, newOptions.onlyTabbable);
    if (!solution) return;
    var target = cb(solution, newOptions.cycle);
    if (target) (0, _commands.focusOn)(target.node, newOptions.focusOptions);
};
var focusNextElement = function(fromElement, options) {
    if (options === void 0) options = {};
    moveFocus(fromElement, options, function(_a, cycle) {
        var next = _a.next, first = _a.first;
        return next || cycle && first;
    });
};
var focusPrevElement = function(fromElement, options) {
    if (options === void 0) options = {};
    moveFocus(fromElement, options, function(_a, cycle) {
        var prev = _a.prev, last = _a.last;
        return prev || cycle && last;
    });
};
var pickBoundary = function(scope, options, what) {
    var _a;
    var boundary = getBoundary(scope, (_a = options.onlyTabbable) !== null && _a !== void 0 ? _a : true);
    var node = boundary[what];
    if (node) (0, _commands.focusOn)(node.node, options.focusOptions);
};
var focusFirstElement = function(scope, options) {
    if (options === void 0) options = {};
    pickBoundary(scope, options, 'first');
};
var focusLastElement = function(scope, options) {
    if (options === void 0) options = {};
    pickBoundary(scope, options, 'last');
};

},{"./commands":"1kVfq","./utils/DOMutils":"bjsGC","./utils/array":"e55F4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9df2e":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deferAction", ()=>deferAction);
parcelHelpers.export(exports, "inlineProp", ()=>inlineProp);
parcelHelpers.export(exports, "extractRef", ()=>extractRef);
function deferAction(action) {
    setTimeout(action, 1);
}
var inlineProp = function inlineProp(name, value) {
    var obj = {};
    obj[name] = value;
    return obj;
};
var extractRef = function extractRef(ref) {
    return ref && 'current' in ref ? ref.current : ref;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4lcpi":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _ScrollLock = require("367a17e955276875");
Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
        return _interopRequireDefault(_ScrollLock).default;
    }
});
var _TouchScrollable = require("fc2ea16117a702ef");
Object.defineProperty(exports, 'TouchScrollable', {
    enumerable: true,
    get: function get() {
        return _TouchScrollable.TouchScrollable;
    }
});
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"367a17e955276875":"3jVN1","fc2ea16117a702ef":"7O2B4"}],"3jVN1":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require("bca8ecec4b0b5cf4");
var _react2 = _interopRequireDefault(_react);
var _exenv = require("f972a4f544f4df1f");
var _TouchScrollable = require("fbba393efe4044d9");
var _withLockSheet = require("85f2a7633e387db4");
var _withLockSheet2 = _interopRequireDefault(_withLockSheet);
var _withTouchListeners = require("db28488def91a3");
var _withTouchListeners2 = _interopRequireDefault(_withTouchListeners);
var _utils = require("b820b132e9205b47");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var ScrollLock = function(_PureComponent) {
    _inherits(ScrollLock, _PureComponent);
    function ScrollLock() {
        _classCallCheck(this, ScrollLock);
        return _possibleConstructorReturn(this, (ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).apply(this, arguments));
    }
    _createClass(ScrollLock, [
        {
            key: 'componentDidMount',
            value: function componentDidMount() {
                if (!_exenv.canUseDOM) return;
                this.initialHeight = window.innerHeight;
            }
        },
        {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
                var offset = window.innerHeight - this.initialHeight;
                // adjust scroll if the window has been resized since the lock was engaged
                // e.g. mobile safari dynamic chrome heights
                if (offset) window.scrollTo(0, window.pageYOffset + offset);
                // reset the initial height in case this scroll lock is used again
                this.initialHeight = window.innerHeight;
            }
        },
        {
            key: 'render',
            value: function render() {
                var children = this.props.children;
                return children ? _react2.default.createElement(_TouchScrollable.TouchScrollable, null, children) : null;
            }
        }
    ]);
    return ScrollLock;
}(_react.PureComponent);
// attach the stylesheet and inject styles on [un]mount
var compose = (0, _utils.pipe)(_withTouchListeners2.default, _withLockSheet2.default);
var SheetLock = compose(ScrollLock);
// toggle the lock based on `isActive` prop
var LockToggle = function LockToggle(props) {
    return props.isActive ? _react2.default.createElement(SheetLock, props) : props.children;
};
LockToggle.defaultProps = {
    accountForScrollbars: true,
    children: null,
    isActive: true
};
exports.default = LockToggle;

},{"bca8ecec4b0b5cf4":"jMk1U","f972a4f544f4df1f":"l6xDx","fbba393efe4044d9":"7O2B4","85f2a7633e387db4":"2S0Mn","db28488def91a3":"8Q52U","b820b132e9205b47":"a7zgZ"}],"l6xDx":[function(require,module,exports,__globalThis) {
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/ /* global define */ (function() {
    'use strict';
    var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
    var ExecutionEnvironment = {
        canUseDOM: canUseDOM,
        canUseWorkers: typeof Worker !== 'undefined',
        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
        canUseViewport: canUseDOM && !!window.screen
    };
    if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) define(function() {
        return ExecutionEnvironment;
    });
    else if (module.exports) module.exports = ExecutionEnvironment;
    else window.ExecutionEnvironment = ExecutionEnvironment;
})();

},{}],"7O2B4":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TouchScrollable = undefined;
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require("db5fbecae6bd1e33");
var _exenv = require("2f856cd580d636c6");
var _utils = require("67dbd90ce2e66b6c");
function _objectWithoutProperties(obj, keys) {
    var target = {};
    for(var i in obj){
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var TouchScrollable = exports.TouchScrollable = function(_PureComponent) {
    _inherits(TouchScrollable, _PureComponent);
    function TouchScrollable() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, TouchScrollable);
        for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TouchScrollable.__proto__ || Object.getPrototypeOf(TouchScrollable)).call.apply(_ref, [
            this
        ].concat(args))), _this), _this.getScrollableArea = function(ref) {
            _this.scrollableArea = ref;
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(TouchScrollable, [
        {
            key: 'componentDidMount',
            value: function componentDidMount() {
                if (!_exenv.canUseEventListeners) return;
                this.scrollableArea.addEventListener('touchstart', _utils.preventInertiaScroll, _utils.listenerOptions);
                this.scrollableArea.addEventListener('touchmove', _utils.allowTouchMove, _utils.listenerOptions);
            }
        },
        {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
                if (!_exenv.canUseEventListeners) return;
                this.scrollableArea.removeEventListener('touchstart', _utils.preventInertiaScroll, _utils.listenerOptions);
                this.scrollableArea.removeEventListener('touchmove', _utils.allowTouchMove, _utils.listenerOptions);
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, children = _props.children, rest = _objectWithoutProperties(_props, [
                    'children'
                ]);
                return typeof children === 'function' ? children(this.getScrollableArea) : (0, _react.cloneElement)(children, _extends({
                    ref: this.getScrollableArea
                }, rest));
            }
        }
    ]);
    return TouchScrollable;
}(_react.PureComponent);

},{"db5fbecae6bd1e33":"jMk1U","2f856cd580d636c6":"l6xDx","67dbd90ce2e66b6c":"a7zgZ"}],"a7zgZ":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.pipe = exports.listenerOptions = undefined;
exports.preventTouchMove = preventTouchMove;
exports.allowTouchMove = allowTouchMove;
exports.preventInertiaScroll = preventInertiaScroll;
exports.isTouchDevice = isTouchDevice;
exports.camelToKebab = camelToKebab;
exports.parse = parse;
exports.getPadding = getPadding;
exports.getWindowHeight = getWindowHeight;
exports.getDocumentHeight = getDocumentHeight;
exports.makeStyleTag = makeStyleTag;
exports.injectStyles = injectStyles;
exports.insertStyleTag = insertStyleTag;
var _exenv = require("4ff27da1b73447f1");
var listenerOptions = exports.listenerOptions = {
    capture: false,
    passive: false
};
// ==============================
// Touch Helpers
// ==============================
function preventTouchMove(e) {
    e.preventDefault();
    return false;
}
function allowTouchMove(e) {
    var target = e.currentTarget;
    if (target.scrollHeight > target.clientHeight) {
        e.stopPropagation();
        return true;
    }
    e.preventDefault();
    return false;
}
function preventInertiaScroll() {
    var top = this.scrollTop;
    var totalScroll = this.scrollHeight;
    var currentScroll = top + this.offsetHeight;
    if (top === 0) this.scrollTop = 1;
    else if (currentScroll === totalScroll) this.scrollTop = top - 1;
}
// `ontouchstart` check works on most browsers
// `maxTouchPoints` works on IE10/11 and Surface
function isTouchDevice() {
    if (!_exenv.canUseDOM) return false;
    return 'ontouchstart' in window || navigator.maxTouchPoints;
}
// ==============================
// Misc.
// ==============================
function camelToKebab(str) {
    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
}
function parse(val) {
    return isNaN(val) ? val : val + 'px';
}
// Take a list of functions and return a function that applies the list of
// functions from left to right
var pipeFns = function pipeFns(a, b) {
    return function() {
        return b(a.apply(undefined, arguments));
    };
};
var pipe = exports.pipe = function pipe() {
    for(var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++)fns[_key] = arguments[_key];
    return fns.reduce(pipeFns);
};
// ==============================
// Document Helpers
// ==============================
function getPadding() {
    if (!_exenv.canUseDOM) return 0;
    var paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight, 10);
    var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
    return paddingRight + scrollbarWidth;
}
function getWindowHeight() {
    var multiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    if (_exenv.canUseDOM) return window.innerHeight * multiplier;
}
function getDocumentHeight() {
    if (_exenv.canUseDOM) return document.body.clientHeight;
}
// ==============================
// Style Sheets
// ==============================
function makeStyleTag() {
    if (!_exenv.canUseDOM) return;
    var tag = document.createElement('style');
    tag.type = 'text/css';
    tag.setAttribute('data-react-scrolllock', '');
    return tag;
}
function injectStyles(tag, css) {
    if (!_exenv.canUseDOM) return;
    if (tag.styleSheet) tag.styleSheet.cssText = css;
    else tag.appendChild(document.createTextNode(css));
}
function insertStyleTag(tag) {
    if (!_exenv.canUseDOM) return;
    var head = document.head || document.getElementsByTagName('head')[0];
    head.appendChild(tag);
}

},{"4ff27da1b73447f1":"l6xDx"}],"2S0Mn":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
exports.default = withLockSheet;
var _react = require("4f3d422a7bc472a6");
var _react2 = _interopRequireDefault(_react);
var _utils = require("d87f766bad1c2dc9");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
function withLockSheet(WrappedComponent) {
    return function(_PureComponent) {
        _inherits(SheetProvider, _PureComponent);
        function SheetProvider() {
            var _ref;
            var _temp, _this, _ret;
            _classCallCheck(this, SheetProvider);
            for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SheetProvider.__proto__ || Object.getPrototypeOf(SheetProvider)).call.apply(_ref, [
                this
            ].concat(args))), _this), _this.addSheet = function() {
                var styles = _this.getStyles();
                var sheet = (0, _utils.makeStyleTag)();
                if (!sheet) return;
                (0, _utils.injectStyles)(sheet, styles);
                (0, _utils.insertStyleTag)(sheet);
                _this.sheet = sheet;
            }, _this.getStyles = function() {
                var accountForScrollbars = _this.props.accountForScrollbars;
                var height = (0, _utils.getDocumentHeight)();
                var paddingRight = accountForScrollbars ? (0, _utils.getPadding)() : null;
                var styles = 'body {\n        box-sizing: border-box !important;\n        overflow: hidden !important;\n        position: relative !important;\n        ' + (height ? 'height: ' + height + 'px !important;' : '') + '\n        ' + (paddingRight ? 'padding-right: ' + paddingRight + 'px !important;' : '') + '\n      }';
                return styles;
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }
        _createClass(SheetProvider, [
            {
                key: 'componentDidMount',
                value: function componentDidMount() {
                    this.addSheet();
                }
            },
            {
                key: 'removeSheet',
                value: function removeSheet() {
                    if (!this.sheet) return;
                    // $FlowFixMe
                    this.sheet.parentNode.removeChild(this.sheet);
                    this.sheet = null;
                }
            },
            {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    this.removeSheet();
                }
            },
            {
                key: 'render',
                value: function render() {
                    return _react2.default.createElement(WrappedComponent, this.props);
                }
            }
        ]);
        return SheetProvider;
    }(_react.PureComponent);
}

},{"4f3d422a7bc472a6":"jMk1U","d87f766bad1c2dc9":"a7zgZ"}],"8Q52U":[function(require,module,exports,__globalThis) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
exports.default = withTouchListeners;
var _react = require("ab04148da713889f");
var _react2 = _interopRequireDefault(_react);
var _exenv = require("c830a61c36db71a6");
var _utils = require("708e33eaaf1ba2a2");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
// Mobile Safari ignores { overflow: hidden } declaration on the body,
// so we have to prevent touchmove events via JS
function withTouchListeners(WrappedComponent) {
    return function(_PureComponent) {
        _inherits(TouchProvider, _PureComponent);
        function TouchProvider() {
            _classCallCheck(this, TouchProvider);
            return _possibleConstructorReturn(this, (TouchProvider.__proto__ || Object.getPrototypeOf(TouchProvider)).apply(this, arguments));
        }
        _createClass(TouchProvider, [
            {
                key: 'componentDidMount',
                value: function componentDidMount() {
                    if (!_exenv.canUseDOM || !(0, _utils.isTouchDevice)()) return;
                    document.addEventListener('touchmove', _utils.preventTouchMove, _utils.listenerOptions);
                }
            },
            {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                    if (!_exenv.canUseDOM || !(0, _utils.isTouchDevice)()) return;
                    document.removeEventListener('touchmove', _utils.preventTouchMove, _utils.listenerOptions);
                }
            },
            {
                key: 'render',
                value: function render() {
                    return _react2.default.createElement(WrappedComponent, this.props);
                }
            }
        ]);
        return TouchProvider;
    }(_react.PureComponent);
}

},{"ab04148da713889f":"jMk1U","c830a61c36db71a6":"l6xDx","708e33eaaf1ba2a2":"a7zgZ"}],"fkTHQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _blanketDefault.default));
var _blanket = require("./blanket");
var _blanketDefault = parcelHelpers.interopDefault(_blanket);

},{"./blanket":"3lVGj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3lVGj":[function(require,module,exports,__globalThis) {
/* blanket.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _usePlatformLeafEventHandler = require("@atlaskit/analytics-next/usePlatformLeafEventHandler");
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _colors = require("@atlaskit/theme/colors");
var _constants = require("@atlaskit/theme/constants");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var packageName = "@atlaskit/blanket";
var packageVersion = "15.0.6";
var analyticsAttributes = {
    componentName: 'blanket',
    packageName: packageName,
    packageVersion: packageVersion
};
var baseStyles = null;
var shouldAllowClickThroughStyles = null;
var invisibleStyles = null;
/**
 * __Blanket__
 *
 * A Blanket provides the overlay layer for components such as a modal dialog or a tooltip
 *
 * - [Examples](https://atlaskit.atlassian.com/examples/design-system/blanket/basic-usage)
 */ var Blanket = /*#__PURE__*/ (0, _react.memo)(/*#__PURE__*/ (0, _react.forwardRef)(function Blanket(_ref, ref) {
    var _ref$shouldAllowClick = _ref.shouldAllowClickThrough, shouldAllowClickThrough = _ref$shouldAllowClick === void 0 ? false : _ref$shouldAllowClick, _ref$isTinted = _ref.isTinted, isTinted = _ref$isTinted === void 0 ? false : _ref$isTinted, _ref$onBlanketClicked = _ref.onBlanketClicked, onBlanketClicked = _ref$onBlanketClicked === void 0 ? (0, _noopDefault.default) : _ref$onBlanketClicked, testId = _ref.testId, children = _ref.children, analyticsContext = _ref.analyticsContext;
    var mouseDownTarget = (0, _react.useRef)(null);
    var onBlanketClickedWithAnalytics = (0, _usePlatformLeafEventHandler.usePlatformLeafEventHandler)(_objectSpread({
        fn: onBlanketClicked,
        action: 'clicked',
        analyticsData: analyticsContext
    }, analyticsAttributes));
    var blanketClickOutsideChildren = (0, _react.useCallback)(function(e) {
        return e.currentTarget === e.target && mouseDownTarget.current === e.target ? onBlanketClickedWithAnalytics(e) : undefined;
    }, [
        onBlanketClickedWithAnalytics
    ]);
    var onClick = shouldAllowClickThrough ? undefined : blanketClickOutsideChildren;
    var onMouseDown = (0, _react.useCallback)(function(e) {
        mouseDownTarget.current = e.target;
    }, []);
    return /*#__PURE__*/ _react.createElement("div", {
        role: "presentation",
        onClick: onClick,
        onMouseDown: onMouseDown,
        "data-testid": testId,
        ref: ref,
        className: (0, _runtime.ax)([
            "_1r04idpf _kqsw1n9t _1pbybfng _bfhk705f _18m91wug _lcxv1wug",
            shouldAllowClickThrough && "_lcxvglyw",
            !isTinted && "_bfhk1j28"
        ]),
        style: {
            "--_10avjlk": (0, _runtime.ix)("var(--ds-blanket, ".concat((0, _colors.N100A), ")"))
        }
    }, children);
}));
Blanket.displayName = 'Blanket';
exports.default = Blanket;

},{"@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@compiled/react/runtime":"3JrDb","@atlaskit/analytics-next/usePlatformLeafEventHandler":"jTLaA","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/theme/colors":"iIuwU","@atlaskit/theme/constants":"6kRPo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3JrDb":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"l8MTN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l8MTN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"lFuyu","./ac":false,"./css-custom-property":"1dWoU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lFuyu":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1dWoU":[function(require,module,exports,__globalThis) {
/**
 * Returns a CSS custom property value with an optional suffix & prefix.
 * Prefix will only be added if there is a suffix.
 * If the value is undefined a fallback value will be returned to prevent children inheriting parent values.
 *
 * @param value
 * @param suffix
 * @param prefix
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>cssCustomPropertyValue);
function cssCustomPropertyValue(value, suffix, prefix) {
    if (value != undefined) {
        if (suffix) {
            if (prefix) return prefix + value + suffix;
            return value + suffix;
        }
        return value;
    }
    // Currently React trims these values so we can't use a space " " to block the value.
    // Instead we use a CSS variable that doesn't exist which falls back to " ".
    // Bug raised here: https://github.com/facebook/react/issues/20497
    return 'var(--c-, )';
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hp6qP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Layering", ()=>(0, _layeringContext.Layering));
parcelHelpers.export(exports, "useCloseOnEscapePress", ()=>(0, _index.useCloseOnEscapePress));
parcelHelpers.export(exports, "useLayering", ()=>(0, _index.useLayering));
var _layeringContext = require("./components/layering-context");
var _index = require("./hooks/index");

},{"./components/layering-context":"6QhCl","./hooks/index":"SJ3Rl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6QhCl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LevelContext", ()=>LevelContext);
parcelHelpers.export(exports, "LevelNodeContext", ()=>LevelNodeContext);
parcelHelpers.export(exports, "RootNodeContext", ()=>RootNodeContext);
parcelHelpers.export(exports, "TopLevelContext", ()=>TopLevelContext);
parcelHelpers.export(exports, "Layering", ()=>Layering);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _platformFeatureFlagsReact = require("@atlaskit/platform-feature-flags-react");
var _layerNode = require("../classes/layer-node");
var LevelContext = /*#__PURE__*/ (0, _react.createContext)(0);
var LevelNodeContext = /*#__PURE__*/ (0, _react.createContext)({
    current: null
});
var RootNodeContext = /*#__PURE__*/ (0, _react.createContext)({
    current: null
});
var TopLevelContext = /*#__PURE__*/ (0, _react.createContext)({
    topLevelRef: {
        current: null
    },
    layerList: {
        current: null
    },
    setTopLevel: (0, _noopDefault.default)
});
/**
 *
 *  @internal
 * Context Provider Component which provider the current level of nested layers
 * It handles level management when it mounts and unmounts
 *
 */ var LevelProvider = function LevelProvider(_ref) {
    var children = _ref.children, currentLevel = _ref.currentLevel, levelNode = _ref.node;
    (0, _react.useEffect)(function() {
        var levelNodeSafe = levelNode.current;
        var parentNode = levelNodeSafe.parent;
        parentNode === null || parentNode === void 0 || parentNode.addChild(levelNodeSafe);
        return function() {
            parentNode === null || parentNode === void 0 || parentNode.removeChild(levelNodeSafe);
        };
    }, [
        levelNode
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(LevelContext.Provider, {
        value: currentLevel
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement(LevelNodeContext.Provider, {
        value: levelNode
    }, children));
};
/**
 *
 *  @internal @deprecated
 * Context Provider Component which provider the current level of nested layers
 * It handles level management when it mounts and unmounts
 *
 */ var LevelProviderOld = function LevelProviderOld(_ref2) {
    var children = _ref2.children, currentLevel = _ref2.currentLevel;
    var _useContext = (0, _react.useContext)(TopLevelContext), layerList = _useContext.layerList;
    // This is not unstable, it will run once for ref creation.
    // eslint-disable-next-line  @repo/internal/react/disallow-unstable-values
    var id = (0, _react.useRef)(Math.random().toString(36));
    (0, _react.useEffect)(function() {
        var safeLayerList = layerList === null || layerList === void 0 ? void 0 : layerList.current;
        var safeId = id.current;
        if (!safeLayerList) return;
        safeLayerList.push(safeId);
        return function() {
            var index = safeLayerList.indexOf(safeId);
            if (index > -1) safeLayerList.splice(index, 1);
        };
    }, [
        layerList,
        id
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(LevelContext.Provider, {
        value: currentLevel
    }, children);
};
/**
 *
 *  @internal @deprecated
 * Context Provider Component which provides the top level of all nested layers
 * It provides initial top level ref value as 0 and set top level method
 *
 */ var LayeringProvider = function LayeringProvider(_ref3) {
    var children = _ref3.children;
    var topLevelRef = (0, _react.useRef)(0);
    var layerList = (0, _react.useRef)([]);
    var value = (0, _react.useMemo)(function() {
        return {
            topLevelRef: topLevelRef,
            setTopLevel: function setTopLevel(level) {
                topLevelRef.current = level;
            },
            layerList: layerList
        };
    }, [
        topLevelRef,
        layerList
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement(TopLevelContext.Provider, {
        value: value
    }, children);
};
/**
 *
 * @deprecated
 * @important the component is toggled by isDisabled props, the default isDisabled is true
 *
 * Layering component is a wrapper to let children to consume layer contexts and hooks.
 *
 */ var LayeringOld = function LayeringOld(_ref4) {
    var children = _ref4.children, _ref4$isDisabled = _ref4.isDisabled, isDisabled = _ref4$isDisabled === void 0 ? true : _ref4$isDisabled;
    var currentLevel = (0, _react.useContext)(LevelContext);
    if (isDisabled) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, children);
    var isNested = currentLevel > 0;
    var content = /*#__PURE__*/ (0, _reactDefault.default).createElement(LevelProviderOld, {
        currentLevel: currentLevel + 1
    }, children);
    return isNested ? content : /*#__PURE__*/ (0, _reactDefault.default).createElement(LayeringProvider, null, content);
};
/**
 *
 * @important the component is toggled by isDisabled props, the default isDisabled is true
 *
 * Layering component is a wrapper to let children to consume layer contexts and hooks.
 *
 */ var LayeringNew = function LayeringNew(_ref5) {
    var children = _ref5.children, _ref5$isDisabled = _ref5.isDisabled, isDisabled = _ref5$isDisabled === void 0 ? true : _ref5$isDisabled;
    var currentLevel = (0, _react.useContext)(LevelContext);
    var parentNode = (0, _react.useContext)(LevelNodeContext);
    // eslint-disable-next-line  @repo/internal/react/disallow-unstable-values
    var newNode = (0, _react.useRef)(new (0, _layerNode.LayerNode)(Math.random().toString(36), parentNode.current));
    if (isDisabled) return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactDefault.default).Fragment, null, children);
    var isNested = currentLevel > 0;
    var content = /*#__PURE__*/ (0, _reactDefault.default).createElement(LevelProvider, {
        currentLevel: currentLevel + 1,
        node: newNode
    }, children);
    return isNested ? content : /*#__PURE__*/ (0, _reactDefault.default).createElement(RootNodeContext.Provider, {
        value: newNode
    }, content);
};
var Layering = (0, _platformFeatureFlagsReact.componentWithFG)('layering-tree-graph', LayeringNew, LayeringOld);

},{"react":"jMk1U","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/platform-feature-flags-react":"fyTLT","../classes/layer-node":"cbOJ4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fyTLT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "componentWithCondition", ()=>(0, _componentWithCondition.componentWithCondition));
parcelHelpers.export(exports, "componentWithFG", ()=>(0, _componentWithFg.componentWithFG));
parcelHelpers.export(exports, "functionUnionWithCondition", ()=>(0, _functionWithCondition.functionUnionWithCondition));
parcelHelpers.export(exports, "functionWithCondition", ()=>(0, _functionWithCondition.functionWithCondition));
parcelHelpers.export(exports, "functionWithFG", ()=>(0, _functionWithFg.functionWithFG));
parcelHelpers.export(exports, "conditionalHooksFactory", ()=>(0, _conditionalHooksFactory.conditionalHooksFactory));
var _componentWithCondition = require("./utils/component-with-condition");
var _componentWithFg = require("./utils/component-with-fg");
var _functionWithCondition = require("./utils/function-with-condition");
var _functionWithFg = require("./utils/function-with-fg");
var _conditionalHooksFactory = require("./utils/conditional-hooks-factory");

},{"./utils/component-with-condition":false,"./utils/component-with-fg":"zZW2Y","./utils/function-with-condition":false,"./utils/function-with-fg":false,"./utils/conditional-hooks-factory":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"axakp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Gets all available ref types from two prop sets and returns
 * them in a ref prop
 *
 * @example
 * ```
 * type P1 = { ref: Ref(HTMLDivElement), ... };
 * type P2 = { ref: Ref(HTMLSpanElement), ... };
 *
 * GetRefAttributes(P1, P2) // {ref: Ref(HTMLDivElement | HTMLSpanElement)}
 * ```
 */ /**
 * Returns one of components depending on a boolean condition.
 * The result component will be a union of the two props and
 * an or on both ref types.
 *
 * @example
 * ```
 * const Component = componentWithCondition(
 *      isBooleanConditionMet,
 *      ComponentWithConditionMet,
 *      ComponentWithConditionNotMet,
 * );
 *
 * @param condition Function returning boolean value
 * @param componentTrue Component that will be returned if conditionGetter is "true"
 * @param componentFalse Component that will be returned if conditionGetter is "false"
 * @returns Component Depending on a Condition result
 */ parcelHelpers.export(exports, "componentWithCondition", ()=>componentWithCondition);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
function componentWithCondition(condition, ComponentTrue, ComponentFalse) {
    var ComponentWithCondition = /*#__PURE__*/ (0, _react.forwardRef)(function(props, ref) {
        return condition() ? /*#__PURE__*/ (0, _reactDefault.default).createElement(ComponentTrue, (0, _extendsDefault.default)({}, props, {
            ref: ref
        })) : /*#__PURE__*/ (0, _reactDefault.default).createElement(ComponentFalse, (0, _extendsDefault.default)({}, props, {
            ref: ref
        }));
    });
    if (ComponentTrue.name !== '') ComponentWithCondition.displayName = "ComponentWithCondition[".concat(condition.name, "]");
    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
    return ComponentWithCondition;
}

},{"@babel/runtime/helpers/extends":"lKa0J","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"zZW2Y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "componentWithFG", ()=>componentWithFG);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _componentWithCondition = require("../component-with-condition");
var componentWithFG = function componentWithFG(featureFlagName, ComponentTrue, ComponentFalse) {
    return (0, _componentWithCondition.componentWithCondition)(function() {
        return (0, _platformFeatureFlags.fg)(featureFlagName);
    }, ComponentTrue, ComponentFalse);
};

},{"@atlaskit/platform-feature-flags":"3H8e6","../component-with-condition":"axakp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cbOJ4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LayerNode", ()=>LayerNode);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var LayerNode = /*#__PURE__*/ function() {
    function LayerNode(id, parent) {
        (0, _classCallCheckDefault.default)(this, LayerNode);
        this.id = id;
        this.childNodes = [];
        this.parent = parent;
    }
    return (0, _createClassDefault.default)(LayerNode, [
        {
            key: "addChild",
            value: function addChild(node) {
                this.childNodes.push(node);
            }
        },
        {
            key: "removeChild",
            value: function removeChild(node) {
                this.childNodes = this.childNodes.filter(function(child) {
                    return child.id !== node.id;
                });
            }
        },
        {
            key: "getLevel",
            value: function getLevel() {
                if (!this.parent) return 1;
                return this.parent.getLevel() + 1;
            }
        },
        {
            key: "getHeight",
            value: function getHeight() {
                if (this.childNodes.length === 0) return 1;
                return Math.max.apply(Math, (0, _toConsumableArrayDefault.default)(this.childNodes.map(function(child) {
                    return child.getHeight();
                }))) + 1;
            }
        }
    ]);
}();

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"SJ3Rl":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Calls back when the escape key is pressed.
 * To be used exclusively for closing layered components.
 * Use the `isDisabled` argument to ignore closing events.
 *
 * ```js
 * useCloseOnEscapePress({
 *   onClose: () => {},
 *   isDisabled: false,
 * });
 * ```
 */ parcelHelpers.export(exports, "useCloseOnEscapePress", ()=>useCloseOnEscapePress);
/**
 *
 * Layering hook to get layering info like the current level, the top level of the given component
 *
 */ parcelHelpers.export(exports, "useLayering", ()=>useLayering);
var _react = require("react");
var _bindEventListener = require("bind-event-listener");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _layeringContext = require("../components/layering-context");
var ESCAPE = 'Escape';
function useCloseOnEscapePress(_ref) {
    var onClose = _ref.onClose, isDisabled = _ref.isDisabled;
    var escapePressed = (0, _react.useRef)(false);
    var _useLayering = useLayering(), isLayerDisabled = _useLayering.isLayerDisabled;
    var onKeyDown = (0, _react.useCallback)(function(e) {
        var isDisabledLayer = isLayerDisabled();
        if (isDisabled || escapePressed.current || e.key !== ESCAPE || isDisabledLayer) // We're either already handling the key down event or it's not escape or disabled.
        // Bail early!
        return;
        escapePressed.current = true;
        onClose(e);
    }, [
        onClose,
        isDisabled,
        isLayerDisabled
    ]);
    var onKeyUp = (0, _react.useCallback)(function() {
        escapePressed.current = false;
    }, []);
    (0, _react.useEffect)(function() {
        return (0, _bindEventListener.bindAll)(window, [
            {
                type: 'keydown',
                listener: onKeyDown
            },
            {
                type: 'keyup',
                listener: onKeyUp
            }
        ], {
            capture: false
        });
    }, [
        onKeyDown,
        onKeyUp
    ]);
}
function useLayering() {
    var currentLevel = (0, _react.useContext)((0, _layeringContext.LevelContext));
    // Remove TopLevelContext on FG cleanup layering-tree-graph
    var _useContext = (0, _react.useContext)((0, _layeringContext.TopLevelContext)), topLevelRef = _useContext.topLevelRef, layerList = _useContext.layerList;
    var layerNode;
    var rootNode;
    if ((0, _platformFeatureFlags.fg)('layering-tree-graph')) {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        layerNode = (0, _react.useContext)((0, _layeringContext.LevelNodeContext));
        // eslint-disable-next-line react-hooks/rules-of-hooks
        rootNode = (0, _react.useContext)((0, _layeringContext.RootNodeContext));
    }
    var isLayerDisabled = (0, _react.useCallback)(function() {
        var _layerList$current$le, _layerList$current;
        if ((0, _platformFeatureFlags.fg)('layering-tree-graph')) {
            var _layerNode, _rootNode;
            // This is an impossible case, added for type safety
            if (!((_layerNode = layerNode) !== null && _layerNode !== void 0 && _layerNode.current) || !((_rootNode = rootNode) !== null && _rootNode !== void 0 && _rootNode.current)) return false;
            return layerNode.current.getLevel() < rootNode.current.getHeight();
        }
        return ((_layerList$current$le = layerList === null || layerList === void 0 || (_layerList$current = layerList.current) === null || _layerList$current === void 0 ? void 0 : _layerList$current.length) !== null && _layerList$current$le !== void 0 ? _layerList$current$le : 0) !== currentLevel;
    }, [
        currentLevel,
        layerList,
        layerNode,
        rootNode
    ]);
    var getTopLevel = (0, _react.useCallback)(function() {
        var _rootNode2;
        return (_rootNode2 = rootNode) !== null && _rootNode2 !== void 0 && _rootNode2.current ? rootNode.current.getHeight() : null;
    }, [
        rootNode
    ]);
    return (0, _platformFeatureFlags.fg)('layering-tree-graph') ? {
        currentLevel: currentLevel,
        isLayerDisabled: isLayerDisabled,
        getTopLevel: getTopLevel
    } : {
        currentLevel: currentLevel,
        topLevelRef: topLevelRef,
        isLayerDisabled: isLayerDisabled,
        layerList: layerList
    };
}

},{"react":"jMk1U","bind-event-listener":"2wrYK","@atlaskit/platform-feature-flags":"3H8e6","../components/layering-context":"6QhCl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eb1Ct":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _fadeInDefault.default));
var _fadeIn = require("../entering/fade-in");
var _fadeInDefault = parcelHelpers.interopDefault(_fadeIn);

},{"../entering/fade-in":"01dXD","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cVqiF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useModalStack);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _useLazyCallback = require("@atlaskit/ds-lib/use-lazy-callback");
var _useLazyCallbackDefault = parcelHelpers.interopDefault(_useLazyCallback);
var _usePreviousValue = require("@atlaskit/ds-lib/use-previous-value");
var _usePreviousValueDefault = parcelHelpers.interopDefault(_usePreviousValue);
var _useStateRef = require("@atlaskit/ds-lib/use-state-ref");
var _useStateRefDefault = parcelHelpers.interopDefault(_useStateRef);
var _exitingPersistence = require("@atlaskit/motion/exiting-persistence");
/**
 *  ________________________________________________
 * | MAJOR VERSIONS WILL NOT KNOW ABOUT EACH OTHER! |
 *  ------------------------------------------------
 *
 * An array which holds references to all currently open modal dialogs.
 * This will only work for modal dialogs of the same major version,
 * as the reference will be different between them.
 *
 * E.g. V11 won't know about any from V12.
 */ var modalStackRegister = [];
function useModalStack(_ref) {
    var onStackChange = _ref.onStackChange;
    var _useExitingPersistenc = (0, _exitingPersistence.useExitingPersistence)(), isExiting = _useExitingPersistenc.isExiting;
    var _useStateRef = (0, _useStateRefDefault.default)(0), _useStateRef2 = (0, _slicedToArrayDefault.default)(_useStateRef, 2), stackIndexRef = _useStateRef2[0], setStackIndex = _useStateRef2[1];
    var currentStackIndex = stackIndexRef.current;
    var previousStackIndex = (0, _usePreviousValueDefault.default)(stackIndexRef.current);
    // We want to ensure this function **never changes** during the lifecycle of this component.
    // This is why it's assigned to a ref and not in a useMemo/useCallback.
    var updateStack = (0, _useLazyCallbackDefault.default)(function() {
        var newStackIndex = modalStackRegister.indexOf(updateStack);
        // We access the stack index ref instead of state because this closure will always only
        // have the initial state and not any of the later values.
        if (stackIndexRef.current !== newStackIndex) {
            setStackIndex(newStackIndex);
            stackIndexRef.current = newStackIndex;
        }
    });
    (0, _react.useEffect)(function() {
        var currentStackIndex = modalStackRegister.indexOf(updateStack);
        if (!isExiting && currentStackIndex === -1) // We are opening the modal dialog.
        // Add ourselves to the modal stack register!
        modalStackRegister.unshift(updateStack);
        if (isExiting && currentStackIndex !== -1) // We are closing the modal dialog using a wrapping modal transition component.
        // Remove ourselves from the modal stack register!
        // NOTE: Modal dialogs that don't have a wrapping modal transition component won't flow through here!
        // For that scenario we cleanup when the component unmounts.
        modalStackRegister.splice(currentStackIndex, 1);
        // Fire all registered modal dialogs to update their position in the stack.
        modalStackRegister.forEach(function(cb) {
            return cb();
        });
    }, [
        updateStack,
        isExiting
    ]);
    (0, _react.useEffect)(function() {
        return function() {
            // Final cleanup just in case this modal dialog did not have a wrapping modal transition.
            var currentStackIndex = modalStackRegister.indexOf(updateStack);
            if (currentStackIndex !== -1) {
                modalStackRegister.splice(currentStackIndex, 1);
                modalStackRegister.forEach(function(cb) {
                    return cb();
                });
            }
        };
    }, [
        updateStack
    ]);
    (0, _react.useEffect)(function() {
        if (previousStackIndex === undefined) // Initial case that we don't need to notify about.
        return;
        if (previousStackIndex !== currentStackIndex) onStackChange(currentStackIndex);
    }, [
        onStackChange,
        previousStackIndex,
        currentStackIndex
    ]);
    return currentStackIndex;
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@atlaskit/ds-lib/use-lazy-callback":"3niyD","@atlaskit/ds-lib/use-previous-value":"17gqM","@atlaskit/ds-lib/use-state-ref":"4lp5b","@atlaskit/motion/exiting-persistence":"7Z12n","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3niyD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useLazyCallback);
var _useLazyRef = require("./use-lazy-ref");
var _useLazyRefDefault = parcelHelpers.interopDefault(_useLazyRef);
function useLazyCallback(callback) {
    var ref = (0, _useLazyRefDefault.default)(function() {
        return callback;
    });
    return ref.current;
}

},{"./use-lazy-ref":"4mfKx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4mfKx":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useLazyRef);
var _react = require("react");
var uniqueReferencedValue = {};
function useLazyRef(initializer) {
    var ref = (0, _react.useRef)(uniqueReferencedValue);
    if (ref.current === uniqueReferencedValue) ref.current = initializer();
    return ref;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"17gqM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>usePreviousValue);
var _react = require("react");
function usePreviousValue(value) {
    var ref = (0, _react.useRef)();
    (0, _react.useEffect)(function() {
        ref.current = value;
    }, [
        value
    ]);
    return ref.current;
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4lp5b":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useStateRef);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
function useStateRef(initialState) {
    var _useState = (0, _react.useState)(initialState), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), value = _useState2[0], setValue = _useState2[1];
    var valueRef = (0, _react.useRef)(value);
    valueRef.current = value;
    return [
        valueRef,
        setValue
    ];
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7Z12n":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _exitingPersistenceDefault.default));
parcelHelpers.export(exports, "useExitingPersistence", ()=>(0, _exitingPersistence.useExitingPersistence));
var _exitingPersistence = require("../entering/exiting-persistence");
var _exitingPersistenceDefault = parcelHelpers.interopDefault(_exitingPersistence);

},{"../entering/exiting-persistence":"3mJ6Z","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bVvvt":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>usePreventProgrammaticScroll);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _bindEventListener = require("bind-event-listener");
/**
 * Returns how far the body is scrolled from the top of the viewport.
 *
 *   ____
 * ||____|| <-- overflow
 *  |    |  <-- viewport
 *  |____|
 *
 * Scroll distance is the height of overflow outside the viewport.
 */ function getScrollDistance() {
    var _document$documentEle, _document$body;
    return window.pageYOffset || ((_document$documentEle = document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.scrollTop) || ((_document$body = document.body) === null || _document$body === void 0 ? void 0 : _document$body.scrollTop) || 0;
}
function usePreventProgrammaticScroll() {
    var _useState = (0, _react.useState)(0), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), scrollTopOffset = _useState2[0], setScrollTopOffset = _useState2[1];
    (0, _react.useLayoutEffect)(function() {
        setScrollTopOffset(getScrollDistance());
    }, []);
    var onWindowScroll = (0, _react.useCallback)(function() {
        if (getScrollDistance() !== scrollTopOffset) window.scrollTo(window.pageXOffset, scrollTopOffset);
    }, [
        scrollTopOffset
    ]);
    (0, _react.useEffect)(function() {
        return (0, _bindEventListener.bind)(window, {
            type: 'scroll',
            listener: onWindowScroll
        });
    }, [
        onWindowScroll
    ]);
    return scrollTopOffset;
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","bind-event-listener":"2wrYK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bR0IL":[function(require,module,exports,__globalThis) {
/* modal-dialog.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _useAutoFocus = require("@atlaskit/ds-lib/use-auto-focus");
var _useAutoFocusDefault = parcelHelpers.interopDefault(_useAutoFocus);
var _useId = require("@atlaskit/ds-lib/use-id");
var _layering = require("@atlaskit/layering");
var _fadeIn = require("@atlaskit/motion/fade-in");
var _fadeInDefault = parcelHelpers.interopDefault(_fadeIn);
var _combine = require("@atlaskit/pragmatic-drag-and-drop/combine");
var _context = require("../context");
var _useOnMotionFinish = require("../hooks/use-on-motion-finish");
var _useOnMotionFinishDefault = parcelHelpers.interopDefault(_useOnMotionFinish);
var _element = require("../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/element");
var _external = require("../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/external");
var _textSelection = require("../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/text-selection");
var _utils = require("../utils");
var _positioner = require("./positioner");
var _positionerDefault = parcelHelpers.interopDefault(_positioner);
var LOCAL_CURRENT_SURFACE_CSS_VAR = '--ds-elevation-surface-current';
var dialogStyles = {
    root: "_16jlidpf _1o9zkb7n _i0dl1wug _1e0c1txw _1bsb1osq _p12fauwl _4t3i1osq _1tkeidpf _c71l1kxc _2lx21bp4 _bfhk1bhr _syaz1fxt _1q1l1bhr _lcxv1wug _1mq81kw7 _m01u1kw7 _1dg11kw7 _mizu1p6i _1ah31bk5 _ra3xnqa1 _128m1bk5 _1cvmnqa1 _4davt94y _we1i1kw7 _zg7p1cd0 _yakv1kw7 _4lht1kw7 _1xlt6m9r",
    borderRadius: "_epkx1sit"
};
var viewportScrollStyles = null;
var bodyScrollStyles = null;
var ModalDialog = function ModalDialog(props) {
    var _props$width = props.width, width = _props$width === void 0 ? 'medium' : _props$width, _props$shouldScrollIn = props.shouldScrollInViewport, shouldScrollInViewport = _props$shouldScrollIn === void 0 ? false : _props$shouldScrollIn, shouldCloseOnEscapePress = props.shouldCloseOnEscapePress, autoFocus = props.autoFocus, stackIndex = props.stackIndex, onClose = props.onClose, onCloseComplete = props.onCloseComplete, onOpenComplete = props.onOpenComplete, height = props.height, hasProvidedOnClose = props.hasProvidedOnClose, children = props.children, label = props.label, testId = props.testId, _props$isFullScreen = props.isFullScreen, isFullScreen = _props$isFullScreen === void 0 ? false : _props$isFullScreen;
    var id = (0, _useId.useId)();
    var titleId = "modal-dialog-title-".concat(id);
    var defaultTestId = testId || 'modal-dialog';
    (0, _react.useEffect)(function() {
        // Modal dialogs can appear on top of iframe elements that are on another domain.
        // There is a Chrome bug where drag and drop in an element on top of a cross domain
        // iframe is not working. We are applying the workaround for this bug in modal so
        // that consumers of our modal don't have to worry about this bug and are free to
        // create whatever drag and drop experience they like inside a modal
        //
        // Chrome bug: https://issues.chromium.org/issues/362301053
        return (0, _combine.combine)((0, _element.disableDraggingToCrossOriginIFramesForElement)(), (0, _textSelection.disableDraggingToCrossOriginIFramesForTextSelection)(), (0, _external.disableDraggingToCrossOriginIFramesForExternal)());
    }, []);
    (0, _useAutoFocusDefault.default)((0, _typeofDefault.default)(autoFocus) === 'object' ? autoFocus : undefined, // When a user supplies  a ref to focus we enable this hook
    (0, _typeofDefault.default)(autoFocus) === 'object');
    var _useOnMotionFinish = (0, _useOnMotionFinishDefault.default)({
        onOpenComplete: onOpenComplete,
        onCloseComplete: onCloseComplete
    }), _useOnMotionFinish2 = (0, _slicedToArrayDefault.default)(_useOnMotionFinish, 2), motionRef = _useOnMotionFinish2[0], onMotionFinish = _useOnMotionFinish2[1];
    var modalDialogContext = (0, _react.useMemo)(function() {
        return {
            testId: defaultTestId,
            titleId: titleId,
            onClose: onClose,
            hasProvidedOnClose: hasProvidedOnClose,
            isFullScreen: isFullScreen
        };
    }, [
        defaultTestId,
        titleId,
        onClose,
        hasProvidedOnClose,
        isFullScreen
    ]);
    (0, _layering.useCloseOnEscapePress)({
        onClose: onClose,
        isDisabled: !shouldCloseOnEscapePress
    });
    var _useLayering = (0, _layering.useLayering)(), currentLevel = _useLayering.currentLevel;
    return /*#__PURE__*/ _react.createElement((0, _positionerDefault.default), {
        stackIndex: stackIndex,
        shouldScrollInViewport: shouldScrollInViewport,
        testId: defaultTestId,
        isFullScreen: isFullScreen
    }, /*#__PURE__*/ _react.createElement((0, _context.ModalContext).Provider, {
        value: modalDialogContext
    }, /*#__PURE__*/ _react.createElement((0, _context.ScrollContext).Provider, {
        value: shouldScrollInViewport
    }, /*#__PURE__*/ _react.createElement((0, _fadeInDefault.default), {
        entranceDirection: isFullScreen ? undefined : 'bottom',
        onFinish: onMotionFinish
    }, function(bottomFadeInProps) {
        return /*#__PURE__*/ _react.createElement("section", (0, _extendsDefault.default)({}, bottomFadeInProps, {
            "aria-label": label,
            ref: (0, _mergeRefsDefault.default)([
                bottomFadeInProps.ref,
                motionRef
            ]),
            style: {
                // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
                '--modal-dialog-width': (0, _utils.dialogWidth)(width),
                // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
                '--modal-dialog-height': (0, _utils.dialogHeight)(height)
            },
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
            className: (0, _runtime.ax)([
                dialogStyles.root,
                !isFullScreen && dialogStyles.borderRadius,
                shouldScrollInViewport ? "_1tke1kxc _c71lglyw _8kn617ks" : "_cbiz17ks _bolh1kw7",
                bottomFadeInProps.className
            ]),
            role: "dialog",
            "aria-labelledby": label ? undefined : titleId,
            "data-testid": defaultTestId,
            "data-modal-stack": stackIndex,
            tabIndex: -1,
            "aria-modal": true,
            "data-ds--level": currentLevel
        }), children);
    }))));
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = ModalDialog;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/typeof":"7EL9t","react":"jMk1U","@compiled/react/runtime":"8r5np","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/ds-lib/use-auto-focus":"493DL","@atlaskit/ds-lib/use-id":"jrARK","@atlaskit/layering":"hp6qP","@atlaskit/motion/fade-in":"eb1Ct","@atlaskit/pragmatic-drag-and-drop/combine":"7FxfW","../context":"evR7H","../hooks/use-on-motion-finish":"2F1wM","../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/element":"36jll","../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/external":"7pbBm","../pragmatic-drag-and-drop/disable-dragging-to-cross-origin-iframes/text-selection":"8dTrW","../utils":"7zWo7","./positioner":"6An05","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7FxfW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "combine", ()=>(0, _combine.combine));
var _combine = require("../public-utils/combine");

},{"../public-utils/combine":"6kYtf","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6kYtf":[function(require,module,exports,__globalThis) {
/** Create a new combined function that will call all the provided functions */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "combine", ()=>combine);
function combine() {
    for(var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++)fns[_key] = arguments[_key];
    return function cleanup() {
        fns.forEach(function(fn) {
            return fn();
        });
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"evR7H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ModalContext", ()=>ModalContext);
parcelHelpers.export(exports, "ScrollContext", ()=>ScrollContext);
var _react = require("react");
var ModalContext = /*#__PURE__*/ (0, _react.createContext)(null);
var ScrollContext = /*#__PURE__*/ (0, _react.createContext)(null);

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2F1wM":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useOnMotionFinish);
var _react = require("react");
function useOnMotionFinish(_ref) {
    var onOpenComplete = _ref.onOpenComplete, onCloseComplete = _ref.onCloseComplete;
    var motionRef = (0, _react.useRef)(null);
    var onMotionFinish = (0, _react.useCallback)(function(state) {
        if (state === 'entering' && onOpenComplete) onOpenComplete(motionRef.current, true);
        if (state === 'exiting' && onCloseComplete) onCloseComplete(motionRef.current);
    }, [
        onOpenComplete,
        onCloseComplete
    ]);
    return [
        motionRef,
        onMotionFinish
    ];
}

},{"react":"jMk1U","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"36jll":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disableDraggingToCrossOriginIFramesForElement", ()=>disableDraggingToCrossOriginIFramesForElement);
var _bindEventListener = require("bind-event-listener");
var _combine = require("@atlaskit/pragmatic-drag-and-drop/combine");
var _adapter = require("@atlaskit/pragmatic-drag-and-drop/element/adapter");
var _makeFixForAdapter = require("./make-fix-for-adapter");
function watchForInteractionEnd(_ref) {
    var stop = _ref.stop;
    var isDragging = false;
    function stopIfNotDragging() {
        if (isDragging) return;
        stop();
    }
    var unbindEvents = (0, _bindEventListener.bindAll)(window, [
        {
            // Another interaction is starting, this fix should be removed.
            type: 'pointerdown',
            listener: stop
        },
        {
            // The user did not start a drag
            type: 'pointerup',
            listener: stopIfNotDragging
        },
        {
            // if a "dragstart" occurs and the flag is not set,
            // then a drag has not started.
            // Note: could not use "pointercancel" as it is not
            // published in Safari
            // → https://bugs.webkit.org/show_bug.cgi?id=222632
            type: 'dragstart',
            listener: stopIfNotDragging,
            // Need to come after the element adapter
            options: {
                capture: false
            }
        }
    ], {
        // Listening in the capture phase to increase resilience
        // against events being stopped.
        capture: true,
        // Being super clear these should only run once
        once: true
    });
    var unbindMonitor = (0, _adapter.monitorForElements)({
        onGenerateDragPreview: function onGenerateDragPreview() {
            isDragging = true;
        },
        onDrop: function onDrop() {
            isDragging = false;
            stop();
        }
    });
    return (0, _combine.combine)(unbindEvents, unbindMonitor);
}
function watchForInteractionStart(_ref2) {
    var start = _ref2.start;
    return (0, _bindEventListener.bind)(window, {
        // Note: Using "mousedown" rather than "pointerdown" due to a Safari bug.
        // Safari not publish a "pointerdown" on the interaction after a drag
        // → https://bugs.webkit.org/show_bug.cgi?id=279749
        type: 'mousedown',
        listener: function listener(event) {
            // Only starting if pressing down inside a draggable element
            // At this point, we are not sure which if:
            // 1. a text selection drag is starting
            // 2. a draggable managed by pdnd is going to be dragged
            // 3. a draggable not managed by pdnd is going to be dragged
            // 4. The user will be dragging anything at all (might be doing a click)
            if (event.target instanceof HTMLElement && event.target.closest('[draggable="true"]')) start();
        }
    });
}
var api = (0, _makeFixForAdapter.makeFixForAdapter)({
    watchForInteractionStart: watchForInteractionStart,
    watchForInteractionEnd: watchForInteractionEnd
});
function disableDraggingToCrossOriginIFramesForElement() {
    return api.registerUsage();
}

},{"bind-event-listener":"2wrYK","@atlaskit/pragmatic-drag-and-drop/combine":"7FxfW","@atlaskit/pragmatic-drag-and-drop/element/adapter":"K0PL1","./make-fix-for-adapter":"fPBdh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"K0PL1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "draggable", ()=>(0, _elementAdapter.draggable)) // Payload for the draggable being dragged
;
parcelHelpers.export(exports, "dropTargetForElements", ()=>(0, _elementAdapter.dropTargetForElements));
parcelHelpers.export(exports, "monitorForElements", ()=>(0, _elementAdapter.monitorForElements));
var _elementAdapter = require("../../adapter/element-adapter");

},{"../../adapter/element-adapter":"e1eQF","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e1eQF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dropTargetForElements", ()=>dropTargetForElements);
parcelHelpers.export(exports, "monitorForElements", ()=>monitorForElements);
parcelHelpers.export(exports, "draggable", ()=>draggable) /** Common event payload for all events */  /** A map containing payloads for all events */  /** Common event payload for all drop target events */  /** A map containing payloads for all events on drop targets */  /** Arguments given to all feedback functions (eg `canDrag()`) on for a `draggable()` */  /** Arguments given to all feedback functions (eg `canDrop()`) on a `dropTargetForElements()` */  /** Arguments given to all monitor feedback functions (eg `canMonitor()`) for a `monitorForElements` */ ;
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _bindEventListener = require("bind-event-listener");
var _getElementFromPointWithoutHoneyPot = require("../honey-pot-fix/get-element-from-point-without-honey-pot");
var _makeHoneyPotFix = require("../honey-pot-fix/make-honey-pot-fix");
var _makeAdapter = require("../make-adapter/make-adapter");
var _combine = require("../public-utils/combine");
var _once = require("../public-utils/once");
var _addAttribute = require("../util/add-attribute");
var _android = require("../util/android");
var _getInput = require("../util/get-input");
var _textMediaType = require("../util/media-types/text-media-type");
var _urlMediaType = require("../util/media-types/url-media-type");
var _elementAdapterNativeDataKey = require("./element-adapter-native-data-key");
var draggableRegistry = new WeakMap();
function addToRegistry(args) {
    draggableRegistry.set(args.element, args);
    return function cleanup() {
        draggableRegistry.delete(args.element);
    };
}
var honeyPotFix = (0, _makeHoneyPotFix.makeHoneyPotFix)();
var adapter = (0, _makeAdapter.makeAdapter)({
    typeKey: 'element',
    defaultDropEffect: 'move',
    mount: function mount(api) {
        /**  Binding event listeners the `document` rather than `window` so that
     * this adapter always gets preference over the text adapter.
     * `document` is the first `EventTarget` under `window`
     * https://twitter.com/alexandereardon/status/1604658588311465985
     */ return (0, _combine.combine)(honeyPotFix.bindEvents(), (0, _bindEventListener.bind)(document, {
            type: 'dragstart',
            listener: function listener(event) {
                var _entry$dragHandle, _entry$getInitialData, _entry$getInitialData2, _entry$dragHandle2, _entry$getInitialData3, _entry$getInitialData4;
                if (!api.canStart(event)) return;
                // If the "dragstart" event is cancelled, then a drag won't start
                // There will be no further drag operation events (eg no "dragend" event)
                if (event.defaultPrevented) return;
                // Technically `dataTransfer` can be `null` according to the types
                // But that behaviour does not seem to appear in the spec.
                // If there is not `dataTransfer`, we can assume something is wrong and not
                // start a drag
                if (!event.dataTransfer) {
                    // eslint-disable-next-line no-console
                    console.warn("\n              It appears as though you have are not testing DragEvents correctly.\n\n              - If you are unit testing, ensure you have polyfilled DragEvent.\n              - If you are browser testing, ensure you are dispatching drag events correctly.\n\n              Please see our testing guides for more information:\n              https://atlassian.design/components/pragmatic-drag-and-drop/core-package/testing\n            ".replace(/ {2}/g, ''));
                    return;
                }
                // the closest parent that is a draggable element will be marked as
                // the `event.target` for the event
                var target = event.target;
                // this source is only for elements
                // Note: only HTMLElements can have the "draggable" attribute
                if (!(target instanceof HTMLElement)) return null;
                // see if the thing being dragged is owned by us
                var entry = draggableRegistry.get(target);
                // no matching element found
                // → dragging an element with `draggable="true"` that is not controlled by us
                if (!entry) return null;
                /**
         * A text selection drag _can_ have the `draggable` element be
         * the `event.target` if the user is dragging the text selection
         * from the `draggable`.
         *
         * To know if the `draggable` is being dragged, we look at whether any
         * `"text/plain"` data is being dragged. If it is, then a text selection
         * drag is occurring.
         *
         * This behaviour has been validated on:
         *
         * - Chrome@128 on Android@14
         * - Chrome@128 on iOS@17.6.1
         * - Chrome@128 on Windows@11
         * - Chrome@128 on MacOS@14.6.1
         * - Firefox@129 on Windows@11 (not possible for user to select text in a draggable)
         * - Firefox@129 on MacOS@14.6.1 (not possible for user to select text in a draggable)
         *
         * Note: Could usually just use: `event.dataTransfer.types.includes(textMediaType)`
         * but unfortunately ProseMirror is always setting `""` as the dragged text
         *
         * Note: Unfortunately editor is (heavily) leaning on the current functionality today
         * and unwinding it will be a decent amount of effort. So for now, a text selection
         * where the `event.target` is a `draggable` element will still trigger the
         * element adapter.
         *
         * // Future state:
         * if(event.dataTransfer.getData(textMediaType)) {
         * 	return;
         * }
         *
         */ var input = (0, _getInput.getInput)(event);
                var feedback = {
                    element: entry.element,
                    dragHandle: (_entry$dragHandle = entry.dragHandle) !== null && _entry$dragHandle !== void 0 ? _entry$dragHandle : null,
                    input: input
                };
                // Check: does the draggable want to allow dragging?
                if (entry.canDrag && !entry.canDrag(feedback)) {
                    // cancel drag operation if we cannot drag
                    event.preventDefault();
                    return null;
                }
                // Check: is there a drag handle and is the user using it?
                if (entry.dragHandle) {
                    // technically don't need this util, but just being
                    // consistent with how we look up what is under the users
                    // cursor.
                    var over = (0, _getElementFromPointWithoutHoneyPot.getElementFromPointWithoutHoneypot)({
                        x: input.clientX,
                        y: input.clientY
                    });
                    // if we are not dragging from the drag handle (or something inside the drag handle)
                    // then we will cancel the active drag
                    if (!entry.dragHandle.contains(over)) {
                        event.preventDefault();
                        return null;
                    }
                }
                /**
         *  **Goal**
         *  Pass information to other applications
         *
         * **Approach**
         *  Put data into the native data store
         *
         *  **What about the native adapter?**
         *  When the element adapter puts native data into the native data store
         *  the native adapter is not triggered in the current window,
         *  but a native adapter in an external window _can_ be triggered
         *
         *  **Why bake this into core?**
         *  This functionality could be pulled out and exposed inside of
         *  `onGenerateDragPreview`. But decided to make it a part of the
         *  base API as it felt like a common enough use case and ended
         *  up being a similar amount of code to include this function as
         *  it was to expose the hook for it
         */ var nativeData = (_entry$getInitialData = (_entry$getInitialData2 = entry.getInitialDataForExternal) === null || _entry$getInitialData2 === void 0 ? void 0 : _entry$getInitialData2.call(entry, feedback)) !== null && _entry$getInitialData !== void 0 ? _entry$getInitialData : null;
                if (nativeData) for(var _i = 0, _Object$entries = Object.entries(nativeData); _i < _Object$entries.length; _i++){
                    var _Object$entries$_i = (0, _slicedToArrayDefault.default)(_Object$entries[_i], 2), key = _Object$entries$_i[0], data = _Object$entries$_i[1];
                    event.dataTransfer.setData(key, data !== null && data !== void 0 ? data : '');
                }
                /**
         *  📱 For Android devices, a drag operation will not start unless
         * "text/plain" or "text/uri-list" data exists in the native data store
         * https://twitter.com/alexandereardon/status/1732189803754713424
         *
         * Tested on:
         * Device: Google Pixel 5
         * Android version: 14 (November 5, 2023)
         * Chrome version: 120.0
         */ if ((0, _android.isAndroid)() && !event.dataTransfer.types.includes((0, _textMediaType.textMediaType)) && !event.dataTransfer.types.includes((0, _urlMediaType.URLMediaType))) event.dataTransfer.setData((0, _textMediaType.textMediaType), (0, _android.androidFallbackText));
                /**
         * 1. Must set any media type for `iOS15` to work
         * 2. We are also doing adding data so that the native adapter
         * can know that the element adapter has handled this drag
         *
         * We used to wrap this `setData()` in a `try/catch` for Firefox,
         * but it looks like that was not needed.
         *
         * Tested using: https://codesandbox.io/s/checking-firefox-throw-behaviour-on-dragstart-qt8h4f
         *
         * - ✅ Firefox@70.0 (Oct 2019) on macOS Sonoma
         * - ✅ Firefox@70.0 (Oct 2019) on macOS Big Sur
         * - ✅ Firefox@70.0 (Oct 2019) on Windows 10
         *
         * // just checking a few more combinations to be super safe
         *
         * - ✅ Chrome@78 (Oct 2019) on macOS Big Sur
         * - ✅ Chrome@78 (Oct 2019) on Windows 10
         * - ✅ Safari@14.1 on macOS Big Sur
         */ event.dataTransfer.setData((0, _elementAdapterNativeDataKey.elementAdapterNativeDataKey), '');
                var payload = {
                    element: entry.element,
                    dragHandle: (_entry$dragHandle2 = entry.dragHandle) !== null && _entry$dragHandle2 !== void 0 ? _entry$dragHandle2 : null,
                    data: (_entry$getInitialData3 = (_entry$getInitialData4 = entry.getInitialData) === null || _entry$getInitialData4 === void 0 ? void 0 : _entry$getInitialData4.call(entry, feedback)) !== null && _entry$getInitialData3 !== void 0 ? _entry$getInitialData3 : {}
                };
                var dragType = {
                    type: 'element',
                    payload: payload,
                    startedFrom: 'internal'
                };
                api.start({
                    event: event,
                    dragType: dragType
                });
            }
        }));
    },
    dispatchEventToSource: function dispatchEventToSource(_ref) {
        var _draggableRegistry$ge, _draggableRegistry$ge2;
        var eventName = _ref.eventName, payload = _ref.payload;
        // During a drag operation, a draggable can be:
        // - remounted with different functions
        // - removed completely
        // So we need to get the latest entry from the registry in order
        // to call the latest event functions
        (_draggableRegistry$ge = draggableRegistry.get(payload.source.element)) === null || _draggableRegistry$ge === void 0 || (_draggableRegistry$ge2 = _draggableRegistry$ge[eventName]) === null || _draggableRegistry$ge2 === void 0 || _draggableRegistry$ge2.call(_draggableRegistry$ge, // I cannot seem to get the types right here.
        // TS doesn't seem to like that one event can need `nativeSetDragImage`
        // @ts-expect-error
        payload);
    },
    onPostDispatch: honeyPotFix.getOnPostDispatch()
});
var dropTargetForElements = adapter.dropTarget;
var monitorForElements = adapter.monitor;
function draggable(args) {
    if (args.dragHandle && !args.element.contains(args.dragHandle)) // eslint-disable-next-line no-console
    console.warn('Drag handle element must be contained in draggable element', {
        element: args.element,
        dragHandle: args.dragHandle
    });
    var existing = draggableRegistry.get(args.element);
    if (existing) // eslint-disable-next-line no-console
    console.warn('You have already registered a `draggable` on the same element', {
        existing: existing,
        proposed: args
    });
    var cleanup = (0, _combine.combine)(// making the draggable register the adapter rather than drop targets
    // this is because you *must* have a draggable element to start a drag
    // but you _might_ not have any drop targets immediately
    // (You might create drop targets async)
    adapter.registerUsage(), addToRegistry(args), (0, _addAttribute.addAttribute)(args.element, {
        attribute: 'draggable',
        value: 'true'
    }));
    // Wrapping in `once` to prevent unexpected side effects if consumers call
    // the clean up function multiple times.
    return (0, _once.once)(cleanup);
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","bind-event-listener":"2wrYK","../honey-pot-fix/get-element-from-point-without-honey-pot":"33rob","../honey-pot-fix/make-honey-pot-fix":"7cMWT","../make-adapter/make-adapter":"geYPo","../public-utils/combine":"6kYtf","../public-utils/once":"2nBLC","../util/add-attribute":"cd2xU","../util/android":"k39DA","../util/get-input":"aory5","../util/media-types/text-media-type":"6XN7D","../util/media-types/url-media-type":"hWbz4","./element-adapter-native-data-key":"4dJqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"33rob":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getElementFromPointWithoutHoneypot", ()=>getElementFromPointWithoutHoneypot);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _isHoneyPotElement = require("./is-honey-pot-element");
function getElementFromPointWithoutHoneypot(client) {
    // eslint-disable-next-line no-restricted-syntax
    var _document$elementsFro = document.elementsFromPoint(client.x, client.y), _document$elementsFro2 = (0, _slicedToArrayDefault.default)(_document$elementsFro, 2), top = _document$elementsFro2[0], second = _document$elementsFro2[1];
    if (!top) return null;
    if ((0, _isHoneyPotElement.isHoneyPotElement)(top)) return second !== null && second !== void 0 ? second : null;
    return top;
}

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","./is-honey-pot-element":"1tWJP","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1tWJP":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isHoneyPotElement", ()=>isHoneyPotElement);
var _honeyPotDataAttribute = require("./honey-pot-data-attribute");
function isHoneyPotElement(target) {
    return target instanceof Element && target.hasAttribute((0, _honeyPotDataAttribute.honeyPotDataAttribute));
}

},{"./honey-pot-data-attribute":"FO5Q5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"FO5Q5":[function(require,module,exports,__globalThis) {
// pulling this into a separate file so adapter(s) that don't
// need the honey pot can pay as little as possible for it.
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "honeyPotDataAttribute", ()=>honeyPotDataAttribute);
var honeyPotDataAttribute = 'data-pdnd-honey-pot';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7cMWT":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeHoneyPotFix", ()=>makeHoneyPotFix);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _bindEventListener = require("bind-event-listener");
var _maxZIndex = require("../util/max-z-index");
var _honeyPotDataAttribute = require("./honey-pot-data-attribute");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var honeyPotSize = 2;
var halfHoneyPotSize = honeyPotSize / 2;
/**
 * `clientX` and `clientY` can be in sub pixels (eg `2.332`)
 * However, browser hitbox testing is commonly do to the closest pixel.
 *
 * → https://issues.chromium.org/issues/40940531
 *
 * To be sure that the honey pot will be over the `client` position,
 * we `.floor()` `clientX` and`clientY` and then make it `2px` in size.
 **/ function floorToClosestPixel(point) {
    return {
        x: Math.floor(point.x),
        y: Math.floor(point.y)
    };
}
/**
 * We want to make sure the honey pot sits around the users position.
 * This seemed to be the most resilient while testing.
 */ function pullBackByHalfHoneyPotSize(point) {
    return {
        x: point.x - halfHoneyPotSize,
        y: point.y - halfHoneyPotSize
    };
}
/**
 * Prevent the honey pot from changing the window size.
 * This is super unlikely to occur, but just being safe.
 */ function preventGoingBackwardsOffScreen(point) {
    return {
        x: Math.max(point.x, 0),
        y: Math.max(point.y, 0)
    };
}
/**
 * Prevent the honey pot from changing the window size.
 * This is super unlikely to occur, but just being safe.
 */ function preventGoingForwardsOffScreen(point) {
    return {
        x: Math.min(point.x, window.innerWidth - honeyPotSize),
        y: Math.min(point.y, window.innerHeight - honeyPotSize)
    };
}
/**
 * Create a `2x2` `DOMRect` around the `client` position
 */ function getHoneyPotRectFor(_ref) {
    var client = _ref.client;
    var point = preventGoingForwardsOffScreen(preventGoingBackwardsOffScreen(pullBackByHalfHoneyPotSize(floorToClosestPixel(client))));
    // When debugging, it is helpful to
    // make this element a bit bigger
    return DOMRect.fromRect({
        x: point.x,
        y: point.y,
        width: honeyPotSize,
        height: honeyPotSize
    });
}
function getRectStyles(_ref2) {
    var clientRect = _ref2.clientRect;
    return {
        left: "".concat(clientRect.left, "px"),
        top: "".concat(clientRect.top, "px"),
        width: "".concat(clientRect.width, "px"),
        height: "".concat(clientRect.height, "px")
    };
}
function isWithin(_ref3) {
    var client = _ref3.client, clientRect = _ref3.clientRect;
    return(// is within horizontal bounds
    client.x >= clientRect.x && client.x <= clientRect.x + clientRect.width && // is within vertical bounds
    client.y >= clientRect.y && client.y <= clientRect.y + clientRect.height);
}
/**
 * The honey pot fix is designed to get around a painful bug in all browsers.
 *
 * [Overview](https://www.youtube.com/watch?v=udE9qbFTeQg)
 *
 * **Background**
 *
 * When a drag starts, browsers incorrectly think that the users pointer is
 * still depressed where the drag started. Any element that goes under this position
 * will be entered into, causing `"mouseenter"` events and `":hover"` styles to be applied.
 *
 * _This is a violation of the spec_
 *
 * > "From the moment that the user agent is to initiate the drag-and-drop operation,
 * > until the end 	of the drag-and-drop operation, device input events
 * > (e.g. mouse and keyboard events) must be suppressed."
 * >
 * > - https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model
 *
 * _Some impacts_
 *
 * - `":hover"` styles being applied where they shouldn't (looks messy)
 * - components such as tooltips responding to `"mouseenter"` can show during a drag,
 *   and on an element the user isn't even over
 *
 * Bug: https://issues.chromium.org/issues/41129937
 *
 * **Honey pot fix**
 *
 * 1. Create an element where the browser thinks the depressed pointer is
 *    to absorb the incorrect pointer events
 * 2. Remove that element when it is no longer needed
 */ function mountHoneyPot(_ref4) {
    var initial = _ref4.initial;
    var element = document.createElement('div');
    element.setAttribute((0, _honeyPotDataAttribute.honeyPotDataAttribute), 'true');
    // can shift during the drag thanks to Firefox
    var clientRect = getHoneyPotRectFor({
        client: initial
    });
    Object.assign(element.style, _objectSpread(_objectSpread({
        // Setting a background color explicitly to avoid any inherited styles.
        // Looks like this could be `opacity: 0`, but worried that _might_
        // cause the element to be ignored on some platforms.
        // When debugging, set backgroundColor to something like "red".
        backgroundColor: 'transparent',
        position: 'fixed',
        // Being explicit to avoid inheriting styles
        padding: 0,
        margin: 0,
        boxSizing: 'border-box'
    }, getRectStyles({
        clientRect: clientRect
    })), {}, {
        // We want this element to absorb pointer events,
        // it's kind of the whole point 😉
        pointerEvents: 'auto',
        // Want to make sure the honey pot is top of everything else.
        // Don't need to worry about native drag previews, as they will
        // have been rendered (and removed) before the honey pot is rendered
        zIndex: (0, _maxZIndex.maxZIndex)
    }));
    document.body.appendChild(element);
    /**
   *  🦊 In firefox we can get `"pointermove"` events after the drag
   * has started, which is a spec violation.
   * The final `"pointermove"` will reveal where the "depressed" position
   * is for our honey pot fix.
   */ var unbindPointerMove = (0, _bindEventListener.bind)(window, {
        type: 'pointermove',
        listener: function listener(event) {
            var client = {
                x: event.clientX,
                y: event.clientY
            };
            clientRect = getHoneyPotRectFor({
                client: client
            });
            Object.assign(element.style, getRectStyles({
                clientRect: clientRect
            }));
        },
        // using capture so we are less likely to be impacted by event stopping
        options: {
            capture: true
        }
    });
    return function finish(_ref5) {
        var current = _ref5.current;
        // Don't need this any more
        unbindPointerMove();
        // If the user is hover the honey pot, we remove it
        // so that the user can continue to interact with the page normally.
        if (isWithin({
            client: current,
            clientRect: clientRect
        })) {
            element.remove();
            return;
        }
        function cleanup() {
            unbindPostDragEvents();
            element.remove();
        }
        var unbindPostDragEvents = (0, _bindEventListener.bindAll)(window, [
            {
                type: 'pointerdown',
                listener: cleanup
            },
            {
                type: 'pointermove',
                listener: cleanup
            },
            {
                type: 'focusin',
                listener: cleanup
            },
            {
                type: 'focusout',
                listener: cleanup
            },
            // a 'pointerdown' should happen before 'dragstart', but just being super safe
            {
                type: 'dragstart',
                listener: cleanup
            },
            // if the user has dragged something out of the window
            // and then is dragging something back into the window
            // the first events we will see are "dragenter" (and then "dragover").
            // So if we see any of these we need to clear the post drag fix.
            {
                type: 'dragenter',
                listener: cleanup
            },
            {
                type: 'dragover',
                listener: cleanup
            }
        ], {
            // Using `capture` so less likely to be impacted by other code stopping events
            capture: true
        });
    };
}
function makeHoneyPotFix() {
    var latestPointerMove = null;
    function bindEvents() {
        // For sanity, only collecting this value from when events are first bound.
        // This prevents the case where a super old "pointermove" could be used
        // from a prior interaction.
        latestPointerMove = null;
        return (0, _bindEventListener.bind)(window, {
            type: 'pointermove',
            listener: function listener(event) {
                latestPointerMove = {
                    x: event.clientX,
                    y: event.clientY
                };
            },
            // listening for pointer move in capture phase
            // so we are less likely to be impacted by events being stopped.
            options: {
                capture: true
            }
        });
    }
    function getOnPostDispatch() {
        var finish = null;
        return function onPostEvent(_ref6) {
            var eventName = _ref6.eventName, payload = _ref6.payload;
            // We are adding the honey pot `onDragStart` so we don't
            // impact the creation of the native drag preview.
            if (eventName === 'onDragStart') {
                var input = payload.location.initial.input;
                // Sometimes there will be no latest "pointermove" (eg iOS).
                // In which case, we use the start position of the drag.
                var initial = latestPointerMove !== null && latestPointerMove !== void 0 ? latestPointerMove : {
                    x: input.clientX,
                    y: input.clientY
                };
                // Don't need to defensively call `finish()` as `onDrop` from
                // one interaction is guaranteed to be called before `onDragStart`
                // of the next.
                finish = mountHoneyPot({
                    initial: initial
                });
            }
            if (eventName === 'onDrop') {
                var _finish;
                var _input = payload.location.current.input;
                (_finish = finish) === null || _finish === void 0 || _finish({
                    current: {
                        x: _input.clientX,
                        y: _input.clientY
                    }
                });
                finish = null;
                // this interaction is finished, we want to use
                // the latest "pointermove" for each interaction
                latestPointerMove = null;
            }
        };
    }
    return {
        bindEvents: bindEvents,
        getOnPostDispatch: getOnPostDispatch
    };
}

},{"@babel/runtime/helpers/defineProperty":"azbUC","bind-event-listener":"2wrYK","../util/max-z-index":"3YBfg","./honey-pot-data-attribute":"FO5Q5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3YBfg":[function(require,module,exports,__globalThis) {
// Maximum possible z-index
// https://stackoverflow.com/questions/491052/minimum-and-maximum-value-of-z-index
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "maxZIndex", ()=>maxZIndex);
var maxZIndex = 2147483647;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"geYPo":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeAdapter", ()=>makeAdapter);
var _lifecycleManager = require("../ledger/lifecycle-manager");
var _usageLedger = require("../ledger/usage-ledger");
var _makeDropTarget = require("./make-drop-target");
var _makeMonitor = require("./make-monitor");
function makeAdapter(_ref) {
    var typeKey = _ref.typeKey, mount = _ref.mount, dispatchEventToSource = _ref.dispatchEventToSource, onPostDispatch = _ref.onPostDispatch, defaultDropEffect = _ref.defaultDropEffect;
    var monitorAPI = (0, _makeMonitor.makeMonitor)();
    var dropTargetAPI = (0, _makeDropTarget.makeDropTarget)({
        typeKey: typeKey,
        defaultDropEffect: defaultDropEffect
    });
    function dispatchEvent(args) {
        // 1. forward the event to source
        dispatchEventToSource === null || dispatchEventToSource === void 0 || dispatchEventToSource(args);
        // 2. forward the event to relevant dropTargets
        dropTargetAPI.dispatchEvent(args);
        // 3. forward event to monitors
        monitorAPI.dispatchEvent(args);
        // 4. post consumer dispatch (used for honey pot fix)
        onPostDispatch === null || onPostDispatch === void 0 || onPostDispatch(args);
    }
    function start(_ref2) {
        var event = _ref2.event, dragType = _ref2.dragType;
        (0, _lifecycleManager.lifecycle).start({
            event: event,
            dragType: dragType,
            getDropTargetsOver: dropTargetAPI.getIsOver,
            dispatchEvent: dispatchEvent
        });
    }
    function registerUsage() {
        function mountAdapter() {
            var api = {
                canStart: (0, _lifecycleManager.lifecycle).canStart,
                start: start
            };
            return mount(api);
        }
        return (0, _usageLedger.register)({
            typeKey: typeKey,
            mount: mountAdapter
        });
    }
    return {
        registerUsage: registerUsage,
        dropTarget: dropTargetAPI.dropTargetForConsumers,
        monitor: monitorAPI.monitorForConsumers
    };
}

},{"../ledger/lifecycle-manager":"7Iq69","../ledger/usage-ledger":"aD4pk","./make-drop-target":"5ozJA","./make-monitor":"16WjR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7Iq69":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lifecycle", ()=>lifecycle);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _bindEventListener = require("bind-event-listener");
var _getElementFromPointWithoutHoneyPot = require("../honey-pot-fix/get-element-from-point-without-honey-pot");
var _isHoneyPotElement = require("../honey-pot-fix/is-honey-pot-element");
var _isLeavingWindow = require("../util/changing-window/is-leaving-window");
var _detectBrokenDrag = require("../util/detect-broken-drag");
var _getInput = require("../util/get-input");
var _dispatchConsumerEvent = require("./dispatch-consumer-event");
var globalState = {
    isActive: false
};
function canStart() {
    return !globalState.isActive;
}
function getNativeSetDragImage(event) {
    if (event.dataTransfer) // need to use `.bind` as `setDragImage` is required
    // to be run with `event.dataTransfer` as the "this" context
    return event.dataTransfer.setDragImage.bind(event.dataTransfer);
    return null;
}
function hasHierarchyChanged(_ref) {
    var current = _ref.current, next = _ref.next;
    if (current.length !== next.length) return true;
    // not checking stickiness, data or dropEffect,
    // just whether the hierarchy has changed
    for(var i = 0; i < current.length; i++){
        if (current[i].element !== next[i].element) return true;
    }
    return false;
}
function start(_ref2) {
    var event = _ref2.event, dragType = _ref2.dragType, getDropTargetsOver = _ref2.getDropTargetsOver, dispatchEvent = _ref2.dispatchEvent;
    if (!canStart()) return;
    var initial = getStartLocation({
        event: event,
        dragType: dragType,
        getDropTargetsOver: getDropTargetsOver
    });
    globalState.isActive = true;
    var state = {
        current: initial
    };
    // Setting initial drop effect for the drag
    setDropEffectOnEvent({
        event: event,
        current: initial.dropTargets
    });
    var dispatch = (0, _dispatchConsumerEvent.makeDispatch)({
        source: dragType.payload,
        dispatchEvent: dispatchEvent,
        initial: initial
    });
    function updateState(next) {
        // only looking at whether hierarchy has changed to determine whether something as 'changed'
        var hasChanged = hasHierarchyChanged({
            current: state.current.dropTargets,
            next: next.dropTargets
        });
        // Always updating the state to include latest data, dropEffect and stickiness
        // Only updating consumers if the hierarchy has changed in some way
        // Consumers can get the latest data by using `onDrag`
        state.current = next;
        if (hasChanged) dispatch.dragUpdate({
            current: state.current
        });
    }
    function onUpdateEvent(event) {
        var input = (0, _getInput.getInput)(event);
        // If we are over the honey pot, we need to get the element
        // that the user would have been over if not for the honey pot
        var target = (0, _isHoneyPotElement.isHoneyPotElement)(event.target) ? (0, _getElementFromPointWithoutHoneyPot.getElementFromPointWithoutHoneypot)({
            x: input.clientX,
            y: input.clientY
        }) : event.target;
        var nextDropTargets = getDropTargetsOver({
            target: target,
            input: input,
            source: dragType.payload,
            current: state.current.dropTargets
        });
        if (nextDropTargets.length) {
            // 🩸 must call `event.preventDefault()` to allow a browser drop to occur
            event.preventDefault();
            setDropEffectOnEvent({
                event: event,
                current: nextDropTargets
            });
        }
        updateState({
            dropTargets: nextDropTargets,
            input: input
        });
    }
    function cancel() {
        // The spec behaviour is that when a drag is cancelled, or when dropping on no drop targets,
        // a "dragleave" event is fired on the active drop target before a "dragend" event.
        // We are replicating that behaviour in `cancel` if there are any active drop targets to
        // ensure consistent behaviour.
        //
        // Note: When cancelling, or dropping on no drop targets, a "dragleave" event
        // will have already cleared the dropTargets to `[]` (as that particular "dragleave" has a `relatedTarget` of `null`)
        if (state.current.dropTargets.length) updateState({
            dropTargets: [],
            input: state.current.input
        });
        dispatch.drop({
            current: state.current,
            updatedSourcePayload: null
        });
        finish();
    }
    function finish() {
        globalState.isActive = false;
        unbindEvents();
    }
    var unbindEvents = (0, _bindEventListener.bindAll)(window, [
        {
            // 👋 Note: we are repurposing the `dragover` event as our `drag` event
            // this is because firefox does not publish pointer coordinates during
            // a `drag` event, but does for every other type of drag event
            // `dragover` fires on all elements that are being dragged over
            // Because we are binding to `window` - our `dragover` is effectively the same as a `drag`
            // 🦊😤
            type: 'dragover',
            listener: function listener(event) {
                // We need to regularly calculate the drop targets in order to allow:
                //  - dynamic `canDrop()` checks
                //  - rapid updating `getData()` calls to attach data in response to user input (eg for edge detection)
                // Sadly we cannot schedule inspecting changes resulting from this event
                // we need to be able to conditionally cancel the event with `event.preventDefault()`
                // to enable the correct native drop experience.
                // 1. check to see if anything has changed
                onUpdateEvent(event);
                // 2. let consumers know a move has occurred
                // This will include the latest 'input' values
                dispatch.drag({
                    current: state.current
                });
            }
        },
        {
            type: 'dragenter',
            listener: onUpdateEvent
        },
        {
            type: 'dragleave',
            listener: function listener(event) {
                if (!(0, _isLeavingWindow.isLeavingWindow)({
                    dragLeave: event
                })) return;
                /**
       * At this point we don't know if a drag is being cancelled,
       * or if a drag is leaving the `window`.
       *
       * Both have:
       *   1. "dragleave" (with `relatedTarget: null`)
       *   2. "dragend" (a "dragend" can occur when outside the `window`)
       *
       * **Clearing drop targets**
       *
       * For either case we are clearing the the drop targets
       *
       * - cancelling: we clear drop targets in `"dragend"` anyway
       * - leaving the `window`: we clear the drop targets (to clear stickiness)
       *
       * **Leaving the window and finishing the drag**
       *
       * _internal drags_
       *
       * - The drag continues when the user is outside the `window`
       *   and can resume if the user drags back over the `window`,
       *   or end when the user drops in an external `window`.
       * - We will get a `"dragend"`, or we can listen for other
       *   events to determine the drag is finished when the user re-enters the `window`).
       *
       * _external drags_
       *
       * - We conclude the drag operation.
       * - We have no idea if the user will drag back over the `window`,
       *   or if the drag ends elsewhere.
       * - We will create a new drag if the user re-enters the `window`.
       *
       * **Not updating `input`**
       *
       * 🐛 Bug[Chrome] the final `"dragleave"` has default input values (eg `clientX == 0`)
       * Workaround: intentionally not updating `input` in "dragleave"
       * rather than the users current input values
       * - [Conversation](https://twitter.com/alexandereardon/status/1642697633864241152)
       * - [Bug](https://bugs.chromium.org/p/chromium/issues/detail?id=1429937)
       **/ updateState({
                    input: state.current.input,
                    dropTargets: []
                });
                if (dragType.startedFrom === 'external') cancel();
            }
        },
        {
            // A "drop" can only happen if the browser allowed the drop
            type: 'drop',
            listener: function listener(event) {
                // Capture the final input.
                // We are capturing the final `input` for the
                // most accurate honey pot experience
                state.current = {
                    dropTargets: state.current.dropTargets,
                    input: (0, _getInput.getInput)(event)
                };
                /** If there are no drop targets, then we will get
       * a "drop" event if:
       * - `preventUnhandled()` is being used
       * - there is an unmanaged drop target (eg another library)
       * In these cases, it's up to the consumer
       * to handle the drop if it's not over one of our drop targets
       * - `preventUnhandled()` will cancel the "drop"
       * - unmanaged drop targets can handle the "drop" how they want to
       * We won't call `event.preventDefault()` in this call path */ if (!state.current.dropTargets.length) {
                    cancel();
                    return;
                }
                event.preventDefault();
                // applying the latest drop effect to the event
                setDropEffectOnEvent({
                    event: event,
                    current: state.current.dropTargets
                });
                dispatch.drop({
                    current: state.current,
                    // When dropping something native, we need to extract the latest
                    // `.items` from the "drop" event as it is now accessible
                    updatedSourcePayload: dragType.type === 'external' ? dragType.getDropPayload(event) : null
                });
                finish();
            }
        },
        {
            // "dragend" fires when on the drag source (eg a draggable element)
            // when the drag is finished.
            // "dragend" will fire after "drop" (if there was a successful drop)
            // "dragend" does not fire if the draggable source has been removed during the drag
            // or for external drag sources (eg files)
            // This "dragend" listener will not fire if there was a successful drop
            // as we will have already removed the event listener
            type: 'dragend',
            listener: function listener(event) {
                // In firefox, the position of the "dragend" event can
                // be a bit different to the last "dragover" event.
                // Updating the input so we can get the best possible
                // information for the honey pot.
                state.current = {
                    dropTargets: state.current.dropTargets,
                    input: (0, _getInput.getInput)(event)
                };
                cancel();
            }
        }
    ].concat((0, _toConsumableArrayDefault.default)((0, _detectBrokenDrag.getBindingsForBrokenDrags)({
        onDragEnd: cancel
    }))), // Once we have started a managed drag operation it is important that we see / own all drag events
    // We got one adoption bug pop up where some code was stopping (`event.stopPropagation()`)
    // all "drop" events in the bubble phase on the `document.body`.
    // This meant that we never saw the "drop" event.
    {
        capture: true
    });
    dispatch.start({
        nativeSetDragImage: getNativeSetDragImage(event)
    });
}
function setDropEffectOnEvent(_ref3) {
    var _current$;
    var event = _ref3.event, current = _ref3.current;
    // setting the `dropEffect` to be the innerMost drop targets dropEffect
    var innerMost = (_current$ = current[0]) === null || _current$ === void 0 ? void 0 : _current$.dropEffect;
    if (innerMost != null && event.dataTransfer) event.dataTransfer.dropEffect = innerMost;
}
function getStartLocation(_ref4) {
    var event = _ref4.event, dragType = _ref4.dragType, getDropTargetsOver = _ref4.getDropTargetsOver;
    var input = (0, _getInput.getInput)(event);
    // When dragging from outside of the browser,
    // the drag is not being sourced from any local drop targets
    if (dragType.startedFrom === 'external') return {
        input: input,
        dropTargets: []
    };
    var dropTargets = getDropTargetsOver({
        input: input,
        source: dragType.payload,
        target: event.target,
        current: []
    });
    return {
        input: input,
        dropTargets: dropTargets
    };
}
var lifecycle = {
    canStart: canStart,
    start: start
};

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","bind-event-listener":"2wrYK","../honey-pot-fix/get-element-from-point-without-honey-pot":"33rob","../honey-pot-fix/is-honey-pot-element":"1tWJP","../util/changing-window/is-leaving-window":"7v7sc","../util/detect-broken-drag":"gcRM4","../util/get-input":"aory5","./dispatch-consumer-event":"iXiC4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7v7sc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isLeavingWindow", ()=>isLeavingWindow);
var _isFirefox = require("../is-firefox");
var _isSafari = require("../is-safari");
var _countEventsForSafari = require("./count-events-for-safari");
var _isFromAnotherWindow = require("./is-from-another-window");
function isLeavingWindow(_ref) {
    var dragLeave = _ref.dragLeave;
    var type = dragLeave.type, relatedTarget = dragLeave.relatedTarget;
    if (type !== 'dragleave') return false;
    if ((0, _isSafari.isSafari)()) return (0, _countEventsForSafari.isLeavingWindowInSafari)({
        dragLeave: dragLeave
    });
    // Standard check: if going to `null` we are leaving the `window`
    if (relatedTarget == null) return true;
    /**
   * 🦊 Exception: `iframe` in Firefox (`125.0`)
   *
   * Case 1: parent `window` → child `iframe`
   * `dragLeave.relatedTarget` is element _inside_ the child `iframe`
   * (foreign element)
   *
   * Case 2: child `iframe` → parent `window`
   * `dragLeave.relatedTarget` is the `iframe` in the parent `window`
   * (foreign element)
   */ if ((0, _isFirefox.isFirefox)()) return (0, _isFromAnotherWindow.isFromAnotherWindow)(relatedTarget);
    /**
   * 🌏 Exception: `iframe` in Chrome (`124.0`)
   *
   * Case 1: parent `window` → child `iframe`
   * `dragLeave.relatedTarget` is the `iframe` in the parent `window`
   *
   * Case 2: child `iframe` → parent `window`
   * `dragLeave.relatedTarget` is `null` *(standard check)*
   */ // Case 2
    // Using `instanceof` check as the element will be in the same `window`
    return relatedTarget instanceof HTMLIFrameElement;
}

},{"../is-firefox":"1GbDG","../is-safari":"dx1gN","./count-events-for-safari":"5EwCI","./is-from-another-window":"a1tI1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1GbDG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isFirefox", ()=>isFirefox);
var _once = require("../public-utils/once");
var isFirefox = (0, _once.once)(function isFirefox() {
    return navigator.userAgent.includes('Firefox');
});

},{"../public-utils/once":"2nBLC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2nBLC":[function(require,module,exports,__globalThis) {
/** Provide a function that you only ever want to be called a single time */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "once", ()=>once);
function once(fn) {
    var cache = null;
    return function wrapped() {
        if (!cache) {
            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            var result = fn.apply(this, args);
            cache = {
                result: result
            };
        }
        return cache.result;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dx1gN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSafari", ()=>isSafari);
var _once = require("../public-utils/once");
var isSafari = (0, _once.once)(function isSafari() {
    var _navigator = navigator, userAgent = _navigator.userAgent;
    return userAgent.includes('AppleWebKit') && !userAgent.includes('Chrome');
});

},{"../public-utils/once":"2nBLC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5EwCI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isEnteringWindowInSafari", ()=>isEnteringWindowInSafari);
parcelHelpers.export(exports, "isLeavingWindowInSafari", ()=>isLeavingWindowInSafari);
var _bindEventListener = require("bind-event-listener");
var _isSafari = require("../is-safari");
/* For "dragenter" events, the browser should set `relatedTarget` to the previous element.
 * For external drag operations, our first "dragenter" event should have a `event.relatedTarget` of `null`.
 *
 *  Unfortunately in Safari `event.relatedTarget` is *always* set to `null`
 *  Safari bug: https://bugs.webkit.org/show_bug.cgi?id=242627
 *  To work around this we count "dragenter" and "dragleave" events */ // Using symbols for event properties so we don't clash with
// anything on the `event` object
var symbols = {
    isLeavingWindow: Symbol('leaving'),
    isEnteringWindow: Symbol('entering')
};
function isEnteringWindowInSafari(_ref) {
    var dragEnter = _ref.dragEnter;
    if (!(0, _isSafari.isSafari)()) return false;
    return dragEnter.hasOwnProperty(symbols.isEnteringWindow);
}
function isLeavingWindowInSafari(_ref2) {
    var dragLeave = _ref2.dragLeave;
    if (!(0, _isSafari.isSafari)()) return false;
    return dragLeave.hasOwnProperty(symbols.isLeavingWindow);
}
(function fixSafari() {
    // Don't do anything when server side rendering
    if (typeof window === 'undefined') return;
    if (!(0, _isSafari.isSafari)()) return;
    function getInitialState() {
        return {
            enterCount: 0,
            isOverWindow: false
        };
    }
    var state = getInitialState();
    function resetState() {
        state = getInitialState();
    }
    // These event listeners are bound _forever_ and _never_ removed
    // We don't bother cleaning up these event listeners (for now)
    // as this workaround is only for Safari
    // This is how the event count works:
    //
    // lift (+1 enterCount)
    // - dragstart(draggable) [enterCount: 0]
    // - dragenter(draggable) [enterCount: 1]
    // leaving draggable (+0 enterCount)
    // - dragenter(document.body) [enterCount: 2]
    // - dragleave(draggable) [enterCount: 1]
    // leaving window (-1 enterCount)
    // - dragleave(document.body) [enterCount: 0] {leaving the window}
    // Things to note:
    // - dragenter and dragleave bubble
    // - the first dragenter when entering a window might not be on `window`
    //   - it could be on an element that is pressed up against the window
    //   - (so we cannot rely on `event.target` values)
    (0, _bindEventListener.bindAll)(window, [
        {
            type: 'dragstart',
            listener: function listener() {
                state.enterCount = 0;
                // drag start occurs in the source window
                state.isOverWindow = true;
            // When a drag first starts it will also trigger a "dragenter" on the draggable element
            }
        },
        {
            type: 'drop',
            listener: resetState
        },
        {
            type: 'dragend',
            listener: resetState
        },
        {
            type: 'dragenter',
            listener: function listener(event) {
                if (!state.isOverWindow && state.enterCount === 0) // Patching the `event` object
                // The `event` object is shared with all event listeners for the event
                // @ts-expect-error: adding property to the event object
                event[symbols.isEnteringWindow] = true;
                state.isOverWindow = true;
                state.enterCount++;
            }
        },
        {
            type: 'dragleave',
            listener: function listener(event) {
                state.enterCount--;
                if (state.isOverWindow && state.enterCount === 0) {
                    // Patching the `event` object as it is shared with all event listeners
                    // The `event` object is shared with all event listeners for the event
                    // @ts-expect-error: adding property to the event object
                    event[symbols.isLeavingWindow] = true;
                    state.isOverWindow = false;
                }
            }
        }
    ], // using `capture: true` so that adding event listeners
    // in bubble phase will have the correct symbols
    {
        capture: true
    });
})();

},{"bind-event-listener":"2wrYK","../is-safari":"dx1gN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"a1tI1":[function(require,module,exports,__globalThis) {
/**
 * Does the `EventTarget` look like a `Node` based on "duck typing".
 *
 * Helpful when the `Node` might be outside of the current document
 * so we cannot to an `target instanceof Node` check.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Is an `EventTarget` a `Node` from another `window`?
 */ parcelHelpers.export(exports, "isFromAnotherWindow", ()=>isFromAnotherWindow);
function isNodeLike(target) {
    return 'nodeName' in target;
}
function isFromAnotherWindow(eventTarget) {
    return isNodeLike(eventTarget) && eventTarget.ownerDocument !== document;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gcRM4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getBindingsForBrokenDrags", ()=>getBindingsForBrokenDrags);
function getBindingsForBrokenDrags(_ref) {
    var onDragEnd = _ref.onDragEnd;
    return [
        // ## Detecting drag ending for removed draggables
        //
        // If a draggable element is removed during a drag and the user drops:
        // 1. if over a valid drop target: we get a "drop" event to know the drag is finished
        // 2. if not over a valid drop target (or cancelled): we get nothing
        // The "dragend" event will not fire on the source draggable if it has been
        // removed from the DOM.
        // So we need to figure out if a drag operation has finished by looking at other events
        // We can do this by looking at other events
        // ### First detection: "pointermove" events
        // 1. "pointermove" events cannot fire during a drag and drop operation
        // according to the spec. So if we get a "pointermove" it means that
        // the drag and drop operations has finished. So if we get a "pointermove"
        // we know that the drag is over
        // 2. 🦊😤 Drag and drop operations are _supposed_ to suppress
        // other pointer events. However, firefox will allow a few
        // pointer event to get through after a drag starts.
        // The most I've seen is 3
        {
            type: 'pointermove',
            listener: function() {
                var callCount = 0;
                return function listener() {
                    // Using 20 as it is far bigger than the most observed (3)
                    if (callCount < 20) {
                        callCount++;
                        return;
                    }
                    onDragEnd();
                };
            }()
        },
        // ### Second detection: "pointerdown" events
        // If we receive this event then we know that a drag operation has finished
        // and potentially another one is about to start.
        // Note: `pointerdown` fires on all browsers / platforms before "dragstart"
        {
            type: 'pointerdown',
            listener: onDragEnd
        }
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aory5":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getInput", ()=>getInput);
function getInput(event) {
    return {
        altKey: event.altKey,
        button: event.button,
        buttons: event.buttons,
        ctrlKey: event.ctrlKey,
        metaKey: event.metaKey,
        shiftKey: event.shiftKey,
        clientX: event.clientX,
        clientY: event.clientY,
        pageX: event.pageX,
        pageY: event.pageY
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iXiC4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDispatch", ()=>makeDispatch);
var _rafSchd = require("raf-schd");
var _rafSchdDefault = parcelHelpers.interopDefault(_rafSchd);
var scheduleOnDrag = (0, _rafSchdDefault.default)(function(fn) {
    return fn();
});
var dragStart = function() {
    var scheduled = null;
    function schedule(fn) {
        var frameId = requestAnimationFrame(function() {
            scheduled = null;
            fn();
        });
        scheduled = {
            frameId: frameId,
            fn: fn
        };
    }
    function flush() {
        if (scheduled) {
            cancelAnimationFrame(scheduled.frameId);
            scheduled.fn();
            scheduled = null;
        }
    }
    return {
        schedule: schedule,
        flush: flush
    };
}();
function makeDispatch(_ref) {
    var source = _ref.source, initial = _ref.initial, dispatchEvent = _ref.dispatchEvent;
    var previous = {
        dropTargets: []
    };
    function safeDispatch(args) {
        dispatchEvent(args);
        previous = {
            dropTargets: args.payload.location.current.dropTargets
        };
    }
    var dispatch = {
        start: function start(_ref2) {
            var nativeSetDragImage = _ref2.nativeSetDragImage;
            // Ensuring that both `onGenerateDragPreview` and `onDragStart` get the same location.
            // We do this so that `previous` is`[]` in `onDragStart` (which is logical)
            var location = {
                current: initial,
                previous: previous,
                initial: initial
            };
            // a `onGenerateDragPreview` does _not_ add another entry for `previous`
            // onDragPreview
            safeDispatch({
                eventName: 'onGenerateDragPreview',
                payload: {
                    source: source,
                    location: location,
                    nativeSetDragImage: nativeSetDragImage
                }
            });
            dragStart.schedule(function() {
                safeDispatch({
                    eventName: 'onDragStart',
                    payload: {
                        source: source,
                        location: location
                    }
                });
            });
        },
        dragUpdate: function dragUpdate(_ref3) {
            var current = _ref3.current;
            dragStart.flush();
            scheduleOnDrag.cancel();
            safeDispatch({
                eventName: 'onDropTargetChange',
                payload: {
                    source: source,
                    location: {
                        initial: initial,
                        previous: previous,
                        current: current
                    }
                }
            });
        },
        drag: function drag(_ref4) {
            var current = _ref4.current;
            scheduleOnDrag(function() {
                dragStart.flush();
                var location = {
                    initial: initial,
                    previous: previous,
                    current: current
                };
                safeDispatch({
                    eventName: 'onDrag',
                    payload: {
                        source: source,
                        location: location
                    }
                });
            });
        },
        drop: function drop(_ref5) {
            var current = _ref5.current, updatedSourcePayload = _ref5.updatedSourcePayload;
            dragStart.flush();
            scheduleOnDrag.cancel();
            safeDispatch({
                eventName: 'onDrop',
                payload: {
                    source: updatedSourcePayload !== null && updatedSourcePayload !== void 0 ? updatedSourcePayload : source,
                    location: {
                        current: current,
                        previous: previous,
                        initial: initial
                    }
                }
            });
        }
    };
    return dispatch;
}

},{"raf-schd":"je3lA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"je3lA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var rafSchd = function rafSchd(fn) {
    var lastArgs = [];
    var frameId = null;
    var wrapperFn = function wrapperFn() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        lastArgs = args;
        if (frameId) return;
        frameId = requestAnimationFrame(function() {
            frameId = null;
            fn.apply(void 0, lastArgs);
        });
    };
    wrapperFn.cancel = function() {
        if (!frameId) return;
        cancelAnimationFrame(frameId);
        frameId = null;
    };
    return wrapperFn;
};
exports.default = rafSchd;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aD4pk":[function(require,module,exports,__globalThis) {
// Extending `Map` to allow us to link Key and Values together
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "register", ()=>register);
var ledger = new Map();
function registerUsage(_ref) {
    var typeKey = _ref.typeKey, mount = _ref.mount;
    var entry = ledger.get(typeKey);
    if (entry) {
        entry.usageCount++;
        return entry;
    }
    var initial = {
        typeKey: typeKey,
        unmount: mount(),
        usageCount: 1
    };
    ledger.set(typeKey, initial);
    return initial;
}
function register(args) {
    var entry = registerUsage(args);
    return function unregister() {
        entry.usageCount--;
        if (entry.usageCount > 0) return;
        // Only a single usage left, remove it
        entry.unmount();
        ledger.delete(args.typeKey);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5ozJA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDropTarget", ()=>makeDropTarget);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _combine = require("../public-utils/combine");
var _once = require("../public-utils/once");
var _addAttribute = require("../util/add-attribute");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function copyReverse(array) {
    return array.slice(0).reverse();
}
function makeDropTarget(_ref) {
    var typeKey = _ref.typeKey, defaultDropEffect = _ref.defaultDropEffect;
    var registry = new WeakMap();
    var dropTargetDataAtt = "data-drop-target-for-".concat(typeKey);
    var dropTargetSelector = "[".concat(dropTargetDataAtt, "]");
    function addToRegistry(args) {
        registry.set(args.element, args);
        return function() {
            return registry.delete(args.element);
        };
    }
    function dropTargetForConsumers(args) {
        var existing = registry.get(args.element);
        if (existing) // eslint-disable-next-line no-console
        console.warn("You have already registered a [".concat(typeKey, "] dropTarget on the same element"), {
            existing: existing,
            proposed: args
        });
        if (args.element instanceof HTMLIFrameElement) // eslint-disable-next-line no-console
        console.warn("\n            We recommend not registering <iframe> elements as drop targets\n            as it can result in some strange browser event ordering.\n          " // Removing newlines and excessive whitespace
        .replace(/\s{2,}/g, ' ').trim());
        var cleanup = (0, _combine.combine)((0, _addAttribute.addAttribute)(args.element, {
            attribute: dropTargetDataAtt,
            value: 'true'
        }), addToRegistry(args));
        // Wrapping in `once` to prevent unexpected side effects if consumers call
        // the clean up function multiple times.
        return (0, _once.once)(cleanup);
    }
    function getActualDropTargets(_ref2) {
        var _args$getData, _args$getData2, _args$getDropEffect, _args$getDropEffect2;
        var source = _ref2.source, target = _ref2.target, input = _ref2.input, _ref2$result = _ref2.result, result = _ref2$result === void 0 ? [] : _ref2$result;
        if (target == null) return result;
        if (!(target instanceof Element)) {
            // For "text-selection" drags, the original `target`
            // is not an `Element`, so we need to start looking from
            // the parent element
            if (target instanceof Node) return getActualDropTargets({
                source: source,
                target: target.parentElement,
                input: input,
                result: result
            });
            // not sure what we are working with,
            // so we can exit.
            return result;
        }
        var closest = target.closest(dropTargetSelector);
        // Cannot find anything else
        if (closest == null) return result;
        var args = registry.get(closest);
        // error: something had a dropTargetSelector but we could not
        // find a match. For now, failing silently
        if (args == null) return result;
        var feedback = {
            input: input,
            source: source,
            element: args.element
        };
        // if dropping is not allowed, skip this drop target
        // and continue looking up the DOM tree
        if (args.canDrop && !args.canDrop(feedback)) return getActualDropTargets({
            source: source,
            target: args.element.parentElement,
            input: input,
            result: result
        });
        // calculate our new record
        var data = (_args$getData = (_args$getData2 = args.getData) === null || _args$getData2 === void 0 ? void 0 : _args$getData2.call(args, feedback)) !== null && _args$getData !== void 0 ? _args$getData : {};
        var dropEffect = (_args$getDropEffect = (_args$getDropEffect2 = args.getDropEffect) === null || _args$getDropEffect2 === void 0 ? void 0 : _args$getDropEffect2.call(args, feedback)) !== null && _args$getDropEffect !== void 0 ? _args$getDropEffect : defaultDropEffect;
        var record = {
            data: data,
            element: args.element,
            dropEffect: dropEffect,
            // we are collecting _actual_ drop targets, so these are
            // being applied _not_ due to stickiness
            isActiveDueToStickiness: false
        };
        return getActualDropTargets({
            source: source,
            target: args.element.parentElement,
            input: input,
            // Using bubble ordering. Same ordering as `event.getPath()`
            result: [].concat((0, _toConsumableArrayDefault.default)(result), [
                record
            ])
        });
    }
    function notifyCurrent(_ref3) {
        var eventName = _ref3.eventName, payload = _ref3.payload;
        var _iterator = _createForOfIteratorHelper(payload.location.current.dropTargets), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var _entry$eventName;
                var record = _step.value;
                var entry = registry.get(record.element);
                var args = _objectSpread(_objectSpread({}, payload), {}, {
                    self: record
                });
                entry === null || entry === void 0 || (_entry$eventName = entry[eventName]) === null || _entry$eventName === void 0 || _entry$eventName.call(entry, // I cannot seem to get the types right here.
                // TS doesn't seem to like that one event can need `nativeSetDragImage`
                // @ts-expect-error
                args);
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
    }
    var actions = {
        onGenerateDragPreview: notifyCurrent,
        onDrag: notifyCurrent,
        onDragStart: notifyCurrent,
        onDrop: notifyCurrent,
        onDropTargetChange: function onDropTargetChange(_ref4) {
            var payload = _ref4.payload;
            var isCurrent = new Set(payload.location.current.dropTargets.map(function(record) {
                return record.element;
            }));
            var visited = new Set();
            var _iterator2 = _createForOfIteratorHelper(payload.location.previous.dropTargets), _step2;
            try {
                for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
                    var _entry$onDropTargetCh;
                    var record = _step2.value;
                    visited.add(record.element);
                    var entry = registry.get(record.element);
                    var isOver = isCurrent.has(record.element);
                    var args = _objectSpread(_objectSpread({}, payload), {}, {
                        self: record
                    });
                    entry === null || entry === void 0 || (_entry$onDropTargetCh = entry.onDropTargetChange) === null || _entry$onDropTargetCh === void 0 || _entry$onDropTargetCh.call(entry, args);
                    // if we cannot find the drop target in the current array, then it has been left
                    if (!isOver) {
                        var _entry$onDragLeave;
                        entry === null || entry === void 0 || (_entry$onDragLeave = entry.onDragLeave) === null || _entry$onDragLeave === void 0 || _entry$onDragLeave.call(entry, args);
                    }
                }
            } catch (err) {
                _iterator2.e(err);
            } finally{
                _iterator2.f();
            }
            var _iterator3 = _createForOfIteratorHelper(payload.location.current.dropTargets), _step3;
            try {
                for(_iterator3.s(); !(_step3 = _iterator3.n()).done;){
                    var _entry$onDropTargetCh2, _entry$onDragEnter;
                    var _record = _step3.value;
                    // already published an update to this drop target
                    if (visited.has(_record.element)) continue;
                    // at this point we have a new drop target that is being entered into
                    var _args = _objectSpread(_objectSpread({}, payload), {}, {
                        self: _record
                    });
                    var _entry = registry.get(_record.element);
                    _entry === null || _entry === void 0 || (_entry$onDropTargetCh2 = _entry.onDropTargetChange) === null || _entry$onDropTargetCh2 === void 0 || _entry$onDropTargetCh2.call(_entry, _args);
                    _entry === null || _entry === void 0 || (_entry$onDragEnter = _entry.onDragEnter) === null || _entry$onDragEnter === void 0 || _entry$onDragEnter.call(_entry, _args);
                }
            } catch (err) {
                _iterator3.e(err);
            } finally{
                _iterator3.f();
            }
        }
    };
    function dispatchEvent(args) {
        actions[args.eventName](args);
    }
    function getIsOver(_ref5) {
        var source = _ref5.source, target = _ref5.target, input = _ref5.input, current = _ref5.current;
        var actual = getActualDropTargets({
            source: source,
            target: target,
            input: input
        });
        // stickiness is only relevant when we have less
        // drop targets than we did before
        if (actual.length >= current.length) return actual;
        // less 'actual' drop targets than before,
        // we need to see if 'stickiness' applies
        // An old drop target will continue to be dropped on if:
        // 1. it has the same parent
        // 2. nothing exists in it's previous index
        var lastCaptureOrdered = copyReverse(current);
        var actualCaptureOrdered = copyReverse(actual);
        var resultCaptureOrdered = [];
        for(var index = 0; index < lastCaptureOrdered.length; index++){
            var _argsForLast$getIsSti;
            var last = lastCaptureOrdered[index];
            var fresh = actualCaptureOrdered[index];
            // if a record is in the new index -> use that
            // it will have the latest data + dropEffect
            if (fresh != null) {
                resultCaptureOrdered.push(fresh);
                continue;
            }
            // At this point we have no drop target in the old spot
            // Check to see if we can use a previous sticky drop target
            // The "parent" is the one inside of `resultCaptureOrdered`
            // (the parent might be a drop target that was sticky)
            var parent = resultCaptureOrdered[index - 1];
            var lastParent = lastCaptureOrdered[index - 1];
            // Stickiness is based on parent relationships, so if the parent relationship has change
            // then we can stop our search
            if ((parent === null || parent === void 0 ? void 0 : parent.element) !== (lastParent === null || lastParent === void 0 ? void 0 : lastParent.element)) break;
            // We need to check whether the old drop target can still be dropped on
            var argsForLast = registry.get(last.element);
            // We cannot drop on a drop target that is no longer mounted
            if (!argsForLast) break;
            var feedback = {
                input: input,
                source: source,
                element: argsForLast.element
            };
            // We cannot drop on a drop target that no longer allows being dropped on
            if (argsForLast.canDrop && !argsForLast.canDrop(feedback)) break;
            // We cannot drop on a drop target that is no longer sticky
            if (!((_argsForLast$getIsSti = argsForLast.getIsSticky) !== null && _argsForLast$getIsSti !== void 0 && _argsForLast$getIsSti.call(argsForLast, feedback))) break;
            // Note: intentionally not recollecting `getData()` or `getDropEffect()`
            // Previous values for `data` and `dropEffect` will be borrowed
            // This is to prevent things like the 'closest edge' changing when
            // no longer over a drop target.
            // We could change our mind on this behaviour in the future
            resultCaptureOrdered.push(_objectSpread(_objectSpread({}, last), {}, {
                // making it clear to consumers this drop target is active due to stickiness
                isActiveDueToStickiness: true
            }));
        }
        // return bubble ordered result
        return copyReverse(resultCaptureOrdered);
    }
    return {
        dropTargetForConsumers: dropTargetForConsumers,
        getIsOver: getIsOver,
        dispatchEvent: dispatchEvent
    };
}

},{"@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/toConsumableArray":"lkYCr","../public-utils/combine":"6kYtf","../public-utils/once":"2nBLC","../util/add-attribute":"cd2xU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cd2xU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addAttribute", ()=>addAttribute);
function addAttribute(element, _ref) {
    var attribute = _ref.attribute, value = _ref.value;
    element.setAttribute(attribute, value);
    return function() {
        return element.removeAttribute(attribute);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"16WjR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeMonitor", ()=>makeMonitor);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _once = require("../public-utils/once");
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function makeMonitor() {
    var registry = new Set();
    var dragging = null;
    function tryAddToActive(monitor) {
        if (!dragging) return;
        // Monitor is allowed to monitor events if:
        // 1. It has no `canMonitor` function (default is that a monitor can listen to everything)
        // 2. `canMonitor` returns true
        if (!monitor.canMonitor || monitor.canMonitor(dragging.canMonitorArgs)) dragging.active.add(monitor);
    }
    function monitorForConsumers(args) {
        // We are giving each `args` a new reference so that you
        // can create multiple monitors with the same `args`.
        var entry = _objectSpread({}, args);
        registry.add(entry);
        // if there is an active drag we need to see if this new monitor is relevant
        tryAddToActive(entry);
        function cleanup() {
            registry.delete(entry);
            // We need to stop publishing events during a drag to this monitor!
            if (dragging) dragging.active.delete(entry);
        }
        // Wrapping in `once` to prevent unexpected side effects if consumers call
        // the clean up function multiple times.
        return (0, _once.once)(cleanup);
    }
    function dispatchEvent(_ref) {
        var eventName = _ref.eventName, payload = _ref.payload;
        if (eventName === 'onGenerateDragPreview') {
            dragging = {
                canMonitorArgs: {
                    initial: payload.location.initial,
                    source: payload.source
                },
                active: new Set()
            };
            var _iterator = _createForOfIteratorHelper(registry), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var monitor = _step.value;
                    tryAddToActive(monitor);
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
        }
        // This should never happen.
        if (!dragging) return;
        // Creating an array from the set _before_ iterating
        // This is so that monitors added during the current event will not be called.
        // This behaviour matches native EventTargets where an event listener
        // cannot add another event listener during an active event to the same
        // event target in the same event (for us we have a single global event target)
        var active = Array.from(dragging.active);
        for(var _i = 0, _active = active; _i < _active.length; _i++){
            var _monitor = _active[_i];
            // A monitor can be removed by another monitor during an event.
            // We need to check that the monitor is still registered before calling it
            if (dragging.active.has(_monitor)) {
                var _monitor$eventName;
                // @ts-expect-error: I cannot get this type working!
                (_monitor$eventName = _monitor[eventName]) === null || _monitor$eventName === void 0 || _monitor$eventName.call(_monitor, payload);
            }
        }
        if (eventName === 'onDrop') {
            dragging.active.clear();
            dragging = null;
        }
    }
    return {
        dispatchEvent: dispatchEvent,
        monitorForConsumers: monitorForConsumers
    };
}

},{"@babel/runtime/helpers/defineProperty":"azbUC","../public-utils/once":"2nBLC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k39DA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAndroid", ()=>isAndroid);
parcelHelpers.export(exports, "androidFallbackText", ()=>androidFallbackText);
var _once = require("../public-utils/once");
var isAndroid = (0, _once.once)(function isAndroid() {
    return navigator.userAgent.toLocaleLowerCase().includes('android');
});
var androidFallbackText = 'pdnd:android-fallback';

},{"../public-utils/once":"2nBLC","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6XN7D":[function(require,module,exports,__globalThis) {
// Why we put the media types in their own files:
//
// - we are not putting them all in one file as not all adapters need all types
// - we are not putting them in the external helpers as some things just need the
//   types and not the external functions code
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "textMediaType", ()=>textMediaType);
var textMediaType = 'text/plain';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hWbz4":[function(require,module,exports,__globalThis) {
// Why we put the media types in their own files:
//
// - we are not putting them all in one file as not all adapters need all types
// - we are not putting them in the external helpers as some things just need the
//   types and not the external functions code
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "URLMediaType", ()=>URLMediaType);
var URLMediaType = 'text/uri-list';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4dJqM":[function(require,module,exports,__globalThis) {
/**
 * This key has been pulled into a separate module
 * so that the external adapter does not need to import
 * the element adapter
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "elementAdapterNativeDataKey", ()=>elementAdapterNativeDataKey);
var elementAdapterNativeDataKey = 'application/vnd.pdnd';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fPBdh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeFixForAdapter", ()=>makeFixForAdapter);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _combine = require("@atlaskit/pragmatic-drag-and-drop/combine");
/**
 * Set a `style` property on a `HTMLElement`
 *
 * @returns a `cleanup` function to restore the `style` property to it's original state
 */ function setStyle(el, _ref) {
    var property = _ref.property, rule = _ref.rule, _ref$priority = _ref.priority, priority = _ref$priority === void 0 ? '' : _ref$priority;
    var originalValue = el.style.getPropertyValue(property);
    var originalPriority = el.style.getPropertyPriority(property);
    el.style.setProperty(property, rule, priority);
    return function cleanup() {
        el.style.setProperty(property, originalValue, originalPriority);
    };
}
function hasSameOrigin(href1, href2) {
    var url1;
    var url2;
    try {
        url1 = new URL(href1);
        url2 = new URL(href2);
    } catch (error) {
        // failed to parse a href
        return false;
    }
    // https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy
    return url1.protocol === url2.protocol && url1.host === url2.host && url1.port === url2.port;
}
function isIframeOnAnotherDomain(iframe) {
    /**
   * iframe with contents defined inline. Runs on the current origin.
   * `<iframe srcdoc="<!doctype html><body>Hello</body>" />`
   */ if (iframe.srcdoc) return false;
    /**
   * iframe with contents defined inline. Runs on the current origin.
   * `<iframe src={`data:text/html;charset=utf-8,${encodeURI('<!doctype html><body>Hello</body>')}`} />`
   */ if (iframe.src.startsWith('data:')) return false;
    return !hasSameOrigin(window.location.href, iframe.src);
}
var registry = new Map();
function applyFix(watchForEndOfInteraction) {
    var iframes = Array.from(document.querySelectorAll('iframe')).filter(isIframeOnAnotherDomain);
    var cleanups = iframes.map(function(iframe) {
        var entry = registry.get(iframe);
        if (!entry) {
            entry = {
                reset: setStyle(iframe, {
                    property: 'pointer-events',
                    rule: 'none',
                    priority: 'important'
                }),
                count: 1
            };
            registry.set(iframe, entry);
        } else // pointer-events:none already applied to the iframe
        // increment how many things requested the fix
        entry.count++;
        return function cleanup() {
            entry.count--;
            if (entry.count < 1) {
                entry.reset();
                registry.delete(iframe);
            }
        };
    });
    function stop() {
        cleanupWatcher();
        (0, _combine.combine).apply(void 0, (0, _toConsumableArrayDefault.default)(cleanups))();
    }
    var cleanupWatcher = watchForEndOfInteraction({
        stop: stop
    });
}
function makeFixForAdapter(_ref2) {
    var watchForInteractionStart = _ref2.watchForInteractionStart, watchForInteractionEnd = _ref2.watchForInteractionEnd;
    var registrationCount = 0;
    var stopWatchingInteractionStart = null;
    function start() {
        applyFix(watchForInteractionEnd);
    }
    function registerUsage() {
        if (registrationCount === 0) stopWatchingInteractionStart = watchForInteractionStart({
            start: start
        });
        registrationCount++;
        return function unregisterUsage() {
            var _stopWatchingInteract;
            registrationCount--;
            if (registrationCount !== 0) return;
            (_stopWatchingInteract = stopWatchingInteractionStart) === null || _stopWatchingInteract === void 0 || _stopWatchingInteract();
            stopWatchingInteractionStart = null;
        };
    }
    return {
        registerUsage: registerUsage
    };
}

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@atlaskit/pragmatic-drag-and-drop/combine":"7FxfW","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7pbBm":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disableDraggingToCrossOriginIFramesForExternal", ()=>disableDraggingToCrossOriginIFramesForExternal);
var _adapter = require("@atlaskit/pragmatic-drag-and-drop/external/adapter");
var _makeFixForAdapter = require("./make-fix-for-adapter");
function watchForInteractionStart(_ref) {
    var start = _ref.start;
    return (0, _adapter.monitorForExternal)({
        onDragStart: function onDragStart() {
            start();
        }
    });
}
function watchForInteractionEnd(_ref2) {
    var stop = _ref2.stop;
    return (0, _adapter.monitorForExternal)({
        onDrop: function onDrop() {
            stop();
        }
    });
}
var api = (0, _makeFixForAdapter.makeFixForAdapter)({
    watchForInteractionStart: watchForInteractionStart,
    watchForInteractionEnd: watchForInteractionEnd
});
function disableDraggingToCrossOriginIFramesForExternal() {
    return api.registerUsage();
}

},{"@atlaskit/pragmatic-drag-and-drop/external/adapter":"8qmTE","./make-fix-for-adapter":"fPBdh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8qmTE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "monitorForExternal", ()=>(0, _externalAdapter.monitorForExternal)) // The data that is being dragged
;
parcelHelpers.export(exports, "dropTargetForExternal", ()=>(0, _externalAdapter.dropTargetForExternal));
var _externalAdapter = require("../../adapter/external-adapter");

},{"../../adapter/external-adapter":"kcq5d","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kcq5d":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isAnAvailableType", ()=>isAnAvailableType);
parcelHelpers.export(exports, "getAvailableTypes", ()=>getAvailableTypes);
parcelHelpers.export(exports, "getAvailableItems", ()=>getAvailableItems);
/**
 * Some events don't make sense for the external adapter
 *
 * `onGenerateDragPreview`
 * The browser creates the drag preview for external drags, so we don't
 * need an event to generate the preview for _monitors_ or the _dropTarget_
 *
 * `onDragStart`
 * An external drag can never start from in the `window`, so _dropTarget_'s
 * don't need `onDragStart`
 */ parcelHelpers.export(exports, "dropTargetForExternal", ()=>dropTargetForExternal);
parcelHelpers.export(exports, "monitorForExternal", ()=>monitorForExternal);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _bindEventListener = require("bind-event-listener");
var _makeAdapter = require("../make-adapter/make-adapter");
var _android = require("../util/android");
var _isEnteringWindow = require("../util/changing-window/is-entering-window");
var _detectBrokenDrag = require("../util/detect-broken-drag");
var _textMediaType = require("../util/media-types/text-media-type");
var _elementAdapterNativeDataKey = require("./element-adapter-native-data-key");
function isAnAvailableType(_ref) {
    var type = _ref.type, value = _ref.value;
    // We don't want to expose our private elementAdapter key / value
    if (type === (0, _elementAdapterNativeDataKey.elementAdapterNativeDataKey)) return false;
    // Not exposing "text/plain" if it contains the android fallback text
    // We _could_ add an `isAndroid()` check, but it's probably safest
    // to trim this data out, regardless of what OS we see it on.
    if (type === (0, _textMediaType.textMediaType) && value === (0, _android.androidFallbackText)) return false;
    return true;
}
function getAvailableTypes(transfer) {
    return Array.from(transfer.types).filter(function(type) {
        return isAnAvailableType({
            type: type,
            value: transfer.getData(type)
        });
    });
}
function getAvailableItems(dataTransfer) {
    // item.kind is 'string' | 'file'
    // For 'string' item.type is the mimeType (eg 'text/plain')
    // For 'file' item.type is the file type (eg 'image/jpg')
    return Array.from(dataTransfer.items).filter(function(item) {
        return item.kind === 'file' || isAnAvailableType({
            type: item.type,
            value: dataTransfer.getData(item.type)
        });
    });
}
var didDragStartLocally = false;
var adapter = (0, _makeAdapter.makeAdapter)({
    typeKey: 'external',
    // for external drags, we are generally making a copy of something that is being dragged
    defaultDropEffect: 'copy',
    mount: function mount(api) {
        // Binding to the `window` so that the element adapter
        // has a chance to get in first on the`document`.
        // We are giving preference to the element adapter.
        return (0, _bindEventListener.bind)(window, {
            type: 'dragenter',
            listener: function listener(event) {
                // drag operation was started within the document, it won't be an "external" drag
                if (didDragStartLocally) return;
                // Note: not checking if event was cancelled (`event.defaultPrevented`) as
                // cancelling a "dragenter" accepts the drag operation (not prevent it)
                // Something has gone wrong with our drag event
                if (!event.dataTransfer) {
                    // eslint-disable-next-line no-console
                    console.warn("\n              It appears as though you have are not testing DragEvents correctly.\n\n              - If you are unit testing, ensure you have polyfilled DragEvent.\n              - If you are browser testing, ensure you are dispatching drag events correctly.\n\n              Please see our testing guides for more information:\n              https://atlassian.design/components/pragmatic-drag-and-drop/core-package/testing\n            ".replace(/ {2}/g, ''));
                    return;
                }
                if (!api.canStart(event)) return;
                if (!(0, _isEnteringWindow.isEnteringWindow)({
                    dragEnter: event
                })) return;
                // Note: not checking types for `elementAdapterNativeDataKey` as we expect to see that
                // key when pdnd started the drag in another document
                var types = getAvailableTypes(event.dataTransfer);
                if (!types.length) return;
                var locked = {
                    types: types,
                    items: [],
                    getStringData: function getStringData() {
                        return null;
                    }
                };
                api.start({
                    event: event,
                    dragType: {
                        type: 'external',
                        startedFrom: 'external',
                        payload: locked,
                        getDropPayload: function getDropPayload(event) {
                            // this would be a platform error
                            // trying to handle it gracefully rather than throwing (for now)
                            if (!event.dataTransfer) return locked;
                            var items = getAvailableItems(event.dataTransfer);
                            // need to use `.bind` as `getData` is required
                            // to be run with `event.dataTransfer` as the "this" context
                            var nativeGetData = event.dataTransfer.getData.bind(event.dataTransfer);
                            return {
                                types: types,
                                items: items,
                                // return `null` if there is no result, otherwise string
                                getStringData: function getStringData(mediaType) {
                                    // not dragging the requested type
                                    // return `null` (no result)
                                    if (!types.includes(mediaType)) return null;
                                    // nativeGetData will return `""` when there is no value,
                                    // but at this point we know we will only get explicitly set
                                    // values back as we have checked the `types`.
                                    // `""` can be an explicitly set value.
                                    var value = nativeGetData(mediaType);
                                    // not exposing data for unavailable types
                                    if (!isAnAvailableType({
                                        type: mediaType,
                                        value: value
                                    })) return null;
                                    return value;
                                }
                            };
                        }
                    }
                });
            }
        });
    }
});
function dropTargetForExternal(args) {
    // not removing unused events, just leaning on the type system
    return adapter.dropTarget(args);
}
function monitorForExternal(args) {
    // not removing unused events, just leaning on the type system
    return adapter.monitor(args);
}
(function startup() {
    // server side rendering check
    if (typeof window === 'undefined') return;
    // A shared single usage registration as we want to capture
    // all external drag operations, even if there are no drop targets
    // on the page yet
    adapter.registerUsage();
    // independent of pdnd, we need to keep track of
    // all drag operations so that we can know if a drag operation
    // has started locally
    var idle = {
        type: 'idle'
    };
    var state = idle;
    function clear() {
        if (state.type !== 'dragging') return;
        didDragStartLocally = false;
        state.cleanup();
        state = idle;
    }
    function bindEndEvents() {
        return (0, _bindEventListener.bindAll)(window, [
            {
                type: 'dragend',
                listener: clear
            }
        ].concat((0, _toConsumableArrayDefault.default)((0, _detectBrokenDrag.getBindingsForBrokenDrags)({
            onDragEnd: clear
        }))), // we want to make sure we get all the events,
        // and this helps avoid not seeing events when folks stop
        // them later on the event path
        {
            capture: true
        });
    }
    // we always keep this event listener active
    (0, _bindEventListener.bind)(window, {
        type: 'dragstart',
        listener: function listener() {
            // something bad has happened if this is true!
            if (state.type !== 'idle') return;
            // set our global flag
            didDragStartLocally = true;
            state = {
                type: 'dragging',
                cleanup: bindEndEvents()
            };
        },
        // binding in the capture phase so these listeners are called
        // before our listeners in the adapters `mount` function
        options: {
            capture: true
        }
    });
})(); /** Common event payload for all events */  /** A map containing payloads for all events */  /** Common event payload for all drop target events */  /** A map containing payloads for all events on drop targets */  /** Arguments given to all feedback functions (eg `canDrop()`) on a `dropTargetForExternal` */  /** Arguments given to all monitor feedback functions (eg `canMonitor()`) for a `monitorForExternal` */ 

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","bind-event-listener":"2wrYK","../make-adapter/make-adapter":"geYPo","../util/android":"k39DA","../util/changing-window/is-entering-window":"ll31t","../util/detect-broken-drag":"gcRM4","../util/media-types/text-media-type":"6XN7D","./element-adapter-native-data-key":"4dJqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ll31t":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isEnteringWindow", ()=>isEnteringWindow);
var _isFirefox = require("../is-firefox");
var _isSafari = require("../is-safari");
var _countEventsForSafari = require("./count-events-for-safari");
var _isFromAnotherWindow = require("./is-from-another-window");
function isEnteringWindow(_ref) {
    var dragEnter = _ref.dragEnter;
    var type = dragEnter.type, relatedTarget = dragEnter.relatedTarget;
    if (type !== 'dragenter') return false;
    if ((0, _isSafari.isSafari)()) return (0, _countEventsForSafari.isEnteringWindowInSafari)({
        dragEnter: dragEnter
    });
    // standard check
    if (relatedTarget == null) return true;
    /**
   * 🦊 Exception: `iframe` in Firefox (`125.0`)
   *
   * Case 1: parent `window` → child `iframe`
   * `relatedTarget` is the `iframe` element in the parent `window`
   * (foreign element)
   *
   * Case 2: child `iframe` → parent `window`
   * `relatedTarget` is an element inside the child `iframe`
   * (foreign element)
   */ if ((0, _isFirefox.isFirefox)()) return (0, _isFromAnotherWindow.isFromAnotherWindow)(relatedTarget);
    /**
   * 🌏 Exception: `iframe` in Chrome (`124.0`)
   *
   * Case 1: parent `window` → child `iframe`
   * `relatedTarget` is `null` *(standard check)*
   *
   * Case 2: child `iframe` → parent `window`
   * `relatedTarget` is the `iframe` element in the parent `window`
   */ // Case 2
    // Using `instanceof` check as the element will be in the same `window`
    return relatedTarget instanceof HTMLIFrameElement;
}

},{"../is-firefox":"1GbDG","../is-safari":"dx1gN","./count-events-for-safari":"5EwCI","./is-from-another-window":"a1tI1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8dTrW":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "disableDraggingToCrossOriginIFramesForTextSelection", ()=>disableDraggingToCrossOriginIFramesForTextSelection);
var _bindEventListener = require("bind-event-listener");
var _combine = require("@atlaskit/pragmatic-drag-and-drop/combine");
var _adapter = require("@atlaskit/pragmatic-drag-and-drop/text-selection/adapter");
var _makeFixForAdapter = require("./make-fix-for-adapter");
function watchForInteractionEnd(_ref) {
    var stop = _ref.stop;
    var isDragging = false;
    function stopIfNotDragging() {
        if (isDragging) return;
        stop();
    }
    var frameId = null;
    var unbindEvents = (0, _bindEventListener.bindAll)(window, [
        {
            // User is starting another interaction
            type: 'pointerdown',
            listener: stop
        },
        {
            // User did not start a drag.
            // "pointerdown" won't be fired if a drag started
            type: 'pointerup',
            listener: stopIfNotDragging
        },
        {
            type: 'dragstart',
            listener: function listener() {
                /**
       * The pdnd `onDragStart()` fires in the frame after "dragstart"
       * So we are delaying our isDragging check to give a chance
       * for `onDragStart()` to set the value correctly.
       *
       * Note: could not use "pointercancel" as it is not
       * published in Safari → https://bugs.webkit.org/show_bug.cgi?id=222632
       */ frameId = requestAnimationFrame(function() {
                    frameId = null;
                    stopIfNotDragging();
                });
            },
            // need to schedule our frame after the text-selection
            // adapter queues it's `onDragStart` frame.
            options: {
                capture: false
            }
        }
    ], {
        // Listening in the capture phase to increase resilience
        // against events being stopped.
        capture: true,
        // being super clear these should only run once
        once: true
    });
    var unbindMonitor = (0, _adapter.monitorForTextSelection)({
        onDragStart: function onDragStart() {
            isDragging = true;
        },
        onDrop: function onDrop() {
            isDragging = false;
            stop();
        }
    });
    return (0, _combine.combine)(unbindEvents, unbindMonitor, function abortFrame() {
        if (frameId != null) cancelAnimationFrame(frameId);
    });
}
function watchForInteractionStart(_ref2) {
    var start = _ref2.start;
    return (0, _bindEventListener.bind)(window, {
        // Note: Using "mousedown" rather than "pointerdown" due to a Safari bug.
        // Safari not publish a "pointerdown" on the interaction after a drag
        // → https://bugs.webkit.org/show_bug.cgi?id=279749
        type: 'mousedown',
        listener: function listener() {
            // A text selection drag will only start when there is
            // an active text selection.
            var selection = window.getSelection();
            // No selection object found
            if (!selection) return;
            // `isCollapsed` is "true" if there is currently no selected text
            if (selection.isCollapsed) return;
            start();
        }
    });
}
var api = (0, _makeFixForAdapter.makeFixForAdapter)({
    watchForInteractionStart: watchForInteractionStart,
    watchForInteractionEnd: watchForInteractionEnd
});
function disableDraggingToCrossOriginIFramesForTextSelection() {
    return api.registerUsage();
}

},{"bind-event-listener":"2wrYK","@atlaskit/pragmatic-drag-and-drop/combine":"7FxfW","@atlaskit/pragmatic-drag-and-drop/text-selection/adapter":"qA4Xh","./make-fix-for-adapter":"fPBdh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"qA4Xh":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "monitorForTextSelection", ()=>(0, _textSelectionAdapter.monitorForTextSelection)) // Payload for the text selection being dragged
;
parcelHelpers.export(exports, "dropTargetForTextSelection", ()=>(0, _textSelectionAdapter.dropTargetForTextSelection));
var _textSelectionAdapter = require("../../adapter/text-selection-adapter");

},{"../../adapter/text-selection-adapter":"hCUjk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hCUjk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// The `onGenerateDragPreview` does not make sense to publish for text selection
// as the browser is completely in control of the drag preview
parcelHelpers.export(exports, "dropTargetForTextSelection", ()=>dropTargetForTextSelection);
parcelHelpers.export(exports, "monitorForTextSelection", ()=>monitorForTextSelection) /** Common event payload for all events */  /** A map containing payloads for all events */  /** Common event payload for all drop target events */  /** A map containing payloads for all events on drop targets */  /** Argument given to all feedback functions (eg `canDrop()`) on a `dropTargetForExternal` */  /** Argument given to all monitor feedback functions (eg `canMonitor()`) for a `monitorForExternal` */ ;
var _bindEventListener = require("bind-event-listener");
var _makeHoneyPotFix = require("../honey-pot-fix/make-honey-pot-fix");
var _makeAdapter = require("../make-adapter/make-adapter");
var _combine = require("../public-utils/combine");
var _isSafari = require("../util/is-safari");
var _htmlMediaType = require("../util/media-types/html-media-type");
var _textMediaType = require("../util/media-types/text-media-type");
var _elementAdapterNativeDataKey = require("./element-adapter-native-data-key");
function findTextNode(event) {
    var _event$dataTransfer;
    // Standard: the `event.target` should be the closest `Text` node.
    if (event.target instanceof Text) return event.target;
    // Structuring things this way so that if Safari fixes their bug
    // then the standard check will start working
    if (!(0, _isSafari.isSafari)()) return null;
    /**
   * According to the spec, `event.target` should be the `Text` node that
   * the drag started from when dragging a text selection.
   *
   * → https://html.spec.whatwg.org/multipage/dnd.html#drag-and-drop-processing-model
   *
   * However, in Safari the closest `HTMLElement` is returned.
   * So we need to figure out if text is dragging ourselves.
   *
   * → https://bugs.webkit.org/show_bug.cgi?id=268959
   */ if (!(event.target instanceof HTMLElement)) return null;
    // Unlikely that this particular drag is a text selection drag
    if (event.target.draggable) return null;
    // if the drag contains no text data, then not dragging selected text
    // return `null` if there is no dataTransfer, or if `getData()` returns ""
    if (!((_event$dataTransfer = event.dataTransfer) !== null && _event$dataTransfer !== void 0 && _event$dataTransfer.getData((0, _textMediaType.textMediaType)))) return null;
    /**
   * Grab the first Text node and use that.
   * Only doing a single level search as that is all we need for this bug.
   */ var text = Array.from(event.target.childNodes).find(function(node) {
        return node.nodeType === Node.TEXT_NODE;
    });
    return text !== null && text !== void 0 ? text : null;
}
var honeyPotFix = (0, _makeHoneyPotFix.makeHoneyPotFix)();
var adapter = (0, _makeAdapter.makeAdapter)({
    typeKey: 'text-selection',
    // for text selection, we will usually be making a copy of the text
    defaultDropEffect: 'copy',
    mount: function mount(api) {
        // Binding to the `window` so that the element adapter has a
        // chance to get in first on the `document`.
        // We are giving preference to the element adapter.
        return (0, _combine.combine)(honeyPotFix.bindEvents(), (0, _bindEventListener.bind)(window, {
            type: 'dragstart',
            listener: function listener(event) {
                // If the "dragstart" event is cancelled, then a drag won't start
                // There will be no further drag operation events (eg no "dragend" event)
                if (event.defaultPrevented) return;
                // Something has gone wrong with our drag event
                if (!event.dataTransfer) {
                    // eslint-disable-next-line no-console
                    console.warn("\n                It appears as though you have are not testing DragEvents correctly.\n\n                - If you are unit testing, ensure you have polyfilled DragEvent.\n                - If you are browser testing, ensure you are dispatching drag events correctly.\n\n                Please see our testing guides for more information:\n                https://atlassian.design/components/pragmatic-drag-and-drop/core-package/testing\n              ".replace(/ {2}/g, ''));
                    return;
                }
                // Drag is being handled by the element adapter
                if (event.dataTransfer.types.includes((0, _elementAdapterNativeDataKey.elementAdapterNativeDataKey))) return;
                // Something else is handling this drag
                if (!api.canStart(event)) return;
                // no text being dragged
                if (!event.dataTransfer.types.includes((0, _textMediaType.textMediaType))) return;
                var target = findTextNode(event);
                // could not find `Text` node that is being dragged from
                if (!target) return;
                var payload = {
                    // The `Text` node that is the `target` is the `Text` node
                    // that the user started the drag from.
                    // The full text being dragged can be looked up from the `dataTransfer`.
                    target: target,
                    plain: event.dataTransfer.getData((0, _textMediaType.textMediaType)),
                    HTML: event.dataTransfer.getData((0, _htmlMediaType.HTMLMediaType))
                };
                api.start({
                    event: event,
                    dragType: {
                        type: 'text-selection',
                        startedFrom: 'internal',
                        payload: payload
                    }
                });
            }
        }));
    },
    onPostDispatch: honeyPotFix.getOnPostDispatch()
});
function dropTargetForTextSelection(args) {
    // note: not removing `onGenerateDragPreview`; just leaning on the type system
    return adapter.dropTarget(args);
}
// A shared single usage registration as any text can be dragged at any time
(function register() {
    // server side rendering check
    if (typeof window === 'undefined') return;
    adapter.registerUsage();
})();
function monitorForTextSelection(args) {
    // note: not removing `onGenerateDragPreview`; just leaning on the type system
    return adapter.monitor(args);
}

},{"bind-event-listener":"2wrYK","../honey-pot-fix/make-honey-pot-fix":"7cMWT","../make-adapter/make-adapter":"geYPo","../public-utils/combine":"6kYtf","../util/is-safari":"dx1gN","../util/media-types/html-media-type":"1Mu84","../util/media-types/text-media-type":"6XN7D","./element-adapter-native-data-key":"4dJqM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Mu84":[function(require,module,exports,__globalThis) {
// Why we put the media types in their own files:
//
// - we are not putting them all in one file as not all adapters need all types
// - we are not putting them in the external helpers as some things just need the
//   types and not the external functions code
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HTMLMediaType", ()=>HTMLMediaType);
var HTMLMediaType = 'text/html';

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7zWo7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "dialogWidth", ()=>dialogWidth);
parcelHelpers.export(exports, "dialogHeight", ()=>dialogHeight);
var width = {
    values: [
        'small',
        'medium',
        'large',
        'x-large'
    ],
    widths: {
        small: 400,
        medium: 600,
        large: 800,
        'x-large': 968
    },
    defaultValue: 'medium'
};
var dialogWidth = function dialogWidth(input) {
    if (!input) return 'auto';
    var isWidthName = width.values.indexOf(input.toString()) !== -1;
    var widthName = isWidthName && input;
    if (widthName) return "".concat(width.widths[widthName], "px");
    return typeof input === 'number' ? "".concat(input, "px") : input;
};
var dialogHeight = function dialogHeight(input) {
    if (!input) return 'auto';
    return typeof input === 'number' ? "".concat(input, "px") : input;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6An05":[function(require,module,exports,__globalThis) {
/* positioner.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _curves = require("@atlaskit/motion/curves");
var _durations = require("@atlaskit/motion/durations");
var _constants = require("@atlaskit/theme/constants");
var gutter = 60;
var maxWidthDimensions = "calc(100vw - ".concat(gutter * 2, "px)");
var maxHeightDimensions = "calc(100vh - ".concat(gutter * 2 - 1, "px)");
// Flex and min-content are set to constrain the height of the body and support multi-column scrolling experiences
var positionerStyles = null;
var scrollStyles = {
    viewport: "_4t3i1wug _kqswh2mm _1sg41wqb _maxs1wug _1jvh1wqb _1uca1wug _eoawglyw",
    body: "_we1i18uh _e8uozwhf _y1k5stnw _5ee41wqb _1urridpf _1juqidpf _yakv1wug _4lht1wug _eoawglyw",
    fullScreen: ""
};
var stackTransitionStyles = null;
var stackTransformStyles = null;
var stackIdleStyles = null;
function getScrollBehavior(_ref) {
    var isFullScreen = _ref.isFullScreen, shouldScrollInViewport = _ref.shouldScrollInViewport;
    if (isFullScreen) return 'fullScreen';
    if (shouldScrollInViewport) return 'viewport';
    return 'body';
}
var Positioner = function Positioner(props) {
    var children = props.children, stackIndex = props.stackIndex, shouldScrollInViewport = props.shouldScrollInViewport, testId = props.testId, isFullScreen = props.isFullScreen;
    var scrollBehavior = getScrollBehavior({
        isFullScreen: isFullScreen,
        shouldScrollInViewport: shouldScrollInViewport
    });
    return /*#__PURE__*/ _react.createElement("div", {
        style: {
            '--modal-dialog-translate-y': "calc(".concat(stackIndex, "px * ", "var(--ds-space-100, 8px)", ")"),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            transitionDuration: "".concat((0, _durations.durations).medium, "ms"),
            // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
            transitionTimingFunction: (0, _curves.easeInOut)
        },
        "data-testid": testId && "".concat(testId, "--positioner"),
        className: (0, _runtime.ax)([
            "_1e0c1txw _1bsb1osq _p12f1osq _4t3i1osq _kqsw1n9t _1pby16oo _2lx21bp4 _152tidpf _1e02idpf",
            "_k8m01e03 _1bumglyw _sedtglyw",
            stackIndex > 0 ? "_t9ec1b95" : "_t9ecglyw",
            scrollStyles[scrollBehavior]
        ])
    }, children);
};
// eslint-disable-next-line @repo/internal/react/require-jsdoc
exports.default = Positioner;

},{"react":"jMk1U","@compiled/react/runtime":"8r5np","@atlaskit/motion/curves":"8S4oE","@atlaskit/motion/durations":"9pwNA","@atlaskit/theme/constants":"6kRPo","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8S4oE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "easeIn", ()=>(0, _curves.easeIn));
parcelHelpers.export(exports, "easeInOut", ()=>(0, _curves.easeInOut));
parcelHelpers.export(exports, "easeOut", ()=>(0, _curves.easeOut));
parcelHelpers.export(exports, "linear", ()=>(0, _curves.linear));
var _curves = require("../utils/curves");

},{"../utils/curves":"i4R7D","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9pwNA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "durationStep", ()=>(0, _durations.durationStep));
parcelHelpers.export(exports, "durations", ()=>(0, _durations.durations));
var _durations = require("../utils/durations");

},{"../utils/durations":"1zZbT","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bUJ3a":[function(require,module,exports,__globalThis) {
/* modal-header.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
// eslint-disable-next-line @atlaskit/design-system/no-emotion-primitives -- to be migrated to @atlaskit/primitives/compiled – go/akcss
var _primitives = require("@atlaskit/primitives");
var _closeButton = require("./close-button");
var _hooks = require("./hooks");
var headerStyles = null;
var flexStyles = (0, _primitives.xcss)({
    flexDirection: 'row-reverse',
    width: '100%'
});
/**
 * __Modal header__
 *
 * A modal header contains the title of the modal and can contain other React elements such as a close button.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples#modal-header)
 * - [Code](https://atlassian.design/components/modal-dialog/code#modal-header-props)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */ var ModalHeader = function ModalHeader(props) {
    var children = props.children, userDefinedTestId = props.testId, _props$hasCloseButton = props.hasCloseButton, hasCloseButton = _props$hasCloseButton === void 0 ? false : _props$hasCloseButton;
    var _useModal = (0, _hooks.useModal)(), hasProvidedOnClose = _useModal.hasProvidedOnClose, onClose = _useModal.onClose, modalTestId = _useModal.testId;
    var testId = userDefinedTestId || modalTestId && "".concat(modalTestId, "--header");
    // Only show if an onClose was provided for the modal dialog
    var shouldShowCloseButton = hasCloseButton && hasProvidedOnClose && onClose;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            "_18zr1ejb _1e0c1txw _kqswh2mm _4cvr1h6o _1bah1yb4 _6rthmufe _85i5pxbi _1q511ejb"
        ]),
        style: {
            "--_t7lu6v": (0, _runtime.ix)("calc(-1 * ".concat("var(--ds-border-width-outline, 2px)", ")"))
        }
    }, shouldShowCloseButton ? /*#__PURE__*/ // The reason we are putting the close button first in the DOM and then
    // reordering them is to ensure that users of assistive technology get
    // all the context of a modal when initial focus is placed on the close
    // button, since it's the first interactive element.
    (0, _reactDefault.default).createElement((0, _primitives.Flex), {
        gap: "space.200",
        justifyContent: "space-between",
        xcss: flexStyles
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _primitives.Flex), {
        justifyContent: "end"
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _closeButton.CloseButton), {
        onClick: onClose,
        testId: modalTestId
    })), /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _primitives.Flex), {
        justifyContent: "start",
        alignItems: "center"
    }, children)) : children);
};
exports.default = ModalHeader;

},{"@compiled/react/runtime":"8r5np","react":"jMk1U","@atlaskit/primitives":"gDepD","./close-button":"g4i2A","./hooks":"d9GaV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gDepD":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Box", ()=>(0, _boxDefault.default));
parcelHelpers.export(exports, "Inline", ()=>(0, _inlineDefault.default));
parcelHelpers.export(exports, "xcss", ()=>(0, _xcss.xcss));
parcelHelpers.export(exports, "tokensMap", ()=>(0, _xcss.tokensMap));
parcelHelpers.export(exports, "Stack", ()=>(0, _stackDefault.default));
parcelHelpers.export(exports, "Flex", ()=>(0, _flexDefault.default));
parcelHelpers.export(exports, "Grid", ()=>(0, _gridDefault.default));
parcelHelpers.export(exports, "Bleed", ()=>(0, _bleedDefault.default));
parcelHelpers.export(exports, "Text", ()=>(0, _textDefault.default));
parcelHelpers.export(exports, "MetricText", ()=>(0, _metricTextDefault.default));
parcelHelpers.export(exports, "Pressable", ()=>(0, _pressableDefault.default));
parcelHelpers.export(exports, "Anchor", ()=>(0, _anchorDefault.default));
parcelHelpers.export(exports, "media", ()=>(0, _responsive.media));
parcelHelpers.export(exports, "UNSAFE_media", ()=>(0, _responsive.UNSAFE_media));
parcelHelpers.export(exports, "UNSAFE_BREAKPOINTS_CONFIG", ()=>(0, _responsive.UNSAFE_BREAKPOINTS_CONFIG));
parcelHelpers.export(exports, "UNSAFE_useSurface", ()=>(0, _surfaceProvider.useSurface));
parcelHelpers.export(exports, "UNSAFE_inverseColorMap", ()=>(0, _styleMapsPartial.inverseColorMap));
var _box = require("./components/box");
var _boxDefault = parcelHelpers.interopDefault(_box);
var _inline = require("./components/inline");
var _inlineDefault = parcelHelpers.interopDefault(_inline);
var _xcss = require("./xcss/xcss");
var _stack = require("./components/stack");
var _stackDefault = parcelHelpers.interopDefault(_stack);
var _flex = require("./components/flex");
var _flexDefault = parcelHelpers.interopDefault(_flex);
var _grid = require("./components/grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);
var _bleed = require("./components/bleed");
var _bleedDefault = parcelHelpers.interopDefault(_bleed);
var _text = require("./components/text");
var _textDefault = parcelHelpers.interopDefault(_text);
var _metricText = require("./components/metric-text");
var _metricTextDefault = parcelHelpers.interopDefault(_metricText);
var _pressable = require("./components/pressable");
var _pressableDefault = parcelHelpers.interopDefault(_pressable);
var _anchor = require("./components/anchor");
var _anchorDefault = parcelHelpers.interopDefault(_anchor);
var _responsive = require("./responsive");
var _surfaceProvider = require("./utils/surface-provider");
var _styleMapsPartial = require("./xcss/style-maps.partial");

},{"./components/box":false,"./components/inline":false,"./xcss/xcss":"jDay7","./components/stack":false,"./components/flex":"bLu4Y","./components/grid":false,"./components/bleed":false,"./components/text":false,"./components/metric-text":false,"./components/pressable":false,"./components/anchor":false,"./responsive":false,"./utils/surface-provider":false,"./xcss/style-maps.partial":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jDay7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tokensMap", ()=>tokensMap);
parcelHelpers.export(exports, "parseXcss", ()=>_parseXcss) // Media queries should not contain nested media queries
;
// Allow only a specific subset of chained selectors to maintain workable TypeScript performance
// Pseudos should not contain nested pseudos, or media queries
/**
 * ### xcss
 *
 * `xcss` is a safer, tokens-first approach to CSS-in-JS. It allows token-backed values for
 * CSS application.
 *
 * ```tsx
 * const styles = xcss({
 *   padding: 'space.100'
 * })
 * ```
 */ parcelHelpers.export(exports, "xcss", ()=>xcss);
var _toConsumableArray = require("@babel/runtime/helpers/toConsumableArray");
var _toConsumableArrayDefault = parcelHelpers.interopDefault(_toConsumableArray);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react = require("@emotion/react");
var _styleMapsPartial = require("./style-maps.partial");
function _createForOfIteratorHelper(r, e) {
    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (!t) {
        if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
            t && (r = t);
            var _n = 0, F = function F() {};
            return {
                s: F,
                n: function n() {
                    return _n >= r.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: r[_n++]
                    };
                },
                e: function e(r) {
                    throw r;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var o, a = !0, u = !1;
    return {
        s: function s() {
            t = t.call(r);
        },
        n: function n() {
            var r = t.next();
            return a = r.done, r;
        },
        e: function e(r) {
            u = !0, o = r;
        },
        f: function f() {
            try {
                a || null == t.return || t.return();
            } finally{
                if (u) throw o;
            }
        }
    };
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
var tokensMap = {
    backgroundColor: (0, _styleMapsPartial.backgroundColorMap),
    blockSize: (0, _styleMapsPartial.dimensionMap),
    borderBlockColor: (0, _styleMapsPartial.borderColorMap),
    borderBlockEndColor: (0, _styleMapsPartial.borderColorMap),
    borderBlockEndWidth: (0, _styleMapsPartial.borderWidthMap),
    borderBlockStartColor: (0, _styleMapsPartial.borderColorMap),
    borderBlockStartWidth: (0, _styleMapsPartial.borderWidthMap),
    borderBlockWidth: (0, _styleMapsPartial.borderWidthMap),
    borderBottomColor: (0, _styleMapsPartial.borderColorMap),
    borderBottomLeftRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderBottomRightRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderBottomWidth: (0, _styleMapsPartial.borderWidthMap),
    borderColor: (0, _styleMapsPartial.borderColorMap),
    borderEndEndRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderEndStartRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderInlineColor: (0, _styleMapsPartial.borderColorMap),
    borderInlineEndColor: (0, _styleMapsPartial.borderColorMap),
    borderInlineEndWidth: (0, _styleMapsPartial.borderWidthMap),
    borderInlineStartColor: (0, _styleMapsPartial.borderColorMap),
    borderInlineStartWidth: (0, _styleMapsPartial.borderWidthMap),
    borderInlineWidth: (0, _styleMapsPartial.borderWidthMap),
    borderLeftColor: (0, _styleMapsPartial.borderColorMap),
    borderLeftWidth: (0, _styleMapsPartial.borderWidthMap),
    borderRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderRightColor: (0, _styleMapsPartial.borderColorMap),
    borderRightWidth: (0, _styleMapsPartial.borderWidthMap),
    borderStartEndRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderStartStartRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderTopColor: (0, _styleMapsPartial.borderColorMap),
    borderTopLeftRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderTopRightRadius: (0, _styleMapsPartial.borderRadiusMap),
    borderTopWidth: (0, _styleMapsPartial.borderWidthMap),
    borderWidth: (0, _styleMapsPartial.borderWidthMap),
    bottom: (0, _styleMapsPartial.allSpaceMap),
    boxShadow: (0, _styleMapsPartial.shadowMap),
    color: (0, _styleMapsPartial.textColorMap),
    columnGap: (0, _styleMapsPartial.positiveSpaceMap),
    font: (0, _styleMapsPartial.fontMap),
    fontFamily: (0, _styleMapsPartial.fontFamilyMap),
    fontWeight: (0, _styleMapsPartial.fontWeightMap),
    gap: (0, _styleMapsPartial.positiveSpaceMap),
    height: (0, _styleMapsPartial.dimensionMap),
    inlineSize: (0, _styleMapsPartial.dimensionMap),
    inset: (0, _styleMapsPartial.allSpaceMap),
    insetBlock: (0, _styleMapsPartial.allSpaceMap),
    insetBlockEnd: (0, _styleMapsPartial.allSpaceMap),
    insetBlockStart: (0, _styleMapsPartial.allSpaceMap),
    insetInline: (0, _styleMapsPartial.allSpaceMap),
    insetInlineEnd: (0, _styleMapsPartial.allSpaceMap),
    insetInlineStart: (0, _styleMapsPartial.allSpaceMap),
    left: (0, _styleMapsPartial.allSpaceMap),
    margin: (0, _styleMapsPartial.allSpaceMap),
    marginBlock: (0, _styleMapsPartial.allSpaceMap),
    marginBlockEnd: (0, _styleMapsPartial.allSpaceMap),
    marginBlockStart: (0, _styleMapsPartial.allSpaceMap),
    marginBottom: (0, _styleMapsPartial.allSpaceMap),
    marginInline: (0, _styleMapsPartial.allSpaceMap),
    marginInlineEnd: (0, _styleMapsPartial.allSpaceMap),
    marginInlineStart: (0, _styleMapsPartial.allSpaceMap),
    marginLeft: (0, _styleMapsPartial.allSpaceMap),
    marginRight: (0, _styleMapsPartial.allSpaceMap),
    marginTop: (0, _styleMapsPartial.allSpaceMap),
    maxBlockSize: (0, _styleMapsPartial.dimensionMap),
    maxHeight: (0, _styleMapsPartial.dimensionMap),
    maxInlineSize: (0, _styleMapsPartial.dimensionMap),
    maxWidth: (0, _styleMapsPartial.dimensionMap),
    minBlockSize: (0, _styleMapsPartial.dimensionMap),
    minHeight: (0, _styleMapsPartial.dimensionMap),
    minInlineSize: (0, _styleMapsPartial.dimensionMap),
    minWidth: (0, _styleMapsPartial.dimensionMap),
    opacity: (0, _styleMapsPartial.opacityMap),
    outlineColor: (0, _styleMapsPartial.borderColorMap),
    outlineOffset: (0, _styleMapsPartial.allSpaceMap),
    outlineWidth: (0, _styleMapsPartial.borderWidthMap),
    padding: (0, _styleMapsPartial.positiveSpaceMap),
    paddingBlock: (0, _styleMapsPartial.positiveSpaceMap),
    paddingBlockEnd: (0, _styleMapsPartial.positiveSpaceMap),
    paddingBlockStart: (0, _styleMapsPartial.positiveSpaceMap),
    paddingBottom: (0, _styleMapsPartial.positiveSpaceMap),
    paddingInline: (0, _styleMapsPartial.positiveSpaceMap),
    paddingInlineEnd: (0, _styleMapsPartial.positiveSpaceMap),
    paddingInlineStart: (0, _styleMapsPartial.positiveSpaceMap),
    paddingLeft: (0, _styleMapsPartial.positiveSpaceMap),
    paddingRight: (0, _styleMapsPartial.positiveSpaceMap),
    paddingTop: (0, _styleMapsPartial.positiveSpaceMap),
    right: (0, _styleMapsPartial.allSpaceMap),
    rowGap: (0, _styleMapsPartial.positiveSpaceMap),
    top: (0, _styleMapsPartial.allSpaceMap),
    width: (0, _styleMapsPartial.dimensionMap),
    zIndex: (0, _styleMapsPartial.layerMap)
};
var uniqueSymbol = Symbol('UNSAFE_INTERNAL_styles');
var isSafeEnvToThrow = function isSafeEnvToThrow() {
    return false;
};
var reNestedSelectors = /(\.|\s|&+|\*\>|#|\[.*\])/;
var safeSelectors = /^@media .*$|^::?.*$|^@supports .*$/;
var _transformStyles = function transformStyles(styleObj) {
    if (!styleObj || (0, _typeofDefault.default)(styleObj) !== 'object') return styleObj;
    // If styles are defined as a CSSObject[], recursively call on each element until we reach CSSObject
    if (Array.isArray(styleObj)) return styleObj.map(_transformStyles);
    // Modifies styleObj in place. Be careful.
    Object.entries(styleObj).forEach(function(_ref) {
        var _ref2 = (0, _slicedToArrayDefault.default)(_ref, 2), key = _ref2[0], value = _ref2[1];
        // If key is a pseudo class or a pseudo element, then value should be an object.
        // So, call transformStyles on the value
        if ((0, _typeofDefault.default)(value) === 'object' && safeSelectors.test(key)) {
            styleObj[key] = _transformStyles(value);
            return;
        }
        if (isSafeEnvToThrow()) {
            // We don't support `.class`, `[data-testid]`, `> *`, `#some-id`
            if (reNestedSelectors.test(key)) throw new Error("Styles not supported for key '".concat(key, "'."));
        }
        // We have now dealt with all the special cases, so,
        // check whether what remains is a style property
        // that can be transformed.
        if (!(key in tokensMap)) return;
        var tokenValue = tokensMap[key][value];
        styleObj[key] = tokenValue !== null && tokenValue !== void 0 ? tokenValue : value;
    });
    return styleObj;
};
var baseXcss = function baseXcss(style) {
    var transformedStyles = _transformStyles(style);
    return (0, _definePropertyDefault.default)({}, uniqueSymbol, (0, _react.css)(transformedStyles));
};
/**
 * Picks out runtime XCSS objects and build-time XCSS strings. This is needed
 * to supported both Emotion and Compiled styles until we've fully migrated
 * to Compiled.
 *
 * @private
 * @deprecated
 */ var _parseXcss = function parseXcss(args) {
    if (Array.isArray(args)) {
        var emotion = [];
        var staticArr = [];
        var _iterator = _createForOfIteratorHelper(args), _step;
        try {
            for(_iterator.s(); !(_step = _iterator.n()).done;){
                var arg = _step.value;
                var result = _parseXcss(arg);
                if (result.emotion) emotion.push.apply(emotion, (0, _toConsumableArrayDefault.default)(result.emotion));
                if (result.static) staticArr.push(result.static);
            }
        } catch (err) {
            _iterator.e(err);
        } finally{
            _iterator.f();
        }
        return {
            emotion: emotion,
            static: staticArr.join(' ')
        };
    }
    var objArgs = args;
    var _ref4 = objArgs || {}, styles = _ref4[uniqueSymbol];
    if (styles) return {
        emotion: [
            styles
        ]
    };
    if (args) {
        // We use string interpolation here instead of .toString() just
        // in case the resulting object doesn't have the method available.
        var stringifiedArgs = "".concat(args);
        if (stringifiedArgs) return {
            static: stringifiedArgs
        };
    }
    return {};
};
function xcss(style) {
    return baseXcss(style);
}

},{"@babel/runtime/helpers/toConsumableArray":"lkYCr","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/slicedToArray":"lvO5K","@babel/runtime/helpers/typeof":"7EL9t","@emotion/react":"cLTfV","./style-maps.partial":"i6gMp","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i6gMp":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dimensionMap", ()=>dimensionMap);
parcelHelpers.export(exports, "positiveSpaceMap", ()=>positiveSpaceMap);
parcelHelpers.export(exports, "negativeSpaceMap", ()=>negativeSpaceMap);
parcelHelpers.export(exports, "allSpaceMap", ()=>allSpaceMap);
parcelHelpers.export(exports, "inverseColorMap", ()=>inverseColorMap);
parcelHelpers.export(exports, "opacityMap", ()=>opacityMap);
parcelHelpers.export(exports, "shadowMap", ()=>shadowMap);
parcelHelpers.export(exports, "surfaceColorMap", ()=>surfaceColorMap);
parcelHelpers.export(exports, "borderColorMap", ()=>borderColorMap);
parcelHelpers.export(exports, "backgroundColorMap", ()=>backgroundColorMap);
parcelHelpers.export(exports, "textColorMap", ()=>textColorMap);
parcelHelpers.export(exports, "fillMap", ()=>fillMap);
parcelHelpers.export(exports, "layerMap", ()=>layerMap);
parcelHelpers.export(exports, "borderWidthMap", ()=>borderWidthMap);
parcelHelpers.export(exports, "borderRadiusMap", ()=>borderRadiusMap);
parcelHelpers.export(exports, "fontMap", ()=>fontMap);
parcelHelpers.export(exports, "fontWeightMap", ()=>fontWeightMap);
parcelHelpers.export(exports, "fontFamilyMap", ()=>fontFamilyMap);
parcelHelpers.export(exports, "textSizeMap", ()=>textSizeMap);
parcelHelpers.export(exports, "textWeightMap", ()=>textWeightMap);
parcelHelpers.export(exports, "metricTextSizeMap", ()=>metricTextSizeMap);
parcelHelpers.export(exports, "getSerializedStylesMap", ()=>getSerializedStylesMap);
parcelHelpers.export(exports, "paddingStylesMap", ()=>paddingStylesMap);
parcelHelpers.export(exports, "spaceStylesMap", ()=>spaceStylesMap);
parcelHelpers.export(exports, "backgroundColorStylesMap", ()=>backgroundColorStylesMap);
parcelHelpers.export(exports, "textColorStylesMap", ()=>textColorStylesMap);
parcelHelpers.export(exports, "fontWeightStylesMap", ()=>fontWeightStylesMap);
parcelHelpers.export(exports, "fontFamilyStylesMap", ()=>fontFamilyStylesMap);
parcelHelpers.export(exports, "fontStylesMap", ()=>fontStylesMap);
parcelHelpers.export(exports, "textSizeStylesMap", ()=>textSizeStylesMap);
parcelHelpers.export(exports, "textWeightStylesMap", ()=>textWeightStylesMap);
parcelHelpers.export(exports, "surfaceColorStylesMap", ()=>surfaceColorStylesMap);
parcelHelpers.export(exports, "isSurfaceColorToken", ()=>isSurfaceColorToken);
parcelHelpers.export(exports, "metricTextSizeStylesMap", ()=>metricTextSizeStylesMap);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react = require("@emotion/react");
var _tokens = require("@atlaskit/tokens");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var dimensionMap = {
    '100%': '100%',
    'size.100': '1rem',
    'size.200': '1.5rem',
    'size.300': '2rem',
    'size.400': '2.5rem',
    'size.500': '3rem',
    'size.600': '6rem',
    'size.1000': '12rem'
};
var positiveSpaceMap = {
    'space.0': "var(--ds-space-0, 0px)",
    'space.025': "var(--ds-space-025, 2px)",
    'space.050': "var(--ds-space-050, 4px)",
    'space.075': "var(--ds-space-075, 6px)",
    'space.100': "var(--ds-space-100, 8px)",
    'space.150': "var(--ds-space-150, 12px)",
    'space.200': "var(--ds-space-200, 16px)",
    'space.250': "var(--ds-space-250, 20px)",
    'space.300': "var(--ds-space-300, 24px)",
    'space.400': "var(--ds-space-400, 32px)",
    'space.500': "var(--ds-space-500, 40px)",
    'space.600': "var(--ds-space-600, 48px)",
    'space.800': "var(--ds-space-800, 64px)",
    'space.1000': "var(--ds-space-1000, 80px)"
};
var negativeSpaceMap = {
    'space.negative.025': "var(--ds-space-negative-025, -2px)",
    'space.negative.050': "var(--ds-space-negative-050, -4px)",
    'space.negative.075': "var(--ds-space-negative-075, -6px)",
    'space.negative.100': "var(--ds-space-negative-100, -8px)",
    'space.negative.150': "var(--ds-space-negative-150, -12px)",
    'space.negative.200': "var(--ds-space-negative-200, -16px)",
    'space.negative.250': "var(--ds-space-negative-250, -20px)",
    'space.negative.300': "var(--ds-space-negative-300, -24px)",
    'space.negative.400': "var(--ds-space-negative-400, -32px)"
};
var allSpaceMap = _objectSpread(_objectSpread({}, positiveSpaceMap), negativeSpaceMap);
var inverseColorMap = {
    'color.background.neutral.bold': 'color.text.inverse',
    'color.background.neutral.bold.hovered': 'color.text.inverse',
    'color.background.neutral.bold.pressed': 'color.text.inverse',
    'color.background.selected.bold': 'color.text.inverse',
    'color.background.selected.bold.hovered': 'color.text.inverse',
    'color.background.selected.bold.pressed': 'color.text.inverse',
    'color.background.brand.bold': 'color.text.inverse',
    'color.background.brand.bold.hovered': 'color.text.inverse',
    'color.background.brand.bold.pressed': 'color.text.inverse',
    'color.background.brand.boldest': 'color.text.inverse',
    'color.background.brand.boldest.hovered': 'color.text.inverse',
    'color.background.brand.boldest.pressed': 'color.text.inverse',
    'color.background.danger.bold': 'color.text.inverse',
    'color.background.danger.bold.hovered': 'color.text.inverse',
    'color.background.danger.bold.pressed': 'color.text.inverse',
    'color.background.warning.bold': 'color.text.warning.inverse',
    'color.background.warning.bold.hovered': 'color.text.warning.inverse',
    'color.background.warning.bold.pressed': 'color.text.warning.inverse',
    'color.background.success.bold': 'color.text.inverse',
    'color.background.success.bold.hovered': 'color.text.inverse',
    'color.background.success.bold.pressed': 'color.text.inverse',
    'color.background.discovery.bold': 'color.text.inverse',
    'color.background.discovery.bold.hovered': 'color.text.inverse',
    'color.background.discovery.bold.pressed': 'color.text.inverse',
    'color.background.information.bold': 'color.text.inverse',
    'color.background.information.bold.hovered': 'color.text.inverse',
    'color.background.information.bold.pressed': 'color.text.inverse'
};
var opacityMap = {
    'opacity.disabled': "var(--ds-opacity-disabled, 0.4)",
    'opacity.loading': "var(--ds-opacity-loading, 0.2)"
};
var shadowMap = {
    'elevation.shadow.overflow': "var(--ds-shadow-overflow, 0px 0px 8px #091e423f, 0px 0px 1px #091e424f)",
    'elevation.shadow.overflow.perimeter': "var(--ds-shadow-overflow-perimeter, #091e421f)",
    'elevation.shadow.overflow.spread': "var(--ds-shadow-overflow-spread, #091e4229)",
    'elevation.shadow.overlay': "var(--ds-shadow-overlay, 0px 8px 12px #091e423f, 0px 0px 1px #091e424f)",
    'elevation.shadow.raised': "var(--ds-shadow-raised, 0px 1px 1px #091e423f, 0px 0px 1px #091e4221)"
};
var surfaceColorMap = {
    'elevation.surface': "var(--ds-surface, #FFFFFF)",
    'elevation.surface.hovered': "var(--ds-surface-hovered, #FAFBFC)",
    'elevation.surface.pressed': "var(--ds-surface-pressed, #F4F5F7)",
    'elevation.surface.overlay': "var(--ds-surface-overlay, #FFFFFF)",
    'elevation.surface.overlay.hovered': "var(--ds-surface-overlay-hovered, #FAFBFC)",
    'elevation.surface.overlay.pressed': "var(--ds-surface-overlay-pressed, #F4F5F7)",
    'elevation.surface.raised': "var(--ds-surface-raised, #FFFFFF)",
    'elevation.surface.raised.hovered': "var(--ds-surface-raised-hovered, #FAFBFC)",
    'elevation.surface.raised.pressed': "var(--ds-surface-raised-pressed, #F4F5F7)",
    'elevation.surface.sunken': "var(--ds-surface-sunken, #F4F5F7)"
};
var borderColorMap = {
    'color.border': "var(--ds-border, #091e4221)",
    'color.border.accent.lime': "var(--ds-border-accent-lime, #6A9A23)",
    'color.border.accent.red': "var(--ds-border-accent-red, #FF5630)",
    'color.border.accent.orange': "var(--ds-border-accent-orange, #D94008)",
    'color.border.accent.yellow': "var(--ds-border-accent-yellow, #FFAB00)",
    'color.border.accent.green': "var(--ds-border-accent-green, #36B37E)",
    'color.border.accent.teal': "var(--ds-border-accent-teal, #00B8D9)",
    'color.border.accent.blue': "var(--ds-border-accent-blue, #0065FF)",
    'color.border.accent.purple': "var(--ds-border-accent-purple, #6554C0)",
    'color.border.accent.magenta': "var(--ds-border-accent-magenta, #CD519D)",
    'color.border.accent.gray': "var(--ds-border-accent-gray, #5E6C84)",
    'color.border.disabled': "var(--ds-border-disabled, #FAFBFC)",
    'color.border.focused': "var(--ds-border-focused, #2684FF)",
    'color.border.input': "var(--ds-border-input, #FAFBFC)",
    'color.border.inverse': "var(--ds-border-inverse, #FFFFFF)",
    'color.border.selected': "var(--ds-border-selected, #0052CC)",
    'color.border.brand': "var(--ds-border-brand, #0052CC)",
    'color.border.danger': "var(--ds-border-danger, #FF5630)",
    'color.border.warning': "var(--ds-border-warning, #FFC400)",
    'color.border.success': "var(--ds-border-success, #00875A)",
    'color.border.discovery': "var(--ds-border-discovery, #998DD9)",
    'color.border.information': "var(--ds-border-information, #0065FF)",
    'color.border.bold': "var(--ds-border-bold, #344563)"
};
var backgroundColorMap = {
    'color.background.accent.lime.subtlest': "var(--ds-background-accent-lime-subtlest, #EEFBDA)",
    'color.background.accent.lime.subtlest.hovered': "var(--ds-background-accent-lime-subtlest-hovered, #D3F1A7)",
    'color.background.accent.lime.subtlest.pressed': "var(--ds-background-accent-lime-subtlest-pressed, #B3DF72)",
    'color.background.accent.lime.subtler': "var(--ds-background-accent-lime-subtler, #D3F1A7)",
    'color.background.accent.lime.subtler.hovered': "var(--ds-background-accent-lime-subtler-hovered, #B3DF72)",
    'color.background.accent.lime.subtler.pressed': "var(--ds-background-accent-lime-subtler-pressed, #94C748)",
    'color.background.accent.lime.subtle': "var(--ds-background-accent-lime-subtle, #94C748)",
    'color.background.accent.lime.subtle.hovered': "var(--ds-background-accent-lime-subtle-hovered, #B3DF72)",
    'color.background.accent.lime.subtle.pressed': "var(--ds-background-accent-lime-subtle-pressed, #D3F1A7)",
    'color.background.accent.lime.bolder': "var(--ds-background-accent-lime-bolder, #5B7F24)",
    'color.background.accent.lime.bolder.hovered': "var(--ds-background-accent-lime-bolder-hovered, #37471F)",
    'color.background.accent.lime.bolder.pressed': "var(--ds-background-accent-lime-bolder-pressed, #37471F)",
    'color.background.accent.red.subtlest': "var(--ds-background-accent-red-subtlest, #FF8F73)",
    'color.background.accent.red.subtlest.hovered': "var(--ds-background-accent-red-subtlest-hovered, #FF7452)",
    'color.background.accent.red.subtlest.pressed': "var(--ds-background-accent-red-subtlest-pressed, #FF5630)",
    'color.background.accent.red.subtler': "var(--ds-background-accent-red-subtler, #FF7452)",
    'color.background.accent.red.subtler.hovered': "var(--ds-background-accent-red-subtler-hovered, #FF5630)",
    'color.background.accent.red.subtler.pressed': "var(--ds-background-accent-red-subtler-pressed, #DE350B)",
    'color.background.accent.red.subtle': "var(--ds-background-accent-red-subtle, #DE350B)",
    'color.background.accent.red.subtle.hovered': "var(--ds-background-accent-red-subtle-hovered, #FF5630)",
    'color.background.accent.red.subtle.pressed': "var(--ds-background-accent-red-subtle-pressed, #FF7452)",
    'color.background.accent.red.bolder': "var(--ds-background-accent-red-bolder, #DE350B)",
    'color.background.accent.red.bolder.hovered': "var(--ds-background-accent-red-bolder-hovered, #FF5630)",
    'color.background.accent.red.bolder.pressed': "var(--ds-background-accent-red-bolder-pressed, #FF7452)",
    'color.background.accent.orange.subtlest': "var(--ds-background-accent-orange-subtlest, #F18D13)",
    'color.background.accent.orange.subtlest.hovered': "var(--ds-background-accent-orange-subtlest-hovered, #FEC57B)",
    'color.background.accent.orange.subtlest.pressed': "var(--ds-background-accent-orange-subtlest-pressed, #FFE2BD)",
    'color.background.accent.orange.subtler': "var(--ds-background-accent-orange-subtler, #B65C02)",
    'color.background.accent.orange.subtler.hovered': "var(--ds-background-accent-orange-subtler-hovered, #F18D13)",
    'color.background.accent.orange.subtler.pressed': "var(--ds-background-accent-orange-subtler-pressed, #FEC57B)",
    'color.background.accent.orange.subtle': "var(--ds-background-accent-orange-subtle, #5F3811)",
    'color.background.accent.orange.subtle.hovered': "var(--ds-background-accent-orange-subtle-hovered, #974F0C)",
    'color.background.accent.orange.subtle.pressed': "var(--ds-background-accent-orange-subtle-pressed, #B65C02)",
    'color.background.accent.orange.bolder': "var(--ds-background-accent-orange-bolder, #43290F)",
    'color.background.accent.orange.bolder.hovered': "var(--ds-background-accent-orange-bolder-hovered, #5F3811)",
    'color.background.accent.orange.bolder.pressed': "var(--ds-background-accent-orange-bolder-pressed, #974F0C)",
    'color.background.accent.yellow.subtlest': "var(--ds-background-accent-yellow-subtlest, #FFE380)",
    'color.background.accent.yellow.subtlest.hovered': "var(--ds-background-accent-yellow-subtlest-hovered, #FFC400)",
    'color.background.accent.yellow.subtlest.pressed': "var(--ds-background-accent-yellow-subtlest-pressed, #FFAB00)",
    'color.background.accent.yellow.subtler': "var(--ds-background-accent-yellow-subtler, #FFC400)",
    'color.background.accent.yellow.subtler.hovered': "var(--ds-background-accent-yellow-subtler-hovered, #FFAB00)",
    'color.background.accent.yellow.subtler.pressed': "var(--ds-background-accent-yellow-subtler-pressed, #FF991F)",
    'color.background.accent.yellow.subtle': "var(--ds-background-accent-yellow-subtle, #FF991F)",
    'color.background.accent.yellow.subtle.hovered': "var(--ds-background-accent-yellow-subtle-hovered, #FFAB00)",
    'color.background.accent.yellow.subtle.pressed': "var(--ds-background-accent-yellow-subtle-pressed, #FFC400)",
    'color.background.accent.yellow.bolder': "var(--ds-background-accent-yellow-bolder, #FF991F)",
    'color.background.accent.yellow.bolder.hovered': "var(--ds-background-accent-yellow-bolder-hovered, #FFAB00)",
    'color.background.accent.yellow.bolder.pressed': "var(--ds-background-accent-yellow-bolder-pressed, #FFC400)",
    'color.background.accent.green.subtlest': "var(--ds-background-accent-green-subtlest, #79F2C0)",
    'color.background.accent.green.subtlest.hovered': "var(--ds-background-accent-green-subtlest-hovered, #57D9A3)",
    'color.background.accent.green.subtlest.pressed': "var(--ds-background-accent-green-subtlest-pressed, #36B37E)",
    'color.background.accent.green.subtler': "var(--ds-background-accent-green-subtler, #57D9A3)",
    'color.background.accent.green.subtler.hovered': "var(--ds-background-accent-green-subtler-hovered, #36B37E)",
    'color.background.accent.green.subtler.pressed': "var(--ds-background-accent-green-subtler-pressed, #00875A)",
    'color.background.accent.green.subtle': "var(--ds-background-accent-green-subtle, #00875A)",
    'color.background.accent.green.subtle.hovered': "var(--ds-background-accent-green-subtle-hovered, #36B37E)",
    'color.background.accent.green.subtle.pressed': "var(--ds-background-accent-green-subtle-pressed, #57D9A3)",
    'color.background.accent.green.bolder': "var(--ds-background-accent-green-bolder, #00875A)",
    'color.background.accent.green.bolder.hovered': "var(--ds-background-accent-green-bolder-hovered, #36B37E)",
    'color.background.accent.green.bolder.pressed': "var(--ds-background-accent-green-bolder-pressed, #57D9A3)",
    'color.background.accent.teal.subtlest': "var(--ds-background-accent-teal-subtlest, #79E2F2)",
    'color.background.accent.teal.subtlest.hovered': "var(--ds-background-accent-teal-subtlest-hovered, #00C7E6)",
    'color.background.accent.teal.subtlest.pressed': "var(--ds-background-accent-teal-subtlest-pressed, #00B8D9)",
    'color.background.accent.teal.subtler': "var(--ds-background-accent-teal-subtler, #00C7E6)",
    'color.background.accent.teal.subtler.hovered': "var(--ds-background-accent-teal-subtler-hovered, #00B8D9)",
    'color.background.accent.teal.subtler.pressed': "var(--ds-background-accent-teal-subtler-pressed, #00A3BF)",
    'color.background.accent.teal.subtle': "var(--ds-background-accent-teal-subtle, #00A3BF)",
    'color.background.accent.teal.subtle.hovered': "var(--ds-background-accent-teal-subtle-hovered, #00B8D9)",
    'color.background.accent.teal.subtle.pressed': "var(--ds-background-accent-teal-subtle-pressed, #00C7E6)",
    'color.background.accent.teal.bolder': "var(--ds-background-accent-teal-bolder, #00A3BF)",
    'color.background.accent.teal.bolder.hovered': "var(--ds-background-accent-teal-bolder-hovered, #00B8D9)",
    'color.background.accent.teal.bolder.pressed': "var(--ds-background-accent-teal-bolder-pressed, #00C7E6)",
    'color.background.accent.blue.subtlest': "var(--ds-background-accent-blue-subtlest, #4C9AFF)",
    'color.background.accent.blue.subtlest.hovered': "var(--ds-background-accent-blue-subtlest-hovered, #2684FF)",
    'color.background.accent.blue.subtlest.pressed': "var(--ds-background-accent-blue-subtlest-pressed, #0065FF)",
    'color.background.accent.blue.subtler': "var(--ds-background-accent-blue-subtler, #2684FF)",
    'color.background.accent.blue.subtler.hovered': "var(--ds-background-accent-blue-subtler-hovered, #0065FF)",
    'color.background.accent.blue.subtler.pressed': "var(--ds-background-accent-blue-subtler-pressed, #0052CC)",
    'color.background.accent.blue.subtle': "var(--ds-background-accent-blue-subtle, #0052CC)",
    'color.background.accent.blue.subtle.hovered': "var(--ds-background-accent-blue-subtle-hovered, #0065FF)",
    'color.background.accent.blue.subtle.pressed': "var(--ds-background-accent-blue-subtle-pressed, #2684FF)",
    'color.background.accent.blue.bolder': "var(--ds-background-accent-blue-bolder, #0052CC)",
    'color.background.accent.blue.bolder.hovered': "var(--ds-background-accent-blue-bolder-hovered, #0065FF)",
    'color.background.accent.blue.bolder.pressed': "var(--ds-background-accent-blue-bolder-pressed, #2684FF)",
    'color.background.accent.purple.subtlest': "var(--ds-background-accent-purple-subtlest, #998DD9)",
    'color.background.accent.purple.subtlest.hovered': "var(--ds-background-accent-purple-subtlest-hovered, #8777D9)",
    'color.background.accent.purple.subtlest.pressed': "var(--ds-background-accent-purple-subtlest-pressed, #6554C0)",
    'color.background.accent.purple.subtler': "var(--ds-background-accent-purple-subtler, #8777D9)",
    'color.background.accent.purple.subtler.hovered': "var(--ds-background-accent-purple-subtler-hovered, #6554C0)",
    'color.background.accent.purple.subtler.pressed': "var(--ds-background-accent-purple-subtler-pressed, #5243AA)",
    'color.background.accent.purple.subtle': "var(--ds-background-accent-purple-subtle, #5243AA)",
    'color.background.accent.purple.subtle.hovered': "var(--ds-background-accent-purple-subtle-hovered, #6554C0)",
    'color.background.accent.purple.subtle.pressed': "var(--ds-background-accent-purple-subtle-pressed, #8777D9)",
    'color.background.accent.purple.bolder': "var(--ds-background-accent-purple-bolder, #5243AA)",
    'color.background.accent.purple.bolder.hovered': "var(--ds-background-accent-purple-bolder-hovered, #6554C0)",
    'color.background.accent.purple.bolder.pressed': "var(--ds-background-accent-purple-bolder-pressed, #8777D9)",
    'color.background.accent.magenta.subtlest': "var(--ds-background-accent-magenta-subtlest, #FFECF8)",
    'color.background.accent.magenta.subtlest.hovered': "var(--ds-background-accent-magenta-subtlest-hovered, #FDD0EC)",
    'color.background.accent.magenta.subtlest.pressed': "var(--ds-background-accent-magenta-subtlest-pressed, #F797D2)",
    'color.background.accent.magenta.subtler': "var(--ds-background-accent-magenta-subtler, #FDD0EC)",
    'color.background.accent.magenta.subtler.hovered': "var(--ds-background-accent-magenta-subtler-hovered, #F797D2)",
    'color.background.accent.magenta.subtler.pressed': "var(--ds-background-accent-magenta-subtler-pressed, #E774BB)",
    'color.background.accent.magenta.subtle': "var(--ds-background-accent-magenta-subtle, #E774BB)",
    'color.background.accent.magenta.subtle.hovered': "var(--ds-background-accent-magenta-subtle-hovered, #F797D2)",
    'color.background.accent.magenta.subtle.pressed': "var(--ds-background-accent-magenta-subtle-pressed, #FDD0EC)",
    'color.background.accent.magenta.bolder': "var(--ds-background-accent-magenta-bolder, #AE4787)",
    'color.background.accent.magenta.bolder.hovered': "var(--ds-background-accent-magenta-bolder-hovered, #943D73)",
    'color.background.accent.magenta.bolder.pressed': "var(--ds-background-accent-magenta-bolder-pressed, #50253F)",
    'color.background.accent.gray.subtlest': "var(--ds-background-accent-gray-subtlest, #6B778C)",
    'color.background.accent.gray.subtlest.hovered': "var(--ds-background-accent-gray-subtlest-hovered, #5E6C84)",
    'color.background.accent.gray.subtlest.pressed': "var(--ds-background-accent-gray-subtlest-pressed, #505F79)",
    'color.background.accent.gray.subtler': "var(--ds-background-accent-gray-subtler, #5E6C84)",
    'color.background.accent.gray.subtler.hovered': "var(--ds-background-accent-gray-subtler-hovered, #505F79)",
    'color.background.accent.gray.subtler.pressed': "var(--ds-background-accent-gray-subtler-pressed, #42526E)",
    'color.background.accent.gray.subtle': "var(--ds-background-accent-gray-subtle, #505F79)",
    'color.background.accent.gray.subtle.hovered': "var(--ds-background-accent-gray-subtle-hovered, #5E6C84)",
    'color.background.accent.gray.subtle.pressed': "var(--ds-background-accent-gray-subtle-pressed, #6B778C)",
    'color.background.accent.gray.bolder': "var(--ds-background-accent-gray-bolder, #42526E)",
    'color.background.accent.gray.bolder.hovered': "var(--ds-background-accent-gray-bolder-hovered, #344563)",
    'color.background.accent.gray.bolder.pressed': "var(--ds-background-accent-gray-bolder-pressed, #253858)",
    'color.background.disabled': "var(--ds-background-disabled, #091e4289)",
    'color.background.input': "var(--ds-background-input, #FAFBFC)",
    'color.background.input.hovered': "var(--ds-background-input-hovered, #EBECF0)",
    'color.background.input.pressed': "var(--ds-background-input-pressed, #FFFFFF)",
    'color.background.inverse.subtle': "var(--ds-background-inverse-subtle, #00000029)",
    'color.background.inverse.subtle.hovered': "var(--ds-background-inverse-subtle-hovered, #0000003D)",
    'color.background.inverse.subtle.pressed': "var(--ds-background-inverse-subtle-pressed, #00000052)",
    'color.background.neutral': "var(--ds-background-neutral, #DFE1E6)",
    'color.background.neutral.hovered': "var(--ds-background-neutral-hovered, #091e4214)",
    'color.background.neutral.pressed': "var(--ds-background-neutral-pressed, #B3D4FF)",
    'color.background.neutral.subtle': "var(--ds-background-neutral-subtle, transparent)",
    'color.background.neutral.subtle.hovered': "var(--ds-background-neutral-subtle-hovered, #091e4214)",
    'color.background.neutral.subtle.pressed': "var(--ds-background-neutral-subtle-pressed, #B3D4FF)",
    'color.background.neutral.bold': "var(--ds-background-neutral-bold, #42526E)",
    'color.background.neutral.bold.hovered': "var(--ds-background-neutral-bold-hovered, #505F79)",
    'color.background.neutral.bold.pressed': "var(--ds-background-neutral-bold-pressed, #344563)",
    'color.background.selected': "var(--ds-background-selected, #DEEBFF)",
    'color.background.selected.hovered': "var(--ds-background-selected-hovered, #B3D4FF)",
    'color.background.selected.pressed': "var(--ds-background-selected-pressed, #4C9AFF)",
    'color.background.selected.bold': "var(--ds-background-selected-bold, #0052CC)",
    'color.background.selected.bold.hovered': "var(--ds-background-selected-bold-hovered, #2684FF)",
    'color.background.selected.bold.pressed': "var(--ds-background-selected-bold-pressed, #0052CC)",
    'color.background.brand.subtlest': "var(--ds-background-brand-subtlest, #B3D4FF)",
    'color.background.brand.subtlest.hovered': "var(--ds-background-brand-subtlest-hovered, #DEEBFF)",
    'color.background.brand.subtlest.pressed': "var(--ds-background-brand-subtlest-pressed, #4C9AFF)",
    'color.background.brand.bold': "var(--ds-background-brand-bold, #0052CC)",
    'color.background.brand.bold.hovered': "var(--ds-background-brand-bold-hovered, #0065FF)",
    'color.background.brand.bold.pressed': "var(--ds-background-brand-bold-pressed, #0747A6)",
    'color.background.brand.boldest': "var(--ds-background-brand-boldest, #0747A6)",
    'color.background.brand.boldest.hovered': "var(--ds-background-brand-boldest-hovered, #0052CC)",
    'color.background.brand.boldest.pressed': "var(--ds-background-brand-boldest-pressed, #0747A6)",
    'color.background.danger': "var(--ds-background-danger, #FFEBE6)",
    'color.background.danger.hovered': "var(--ds-background-danger-hovered, #FFBDAD)",
    'color.background.danger.pressed': "var(--ds-background-danger-pressed, #FF8F73)",
    'color.background.danger.bold': "var(--ds-background-danger-bold, #DE350B)",
    'color.background.danger.bold.hovered': "var(--ds-background-danger-bold-hovered, #FF5630)",
    'color.background.danger.bold.pressed': "var(--ds-background-danger-bold-pressed, #BF2600)",
    'color.background.warning': "var(--ds-background-warning, #FFFAE6)",
    'color.background.warning.hovered': "var(--ds-background-warning-hovered, #FFF0B3)",
    'color.background.warning.pressed': "var(--ds-background-warning-pressed, #FFE380)",
    'color.background.warning.bold': "var(--ds-background-warning-bold, #FFAB00)",
    'color.background.warning.bold.hovered': "var(--ds-background-warning-bold-hovered, #FFC400)",
    'color.background.warning.bold.pressed': "var(--ds-background-warning-bold-pressed, #FF991F)",
    'color.background.success': "var(--ds-background-success, #E3FCEF)",
    'color.background.success.hovered': "var(--ds-background-success-hovered, #ABF5D1)",
    'color.background.success.pressed': "var(--ds-background-success-pressed, #79F2C0)",
    'color.background.success.bold': "var(--ds-background-success-bold, #00875A)",
    'color.background.success.bold.hovered': "var(--ds-background-success-bold-hovered, #57D9A3)",
    'color.background.success.bold.pressed': "var(--ds-background-success-bold-pressed, #00875A)",
    'color.background.discovery': "var(--ds-background-discovery, #EAE6FF)",
    'color.background.discovery.hovered': "var(--ds-background-discovery-hovered, #C0B6F2)",
    'color.background.discovery.pressed': "var(--ds-background-discovery-pressed, #998DD9)",
    'color.background.discovery.bold': "var(--ds-background-discovery-bold, #5243AA)",
    'color.background.discovery.bold.hovered': "var(--ds-background-discovery-bold-hovered, #8777D9)",
    'color.background.discovery.bold.pressed': "var(--ds-background-discovery-bold-pressed, #5243AA)",
    'color.background.information': "var(--ds-background-information, #DEEBFF)",
    'color.background.information.hovered': "var(--ds-background-information-hovered, #B3D4FF)",
    'color.background.information.pressed': "var(--ds-background-information-pressed, #4C9AFF)",
    'color.background.information.bold': "var(--ds-background-information-bold, #0052CC)",
    'color.background.information.bold.hovered': "var(--ds-background-information-bold-hovered, #2684FF)",
    'color.background.information.bold.pressed': "var(--ds-background-information-bold-pressed, #0052CC)",
    'color.blanket': "var(--ds-blanket, #091e4289)",
    'color.blanket.selected': "var(--ds-blanket-selected, #388BFF14)",
    'color.blanket.danger': "var(--ds-blanket-danger, #EF5C4814)",
    'color.skeleton': "var(--ds-skeleton, #F4F5F7)",
    'color.skeleton.subtle': "var(--ds-skeleton-subtle, #091e420a)",
    'elevation.surface': "var(--ds-surface, #FFFFFF)",
    'elevation.surface.hovered': "var(--ds-surface-hovered, #FAFBFC)",
    'elevation.surface.pressed': "var(--ds-surface-pressed, #F4F5F7)",
    'elevation.surface.overlay': "var(--ds-surface-overlay, #FFFFFF)",
    'elevation.surface.overlay.hovered': "var(--ds-surface-overlay-hovered, #FAFBFC)",
    'elevation.surface.overlay.pressed': "var(--ds-surface-overlay-pressed, #F4F5F7)",
    'elevation.surface.raised': "var(--ds-surface-raised, #FFFFFF)",
    'elevation.surface.raised.hovered': "var(--ds-surface-raised-hovered, #FAFBFC)",
    'elevation.surface.raised.pressed': "var(--ds-surface-raised-pressed, #F4F5F7)",
    'elevation.surface.sunken': "var(--ds-surface-sunken, #F4F5F7)",
    'utility.elevation.surface.current': "var(--ds-elevation-surface-current, #FFFFFF)"
};
var textColorMap = {
    'color.text': "var(--ds-text, #172B4D)",
    'color.text.accent.lime': "var(--ds-text-accent-lime, #4C6B1F)",
    'color.text.accent.lime.bolder': "var(--ds-text-accent-lime-bolder, #37471F)",
    'color.text.accent.red': "var(--ds-text-accent-red, #DE350B)",
    'color.text.accent.red.bolder': "var(--ds-text-accent-red-bolder, #BF2600)",
    'color.text.accent.orange': "var(--ds-text-accent-orange, #F18D13)",
    'color.text.accent.orange.bolder': "var(--ds-text-accent-orange-bolder, #B65C02)",
    'color.text.accent.yellow': "var(--ds-text-accent-yellow, #FF991F)",
    'color.text.accent.yellow.bolder': "var(--ds-text-accent-yellow-bolder, #FF8B00)",
    'color.text.accent.green': "var(--ds-text-accent-green, #00875A)",
    'color.text.accent.green.bolder': "var(--ds-text-accent-green-bolder, #006644)",
    'color.text.accent.teal': "var(--ds-text-accent-teal, #00A3BF)",
    'color.text.accent.teal.bolder': "var(--ds-text-accent-teal-bolder, #008DA6)",
    'color.text.accent.blue': "var(--ds-text-accent-blue, #0052CC)",
    'color.text.accent.blue.bolder': "var(--ds-text-accent-blue-bolder, #0747A6)",
    'color.text.accent.purple': "var(--ds-text-accent-purple, #5243AA)",
    'color.text.accent.purple.bolder': "var(--ds-text-accent-purple-bolder, #403294)",
    'color.text.accent.magenta': "var(--ds-text-accent-magenta, #E774BB)",
    'color.text.accent.magenta.bolder': "var(--ds-text-accent-magenta-bolder, #DA62AC)",
    'color.text.accent.gray': "var(--ds-text-accent-gray, #505F79)",
    'color.text.accent.gray.bolder': "var(--ds-text-accent-gray-bolder, #172B4D)",
    'color.text.disabled': "var(--ds-text-disabled, #A5ADBA)",
    'color.text.inverse': "var(--ds-text-inverse, #FFFFFF)",
    'color.text.selected': "var(--ds-text-selected, #0052CC)",
    'color.text.brand': "var(--ds-text-brand, #0065FF)",
    'color.text.danger': "var(--ds-text-danger, #DE350B)",
    'color.text.warning': "var(--ds-text-warning, #974F0C)",
    'color.text.warning.inverse': "var(--ds-text-warning-inverse, #172B4D)",
    'color.text.success': "var(--ds-text-success, #006644)",
    'color.text.discovery': "var(--ds-text-discovery, #403294)",
    'color.text.information': "var(--ds-text-information, #0052CC)",
    'color.text.subtlest': "var(--ds-text-subtlest, #7A869A)",
    'color.text.subtle': "var(--ds-text-subtle, #42526E)",
    'color.link': "var(--ds-link, #0052CC)",
    'color.link.pressed': "var(--ds-link-pressed, #0747A6)",
    'color.link.visited': "var(--ds-link-visited, #403294)",
    'color.link.visited.pressed': "var(--ds-link-visited-pressed, #403294)"
};
var fillMap = {
    'color.icon': "var(--ds-icon, #505F79)",
    'color.icon.accent.lime': "var(--ds-icon-accent-lime, #6A9A23)",
    'color.icon.accent.red': "var(--ds-icon-accent-red, #FF5630)",
    'color.icon.accent.orange': "var(--ds-icon-accent-orange, #D94008)",
    'color.icon.accent.yellow': "var(--ds-icon-accent-yellow, #FFAB00)",
    'color.icon.accent.green': "var(--ds-icon-accent-green, #36B37E)",
    'color.icon.accent.teal': "var(--ds-icon-accent-teal, #00B8D9)",
    'color.icon.accent.blue': "var(--ds-icon-accent-blue, #0065FF)",
    'color.icon.accent.purple': "var(--ds-icon-accent-purple, #6554C0)",
    'color.icon.accent.magenta': "var(--ds-icon-accent-magenta, #CD519D)",
    'color.icon.accent.gray': "var(--ds-icon-accent-gray, #5E6C84)",
    'color.icon.disabled': "var(--ds-icon-disabled, #8993A4)",
    'color.icon.inverse': "var(--ds-icon-inverse, #FFFFFF)",
    'color.icon.selected': "var(--ds-icon-selected, #0052CC)",
    'color.icon.brand': "var(--ds-icon-brand, #0065FF)",
    'color.icon.danger': "var(--ds-icon-danger, #DE350B)",
    'color.icon.warning': "var(--ds-icon-warning, #FFC400)",
    'color.icon.warning.inverse': "var(--ds-icon-warning-inverse, #253858)",
    'color.icon.success': "var(--ds-icon-success, #00875A)",
    'color.icon.discovery': "var(--ds-icon-discovery, #8777D9)",
    'color.icon.information': "var(--ds-icon-information, #0747A6)",
    'color.icon.subtlest': "var(--ds-icon-subtlest, #6B778C)",
    'color.icon.subtle': "var(--ds-icon-subtle, #6B778C)"
};
var layerMap = {
    '1': 1,
    card: 100,
    navigation: 200,
    dialog: 300,
    layer: 400,
    blanket: 500,
    modal: 510,
    flag: 600,
    spotlight: 700,
    tooltip: 800
};
var borderWidthMap = {
    'border.width': "var(--ds-border-width, 1px)",
    'border.width.0': "var(--ds-border-width-0, 0px)",
    'border.width.indicator': "var(--ds-border-width-indicator, 3px)",
    'border.width.outline': "var(--ds-border-width-outline, 2px)"
};
var borderRadiusMap = {
    'border.radius.050': "var(--ds-border-radius-050, 2px)",
    'border.radius': "var(--ds-border-radius, 3px)",
    'border.radius.100': "var(--ds-border-radius-100, 3px)",
    'border.radius.200': "var(--ds-border-radius-200, 8px)",
    'border.radius.300': "var(--ds-border-radius-300, 12px)",
    'border.radius.400': "var(--ds-border-radius-400, 16px)",
    'border.radius.circle': "var(--ds-border-radius-circle, 32032px)"
};
var fontMap = {
    'font.body': "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.body.UNSAFE_small': "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.body.large': "var(--ds-font-body-large, normal 400 16px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.body.small': "var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.code': "var(--ds-font-code, normal 400 0.875em/1 ui-monospace, Menlo, \"Segoe UI Mono\", \"Ubuntu Mono\", monospace)",
    'font.heading.large': "var(--ds-font-heading-large, normal 500 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.medium': "var(--ds-font-heading-medium, normal 500 20px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.small': "var(--ds-font-heading-small, normal 600 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.xlarge': "var(--ds-font-heading-xlarge, normal 600 29px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.xsmall': "var(--ds-font-heading-xsmall, normal 600 14px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.xxlarge': "var(--ds-font-heading-xxlarge, normal 500 35px/40px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.heading.xxsmall': "var(--ds-font-heading-xxsmall, normal 600 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.metric.large': "var(--ds-font-metric-large, normal 653 28px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.metric.medium': "var(--ds-font-metric-medium, normal 653 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.metric.small': "var(--ds-font-metric-small, normal 653 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
};
var fontWeightMap = {
    'font.weight.bold': "var(--ds-font-weight-bold, 700)",
    'font.weight.medium': "var(--ds-font-weight-medium, 500)",
    'font.weight.regular': "var(--ds-font-weight-regular, 400)",
    'font.weight.semibold': "var(--ds-font-weight-semibold, 600)"
};
var fontFamilyMap = {
    'font.family.body': "var(--ds-font-family-body, ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.family.brand.body': "var(--ds-font-family-brand-body, \"Charlie Text\", ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.family.brand.heading': "var(--ds-font-family-brand-heading, \"Charlie Display\", ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    'font.family.code': "var(--ds-font-family-code, ui-monospace, Menlo, \"Segoe UI Mono\", \"Ubuntu Mono\", monospace)",
    'font.family.heading': "var(--ds-font-family-heading, ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
};
var textSizeMap = {
    medium: "var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    UNSAFE_small: "var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    large: "var(--ds-font-body-large, normal 400 16px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    small: "var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
};
var textWeightMap = {
    bold: "var(--ds-font-weight-bold, 700)",
    medium: "var(--ds-font-weight-medium, 500)",
    regular: "var(--ds-font-weight-regular, 400)",
    semibold: "var(--ds-font-weight-semibold, 600)"
};
var metricTextSizeMap = {
    large: "var(--ds-font-metric-large, normal 653 28px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    medium: "var(--ds-font-metric-medium, normal 653 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)",
    small: "var(--ds-font-metric-small, normal 653 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Ubuntu, \"Helvetica Neue\", sans-serif)"
};
/**
 * @codegenEnd
 */ // Margin needs some bespoke types: https://atlassian.slack.com/archives/CKRHB23K8/p1712623192772909
// Generate maps for Box props. backgroundColor, padding, etc
var spacingProperties = [
    // Used by Box
    'padding',
    'paddingBlock',
    'paddingBlockStart',
    'paddingBlockEnd',
    'paddingInline',
    'paddingInlineStart',
    'paddingInlineEnd',
    // Used by Inline and Stack
    'gap',
    'rowGap',
    'columnGap'
];
var getSerializedStylesMap = function getSerializedStylesMap(cssProperty, tokenMap) {
    return Object.keys(tokenMap).reduce(function(emotionSpacingMap, token) {
        // eslint-disable-next-line @repo/internal/styles/no-exported-styles
        emotionSpacingMap[token] = (0, _react.css)((0, _definePropertyDefault.default)({}, cssProperty, tokenMap[token]));
        return emotionSpacingMap;
    }, {});
};
var paddingStylesMap = spacingProperties.reduce(function(styleMap, spacingProperty) {
    styleMap[spacingProperty] = getSerializedStylesMap(spacingProperty, positiveSpaceMap);
    return styleMap;
}, {});
var spaceStylesMap = spacingProperties.reduce(function(styleMap, spacingProperty) {
    styleMap[spacingProperty] = getSerializedStylesMap(spacingProperty, positiveSpaceMap);
    return styleMap;
}, {});
var backgroundColorStylesMap = getSerializedStylesMap('backgroundColor', backgroundColorMap);
var textColorStylesMap = getSerializedStylesMap('color', textColorMap);
var fontWeightStylesMap = getSerializedStylesMap('fontWeight', fontWeightMap);
var fontFamilyStylesMap = getSerializedStylesMap('fontFamily', fontFamilyMap);
var fontStylesMap = getSerializedStylesMap('font', fontMap);
var textSizeStylesMap = getSerializedStylesMap('font', textSizeMap);
var textWeightStylesMap = getSerializedStylesMap('fontWeight', textWeightMap);
var surfaceColorStylesMap = getSerializedStylesMap((0, _tokens.CURRENT_SURFACE_CSS_VAR), surfaceColorMap);
var isSurfaceColorToken = function isSurfaceColorToken(color) {
    return surfaceColorMap[color] !== undefined;
};
var metricTextSizeStylesMap = getSerializedStylesMap('font', metricTextSizeMap);

},{"@babel/runtime/helpers/defineProperty":"azbUC","@emotion/react":"cLTfV","@atlaskit/tokens":"cmVFI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cmVFI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "themeConfig", ()=>(0, _themeConfigDefault.default));
parcelHelpers.export(exports, "token", ()=>(0, _getTokenDefault.default));
parcelHelpers.export(exports, "getTokenValue", ()=>(0, _getTokenValueDefault.default));
parcelHelpers.export(exports, "setGlobalTheme", ()=>(0, _setGlobalThemeDefault.default));
parcelHelpers.export(exports, "enableGlobalTheme", ()=>(0, _enableGlobalThemeDefault.default));
parcelHelpers.export(exports, "getThemeStyles", ()=>(0, _getThemeStylesDefault.default));
parcelHelpers.export(exports, "getThemeHtmlAttrs", ()=>(0, _getThemeHtmlAttrsDefault.default));
parcelHelpers.export(exports, "getSSRAutoScript", ()=>(0, _getSsrAutoScriptDefault.default));
parcelHelpers.export(exports, "useThemeObserver", ()=>(0, _useThemeObserverDefault.default));
parcelHelpers.export(exports, "ThemeMutationObserver", ()=>(0, _themeMutationObserverDefault.default));
parcelHelpers.export(exports, "getGlobalTheme", ()=>(0, _getGlobalThemeDefault.default));
parcelHelpers.export(exports, "themeStringToObject", ()=>(0, _themeStateTransformer.themeStringToObject));
parcelHelpers.export(exports, "themeObjectToString", ()=>(0, _themeStateTransformer.themeObjectToString));
parcelHelpers.export(exports, "CURRENT_SURFACE_CSS_VAR", ()=>(0, _constants.CURRENT_SURFACE_CSS_VAR));
var _themeConfig = require("./theme-config");
var _themeConfigDefault = parcelHelpers.interopDefault(_themeConfig);
var _getToken = require("./get-token");
var _getTokenDefault = parcelHelpers.interopDefault(_getToken);
var _getTokenValue = require("./get-token-value");
var _getTokenValueDefault = parcelHelpers.interopDefault(_getTokenValue);
var _setGlobalTheme = require("./set-global-theme");
var _setGlobalThemeDefault = parcelHelpers.interopDefault(_setGlobalTheme);
var _enableGlobalTheme = require("./enable-global-theme");
var _enableGlobalThemeDefault = parcelHelpers.interopDefault(_enableGlobalTheme);
var _getThemeStyles = require("./get-theme-styles");
var _getThemeStylesDefault = parcelHelpers.interopDefault(_getThemeStyles);
var _getThemeHtmlAttrs = require("./get-theme-html-attrs");
var _getThemeHtmlAttrsDefault = parcelHelpers.interopDefault(_getThemeHtmlAttrs);
var _getSsrAutoScript = require("./get-ssr-auto-script");
var _getSsrAutoScriptDefault = parcelHelpers.interopDefault(_getSsrAutoScript);
var _useThemeObserver = require("./use-theme-observer");
var _useThemeObserverDefault = parcelHelpers.interopDefault(_useThemeObserver);
var _themeMutationObserver = require("./theme-mutation-observer");
var _themeMutationObserverDefault = parcelHelpers.interopDefault(_themeMutationObserver);
var _getGlobalTheme = require("./get-global-theme");
var _getGlobalThemeDefault = parcelHelpers.interopDefault(_getGlobalTheme);
var _themeStateTransformer = require("./theme-state-transformer");
var _constants = require("./constants");

},{"./theme-config":false,"./get-token":false,"./get-token-value":false,"./set-global-theme":false,"./enable-global-theme":false,"./get-theme-styles":false,"./get-theme-html-attrs":false,"./get-ssr-auto-script":false,"./use-theme-observer":"1rR7K","./theme-mutation-observer":false,"./get-global-theme":false,"./theme-state-transformer":false,"./constants":"26Wz9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"drTEg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "themeColorModes", ()=>themeColorModes);
parcelHelpers.export(exports, "themeIds", ()=>themeIds);
parcelHelpers.export(exports, "themeIdsWithOverrides", ()=>themeIdsWithOverrides);
parcelHelpers.export(exports, "themeStateDefaults", ()=>themeStateDefaults);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var themeColorModes = [
    'light',
    'dark',
    'auto'
];
/**
 * Contrast preferences: The system contrast preference
 */ var themeContrastModes = [
    'more',
    'no-preference',
    'auto'
];
var themeIds = [
    'light-increased-contrast',
    'light',
    'light-future',
    'light-brand-refresh',
    'dark',
    'dark-future',
    'dark-increased-contrast',
    'dark-brand-refresh',
    'legacy-light',
    'legacy-dark',
    'spacing',
    'shape',
    'typography',
    'typography-adg3',
    'typography-modernized',
    'typography-refreshed'
];
/**
 * Theme override ids: the equivalent of themeIds for theme overrides.
 * Theme overrides are temporary and there may not be any defined at times.
 */ var themeOverrideIds = [];
var themeIdsWithOverrides = [].concat(themeIds, themeOverrideIds);
/**
 * Theme to use a base. This will create the theme as
 * an extension with all token values marked as optional
 * to allow tokens to be overridden as required.
 */ /**
 * Palettes: The set of base tokens a given theme may be populated with.
 * For example: legacy light & dark themes use the "legacyPalette" containing colors from our
 * previous color set.
 */ /**
 * ThemeConfig: the source of truth for all theme meta-data.
 * This object should be used whenever interfacing with themes.
 */ var themeConfig = {
    'atlassian-light': {
        id: 'light',
        displayName: 'Light Theme',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'light'
        }
    },
    'atlassian-light-future': {
        id: 'light-future',
        displayName: 'Future Light Theme',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'light'
        },
        override: 'light'
    },
    'atlassian-light-increased-contrast': {
        id: 'light-increased-contrast',
        displayName: 'Light Theme (increased contrast)',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'light'
        },
        extends: 'light',
        increasesContrastFor: 'light'
    },
    'atlassian-dark': {
        id: 'dark',
        displayName: 'Dark Theme',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'dark'
        }
    },
    'atlassian-dark-future': {
        id: 'dark-future',
        displayName: 'Future Dark Theme',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'dark'
        },
        override: 'light'
    },
    'atlassian-dark-increased-contrast': {
        id: 'dark-increased-contrast',
        displayName: 'Dark Theme (increased contrast)',
        palette: 'defaultPalette',
        attributes: {
            type: 'color',
            mode: 'dark'
        },
        extends: 'dark',
        increasesContrastFor: 'dark'
    },
    'atlassian-legacy-light': {
        id: 'legacy-light',
        displayName: 'Light Theme (legacy)',
        palette: 'legacyPalette',
        attributes: {
            type: 'color',
            mode: 'light'
        }
    },
    'atlassian-legacy-dark': {
        id: 'legacy-dark',
        displayName: 'Dark Theme (legacy)',
        palette: 'legacyPalette',
        attributes: {
            type: 'color',
            mode: 'dark'
        }
    },
    'atlassian-spacing': {
        id: 'spacing',
        displayName: 'Atlassian Spacing',
        palette: 'spacingScale',
        attributes: {
            type: 'spacing'
        }
    },
    'atlassian-typography': {
        id: 'typography',
        displayName: 'Atlassian Typography',
        palette: 'typographyPalette',
        attributes: {
            type: 'typography'
        }
    },
    'atlassian-typography-adg3': {
        id: 'typography-adg3',
        displayName: 'ADG3 Typography',
        palette: 'typographyPalette',
        attributes: {
            type: 'typography'
        }
    },
    'atlassian-shape': {
        id: 'shape',
        displayName: 'Atlassian Shape',
        palette: 'shapePalette',
        attributes: {
            type: 'shape'
        }
    },
    'atlassian-typography-modernized': {
        id: 'typography-modernized',
        displayName: 'Atlassian Typography (Modernized)',
        palette: 'typographyPalette',
        attributes: {
            type: 'typography'
        }
    },
    'atlassian-typography-refreshed': {
        id: 'typography-refreshed',
        displayName: 'Atlassian Typography (Refreshed)',
        palette: 'typographyPalette',
        attributes: {
            type: 'typography'
        }
    },
    'atlassian-light-brand-refresh': {
        id: 'light-brand-refresh',
        displayName: 'Light theme (Brand refresh)',
        palette: 'brandRefreshPalette',
        attributes: {
            type: 'color',
            mode: 'light'
        }
    },
    'atlassian-dark-brand-refresh': {
        id: 'dark-brand-refresh',
        displayName: 'Dark theme (Brand refresh)',
        palette: 'brandRefreshPalette',
        attributes: {
            type: 'color',
            mode: 'dark'
        }
    }
};
var themeStateDefaults = {
    colorMode: 'auto',
    contrastMode: 'auto',
    dark: 'dark',
    light: 'light',
    shape: undefined,
    spacing: 'spacing',
    typography: function typography() {
        if ((0, _platformFeatureFlags.fg)('platform-default-typography-refreshed')) return 'typography';
        if ((0, _platformFeatureFlags.fg)('platform-default-typography-modernized')) return 'typography-modernized';
        return undefined;
    },
    UNSAFE_themeOptions: undefined
};
/**
 * Represents theme state once mounted to the page
 * (the page doesn't have an "auto" color mode, it's either light or dark)
 */ exports.default = themeConfig;

},{"@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1rR7K":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _react = require("react");
var _getGlobalTheme = require("./get-global-theme");
var _getGlobalThemeDefault = parcelHelpers.interopDefault(_getGlobalTheme);
var _themeMutationObserver = require("./theme-mutation-observer");
var _themeMutationObserverDefault = parcelHelpers.interopDefault(_themeMutationObserver);
/**
 * A React hook which returns the current themes and color-mode set on `<html>`.
 *
 * @example
 * ```
 * const { colorMode, dark, light, spacing, typography } = useThemeObserver();
 *
 * // Performing side effects when it changes
 * useEffect(() => {
 *   console.log(`The color mode has changed to ${theme.colorMode}`);
 * }, [theme.colorMode]);
 * ```
 */ var useThemeObserver = function useThemeObserver() {
    var _useState = (0, _react.useState)((0, _getGlobalThemeDefault.default)()), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), theme = _useState2[0], setTheme = _useState2[1];
    (0, _react.useEffect)(function() {
        var observer = new (0, _themeMutationObserverDefault.default)(function(theme) {
            return setTheme(theme);
        });
        observer.observe();
        return function() {
            return observer.disconnect();
        };
    }, []);
    return theme;
};
exports.default = useThemeObserver;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","react":"jMk1U","./get-global-theme":"8ikH2","./theme-mutation-observer":"8xhpn","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8ikH2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _constants = require("./constants");
var _themeConfig = require("./theme-config");
var _themeStateTransformer = require("./theme-state-transformer");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
var isThemeColorMode = function isThemeColorMode(colorMode) {
    return (0, _themeConfig.themeColorModes).find(function(mode) {
        return mode === colorMode;
    }) !== undefined;
};
var getGlobalTheme = function getGlobalTheme() {
    if (typeof document === 'undefined') return {};
    var element = document.documentElement;
    var colorMode = element.getAttribute((0, _constants.COLOR_MODE_ATTRIBUTE)) || '';
    var theme = element.getAttribute((0, _constants.THEME_DATA_ATTRIBUTE)) || '';
    return _objectSpread(_objectSpread({}, (0, _themeStateTransformer.themeStringToObject)(theme)), isThemeColorMode(colorMode) && {
        colorMode: colorMode
    });
};
exports.default = getGlobalTheme;

},{"@babel/runtime/helpers/defineProperty":"azbUC","./constants":"26Wz9","./theme-config":"drTEg","./theme-state-transformer":"2fg4Q","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"26Wz9":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "THEME_DATA_ATTRIBUTE", ()=>THEME_DATA_ATTRIBUTE);
parcelHelpers.export(exports, "COLOR_MODE_ATTRIBUTE", ()=>COLOR_MODE_ATTRIBUTE);
parcelHelpers.export(exports, "CONTRAST_MODE_ATTRIBUTE", ()=>CONTRAST_MODE_ATTRIBUTE);
parcelHelpers.export(exports, "CUSTOM_THEME_ATTRIBUTE", ()=>CUSTOM_THEME_ATTRIBUTE);
parcelHelpers.export(exports, "CSS_PREFIX", ()=>CSS_PREFIX);
parcelHelpers.export(exports, "CSS_VAR_FULL", ()=>CSS_VAR_FULL);
parcelHelpers.export(exports, "TOKEN_NOT_FOUND_CSS_VAR", ()=>TOKEN_NOT_FOUND_CSS_VAR);
parcelHelpers.export(exports, "CURRENT_SURFACE_CSS_VAR", ()=>CURRENT_SURFACE_CSS_VAR);
var THEME_DATA_ATTRIBUTE = 'data-theme';
var COLOR_MODE_ATTRIBUTE = 'data-color-mode';
var CONTRAST_MODE_ATTRIBUTE = 'data-contrast-mode';
var CUSTOM_THEME_ATTRIBUTE = 'data-custom-theme';
var CSS_PREFIX = 'ds';
var CSS_VAR_FULL = [
    'opacity',
    'font',
    'space',
    'border'
];
var TOKEN_NOT_FOUND_CSS_VAR = "--".concat(CSS_PREFIX, "-token-not-found");
var CURRENT_SURFACE_CSS_VAR = "--".concat(CSS_PREFIX, "-elevation-surface-current");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2fg4Q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "themeStringToObject", ()=>themeStringToObject);
parcelHelpers.export(exports, "themeObjectToString", ()=>themeObjectToString);
var _typeof = require("@babel/runtime/helpers/typeof");
var _typeofDefault = parcelHelpers.interopDefault(_typeof);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _themeConfig = require("./theme-config");
var themeKinds = [
    'light',
    'dark',
    'spacing',
    'typography',
    'shape'
];
var customThemeOptions = 'UNSAFE_themeOptions';
var isThemeKind = function isThemeKind(themeKind) {
    return themeKinds.find(function(kind) {
        return kind === themeKind;
    }) !== undefined;
};
var isThemeIds = function isThemeIds(themeId) {
    return (0, _themeConfig.themeIds).find(function(id) {
        return id === themeId;
    }) !== undefined;
};
var isColorMode = function isColorMode(modeId) {
    return [
        'light',
        'dark',
        'auto'
    ].includes(modeId);
};
var themeStringToObject = function themeStringToObject(themeState) {
    return themeState.split(' ').map(function(theme) {
        return theme.split(/:([^]*)/);
    }).reduce(function(themeObject, _ref) {
        var _ref2 = (0, _slicedToArrayDefault.default)(_ref, 2), kind = _ref2[0], id = _ref2[1];
        if (kind === 'colorMode' && isColorMode(id)) themeObject[kind] = id;
        if (isThemeKind(kind) && isThemeIds(id)) // @ts-expect-error FIXME - this is a valid ts error
        themeObject[kind] = id;
        if (kind === customThemeOptions) try {
            themeObject[customThemeOptions] = JSON.parse(id);
        } catch (e) {
            new Error('Invalid custom theme string');
        }
        return themeObject;
    }, {});
};
var themeObjectToString = function themeObjectToString(themeState) {
    return Object.entries(themeState).reduce(function(themeString, _ref3) {
        var _ref4 = (0, _slicedToArrayDefault.default)(_ref3, 2), kind = _ref4[0], id = _ref4[1];
        if (// colorMode theme state
        kind === 'colorMode' && typeof id === 'string' && isColorMode(id) || // custom theme state
        kind === customThemeOptions && (0, _typeofDefault.default)(id) === 'object' || // other theme states
        isThemeKind(kind) && typeof id === 'string' && isThemeIds(id)) return themeString + "".concat(themeString ? ' ' : '') + "".concat(kind, ":").concat((0, _typeofDefault.default)(id) === 'object' ? JSON.stringify(id) : id);
        return themeString;
    }, '');
};

},{"@babel/runtime/helpers/typeof":"7EL9t","@babel/runtime/helpers/slicedToArray":"lvO5K","./theme-config":"drTEg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8xhpn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ThemeMutationObserver);
var _classCallCheck = require("@babel/runtime/helpers/classCallCheck");
var _classCallCheckDefault = parcelHelpers.interopDefault(_classCallCheck);
var _createClass = require("@babel/runtime/helpers/createClass");
var _createClassDefault = parcelHelpers.interopDefault(_createClass);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _constants = require("./constants");
var _getGlobalTheme = require("./get-global-theme");
var _getGlobalThemeDefault = parcelHelpers.interopDefault(_getGlobalTheme);
/**
 * A MutationObserver which watches the `<html>` element for changes to the theme.
 *
 * In React, use the {@link useThemeObserver `useThemeObserver`} hook instead.
 *
 * @param {function} callback - A callback function which fires when the theme changes.
 *
 * @example
 * ```
 * const observer = new ThemeMutationObserver((theme) => {});
 * observer.observe();
 * ```
 */ var ThemeMutationObserver = /*#__PURE__*/ function() {
    function ThemeMutationObserver(callback) {
        (0, _classCallCheckDefault.default)(this, ThemeMutationObserver);
        (0, _definePropertyDefault.default)(this, "legacyObserver", null);
        this.callback = callback;
        ThemeMutationObserver.callbacks.add(callback);
    }
    return (0, _createClassDefault.default)(ThemeMutationObserver, [
        {
            key: "observe",
            value: function observe() {
                if (!ThemeMutationObserver.observer) {
                    ThemeMutationObserver.observer = new MutationObserver(function() {
                        var theme = (0, _getGlobalThemeDefault.default)();
                        ThemeMutationObserver.callbacks.forEach(function(callback) {
                            return callback(theme);
                        });
                    });
                    // Observer only needs to be configured once
                    ThemeMutationObserver.observer.observe(document.documentElement, {
                        attributeFilter: [
                            (0, _constants.THEME_DATA_ATTRIBUTE),
                            (0, _constants.COLOR_MODE_ATTRIBUTE)
                        ]
                    });
                }
            }
        },
        {
            key: "disconnect",
            value: function disconnect() {
                if (this.callback) ThemeMutationObserver.callbacks.delete(this.callback);
                if (ThemeMutationObserver.callbacks.size === 0 && ThemeMutationObserver.observer) {
                    ThemeMutationObserver.observer.disconnect();
                    ThemeMutationObserver.observer = null;
                }
            }
        }
    ]);
}();
(0, _definePropertyDefault.default)(ThemeMutationObserver, "observer", null);
(0, _definePropertyDefault.default)(ThemeMutationObserver, "callbacks", new Set());

},{"@babel/runtime/helpers/classCallCheck":"fbbZA","@babel/runtime/helpers/createClass":"lr6gv","@babel/runtime/helpers/defineProperty":"azbUC","./constants":"26Wz9","./get-global-theme":"8ikH2","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bLu4Y":[function(require,module,exports,__globalThis) {
/**
 * @jsxRuntime classic
 * @jsx jsx
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
var _react1 = require("@emotion/react");
var _styleMapsPartial = require("../xcss/style-maps.partial");
var _xcss = require("../xcss/xcss");
var justifyContentMap = {
    start: (0, _react1.css)({
        justifyContent: 'start'
    }),
    center: (0, _react1.css)({
        justifyContent: 'center'
    }),
    end: (0, _react1.css)({
        justifyContent: 'end'
    }),
    'space-between': (0, _react1.css)({
        justifyContent: 'space-between'
    }),
    'space-around': (0, _react1.css)({
        justifyContent: 'space-around'
    }),
    'space-evenly': (0, _react1.css)({
        justifyContent: 'space-evenly'
    }),
    stretch: (0, _react1.css)({
        justifyContent: 'stretch'
    })
};
var flexDirectionMap = {
    column: (0, _react1.css)({
        flexDirection: 'column'
    }),
    row: (0, _react1.css)({
        flexDirection: 'row'
    })
};
var flexWrapMap = {
    wrap: (0, _react1.css)({
        flexWrap: 'wrap'
    }),
    nowrap: (0, _react1.css)({
        flexWrap: 'nowrap'
    })
};
var alignItemsMap = {
    start: (0, _react1.css)({
        alignItems: 'start'
    }),
    center: (0, _react1.css)({
        alignItems: 'center'
    }),
    baseline: (0, _react1.css)({
        alignItems: 'baseline'
    }),
    end: (0, _react1.css)({
        alignItems: 'end'
    }),
    stretch: (0, _react1.css)({
        alignItems: 'stretch'
    })
};
var baseStyles = (0, _react1.css)({
    display: 'flex',
    boxSizing: 'border-box'
});
/**
 * __Flex__
 *
 * `Flex` is a primitive component that implements the CSS Flexbox API.
 *
 * - [Examples](https://atlassian.design/components/primitives/flex/examples)
 * - [Code](https://atlassian.design/components/primitives/flex/code)
 *
 * @example
 * ```tsx
 * import { Flex, Box } from '@atlaskit/primitives'
 *
 * const Component = () => (
 *   <Flex direction="column">
 *     <Box padding="space.100" backgroundColor="neutral"></Box>
 *     <Box padding="space.100" backgroundColor="neutral"></Box>
 *   </Flex>
 * )
 * ```
 */ var Flex = /*#__PURE__*/ (0, _react.memo)(/*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? 'div' : _ref$as, role = _ref.role, alignItems = _ref.alignItems, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, testId = _ref.testId, direction = _ref.direction, wrap = _ref.wrap, xcss = _ref.xcss;
    var resolvedStyles = (0, _xcss.parseXcss)(xcss);
    return (0, _react1.jsx)(Component, {
        role: role,
        className: resolvedStyles.static,
        css: [
            baseStyles,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            gap && (0, _styleMapsPartial.spaceStylesMap).gap[gap],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            columnGap && (0, _styleMapsPartial.spaceStylesMap).columnGap[columnGap],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            rowGap && (0, _styleMapsPartial.spaceStylesMap).rowGap[rowGap],
            alignItems && alignItemsMap[alignItems],
            direction && flexDirectionMap[direction],
            justifyContent && justifyContentMap[justifyContent],
            wrap && flexWrapMap[wrap],
            resolvedStyles.emotion
        ],
        "data-testid": testId,
        ref: ref
    }, children);
}));
Flex.displayName = 'Flex';
exports.default = Flex;

},{"react":"jMk1U","@emotion/react":"cLTfV","../xcss/style-maps.partial":"i6gMp","../xcss/xcss":"jDay7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"g4i2A":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CloseButton", ()=>CloseButton);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _new = require("@atlaskit/button/new");
var _closeCross = require("@atlaskit/icon/core/migration/close--cross");
var _closeCrossDefault = parcelHelpers.interopDefault(_closeCross);
var CloseButton = function CloseButton(_ref) {
    var label = _ref.label, onClick = _ref.onClick, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _new.IconButton), {
        testId: testId && "".concat(testId, "--close-button"),
        appearance: "subtle",
        icon: (0, _closeCrossDefault.default),
        label: label || 'Close Modal',
        onClick: onClick
    });
};

},{"react":"jMk1U","@atlaskit/button/new":"jGwqc","@atlaskit/icon/core/migration/close--cross":"042ON","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"042ON":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::35b8c6b585772b9406ca86ab3c3befd4>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("71c1406c94033d93"));
var _close = _interopRequireDefault(require("4c427a522581d97c"));
var _cross = _interopRequireDefault(require("8847cca4f9ecb605"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Migration Icon component for CloseIcon.
 * This component is CloseIcon, with `UNSAFE_fallbackIcon` set to "CrossIcon".
 *
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Known uses: closing modals, panels, and transient views; removing tags
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const CloseIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_close.default, Object.assign({
        LEGACY_fallbackIcon: _cross.default
    }, props));
CloseIcon.Name = 'CloseIconMigration';
var _default = exports.default = CloseIcon;

},{"71c1406c94033d93":"jMk1U","4c427a522581d97c":"cmQw1","8847cca4f9ecb605":"91Wl5"}],"cmQw1":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::b2832ce3758295ab6ed0286f39d79816>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("9c639f268a1f3369"));
var _baseNew = _interopRequireDefault(require("8da88e3004b49ff5"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Close".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Known uses: closing modals, panels, and transient views; removing tags
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const CloseIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="m9.06 8 4.97-4.97-1.06-1.06L8 6.94 3.03 1.97 1.97 3.03 6.94 8l-4.97 4.97 1.06 1.06L8 9.06l4.97 4.97 1.06-1.06z" clip-rule="evenodd"/>`
    }, props));
CloseIcon.displayName = 'CloseIcon';
var _default = exports.default = CloseIcon;

},{"9c639f268a1f3369":"jMk1U","8da88e3004b49ff5":"8iv7w"}],"8iv7w":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconNewDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _iconNew.Icon));
var _iconNew = require("../components/icon-new");
var _iconNewDefault = parcelHelpers.interopDefault(_iconNew);

},{"../components/icon-new":"blDw6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"blDw6":[function(require,module,exports,__globalThis) {
/* icon-new.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
/**
 * We are hiding this props from consumers as it's reserved
 * for use by Icon Tile.
 */ var svgStyles = null;
var iconStyles = null;
var utilityIconStyles = null;
var scaleStyles = null;
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var scaleSize = null;
var coreSizeMedium = {
    none: "_1bsbpxbi _4t3ipxbi",
    compact: "_1bsb1ejb _4t3i1ejb",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var coreSizeSmall = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var utilSizes = {
    none: "_1bsbutpp _4t3iutpp",
    compact: "_1bsbpxbi _4t3ipxbi",
    spacious: "_1bsb1ejb _4t3i1ejb"
};
var baseSizeMap = {
    core: 16,
    utility: 12
};
var paddingMap = {
    core: {
        medium: {
            none: 0,
            compact: 4,
            spacious: 4
        },
        small: {
            none: 0,
            compact: 2.66,
            spacious: 8
        }
    },
    utility: {
        medium: {
            none: 0,
            compact: 2,
            spacious: 6
        },
        small: {
            none: 0,
            compact: 2,
            spacious: 6
        }
    }
};
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _props$type;
    var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? 'currentColor' : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing;
    var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
    } : undefined;
    // Fall back to old icon
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    if (FallbackIcon && !(0, _platformFeatureFlags.fg)('platform-visual-refresh-icons')) // parse out unnecessary props
    return /*#__PURE__*/ _react.createElement(FallbackIcon, {
        primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
        secondaryColor: LEGACY_secondaryColor,
        size: LEGACY_size,
        label: label,
        testId: testId,
        UNSAFE_margin: LEGACY_margin
    });
    var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core';
    var size = 'size' in props && props.size !== undefined && // This prevents invalid sizes being passed in, which is required
    // for handling unsupported legacy icon sizes which can
    // cause errors.
    (props.size === 'small' || props.size === 'medium') ? props.size : 'medium';
    var baseSize = baseSizeMap[type];
    var viewBoxPadding = paddingMap[type][size][spacing];
    var viewBoxSize = baseSize + 2 * viewBoxPadding;
    return /*#__PURE__*/ _react.createElement("span", {
        "data-testid": testId,
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: {
            color: color
        },
        className: (0, _runtime.ax)([
            "_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9",
            "_12va1onz _jcxd1r8n",
            shouldScale && "_1bsb1kw7 _4t3i1kw7",
            (type === 'utility' || size === 'small') && "_vwz4utpp"
        ])
    }, /*#__PURE__*/ _react.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML: dangerouslySetInnerHTML,
        className: (0, _runtime.ax)([
            "_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31",
            shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === 'utility' ? utilSizes[spacing] : size === 'small' ? coreSizeSmall[spacing] : coreSizeMedium[spacing]
        ])
    }));
});
exports.default = Icon;

},{"react":"jMk1U","@compiled/react/runtime":"8r5np","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"91Wl5":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("2e82a8d292b872cb"));
var _base = require("6ddb58a5908fd194");
var _cross = _interopRequireDefault(require("6dab7dcfea92f70a"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const CrossIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" d="M12 10.586 6.707 5.293a1 1 0 0 0-1.414 1.414L10.586 12l-5.293 5.293a1 1 0 0 0 1.414 1.414L12 13.414l5.293 5.293a1 1 0 0 0 1.414-1.414L13.414 12l5.293-5.293a1 1 0 1 0-1.414-1.414z"/></svg>`
    }, props, {
        newIcon: _cross.default
    }));
CrossIcon.displayName = 'CrossIcon';
var _default = exports.default = CrossIcon;

},{"2e82a8d292b872cb":"jMk1U","6ddb58a5908fd194":"1cdUG","6dab7dcfea92f70a":"eeZYs"}],"1cdUG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>(0, _iconDefault.default));
parcelHelpers.export(exports, "Icon", ()=>(0, _icon.Icon));
parcelHelpers.export(exports, "IconFacade", ()=>(0, _iconFacade.IconFacade));
var _icon = require("../components/icon");
var _iconDefault = parcelHelpers.interopDefault(_icon);
var _iconFacade = require("../components/icon-facade");

},{"../components/icon":"2HnQA","../components/icon-facade":"k7mOB","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2HnQA":[function(require,module,exports,__globalThis) {
/* icon.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            (0, _definePropertyDefault.default)(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
/**
 * We are hiding these props from consumers as they're used to
 * hack around icon sizing specifically for icon-file-type.
 */ var iconStyles = null;
var sizeStyles = {
    small: "_1bsb7vkz _4t3i7vkz _5fdi7vkz _zbji7vkz",
    medium: "_1bsb1tcg _4t3i1tcg _5fdi1tcg _zbji1tcg",
    large: "_1bsbzwfg _4t3izwfg _5fdizwfg _zbjizwfg",
    xlarge: "_1bsbckbl _4t3ickbl _5fdickbl _zbjickbl"
};
/**
 * For windows high contrast mode
 */ var baseHcmStyles = null;
var primaryEqualsSecondaryHcmStyles = null;
var secondaryTransparentHcmStyles = null;
var Icon = /*#__PURE__*/ (0, _react.memo)(function Icon(props) {
    var _ref = props, Glyph = _ref.glyph, dangerouslySetGlyph = _ref.dangerouslySetGlyph, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor, secondaryColor = _ref.secondaryColor, size = _ref.size, testId = _ref.testId, label = _ref.label, width = _ref.width, height = _ref.height, UNSAFE_margin = _ref.UNSAFE_margin;
    var glyphProps = dangerouslySetGlyph ? {
        dangerouslySetInnerHTML: {
            __html: dangerouslySetGlyph
        }
    } : {
        children: Glyph ? /*#__PURE__*/ _react.createElement(Glyph, {
            role: "presentation"
        }) : null
    };
    var customDimensions = width && height ? {
        width: width + 'px',
        height: height + 'px'
    } : null;
    return /*#__PURE__*/ _react.createElement("span", (0, _extendsDefault.default)({
        "data-testid": testId,
        "data-vc": "icon-".concat(testId),
        role: label ? 'img' : undefined,
        "aria-label": label ? label : undefined,
        "aria-hidden": label ? undefined : true,
        style: _objectSpread(_objectSpread({}, customDimensions), {}, {
            '--icon-primary-color': primaryColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            '--icon-secondary-color': secondaryColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            margin: UNSAFE_margin
        })
    }, glyphProps, {
        className: (0, _runtime.ax)([
            "_1e0c1o8l _1o9zidpf _vyfuvuon _vwz4kb7n _1szv15vq _1tly15vq _rzyw1osq _17jb1osq _1ksvoz0e _3se1x1jp _re2rglyw _1veoyfq0 _1kg81r31",
            "_jcxd1r8n _gq0g1onz _1trkwc43",
            primaryColor === secondaryColor && "_18hbwc43",
            secondaryColor === 'transparent' && "_4fyi1j28",
            size && sizeStyles[size]
        ])
    }));
});
exports.default = Icon;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","react":"jMk1U","@compiled/react/runtime":"8r5np","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k7mOB":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconFacade", ()=>IconFacade);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _icon = require("./icon");
var _excluded = [
    "dangerouslySetGlyph",
    "size"
];
var sizeSpacingMap = {
    utility: {
        small: 'compact',
        medium: 'spacious'
    },
    core: {
        small: 'none',
        medium: 'spacious'
    }
};
var IconFacade = /*#__PURE__*/ (0, _react.memo)(function IconFacade(_ref) {
    var dangerouslySetGlyph = _ref.dangerouslySetGlyph, size = _ref.size, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    var NewIcon = props.newIcon;
    // By default, the icon size will be medium for core icons and small for utility icons
    var iconSize = size !== null && size !== void 0 ? size : 'medium';
    var useNewIcon = !props.isFacadeDisabled && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-legacy-facade');
    if (useNewIcon && NewIcon && (iconSize === 'small' || iconSize === 'medium')) {
        if (props.iconType === 'utility') {
            var Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(Icon, (0, _extendsDefault.default)({}, props, {
                spacing: (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons-facade-button-fix') ? sizeSpacingMap['utility'][iconSize] : 'none',
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        } else {
            var _Icon = NewIcon;
            return /*#__PURE__*/ (0, _reactDefault.default).createElement(_Icon, (0, _extendsDefault.default)({}, props, {
                size: iconSize,
                spacing: sizeSpacingMap['core'][iconSize],
                color: props.primaryColor || 'currentColor',
                type: props.iconType
            }));
        }
    }
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _icon.Icon), (0, _extendsDefault.default)({
        dangerouslySetGlyph: dangerouslySetGlyph,
        size: size
    }, props));
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/platform-feature-flags":"3H8e6","./icon":"2HnQA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eeZYs":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::85cb292de644104b34b7dd23f5bdf435>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("db13a4a95c41c652"));
var _baseNew = _interopRequireDefault(require("55667cac8a7cbee3"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Cross".
 * Category: multi-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Known uses: closing modals, panels, and transient views; removing tags
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const CrossIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" d="M14.03 3.03 9.06 8l4.97 4.97-1.06 1.06L8 9.06l-4.97 4.97-1.06-1.06L6.94 8 1.97 3.03l1.06-1.06L8 6.94l4.97-4.97z"/>`
    }, props));
CrossIcon.displayName = 'CrossIcon';
var _default = exports.default = CrossIcon;

},{"db13a4a95c41c652":"jMk1U","55667cac8a7cbee3":"8iv7w"}],"d9GaV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useModal", ()=>useModal);
var _react = require("react");
var _context = require("./internal/context");
var useModal = function useModal() {
    var modalContext = (0, _react.useContext)((0, _context.ModalContext));
    if (modalContext == null) throw Error("@atlaskit/modal-dialog: Modal context unavailable \u2013 this component needs to be a child of ModalDialog.");
    return modalContext;
};

},{"react":"jMk1U","./internal/context":"evR7H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ewqbJ":[function(require,module,exports,__globalThis) {
/* modal-title.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _error = require("@atlaskit/icon/core/migration/error");
var _errorDefault = parcelHelpers.interopDefault(_error);
var _warning = require("@atlaskit/icon/core/migration/warning");
var _warningDefault = parcelHelpers.interopDefault(_warning);
var _hooks = require("./hooks");
var iconColor = {
    danger: "var(--ds-icon-danger, #C9372C)",
    warning: "var(--ds-icon-warning, #E56910)"
};
var iconStyles = null;
var titleStyles = null;
var textStyles = null;
var truncatedTextStyles = null;
var TitleIcon = function TitleIcon(_ref) {
    var appearance = _ref.appearance;
    var Icon = appearance === 'danger' ? (0, _errorDefault.default) : (0, _warningDefault.default);
    return /*#__PURE__*/ _react.createElement("span", {
        className: (0, _runtime.ax)([
            "_16jlidpf _1o9zidpf _i0dl1wug _syaz1kw7 _1wyb1kw7 _zg8l1kw7 _k48p1kw7 _1dyz1kw7 _vwz41kw7"
        ])
    }, /*#__PURE__*/ _react.createElement(Icon, {
        label: appearance,
        color: iconColor[appearance],
        spacing: "spacious"
    }));
};
/**
 * __Modal title__
 *
 * A modal title is used to display a title within a modal.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples)
 * - [Code](https://atlassian.design/components/modal-dialog/code)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */ var ModalTitle = function ModalTitle(props) {
    var appearance = props.appearance, children = props.children, _props$isMultiline = props.isMultiline, isMultiline = _props$isMultiline === void 0 ? true : _props$isMultiline, userDefinedTestId = props.testId;
    var _useModal = (0, _hooks.useModal)(), titleId = _useModal.titleId, modalTestId = _useModal.testId;
    var testId = userDefinedTestId || modalTestId && "".concat(modalTestId, "--title");
    return /*#__PURE__*/ _react.createElement("h1", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            "_zulpu2gc _11c8lodh _1e0c1txw _1ul9idpf _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t"
        ])
    }, appearance && /*#__PURE__*/ _react.createElement(TitleIcon, {
        appearance: appearance
    }), /*#__PURE__*/ _react.createElement("span", {
        id: titleId,
        "data-testid": testId && "".concat(testId, "-text"),
        className: (0, _runtime.ax)([
            "_16jlkb7n _1o9zkb7n _i0dl1wug _1ul9idpf _slp31hna",
            !isMultiline && "_1reo15vq _18m915vq _1bto1l2s _o5721q9c"
        ])
    }, children));
};
exports.default = ModalTitle;

},{"react":"jMk1U","@compiled/react/runtime":"8r5np","@atlaskit/icon/core/migration/error":"aVJLR","@atlaskit/icon/core/migration/warning":"dp5Kk","./hooks":"d9GaV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aVJLR":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::65cdc00c41545a5e974b615c0e363097>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("392f0eb9e32b7eea"));
var _error = _interopRequireDefault(require("4a951e2f404e505b"));
var _error2 = _interopRequireDefault(require("b59b845ece4e4500"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Migration Icon component for ErrorIcon.
 * This component is ErrorIcon, with `UNSAFE_fallbackIcon` set to "ErrorIcon".
 *
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for error statuses and messaging.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ErrorIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_error.default, Object.assign({
        LEGACY_fallbackIcon: _error2.default
    }, props));
ErrorIcon.Name = 'ErrorIconMigration';
var _default = exports.default = ErrorIcon;

},{"392f0eb9e32b7eea":"jMk1U","4a951e2f404e505b":"fuhsD","b59b845ece4e4500":"d9kbh"}],"fuhsD":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a2cd3105f02ad146f4ebeeb5e7e40633>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("7e881a97f2c880f8"));
var _baseNew = _interopRequireDefault(require("ea005e85fb4359b9"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Error".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for error statuses and messaging.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const ErrorIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.586.604a2 2 0 0 1 2.828 0l5.982 5.982a2 2 0 0 1 0 2.828l-5.982 5.983a2 2 0 0 1-2.828 0L.604 9.414a2 2 0 0 1 0-2.828zM7.25 9V3.75h1.5V9zM8 12.25a1 1 0 1 0 0-2 1 1 0 0 0 0 2" clip-rule="evenodd"/>`
    }, props));
ErrorIcon.displayName = 'ErrorIcon';
var _default = exports.default = ErrorIcon;

},{"7e881a97f2c880f8":"jMk1U","ea005e85fb4359b9":"8iv7w"}],"d9kbh":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("7a42f8243f16fb4"));
var _base = require("f8df24da9d82fb5d");
var _statusError = _interopRequireDefault(require("f71fd9018336edc4"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const ErrorIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><path fill="currentcolor" d="M13.416 4.417a2 2 0 0 0-2.832 0l-6.168 6.167a2 2 0 0 0 0 2.833l6.168 6.167a2 2 0 0 0 2.832 0l6.168-6.167a2 2 0 0 0 0-2.833z"/><path fill="inherit" d="M12 14a1 1 0 0 1-1-1V8a1 1 0 0 1 2 0v5a1 1 0 0 1-1 1m0 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2"/></g></svg>`
    }, props, {
        newIcon: _statusError.default
    }));
ErrorIcon.displayName = 'ErrorIcon';
var _default = exports.default = ErrorIcon;

},{"7a42f8243f16fb4":"jMk1U","f8df24da9d82fb5d":"1cdUG","f71fd9018336edc4":"afMpz"}],"afMpz":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::f99ea99a006a4f29d6a537b27790dcf5>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("6d07b2fad6100c89"));
var _baseNew = _interopRequireDefault(require("60a98d2d67f157ec"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "StatusError".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for error statuses and messaging.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const StatusErrorIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.586.603a2 2 0 0 1 2.828 0l5.983 5.983a2 2 0 0 1 0 2.828l-5.983 5.982a2 2 0 0 1-2.828 0L.604 9.414a2 2 0 0 1 0-2.828zM8 10.25a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-.75-6.5V9h1.5V3.75z" clip-rule="evenodd"/>`
    }, props));
StatusErrorIcon.displayName = 'StatusErrorIcon';
var _default = exports.default = StatusErrorIcon;

},{"6d07b2fad6100c89":"jMk1U","60a98d2d67f157ec":"8iv7w"}],"dp5Kk":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d5fac6bc179ab80298f715340f91ebf9>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("b2cac6f12199974e"));
var _warning = _interopRequireDefault(require("a5fa3a7ec04fa457"));
var _warning2 = _interopRequireDefault(require("292c5d5faae33697"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Migration Icon component for WarningIcon.
 * This component is WarningIcon, with `UNSAFE_fallbackIcon` set to "WarningIcon".
 *
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for warning statuses.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const WarningIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_warning.default, Object.assign({
        LEGACY_fallbackIcon: _warning2.default
    }, props));
WarningIcon.Name = 'WarningIconMigration';
var _default = exports.default = WarningIcon;

},{"b2cac6f12199974e":"jMk1U","a5fa3a7ec04fa457":"clbgj","292c5d5faae33697":"4mdXN"}],"clbgj":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c615014b011664b243a37531e093f861>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("b116a85b9f8a2120"));
var _baseNew = _interopRequireDefault(require("27eb76993b1cf3db"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "Warning".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for warning statuses.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const WarningIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.242 1.169c.757-1.396 2.76-1.396 3.516 0l5.9 10.878C16.381 13.379 15.416 15 13.9 15H2.1C.584 15-.38 13.38.342 12.047zM7.25 9.5v-5h1.5v5zM8 12.75a1 1 0 1 0 0-2 1 1 0 0 0 0 2" clip-rule="evenodd"/>`
    }, props));
WarningIcon.displayName = 'WarningIcon';
var _default = exports.default = WarningIcon;

},{"b116a85b9f8a2120":"jMk1U","27eb76993b1cf3db":"8iv7w"}],"4mdXN":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("8f82da9502bf8933"));
var _base = require("dd71f2c16b6bd55d");
var _statusWarning = _interopRequireDefault(require("329f50412b29926f"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const WarningIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><path fill="currentcolor" d="M12.938 4.967c-.518-.978-1.36-.974-1.876 0L3.938 18.425c-.518.978-.045 1.771 1.057 1.771h14.01c1.102 0 1.573-.797 1.057-1.771z"/><path fill="inherit" d="M12 15a1 1 0 0 1-1-1V9a1 1 0 0 1 2 0v5a1 1 0 0 1-1 1m0 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2"/></g></svg>`
    }, props, {
        newIcon: _statusWarning.default
    }));
WarningIcon.displayName = 'WarningIcon';
var _default = exports.default = WarningIcon;

},{"8f82da9502bf8933":"jMk1U","dd71f2c16b6bd55d":"1cdUG","329f50412b29926f":"8Z4RA"}],"8Z4RA":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::435e803a057e79e21a0d31c5b12f3f81>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("de8b90d87cc19582"));
var _baseNew = _interopRequireDefault(require("acc7bea56f3bac26"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon: "StatusWarning".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Reserved for warning statuses.
Filled status icons provide higher visual contrast to draw attention to important information.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const StatusWarningIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.242 1.168c.756-1.395 2.76-1.395 3.516 0l5.9 10.878c.723 1.333-.242 2.953-1.758 2.953H2.1C.584 15-.38 13.38.342 12.046zM8 10.75a1 1 0 1 0 0 2.001 1 1 0 0 0 0-2M7.25 4.5v5h1.5v-5z" clip-rule="evenodd"/>`
    }, props));
StatusWarningIcon.displayName = 'StatusWarningIcon';
var _default = exports.default = StatusWarningIcon;

},{"de8b90d87cc19582":"jMk1U","acc7bea56f3bac26":"8iv7w"}],"kOlnr":[function(require,module,exports,__globalThis) {
/* modal-body.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactScrolllock = require("react-scrolllock");
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _hooks = require("./hooks");
var _scrollContainer = require("./internal/components/scroll-container");
var _scrollContainerDefault = parcelHelpers.interopDefault(_scrollContainer);
var _useScroll = require("./internal/hooks/use-scroll");
var _useScrollDefault = parcelHelpers.interopDefault(_useScroll);
var styles = {
    root: "_16jlkb7n _1o9zkb7n _i0dl1wug",
    font: "_11c82smr",
    paddingBlock: "_1rjc1bk5",
    paddingInline: "_18zr1ejb"
};
/**
 * __Modal body__
 *
 * A modal body is used to display the main content of a modal.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples)
 * - [Code](https://atlassian.design/components/modal-dialog/code#modal-body-props)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */ var ModalBody = function ModalBody(props) {
    var children = props.children, userDefinedTestId = props.testId, _props$hasInlinePaddi = props.hasInlinePadding, hasInlinePadding = _props$hasInlinePaddi === void 0 ? true : _props$hasInlinePaddi;
    var _useModal = (0, _hooks.useModal)(), modalTestId = _useModal.testId;
    var shouldScrollInViewport = (0, _useScrollDefault.default)();
    var testId = userDefinedTestId || modalTestId && "".concat(modalTestId, "--body");
    return shouldScrollInViewport ? /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            styles.root,
            hasInlinePadding && styles.paddingInline,
            (0, _platformFeatureFlags.fg)('platform_ads_explicit_font_styles') && styles.font
        ])
    }, children) : /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _reactScrolllock.TouchScrollable), null, /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _scrollContainerDefault.default), {
        testId: userDefinedTestId || modalTestId
    }, /*#__PURE__*/ (0, _reactDefault.default).createElement("div", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            styles.root,
            /**
     * Adding block padding for scroll keylines, which are only shown when the scrolling
     * is on the container.
     */ styles.paddingBlock,
            hasInlinePadding && styles.paddingInline,
            (0, _platformFeatureFlags.fg)('platform_ads_explicit_font_styles') && styles.font
        ])
    }, children)));
};
exports.default = ModalBody;

},{"@compiled/react/runtime":"8r5np","react":"jMk1U","react-scrolllock":"4lcpi","@atlaskit/platform-feature-flags":"3H8e6","./hooks":"d9GaV","./internal/components/scroll-container":"8Lo4q","./internal/hooks/use-scroll":"8PblJ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8Lo4q":[function(require,module,exports,__globalThis) {
/* scroll-container.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _slicedToArray = require("@babel/runtime/helpers/slicedToArray");
var _slicedToArrayDefault = parcelHelpers.interopDefault(_slicedToArray);
var _runtime = require("@compiled/react/runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _bindEventListener = require("bind-event-listener");
var _rafSchd = require("raf-schd");
var _rafSchdDefault = parcelHelpers.interopDefault(_rafSchd);
var _css = require("@atlaskit/css");
var _mergeRefs = require("@atlaskit/ds-lib/merge-refs");
var _mergeRefsDefault = parcelHelpers.interopDefault(_mergeRefs);
var _noop = require("@atlaskit/ds-lib/noop");
var _noopDefault = parcelHelpers.interopDefault(_noop);
var _useLazyCallback = require("@atlaskit/ds-lib/use-lazy-callback");
var _useLazyCallbackDefault = parcelHelpers.interopDefault(_useLazyCallback);
var _compiled = require("@atlaskit/primitives/compiled");
var keylineColor = "var(--ds-border, #091E4224)";
var styles = {
    base: "_16jlkb7n _1o9zkb7n _i0dl1kw7 _1e0c1kw7 _2lx21kw7 _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _1reo15vq _18m91wug _1jykn7od _wzg61wug",
    topKeyline: "_mqm2v2xi",
    bottomKeyline: "_179rv2xi"
};
var keylineHeight = 2;
/**
 * A container that shows top and bottom keylines when the
 * content overflows into the scrollable element.
 */ var ScrollContainer = /*#__PURE__*/ (0, _react.forwardRef)(function(_ref, ref) {
    var testId = _ref.testId, children = _ref.children;
    var scrollableRef = (0, _react.useRef)(null);
    var _useState = (0, _react.useState)(false), _useState2 = (0, _slicedToArrayDefault.default)(_useState, 2), showTopKeyline = _useState2[0], setTopKeyline = _useState2[1];
    var _useState3 = (0, _react.useState)(false), _useState4 = (0, _slicedToArrayDefault.default)(_useState3, 2), showBottomKeyline = _useState4[0], setBottomKeyline = _useState4[1];
    var _useState5 = (0, _react.useState)(false), _useState6 = (0, _slicedToArrayDefault.default)(_useState5, 2), showContentFocus = _useState6[0], setContentFocus = _useState6[1];
    // Schedule a content focus on the target element
    // WARNING: In theory, `target` may not be available when `rafSchedule` hits in concurrent rendering
    (0, _react.useEffect)(function() {
        var schedule = (0, _rafSchdDefault.default)(function() {
            var target = scrollableRef.current;
            target && setContentFocus(target.scrollHeight > target.clientHeight);
        });
        schedule();
    }, [
        scrollableRef
    ]);
    var setLazyKeylines = (0, _useLazyCallbackDefault.default)((0, _rafSchdDefault.default)(function() {
        var target = scrollableRef.current;
        if (target) {
            var scrollableDistance = target.scrollHeight - target.clientHeight;
            if (target.previousElementSibling) setTopKeyline(target.scrollTop > keylineHeight);
            if (target.nextElementSibling) setBottomKeyline(target.scrollTop <= scrollableDistance - keylineHeight);
        }
    }));
    // On load (and scroll/resize events), we set "keylines"
    // these border the content to indicate scrollability when content underflows the header or footer
    (0, _react.useEffect)(function() {
        var target = scrollableRef.current;
        setLazyKeylines();
        var unbindWindowEvent = (0, _bindEventListener.bind)(window, {
            type: 'resize',
            listener: setLazyKeylines
        });
        var unbindTargetEvent = target ? (0, _bindEventListener.bind)(target, {
            type: 'scroll',
            listener: setLazyKeylines
        }) : (0, _noopDefault.default);
        return function() {
            unbindWindowEvent();
            unbindTargetEvent();
        };
    }, [
        setLazyKeylines
    ]);
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _compiled.Focusable), {
        as: "div",
        isInset: true,
        tabIndex: showContentFocus ? 0 : undefined,
        role: showContentFocus ? 'region' : undefined,
        "aria-label": showContentFocus ? 'Scrollable content' : undefined,
        testId: testId && "".concat(testId, "--scrollable"),
        ref: (0, _mergeRefsDefault.default)([
            ref,
            scrollableRef
        ]),
        xcss: (0, _css.cx)(styles.base, showTopKeyline && styles.topKeyline, showBottomKeyline && styles.bottomKeyline)
    }, children);
});
ScrollContainer.displayName = 'ScrollContainer';
exports.default = ScrollContainer;

},{"@babel/runtime/helpers/slicedToArray":"lvO5K","@compiled/react/runtime":"8r5np","react":"jMk1U","bind-event-listener":"2wrYK","raf-schd":"je3lA","@atlaskit/css":"4KsBe","@atlaskit/ds-lib/merge-refs":"5mvl7","@atlaskit/ds-lib/noop":"gcHCG","@atlaskit/ds-lib/use-lazy-callback":"3niyD","@atlaskit/primitives/compiled":"29Id4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8PblJ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>useScroll);
var _react = require("react");
var _context = require("../context");
function useScroll() {
    var shouldScrollInViewport = (0, _react.useContext)((0, _context.ScrollContext));
    if (shouldScrollInViewport == null) throw Error("@atlaskit/modal-dialog: Scroll context unavailable \u2013 this component needs to be a child of ModalDialog.");
    return shouldScrollInViewport;
}

},{"react":"jMk1U","../context":"evR7H","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fW5Bk":[function(require,module,exports,__globalThis) {
/* modal-footer.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _hooks = require("./hooks");
var footerStyles = null;
/**
 * __Modal footer__
 *
 * A modal footer often contains a primary action and the ability to cancel and close the dialog, though can contain any React element.
 *
 * - [Examples](https://atlassian.design/components/modal-dialog/examples#modal-footer)
 * - [Code](https://atlassian.design/components/modal-dialog/code#modal-footer-props)
 * - [Usage](https://atlassian.design/components/modal-dialog/usage)
 */ var ModalFooter = function ModalFooter(props) {
    var children = props.children, userDefinedTestId = props.testId;
    var _useModal = (0, _hooks.useModal)(), modalTestId = _useModal.testId;
    var testId = userDefinedTestId || modalTestId && "".concat(modalTestId, "--footer");
    return /*#__PURE__*/ _react.createElement("div", {
        "data-testid": testId,
        className: (0, _runtime.ax)([
            "_zulpu2gc _18zr1ejb _1e0c1txw _kqswh2mm _4cvr1h6o _1bahesu3 _1pfhmufe _85i51ejb _1q51pxbi"
        ]),
        style: {
            "--_t7lu6v": (0, _runtime.ix)("calc(-1 * ".concat("var(--ds-border-width-outline, 2px)", ")"))
        }
    }, children);
};
exports.default = ModalFooter;

},{"react":"jMk1U","@compiled/react/runtime":"8r5np","./hooks":"d9GaV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gfSKs":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("dabfdf05ae562c31"));
var _base = require("4abfa074cd4c3eea");
var _delete = _interopRequireDefault(require("25d38fc24289b921"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const TrashIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.UNSAFE_IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M5 5a1 1 0 0 0-1 1v1h16V6a1 1 0 0 0-1-1zm11.15 15h-8.3a1 1 0 0 1-.99-.83L5 8h14l-1.86 11.17a1 1 0 0 1-.99.83M9 4.5a.5.5 0 0 1 .49-.5h5.02a.5.5 0 0 1 .49.5V5H9z"/></svg>`
    }, props, {
        newIcon: _delete.default
    }));
TrashIcon.displayName = 'TrashIcon';
var _default = exports.default = TrashIcon;

},{"dabfdf05ae562c31":"jMk1U","4abfa074cd4c3eea":"iJoYh","25d38fc24289b921":"jovPt"}],"jovPt":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a0de62c85427fa688b203192cfaed36b>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("bd776f65d72659c3"));
var _UNSAFE_baseNew = _interopRequireDefault(require("9b0e628cd3576015"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * ⚠️ EXPERIMENTAL ⚠️ - New icons are in alpha - and subject to change or removal in future minor or patch releases.
 * Please reach out in #icon-contributions before using these in production.
 *
 * Icon: "Delete".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Single purpose - Reserved for removing or deleting an object.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const DeleteIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_UNSAFE_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path stroke="currentcolor" stroke-linejoin="round" stroke-width="1.5" d="M12.75 3.25V14c0 .69-.56 1.25-1.25 1.25h-7c-.69 0-1.25-.56-1.25-1.25V3.25m9.5 0h1.75m-1.75 0h-2.5m-7 0H1.5m1.75 0h2.5m0 0V.75h4.5v2.5m-4.5 0h4.5M6.5 5.5V13m3-7.5V13"/>`
    }, props));
DeleteIcon.displayName = 'DeleteIcon';
var _default = exports.default = DeleteIcon;

},{"bd776f65d72659c3":"jMk1U","9b0e628cd3576015":"4oZdW"}],"kgNUm":[function(require,module,exports,__globalThis) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("e01d316691c7c1f5"));
var _base = require("6162f754753b4fc8");
var _edit = _interopRequireDefault(require("7b45ad4e726d6370"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
const EditIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_base.UNSAFE_IconFacade, Object.assign({
        dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M4.02 19.23a1 1 0 0 0 1.18 1.18l3.81-.78-4.21-4.21zm5.92-2.62-2.12-2.12L16.31 6l2.12 2.12zm9.9-9.9-2.12-2.12A2 2 0 0 0 16.31 4c-.51 0-1.02.2-1.41.59l-9.76 9.76 4.95 4.95 9.76-9.76a2 2 0 0 0 0-2.83"/></svg>`
    }, props, {
        newIcon: _edit.default
    }));
EditIcon.displayName = 'EditIcon';
var _default = exports.default = EditIcon;

},{"e01d316691c7c1f5":"jMk1U","6162f754753b4fc8":"iJoYh","7b45ad4e726d6370":"hZVeM"}],"hZVeM":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d48c51235c7072e6617b637653c3f4fe>>
 * @codegenCommand yarn build:icon-glyphs
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("c010bc75cf8a569b"));
var _UNSAFE_baseNew = _interopRequireDefault(require("19a2b5528b952487"));
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * ⚠️ EXPERIMENTAL ⚠️ - New icons are in alpha - and subject to change or removal in future minor or patch releases.
 * Please reach out in #icon-contributions before using these in production.
 *
 * Icon: "Edit".
 * Category: single-purpose
 * Location: @atlaskit/icon
 * Usage guidance: Single purpose - Reserved for editing objects.
 * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)
 * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)
 */ const EditIcon = (props)=>/*#__PURE__*/ _react.default.createElement(_UNSAFE_baseNew.default, Object.assign({
        dangerouslySetGlyph: `<path stroke="currentcolor" stroke-linejoin="round" stroke-width="1.5" d="M6 1.751H3c-.69 0-1.25.56-1.25 1.25v10c0 .69.56 1.25 1.25 1.25h10c.69 0 1.25-.56 1.25-1.25V10m-.75-5 1.116-1.116a1.25 1.25 0 0 0 0-1.768l-.732-.732a1.25 1.25 0 0 0-1.768 0L11 2.5M13.5 5 9.479 9.021c-.15.15-.336.26-.54.318l-3.189.911.911-3.189a1.25 1.25 0 0 1 .318-.54L11 2.5M13.5 5 11 2.5"/>`
    }, props));
EditIcon.displayName = 'EditIcon';
var _default = exports.default = EditIcon;

},{"c010bc75cf8a569b":"jMk1U","19a2b5528b952487":"4oZdW"}],"4T6WN":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlasIcon", ()=>(0, _atlas.AtlasIcon));
parcelHelpers.export(exports, "AtlasLogo", ()=>(0, _atlas.AtlasLogo));
parcelHelpers.export(exports, "AtlassianMarketplaceIcon", ()=>(0, _atlassianMarketplace.AtlassianMarketplaceIcon));
parcelHelpers.export(exports, "AtlassianMarketplaceLogo", ()=>(0, _atlassianMarketplace.AtlassianMarketplaceLogo));
parcelHelpers.export(exports, "AtlassianAccessIcon", ()=>(0, _atlassianAccess.AtlassianAccessIcon));
parcelHelpers.export(exports, "AtlassianAccessLogo", ()=>(0, _atlassianAccess.AtlassianAccessLogo));
parcelHelpers.export(exports, "JiraWorkManagementLogo", ()=>(0, _jiraWorkManagement.JiraWorkManagementLogo));
parcelHelpers.export(exports, "JiraWorkManagementIcon", ()=>(0, _jiraWorkManagement.JiraWorkManagementIcon));
parcelHelpers.export(exports, "AtlassianIcon", ()=>(0, _atlassian.AtlassianIcon));
parcelHelpers.export(exports, "AtlassianLogo", ()=>(0, _atlassian.AtlassianLogo));
parcelHelpers.export(exports, "JiraSoftwareIcon", ()=>(0, _jiraSoftware.JiraSoftwareIcon));
parcelHelpers.export(exports, "JiraSoftwareLogo", ()=>(0, _jiraSoftware.JiraSoftwareLogo));
parcelHelpers.export(exports, "AdminIcon", ()=>AdminIcon);
parcelHelpers.export(exports, "AdminLogo", ()=>AdminLogo);
parcelHelpers.export(exports, "AnalyticsIcon", ()=>AnalyticsIcon);
parcelHelpers.export(exports, "AnalyticsLogo", ()=>AnalyticsLogo);
parcelHelpers.export(exports, "AssetsIcon", ()=>AssetsIcon);
parcelHelpers.export(exports, "AssetsLogo", ()=>AssetsLogo);
parcelHelpers.export(exports, "ChatIcon", ()=>ChatIcon);
parcelHelpers.export(exports, "ChatLogo", ()=>ChatLogo);
parcelHelpers.export(exports, "CustomerServiceManagementIcon", ()=>CustomerServiceManagementIcon);
parcelHelpers.export(exports, "CustomerServiceManagementLogo", ()=>CustomerServiceManagementLogo);
parcelHelpers.export(exports, "GoalsIcon", ()=>GoalsIcon);
parcelHelpers.export(exports, "GoalsLogo", ()=>GoalsLogo);
parcelHelpers.export(exports, "HomeIcon", ()=>HomeIcon);
parcelHelpers.export(exports, "HomeLogo", ()=>HomeLogo);
parcelHelpers.export(exports, "HubIcon", ()=>HubIcon);
parcelHelpers.export(exports, "HubLogo", ()=>HubLogo);
parcelHelpers.export(exports, "ProjectsIcon", ()=>ProjectsIcon);
parcelHelpers.export(exports, "ProjectsLogo", ()=>ProjectsLogo);
parcelHelpers.export(exports, "SearchIcon", ()=>SearchIcon);
parcelHelpers.export(exports, "SearchLogo", ()=>SearchLogo);
parcelHelpers.export(exports, "StudioIcon", ()=>StudioIcon);
parcelHelpers.export(exports, "StudioLogo", ()=>StudioLogo);
parcelHelpers.export(exports, "TalentIcon", ()=>TalentIcon);
parcelHelpers.export(exports, "TalentLogo", ()=>TalentLogo);
parcelHelpers.export(exports, "TeamsIcon", ()=>TeamsIcon);
parcelHelpers.export(exports, "TeamsLogo", ()=>TeamsLogo);
parcelHelpers.export(exports, "BambooIcon", ()=>BambooIcon);
parcelHelpers.export(exports, "BambooLogo", ()=>BambooLogo);
parcelHelpers.export(exports, "BitbucketDataCenterIcon", ()=>BitbucketDataCenterIcon);
parcelHelpers.export(exports, "BitbucketDataCenterLogo", ()=>BitbucketDataCenterLogo);
parcelHelpers.export(exports, "ConfluenceDataCenterIcon", ()=>ConfluenceDataCenterIcon);
parcelHelpers.export(exports, "ConfluenceDataCenterLogo", ()=>ConfluenceDataCenterLogo);
parcelHelpers.export(exports, "CrowdIcon", ()=>CrowdIcon);
parcelHelpers.export(exports, "CrowdLogo", ()=>CrowdLogo);
parcelHelpers.export(exports, "JiraDataCenterIcon", ()=>JiraDataCenterIcon);
parcelHelpers.export(exports, "JiraDataCenterLogo", ()=>JiraDataCenterLogo);
parcelHelpers.export(exports, "AtlassianAdministrationIcon", ()=>AtlassianAdministrationIcon);
parcelHelpers.export(exports, "AtlassianAdministrationLogo", ()=>AtlassianAdministrationLogo);
parcelHelpers.export(exports, "AtlassianAdminIcon", ()=>AtlassianAdminIcon);
parcelHelpers.export(exports, "AtlassianAdminLogo", ()=>AtlassianAdminLogo);
parcelHelpers.export(exports, "AtlassianAnalyticsIcon", ()=>AtlassianAnalyticsIcon);
parcelHelpers.export(exports, "AtlassianAnalyticsLogo", ()=>AtlassianAnalyticsLogo);
parcelHelpers.export(exports, "BitbucketIcon", ()=>BitbucketIcon);
parcelHelpers.export(exports, "BitbucketLogo", ()=>BitbucketLogo);
parcelHelpers.export(exports, "CompassIcon", ()=>CompassIcon);
parcelHelpers.export(exports, "CompassLogo", ()=>CompassLogo);
parcelHelpers.export(exports, "ConfluenceIcon", ()=>ConfluenceIcon);
parcelHelpers.export(exports, "ConfluenceLogo", ()=>ConfluenceLogo);
parcelHelpers.export(exports, "AlignIcon", ()=>AlignIcon);
parcelHelpers.export(exports, "AlignLogo", ()=>AlignLogo);
parcelHelpers.export(exports, "JiraAlignIcon", ()=>JiraAlignIcon);
parcelHelpers.export(exports, "JiraAlignLogo", ()=>JiraAlignLogo);
parcelHelpers.export(exports, "JiraIcon", ()=>JiraIcon);
parcelHelpers.export(exports, "JiraLogo", ()=>JiraLogo);
parcelHelpers.export(exports, "JiraProductDiscoveryIcon", ()=>JiraProductDiscoveryIcon);
parcelHelpers.export(exports, "JiraProductDiscoveryLogo", ()=>JiraProductDiscoveryLogo);
parcelHelpers.export(exports, "JiraServiceManagementIcon", ()=>JiraServiceManagementIcon);
parcelHelpers.export(exports, "JiraServiceManagementLogo", ()=>JiraServiceManagementLogo);
parcelHelpers.export(exports, "LoomIcon", ()=>LoomIcon);
parcelHelpers.export(exports, "LoomLogo", ()=>LoomLogo);
parcelHelpers.export(exports, "LoomAttributionIcon", ()=>LoomAttributionIcon);
parcelHelpers.export(exports, "LoomAttributionLogo", ()=>LoomAttributionLogo);
parcelHelpers.export(exports, "LoomBlurpleLogo", ()=>LoomBlurpleLogo);
parcelHelpers.export(exports, "LoomBlurpleIcon", ()=>LoomBlurpleIcon);
parcelHelpers.export(exports, "OpsgenieIcon", ()=>OpsgenieIcon);
parcelHelpers.export(exports, "OpsgenieLogo", ()=>OpsgenieLogo);
parcelHelpers.export(exports, "StatuspageIcon", ()=>StatuspageIcon);
parcelHelpers.export(exports, "StatuspageLogo", ()=>StatuspageLogo);
parcelHelpers.export(exports, "TrelloIcon", ()=>TrelloIcon);
parcelHelpers.export(exports, "TrelloLogo", ()=>TrelloLogo);
parcelHelpers.export(exports, "RovoIcon", ()=>RovoIcon);
parcelHelpers.export(exports, "RovoLogo", ()=>RovoLogo);
parcelHelpers.export(exports, "GuardIcon", ()=>GuardIcon);
parcelHelpers.export(exports, "GuardLogo", ()=>GuardLogo);
parcelHelpers.export(exports, "FocusIcon", ()=>FocusIcon);
parcelHelpers.export(exports, "FocusLogo", ()=>FocusLogo);
var _admin = require("@atlaskit/temp-nav-app-icons/admin");
var _align = require("@atlaskit/temp-nav-app-icons/align");
var _analytics = require("@atlaskit/temp-nav-app-icons/analytics");
var _assets = require("@atlaskit/temp-nav-app-icons/assets");
var _bamboo = require("@atlaskit/temp-nav-app-icons/bamboo");
var _bitbucket = require("@atlaskit/temp-nav-app-icons/bitbucket");
var _bitbucketDataCenter = require("@atlaskit/temp-nav-app-icons/bitbucket-data-center");
var _chat = require("@atlaskit/temp-nav-app-icons/chat");
var _compass = require("@atlaskit/temp-nav-app-icons/compass");
var _confluence = require("@atlaskit/temp-nav-app-icons/confluence");
var _confluenceDataCenter = require("@atlaskit/temp-nav-app-icons/confluence-data-center");
var _crowd = require("@atlaskit/temp-nav-app-icons/crowd");
var _customerServiceManagement = require("@atlaskit/temp-nav-app-icons/customer-service-management");
var _focus = require("@atlaskit/temp-nav-app-icons/focus");
var _goals = require("@atlaskit/temp-nav-app-icons/goals");
var _guard = require("@atlaskit/temp-nav-app-icons/guard");
var _home = require("@atlaskit/temp-nav-app-icons/home");
var _hub = require("@atlaskit/temp-nav-app-icons/hub");
var _jira = require("@atlaskit/temp-nav-app-icons/jira");
var _jiraDataCenter = require("@atlaskit/temp-nav-app-icons/jira-data-center");
var _jiraProductDiscovery = require("@atlaskit/temp-nav-app-icons/jira-product-discovery");
var _jiraServiceManagement = require("@atlaskit/temp-nav-app-icons/jira-service-management");
var _loom = require("@atlaskit/temp-nav-app-icons/loom");
var _loomAttribution = require("@atlaskit/temp-nav-app-icons/loom-attribution");
var _loomInternal = require("@atlaskit/temp-nav-app-icons/loom-internal");
var _opsgenie = require("@atlaskit/temp-nav-app-icons/opsgenie");
var _projects = require("@atlaskit/temp-nav-app-icons/projects");
var _rovo = require("@atlaskit/temp-nav-app-icons/rovo");
var _search = require("@atlaskit/temp-nav-app-icons/search");
var _statuspage = require("@atlaskit/temp-nav-app-icons/statuspage");
var _studio = require("@atlaskit/temp-nav-app-icons/studio");
var _talent = require("@atlaskit/temp-nav-app-icons/talent");
var _teams = require("@atlaskit/temp-nav-app-icons/teams");
var _trello = require("@atlaskit/temp-nav-app-icons/trello");
var _atlassianAdmin = require("./legacy-logos/atlassian-admin");
var _atlassianAdministration = require("./legacy-logos/atlassian-administration");
var _atlassianAnalytics = require("./legacy-logos/atlassian-analytics");
var _bitbucket1 = require("./legacy-logos/bitbucket");
var _compass1 = require("./legacy-logos/compass");
var _confluence1 = require("./legacy-logos/confluence");
var _focus1 = require("./legacy-logos/focus");
var _guard1 = require("./legacy-logos/guard");
var _jira1 = require("./legacy-logos/jira");
var _jiraAlign = require("./legacy-logos/jira-align");
var _jiraProductDiscovery1 = require("./legacy-logos/jira-product-discovery");
var _jiraServiceManagement1 = require("./legacy-logos/jira-service-management");
var _loom1 = require("./legacy-logos/loom");
var _loomAttribution1 = require("./legacy-logos/loom-attribution");
var _opsgenie1 = require("./legacy-logos/opsgenie");
var _rovo1 = require("./legacy-logos/rovo");
var _statuspage1 = require("./legacy-logos/statuspage");
var _trello1 = require("./legacy-logos/trello");
var _atlas = require("./legacy-logos/atlas");
var _atlassianMarketplace = require("./legacy-logos/atlassian-marketplace");
var _atlassianAccess = require("./legacy-logos/atlassian-access");
var _jiraWorkManagement = require("./legacy-logos/jira-work-management");
var _atlassian = require("./legacy-logos/atlassian");
var _jiraSoftware = require("./legacy-logos/jira-software");
var _logoConfig = require("./logo-config");
var AdminIcon = (0, _logoConfig.tempSizeWrapper)((0, _admin.AdminIcon));
var AdminLogo = (0, _logoConfig.tempSizeWrapper)((0, _admin.AdminLogoCS));
var AnalyticsIcon = (0, _logoConfig.tempSizeWrapper)((0, _analytics.AnalyticsIcon));
var AnalyticsLogo = (0, _logoConfig.tempSizeWrapper)((0, _analytics.AnalyticsLogoCS));
var AssetsIcon = (0, _logoConfig.tempSizeWrapper)((0, _assets.AssetsIcon));
var AssetsLogo = (0, _logoConfig.tempSizeWrapper)((0, _assets.AssetsLogoCS));
var ChatIcon = (0, _logoConfig.tempSizeWrapper)((0, _chat.ChatIcon));
var ChatLogo = (0, _logoConfig.tempSizeWrapper)((0, _chat.ChatLogoCS));
var CustomerServiceManagementIcon = (0, _logoConfig.tempSizeWrapper)((0, _customerServiceManagement.CustomerServiceManagementIcon));
var CustomerServiceManagementLogo = (0, _logoConfig.tempSizeWrapper)((0, _customerServiceManagement.CustomerServiceManagementLogoCS));
var GoalsIcon = (0, _logoConfig.tempSizeWrapper)((0, _goals.GoalsIcon));
var GoalsLogo = (0, _logoConfig.tempSizeWrapper)((0, _goals.GoalsLogoCS));
var HomeIcon = (0, _logoConfig.tempSizeWrapper)((0, _home.HomeIcon));
var HomeLogo = (0, _logoConfig.tempSizeWrapper)((0, _home.HomeLogoCS));
var HubIcon = (0, _logoConfig.tempSizeWrapper)((0, _hub.HubIcon));
var HubLogo = (0, _logoConfig.tempSizeWrapper)((0, _hub.HubLogoCS));
var ProjectsIcon = (0, _logoConfig.tempSizeWrapper)((0, _projects.ProjectsIcon));
var ProjectsLogo = (0, _logoConfig.tempSizeWrapper)((0, _projects.ProjectsLogoCS));
var SearchIcon = (0, _logoConfig.tempSizeWrapper)((0, _search.SearchIcon));
var SearchLogo = (0, _logoConfig.tempSizeWrapper)((0, _search.SearchLogoCS));
var StudioIcon = (0, _logoConfig.tempSizeWrapper)((0, _studio.StudioIcon));
var StudioLogo = (0, _logoConfig.tempSizeWrapper)((0, _studio.StudioLogoCS));
var TalentIcon = (0, _logoConfig.tempSizeWrapper)((0, _talent.TalentIcon));
var TalentLogo = (0, _logoConfig.tempSizeWrapper)((0, _talent.TalentLogoCS));
var TeamsIcon = (0, _logoConfig.tempSizeWrapper)((0, _teams.TeamsIcon));
var TeamsLogo = (0, _logoConfig.tempSizeWrapper)((0, _teams.TeamsLogoCS));
var BambooIcon = (0, _logoConfig.tempSizeWrapper)((0, _bamboo.BambooIcon));
var BambooLogo = (0, _logoConfig.tempSizeWrapper)((0, _bamboo.BambooLogoCS));
var BitbucketDataCenterIcon = (0, _logoConfig.tempSizeWrapper)((0, _bitbucketDataCenter.BitbucketDataCenterIcon));
var BitbucketDataCenterLogo = (0, _logoConfig.tempSizeWrapper)((0, _bitbucketDataCenter.BitbucketDataCenterLogoCS));
var ConfluenceDataCenterIcon = (0, _logoConfig.tempSizeWrapper)((0, _confluenceDataCenter.ConfluenceDataCenterIcon));
var ConfluenceDataCenterLogo = (0, _logoConfig.tempSizeWrapper)((0, _confluenceDataCenter.ConfluenceDataCenterLogoCS));
var CrowdIcon = (0, _logoConfig.tempSizeWrapper)((0, _crowd.CrowdIcon));
var CrowdLogo = (0, _logoConfig.tempSizeWrapper)((0, _crowd.CrowdLogoCS));
var JiraDataCenterIcon = (0, _logoConfig.tempSizeWrapper)((0, _jiraDataCenter.JiraDataCenterIcon));
var JiraDataCenterLogo = (0, _logoConfig.tempSizeWrapper)((0, _jiraDataCenter.JiraDataCenterLogoCS));
var AtlassianAdministrationIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAdministration.AtlassianAdministrationIcon), (0, _admin.AdminIcon));
var AtlassianAdministrationLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAdministration.AtlassianAdministrationLogo), (0, _admin.AdminLogoCS));
var AtlassianAdminIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAdmin.AtlassianAdminIcon), (0, _admin.AdminIcon));
var AtlassianAdminLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAdmin.AtlassianAdminLogo), (0, _admin.AdminLogoCS));
var AtlassianAnalyticsIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAnalytics.AtlassianAnalyticsIcon), (0, _analytics.AnalyticsIcon));
var AtlassianAnalyticsLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _atlassianAnalytics.AtlassianAnalyticsLogo), (0, _analytics.AnalyticsLogoCS));
var BitbucketIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _bitbucket1.BitbucketIcon), (0, _bitbucket.BitbucketIcon));
var BitbucketLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _bitbucket1.BitbucketLogo), (0, _bitbucket.BitbucketLogoCS));
var CompassIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _compass1.CompassIcon), (0, _compass.CompassIcon));
var CompassLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _compass1.CompassLogo), (0, _compass.CompassLogoCS));
var ConfluenceIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _confluence1.ConfluenceIcon), (0, _confluence.ConfluenceIcon));
var ConfluenceLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _confluence1.ConfluenceLogo), (0, _confluence.ConfluenceLogoCS));
var AlignIcon = (0, _logoConfig.tempSizeWrapper)((0, _align.AlignIcon));
var AlignLogo = (0, _logoConfig.tempSizeWrapper)((0, _align.AlignLogoCS));
var JiraAlignIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraAlign.JiraAlignIcon), (0, _align.AlignIcon));
var JiraAlignLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraAlign.JiraAlignLogo), (0, _align.AlignLogoCS));
var JiraIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jira1.JiraIcon), (0, _jira.JiraIcon));
var JiraLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jira1.JiraLogo), (0, _jira.JiraLogoCS));
var JiraProductDiscoveryIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraProductDiscovery1.JiraProductDiscoveryIcon), (0, _jiraProductDiscovery.JiraProductDiscoveryIcon));
var JiraProductDiscoveryLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraProductDiscovery1.JiraProductDiscoveryLogo), (0, _jiraProductDiscovery.JiraProductDiscoveryLogoCS));
var JiraServiceManagementIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraServiceManagement1.JiraServiceManagementIcon), (0, _jiraServiceManagement.JiraServiceManagementIcon));
var JiraServiceManagementLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _jiraServiceManagement1.JiraServiceManagementLogo), (0, _jiraServiceManagement.JiraServiceManagementLogoCS));
var LoomIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _loom1.LoomIcon), (0, _loom.LoomIcon));
var LoomLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _loom1.LoomLogo), (0, _loom.LoomLogoCS));
var LoomAttributionIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _loomAttribution1.LoomAttributionIcon), (0, _loom.LoomIcon));
var LoomAttributionLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _loomAttribution1.LoomAttributionLogo), (0, _loomAttribution.LoomAttributionLogoCS));
var LoomBlurpleLogo = (0, _logoConfig.tempSizeWrapper)((0, _loomInternal.LoomInternalLogoCS));
var LoomBlurpleIcon = (0, _logoConfig.tempSizeWrapper)((0, _loomInternal.LoomInternalIcon));
var OpsgenieIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _opsgenie1.OpsgenieIcon), (0, _opsgenie.OpsgenieIcon));
var OpsgenieLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _opsgenie1.OpsgenieLogo), (0, _opsgenie.OpsgenieLogoCS));
var StatuspageIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _statuspage1.StatuspageIcon), (0, _statuspage.StatuspageIcon));
var StatuspageLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _statuspage1.StatuspageLogo), (0, _statuspage.StatuspageLogoCS));
var TrelloIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _trello1.TrelloIcon), (0, _trello.TrelloIcon));
var TrelloLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _trello1.TrelloLogo), (0, _trello.TrelloLogoCS));
var RovoIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _rovo1.RovoIcon), (0, _rovo.RovoIcon));
var RovoLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _rovo1.RovoLogo), (0, _rovo.RovoLogoCS));
var GuardIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _guard1.GuardIcon), (0, _guard.GuardIcon));
var GuardLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _guard1.GuardLogo), (0, _guard.GuardLogoCS));
var FocusIcon = (0, _logoConfig.createFeatureFlaggedComponent)((0, _focus1.FocusIcon), (0, _focus.FocusIcon));
var FocusLogo = (0, _logoConfig.createFeatureFlaggedComponent)((0, _focus1.FocusLogo), (0, _focus.FocusLogoCS));

},{"@atlaskit/temp-nav-app-icons/admin":"44skA","@atlaskit/temp-nav-app-icons/align":"aQReq","@atlaskit/temp-nav-app-icons/analytics":"jRJ9m","@atlaskit/temp-nav-app-icons/assets":"d8sSp","@atlaskit/temp-nav-app-icons/bamboo":"jpQ77","@atlaskit/temp-nav-app-icons/bitbucket":"k0e7I","@atlaskit/temp-nav-app-icons/bitbucket-data-center":"x9EvF","@atlaskit/temp-nav-app-icons/chat":"2r3Wa","@atlaskit/temp-nav-app-icons/compass":"h9jo8","@atlaskit/temp-nav-app-icons/confluence":"6vJRz","@atlaskit/temp-nav-app-icons/confluence-data-center":"gJqlT","@atlaskit/temp-nav-app-icons/crowd":"lS1aX","@atlaskit/temp-nav-app-icons/customer-service-management":"4lKd4","@atlaskit/temp-nav-app-icons/focus":"69sOI","@atlaskit/temp-nav-app-icons/goals":"d8GqK","@atlaskit/temp-nav-app-icons/guard":"9lHbq","@atlaskit/temp-nav-app-icons/home":"ia4MW","@atlaskit/temp-nav-app-icons/hub":"h2R4a","@atlaskit/temp-nav-app-icons/jira":"4SvKN","@atlaskit/temp-nav-app-icons/jira-data-center":"bRXCr","@atlaskit/temp-nav-app-icons/jira-product-discovery":"aCESF","@atlaskit/temp-nav-app-icons/jira-service-management":"lQrKh","@atlaskit/temp-nav-app-icons/loom":"bgxyf","@atlaskit/temp-nav-app-icons/loom-attribution":"dxLsB","@atlaskit/temp-nav-app-icons/loom-internal":"30R6Q","@atlaskit/temp-nav-app-icons/opsgenie":"6sWOw","@atlaskit/temp-nav-app-icons/projects":"hGf4e","@atlaskit/temp-nav-app-icons/rovo":"6susR","@atlaskit/temp-nav-app-icons/search":"5nrXh","@atlaskit/temp-nav-app-icons/statuspage":"1RUF7","@atlaskit/temp-nav-app-icons/studio":"ewOSd","@atlaskit/temp-nav-app-icons/talent":"j9RtV","@atlaskit/temp-nav-app-icons/teams":"02xTx","@atlaskit/temp-nav-app-icons/trello":"jHNqy","./legacy-logos/atlassian-admin":"cfB6H","./legacy-logos/atlassian-administration":"eOp9n","./legacy-logos/atlassian-analytics":"kMc8s","./legacy-logos/bitbucket":"40fXz","./legacy-logos/compass":"ieC6Y","./legacy-logos/confluence":"bAjHy","./legacy-logos/focus":"rQCUQ","./legacy-logos/guard":"bVBvF","./legacy-logos/jira":"aKV0g","./legacy-logos/jira-align":"hYE78","./legacy-logos/jira-product-discovery":"47Ksv","./legacy-logos/jira-service-management":"bzHbR","./legacy-logos/loom":"5l6mv","./legacy-logos/loom-attribution":"0Qp4W","./legacy-logos/opsgenie":"hjIrq","./legacy-logos/rovo":"54y5j","./legacy-logos/statuspage":"1a7OU","./legacy-logos/trello":"59Cnq","./legacy-logos/atlas":false,"./legacy-logos/atlassian-marketplace":false,"./legacy-logos/atlassian-access":false,"./legacy-logos/jira-work-management":false,"./legacy-logos/atlassian":false,"./legacy-logos/jira-software":false,"./logo-config":"2QhWk","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"44skA":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c3e1d5a18c215f1b61c36e90f2bb1ec4>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AdminIcon", ()=>(0, _icon.AdminIcon));
parcelHelpers.export(exports, "AdminLogo", ()=>(0, _logo.AdminLogo));
parcelHelpers.export(exports, "AdminLogoCS", ()=>(0, _logoCs.AdminLogoCS));
var _icon = require("../ui/admin/icon");
var _logo = require("../ui/admin/logo");
var _logoCs = require("../ui/admin/logo-cs");

},{"../ui/admin/icon":"i8nGK","../ui/admin/logo":false,"../ui/admin/logo-cs":"iGGg9","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"i8nGK":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::1b4c2b482d26b1be8309fdd18226deba>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AdminIcon__
 *
 * A temporary component to represent the icon for Admin.
 * @deprecated This component has been replaced by the component `AdminIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "AdminIcon", ()=>AdminIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M10.444 5h3.111l.98 2.61 2.75-.457 1.555 2.694L17.07 12l1.77 2.153-1.555 2.694-2.75-.457-.979 2.61h-3.11l-.98-2.61-2.75.457-1.555-2.694L6.931 12 5.16 9.847l1.555-2.694 2.75.457zM12 14.625a2.625 2.625 0 1 0 0-5.25 2.625 2.625 0 0 0 0 5.25\" clip-rule=\"evenodd\"/>\n</svg>\n";
function AdminIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Admin' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j6gnN":[function(require,module,exports,__globalThis) {
/* icon-wrapper.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconWrapper", ()=>IconWrapper);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _tokens = require("@atlaskit/tokens");
var styles = {
    root: "_1e0c1o8l"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var cloudLightAppearanceMap = {
    brand: "_1b3i18uv _9aea18uv",
    neutral: "_1b3i1e01 _9aea1fkg",
    inverse: "_1b3i5a6q _9aeau67f",
    legacy: "_1b3iu67f _9aeadoyu"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var cloudDarkAppearanceMap = {
    brand: "_1b3i18uv _9aea18uv",
    neutral: "_1b3i1gvk _9aea8hz0",
    inverse: "_1b3iu67f _9aea5a6q",
    legacy: "_1b3iu67f _9aeadoyu"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var dataCenterLightAppearanceMap = {
    brand: "_1b3idoyu _9aeau67f _3wu01fkg",
    neutral: "_1b3i1e01 _9aea1fkg _3wu01e01",
    inverse: "_1b3iu67f _9aeaqlpt _3wu0u67f",
    legacy: "_1b3idoyu _9aeau67f _3wu01fkg"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var dataCenterDarkAppearanceMap = {
    brand: "_1b3idoyu _9aeaqlpt _3wu08hz0",
    neutral: "_1b3i1gvk _9aea8hz0 _3wu01gvk",
    inverse: "_1b3i1501 _9aeau67f _3wu01501",
    legacy: "_1b3idoyu _9aeaqlpt _3wu08hz0"
};
/* eslint-enable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-enable @atlaskit/ui-styling-standard/no-unsafe-values */ var sizeMap = {
    xxsmall: "_4t3i7vkz",
    xsmall: "_4t3igktf",
    small: "_4t3i1tcg",
    medium: "_4t3izwfg",
    large: "_4t3i1ylp",
    xlarge: "_4t3ickbl",
    '12': "_4t3i1crf",
    '16': "_4t3i7vkz",
    '20': "_4t3igktf",
    '24': "_4t3i1tcg",
    '32': "_4t3izwfg"
};
function IconWrapper(_ref) {
    var _ref$size = _ref.size, size = _ref$size === void 0 ? '20' : _ref$size, label = _ref.label, svg = _ref.svg, customThemeSvg = _ref.customThemeSvg, userDefinedTestId = _ref.testId, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, customIconColor = _ref.iconColor, _ref$isDataCenter = _ref.isDataCenter, isDataCenter = _ref$isDataCenter === void 0 ? false : _ref$isDataCenter;
    var testId = userDefinedTestId && "".concat(userDefinedTestId, "--wrapper");
    var isCustomThemed = customThemeSvg && customIconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ _react.createElement("span", {
        "data-testid": testId,
        style: {
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
            '--themed-icon-color': customIconColor || 'initial'
        },
        "aria-label": label ? label : undefined,
        role: label ? 'img' : undefined,
        "aria-hidden": label === '' ? true : undefined,
        dangerouslySetInnerHTML: {
            __html: isCustomThemed ? customThemeSvg : svg
        },
        className: (0, _runtime.ax)([
            styles.root,
            sizeMap[size],
            isDataCenter ? colorMode === 'dark' ? dataCenterDarkAppearanceMap[appearance] : dataCenterLightAppearanceMap[appearance] : colorMode === 'dark' ? cloudDarkAppearanceMap[appearance] : cloudLightAppearanceMap[appearance]
        ])
    });
}

},{"react":"jMk1U","@compiled/react/runtime":"j44i3","@atlaskit/tokens":"cmVFI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j44i3":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"1U7lK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1U7lK":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"5Gqnq","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5Gqnq":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iGGg9":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d383c70bd143f919db0ed4486643f770>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AdminLogoCS__
 *
 * A temporary component to represent the logo for Admin.
 *
 */ parcelHelpers.export(exports, "AdminLogoCS", ()=>AdminLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 126 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M124.84 16.35v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-20.15-10.4c0-1.17.77-1.84 1.84-1.84s1.84.67 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-14.07-8.52v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.44 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-28.32.85c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V3.59h2.64v21.74zm-22.02-4.01c-1.53 0-3.1-.18-4.81-.52l-1.69 4.54h-3.1l7.94-20.15h3.5l7.94 20.15h-3.1l-1.69-4.57c-1.81.37-3.37.55-5 .55m0-2.45c1.29 0 2.61-.15 4.17-.4L49.53 7.43 45.45 18.5c1.5.25 2.76.37 3.99.37\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M13.826 6.4h4.255l1.338 3.569 3.76-.626 2.128 3.684-2.422 2.945 2.421 2.943L23.18 22.6l-3.76-.626-1.338 3.57h-4.255l-1.338-3.57-3.76.625L6.6 18.915l2.421-2.943L6.6 13.028l2.127-3.685 3.76.626zm2.128 13.16a3.59 3.59 0 1 0 0-7.178 3.59 3.59 0 0 0 0 7.179\" clip-rule=\"evenodd\"/>\n</svg>\n";
function AdminLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Admin',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lubTg":[function(require,module,exports,__globalThis) {
/* logo-wrapper.tsx generated by @compiled/babel-plugin v0.36.1 */ /* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-enable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-enable @atlaskit/ui-styling-standard/no-unsafe-values */ parcelHelpers.export(exports, "LogoWrapper", ()=>LogoWrapper);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _tokens = require("@atlaskit/tokens");
var styles = {
    root: "_1e0c1o8l _vwz4idpf"
};
// These styles set the `color` property so that the child SVG can inherit the correct text color using "currentColor"
var logoTextColorMap = {
    light: "_syazqlpt",
    dark: "_syazz6c6"
};
var sizeMap = {
    xxsmall: "_4t3i7vkz",
    xsmall: "_4t3igktf",
    small: "_4t3i1tcg",
    medium: "_4t3izwfg",
    large: "_4t3i1ylp",
    xlarge: "_4t3ickbl"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var textLightAppearanceMap = {
    brand: "_1wyc1fxt",
    neutral: "_1wyc1e01",
    inverse: "_1wycu67f",
    legacy: "_1wycu67f"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var textDarkAppearanceMap = {
    brand: "_1wyc1fxt",
    neutral: "_1wyc1gvk",
    inverse: "_1wyc5a6q",
    legacy: "_1wycu67f"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var cloudLightAppearanceMap = {
    brand: "_1b3i18uv _9aea18uv",
    neutral: "_1b3i1e01 _9aea1fkg",
    inverse: "_1b3i5a6q _9aeau67f",
    legacy: "_1b3iu67f _9aeadoyu"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var cloudDarkAppearanceMap = {
    brand: "_1b3i18uv _9aea18uv",
    neutral: "_1b3i1gvk _9aea8hz0",
    inverse: "_1b3iu67f _9aea5a6q",
    legacy: "_1b3iu67f _9aeadoyu"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var dataCenterLightAppearanceMap = {
    brand: "_1b3idoyu _9aeau67f _3wu01fkg",
    neutral: "_1b3i1e01 _9aea1fkg _3wu01e01",
    inverse: "_1b3iu67f _9aeaqlpt _3wu0u67f",
    legacy: "_1b3idoyu _9aeau67f _3wu01fkg"
};
/* eslint-disable @atlaskit/ui-styling-standard/no-imported-style-values */ /* eslint-disable @atlaskit/ui-styling-standard/no-unsafe-values */ var dataCenterDarkAppearanceMap = {
    brand: "_1b3idoyu _9aeaqlpt _3wu08hz0",
    neutral: "_1b3i1gvk _9aea8hz0 _3wu01gvk",
    inverse: "_1b3i1501 _9aeau67f _3wu01501",
    legacy: "_1b3idoyu _9aeaqlpt _3wu08hz0"
};
function LogoWrapper(_ref) {
    var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$size = _ref.size, size = _ref$size === void 0 ? 'small' : _ref$size, svg = _ref.svg, customThemeSvg = _ref.customThemeSvg, label = _ref.label, userDefinedTestId = _ref.testId, customIconColor = _ref.iconColor, customTextColor = _ref.textColor, _ref$isDataCenter = _ref.isDataCenter, isDataCenter = _ref$isDataCenter === void 0 ? false : _ref$isDataCenter;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    var testId = userDefinedTestId && "".concat(userDefinedTestId, "--wrapper");
    var isCustomThemed = customThemeSvg && (customIconColor || customTextColor);
    return /*#__PURE__*/ _react.createElement("span", {
        style: {
            // Nav v3 passes in "inherit" incorrectly for iconColor, so we fall back to textColor when this happens.
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
            '--themed-icon-color': customIconColor === 'inherit' ? customTextColor : customIconColor,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
            '--themed-text-color': customTextColor || 'inherit'
        },
        "data-testid": testId,
        "aria-label": label,
        role: label ? 'img' : undefined,
        "aria-hidden": label === '' ? true : undefined,
        dangerouslySetInnerHTML: {
            __html: isCustomThemed ? customThemeSvg : svg
        },
        className: (0, _runtime.ax)([
            styles.root,
            // Setting the color so that the SVG can inherit the correct text color using "currentColor"
            logoTextColorMap[colorMode !== null && colorMode !== void 0 ? colorMode : 'light'],
            sizeMap[size],
            colorMode === 'dark' ? textDarkAppearanceMap[appearance] : textLightAppearanceMap[appearance],
            isDataCenter ? colorMode === 'dark' ? dataCenterDarkAppearanceMap[appearance] : dataCenterLightAppearanceMap[appearance] : colorMode === 'dark' ? cloudDarkAppearanceMap[appearance] : cloudLightAppearanceMap[appearance]
        ])
    });
}

},{"react":"jMk1U","@compiled/react/runtime":"j44i3","@atlaskit/tokens":"cmVFI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aQReq":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::60465f58b059f372cb401c249fd2af9a>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AlignIcon", ()=>(0, _icon.AlignIcon));
parcelHelpers.export(exports, "AlignLogo", ()=>(0, _logo.AlignLogo));
parcelHelpers.export(exports, "AlignLogoCS", ()=>(0, _logoCs.AlignLogoCS));
var _icon = require("../ui/align/icon");
var _logo = require("../ui/align/logo");
var _logoCs = require("../ui/align/logo-cs");

},{"../ui/align/icon":"jK78r","../ui/align/logo":false,"../ui/align/logo-cs":"ftYLt","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jK78r":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::267cad59c76b16aeee5f58cfa4a1f733>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AlignIcon__
 *
 * A temporary component to represent the icon for Align.
 * @deprecated This component has been replaced by the component `AlignIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "AlignIcon", ()=>AlignIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M18.545 18.545a4.49 4.49 0 0 0-4.48-4.48h-4.13v-3.78h-4.48v7.434c0 .576.25.826.826.826zM5.455 5.455a4.454 4.454 0 0 0 4.455 4.48h4.155v3.78h4.48V6.28q0-.825-.826-.826z\"/>\n</svg>\n";
function AlignIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Align' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ftYLt":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a0655575b0a96180870aad93def75118>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AlignLogoCS__
 *
 * A temporary component to represent the logo for Align.
 *
 */ parcelHelpers.export(exports, "AlignLogoCS", ()=>AlignLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 106 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M105.76 16.35v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.63V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-19.6 7.75v-1.53c-.98 2.02-2.82 3.07-5.18 3.07-4.05 0-6.07-3.46-6.07-7.97 0-4.32 2.12-7.97 6.38-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.58v13.95c0 4.51-2.12 7.54-7.61 7.54-2.58 0-3.99-.34-5.46-.83v-2.58c1.69.55 3.43.92 5.34.92 3.83 0 5.15-2.05 5.15-4.91m-8.68-6.44c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52M68.73 5.95c0-1.17.77-1.84 1.84-1.84s1.84.67 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-2.54-.03c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zM49.6 21.32c-1.53 0-3.1-.18-4.82-.52l-1.69 4.54H40l7.94-20.15h3.5l7.94 20.15h-3.1l-1.69-4.57c-1.81.37-3.37.55-5 .55m0-2.45c1.29 0 2.61-.15 4.17-.4L49.68 7.43 45.6 18.5c1.5.25 2.76.37 3.99.37\"/>\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M23.735 23.735c0-2.928-2.396-5.295-5.295-5.295h-4.88v-4.466H8.265v8.785c0 .68.296.976.976.976zM8.265 8.265c0 2.928 2.337 5.295 5.265 5.295h4.91v4.466h5.295V9.241q0-.976-.976-.976z\"/>\n</svg>\n";
function AlignLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Align',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jRJ9m":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::83c9878cb3becaa49da63fe61f840a62>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnalyticsIcon", ()=>(0, _icon.AnalyticsIcon));
parcelHelpers.export(exports, "AnalyticsLogo", ()=>(0, _logo.AnalyticsLogo));
parcelHelpers.export(exports, "AnalyticsLogoCS", ()=>(0, _logoCs.AnalyticsLogoCS));
var _icon = require("../ui/analytics/icon");
var _logo = require("../ui/analytics/logo");
var _logoCs = require("../ui/analytics/logo-cs");

},{"../ui/analytics/icon":"7E4O1","../ui/analytics/logo":false,"../ui/analytics/logo-cs":"cOT8L","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7E4O1":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::62d7ed5486f2fde4ab85bad091e6130c>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AnalyticsIcon__
 *
 * A temporary component to represent the icon for Analytics.
 * @deprecated This component has been replaced by the component `AnalyticsIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "AnalyticsIcon", ()=>AnalyticsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M14.63 5.88v9.19h3.06v-9.2zM5.88 18.13h11.81v-1.75H5.87zm0-3.07v-4.81h3.06v4.81zm4.37-6.56v6.56h3.06V8.5z\"/>\n</svg>\n";
function AnalyticsIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Analytics' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cOT8L":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::8415c21826e027dd358a91266f521ffd>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AnalyticsLogoCS__
 *
 * A temporary component to represent the logo for Analytics.
 *
 */ parcelHelpers.export(exports, "AnalyticsLogoCS", ()=>AnalyticsLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 161 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M160.66 21.16c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.17-.89-1.84-3.8-2.55-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-13.6 1.41v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.47-.74-3.99 0-5.61 2.52-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55M129.13 5.95c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-7.46-4.75c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-14.12 3.77h-1.72L100.77 10h2.82l4.91 13.13L113.41 10h2.82l-5.8 14.84c-1.72 4.39-2.7 6.66-6.59 6.66-1.32 0-2.05-.12-2.82-.43V28.8c.89.28 1.9.37 2.67.37 2.15 0 3.1-1.47 4.36-4.81m-7.8.94c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zM79.5 17.67c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.47-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zM74.1 16.35v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.63V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-24.66 4.97c-1.53 0-3.1-.18-4.81-.52l-1.69 4.54h-3.1l7.94-20.15h3.5l7.94 20.15h-3.1l-1.69-4.57c-1.81.37-3.37.55-5 .55m0-2.45c1.29 0 2.61-.15 4.17-.4L49.53 7.43 45.45 18.5c1.5.25 2.76.37 3.99.37\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M19.5 7.83v12.25h4.08V7.83zM7.83 24.17h15.75v-2.33H7.83zm0-4.09v-6.42h4.08v6.42zm5.84-8.75v8.75h4.08v-8.75z\"/>\n</svg>\n";
function AnalyticsLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Analytics',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d8sSp":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::dbf6724e041794e93fc0603434f23e7b>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AssetsIcon", ()=>(0, _icon.AssetsIcon));
parcelHelpers.export(exports, "AssetsLogo", ()=>(0, _logo.AssetsLogo));
parcelHelpers.export(exports, "AssetsLogoCS", ()=>(0, _logoCs.AssetsLogoCS));
var _icon = require("../ui/assets/icon");
var _logo = require("../ui/assets/logo");
var _logoCs = require("../ui/assets/logo-cs");

},{"../ui/assets/icon":"fcSUP","../ui/assets/logo":false,"../ui/assets/logo-cs":"cav1C","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fcSUP":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d7e353680649504e5005ac163dde6655>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AssetsIcon__
 *
 * A temporary component to represent the icon for Assets.
 * @deprecated This component has been replaced by the component `AssetsIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "AssetsIcon", ()=>AssetsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M8.34 11.495a3.64 3.64 0 0 0 3.155-3.154h2.3V6.523h-2.537a3.638 3.638 0 1 0-4.735 4.735v2.538H8.34zM7.887 9.25a1.364 1.364 0 1 0 0-2.727 1.364 1.364 0 0 0 0 2.727\" clip-rule=\"evenodd\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M19.25 7.43a2.27 2.27 0 1 1-4.54 0 2.27 2.27 0 0 1 4.55 0M7.43 19.25a2.27 2.27 0 1 0 0-4.54 2.27 2.27 0 0 0 0 4.55m9.55-.01a2.27 2.27 0 1 0 0-4.54 2.27 2.27 0 0 0 0 4.55m-3.18-3.19h-3.18v1.82h3.18zm2.27-5.46v3.18h1.82v-3.18z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zM7.432 14.704a2.273 2.273 0 1 0 .001 4.547 2.273 2.273 0 0 0-.001-4.547m9.545 0a2.274 2.274 0 1 0 .001 4.548 2.274 2.274 0 0 0 0-4.548m-6.364 1.364v1.819h3.183v-1.819zM7.887 4.25a3.637 3.637 0 0 0-1.365 7.009v2.537h1.819v-2.302a3.64 3.64 0 0 0 3.153-3.153h2.302V6.522h-2.537A3.64 3.64 0 0 0 7.887 4.25m8.181 6.363v3.183h1.819v-3.183zm.91-5.454a2.273 2.273 0 1 0 0 4.547 2.273 2.273 0 0 0 0-4.547M7.887 6.522a1.364 1.364 0 1 1-.002 2.729 1.364 1.364 0 0 1 .002-2.729\"/>\n</svg>\n";
function AssetsIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Assets' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cav1C":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::33998f81417b6d5a07303c82d9891a1c>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __AssetsLogoCS__
 *
 * A temporary component to represent the logo for Assets.
 *
 */ parcelHelpers.export(exports, "AssetsLogoCS", ()=>AssetsLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 126 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M125.8 21.16c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-17.77-.59c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-13.53-8.5c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.2c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.13-3.56c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-13.63-.01c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-22.22.15c-1.53 0-3.1-.18-4.81-.52l-1.69 4.54h-3.1l7.94-20.15h3.5l7.94 20.15h-3.1l-1.69-4.57c-1.81.37-3.37.55-5 .55m0-2.45c1.29 0 2.61-.15 4.17-.4L49.53 7.43 45.45 18.5c1.5.25 2.76.37 3.99.37\"/>\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M11.667 15.425a4.335 4.335 0 0 0 3.758-3.758h2.742V9.5h-3.023A4.335 4.335 0 1 0 9.5 15.144v3.023h2.167zm-.542-2.675a1.625 1.625 0 1 0 0-3.25 1.625 1.625 0 0 0 0 3.25\" clip-rule=\"evenodd\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M24.67 10.58a2.71 2.71 0 1 1-5.42 0 2.71 2.71 0 0 1 5.42 0M10.58 24.67a2.71 2.71 0 1 0 0-5.42 2.71 2.71 0 0 0 0 5.42m11.38 0a2.71 2.71 0 1 0 0-5.42 2.71 2.71 0 0 0 0 5.42m-3.79-3.79h-3.79v2.17h3.79zm2.71-6.5v3.79h2.17v-3.79z\"/>\n</svg>\n";
function AssetsLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Assets',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jpQ77":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::daea43f7f0472ec2495abf88f0d03e75>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BambooIcon", ()=>(0, _icon.BambooIcon));
parcelHelpers.export(exports, "BambooLogoCS", ()=>(0, _logoCs.BambooLogoCS));
var _icon = require("../ui/bamboo/icon");
var _logoCs = require("../ui/bamboo/logo-cs");

},{"../ui/bamboo/icon":"2ygRJ","../ui/bamboo/logo-cs":"fZs2J","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2ygRJ":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::e235764598011d7e6fcb75b2257be900>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BambooIcon__
 *
 * A temporary component to represent the icon for Bamboo.
 * @deprecated This component has been replaced by the component `BambooIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "BambooIcon", ()=>BambooIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M9.215 12.652a2.75 2.75 0 0 0 2.749 2.742v4.205a6.964 6.964 0 0 1-6.849-5.727l-.049-.317zm9.26 0a.44.44 0 0 1 .436.468c-.222 3.311-2.783 5.989-6.043 6.414l-.904-4.14a2.75 2.75 0 0 0 2.723-2.37.44.44 0 0 1 .44-.372zM11.963 9.91a2.75 2.75 0 0 0-2.748 2.742H5v-.065c.033-3.495 2.668-6.374 6.059-6.816zm0-5.972a.436.436 0 0 1 .72-.33l4.824 4.138a.436.436 0 0 1 0 .662l-4.823 4.139a.436.436 0 0 1-.72-.331z\"/>\n</svg>\n";
function BambooIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Bamboo' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fZs2J":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fa70b2d7500f58ac8aef4ebf1f041963>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BambooLogoCS__
 *
 * A temporary component to represent the logo for Bamboo.
 *
 */ parcelHelpers.export(exports, "BambooLogoCS", ()=>BambooLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 115 24\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M109.5 19.23c-3.45 0-5.47-2.55-5.47-6s2.02-5.96 5.47-5.96c3.43 0 5.43 2.51 5.43 5.96s-2 6-5.43 6m0-10.12c-2.46 0-3.54 1.93-3.54 4.12s1.08 4.16 3.54 4.16c2.44 0 3.5-1.98 3.5-4.16s-1.06-4.12-3.5-4.12M96.99 19.23c-3.45 0-5.47-2.55-5.47-6s2.02-5.96 5.47-5.96c3.43 0 5.43 2.51 5.43 5.96s-2 6-5.43 6m0-10.12c-2.46 0-3.54 1.93-3.54 4.12s1.08 4.16 3.54 4.16c2.44 0 3.5-1.98 3.5-4.16s-1.06-4.12-3.5-4.12m-9.05 4.14c0-2.76-1.1-4.14-3.15-4.14-1.77 0-3.36 1.13-3.36 3.68v.92c0 2.55 1.45 3.68 3.13 3.68 2.23 0 3.38-1.47 3.38-4.14m-2.85 5.98c-1.68 0-2.97-.76-3.66-2.25V19h-1.98V2.69h1.98v6.88c.74-1.52 2.12-2.3 3.89-2.3 3.06 0 4.6 2.6 4.6 5.98 0 3.24-1.61 5.98-4.83 5.98M68.9 12.61V19h-1.98v-6.95c0-2.07-.83-2.99-2.71-2.99-1.84 0-3.1 1.22-3.1 3.54V19h-1.98V7.5h1.97v1.89c.74-1.36 2.09-2.12 3.63-2.12 1.96 0 3.29.99 3.86 2.81.64-1.77 2.19-2.81 4.09-2.81 2.58 0 4 1.75 4 4.99V19H74.7v-6.39c0-2.37-.83-3.54-2.71-3.54-1.84 0-3.1 1.22-3.1 3.54m-21.24.64c0 2.76 1.1 4.14 3.15 4.14 1.77 0 3.36-1.13 3.36-3.68v-.92c0-2.55-1.45-3.68-3.13-3.68-2.23 0-3.38 1.47-3.38 4.14M54.16 19v-2.07c-.74 1.52-2.12 2.3-3.89 2.3-3.06 0-4.6-2.6-4.6-5.98 0-3.24 1.61-5.98 4.83-5.98 1.68 0 2.97.76 3.66 2.25V7.5h1.98V19zm-15.17-6.78h-4.65v4.72h4.69c1.98 0 2.88-.71 2.88-2.23 0-1.61-.85-2.48-2.92-2.48m-.67-6.35h-3.98v4.51h3.98c1.96 0 2.76-.9 2.76-2.35 0-1.47-.87-2.16-2.76-2.16M32.28 19V3.89h6.33c3.08 0 4.58 1.52 4.58 3.96 0 1.82-.83 2.94-2.53 3.36 2.23.37 3.34 1.59 3.34 3.73 0 2.42-1.63 4.07-5.01 4.07z\"/>\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M9.215 12.652a2.75 2.75 0 0 0 2.749 2.742v4.205a6.964 6.964 0 0 1-6.849-5.727l-.049-.317zm9.26 0a.44.44 0 0 1 .436.468c-.222 3.311-2.783 5.989-6.043 6.414l-.904-4.14a2.75 2.75 0 0 0 2.723-2.37.44.44 0 0 1 .44-.372zM11.963 9.91a2.75 2.75 0 0 0-2.748 2.742H5v-.065c.033-3.495 2.668-6.374 6.059-6.816zm0-5.972a.436.436 0 0 1 .72-.33l4.824 4.138a.436.436 0 0 1 0 .662l-4.823 4.139a.436.436 0 0 1-.72-.331z\"/>\n</svg>\n";
function BambooLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Bamboo',
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"k0e7I":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::96ff12b7b66d1e526970b9ffd51ce2d3>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BitbucketIcon", ()=>(0, _icon.BitbucketIcon));
parcelHelpers.export(exports, "BitbucketLogo", ()=>(0, _logo.BitbucketLogo));
parcelHelpers.export(exports, "BitbucketLogoCS", ()=>(0, _logoCs.BitbucketLogoCS));
var _icon = require("../ui/bitbucket/icon");
var _logo = require("../ui/bitbucket/logo");
var _logoCs = require("../ui/bitbucket/logo-cs");

},{"../ui/bitbucket/icon":"6fweG","../ui/bitbucket/logo":false,"../ui/bitbucket/logo-cs":"66xY4","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6fweG":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a48cd0ac1ce9dea97cb133dca9e33de4>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BitbucketIcon__
 *
 * A temporary component to represent the icon for Bitbucket.
 * @deprecated This component has been replaced by the component `BitbucketIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "BitbucketIcon", ()=>BitbucketIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#94c748)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"m17.898 11.353-.994 6.064c-.065.367-.324.583-.691.583H7.787c-.367 0-.627-.216-.691-.583L5.346 6.604C5.28 6.237 5.476 6 5.82 6h12.358c.346 0 .54.237.475.604l-.475 2.85c-.065.41-.303.582-.691.582h-7.432c-.109 0-.173.065-.152.194l.584 3.583c.021.086.086.151.172.151h2.68c.086 0 .15-.065.172-.151l.41-2.59c.044-.324.26-.453.563-.453H17.4c.432 0 .562.216.497.582\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zM5.821 6c-.345 0-.54.238-.475.604l1.75 10.813c.065.367.324.583.691.583h8.426c.367 0 .627-.216.691-.583l.994-6.065c.065-.366-.065-.582-.497-.582h-2.917c-.302 0-.518.13-.561.453l-.41 2.59c-.022.086-.087.15-.173.15h-2.68c-.086 0-.151-.064-.173-.15l-.583-3.583c-.021-.129.044-.194.152-.194h7.431c.39 0 .627-.173.692-.583l.475-2.849c.065-.366-.13-.604-.475-.604z\"/>\n</svg>\n";
function BitbucketIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Bitbucket' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"66xY4":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ff6ee7d6bd1e5c6b03988cd33913e686>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BitbucketLogoCS__
 *
 * A temporary component to represent the logo for Bitbucket.
 *
 */ parcelHelpers.export(exports, "BitbucketLogoCS", ()=>BitbucketLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 166 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M161.21 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55a6.3 6.3 0 0 1-1.78.25c-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-13.53-8.49c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-23.83.6h-2.64V3.59h2.64v13.59l6.6-7.18h3.44l-7.21 7.54 7.51 7.79h-3.59l-6.75-7.18zm-5.64-2.76v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.46-.74-3.99 0-5.61 2.52-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55m-27.86-3.59V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.63 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-5.4-1.32c0-3.68-1.47-5.52-4.2-5.52-2.36 0-4.48 1.5-4.48 4.91v1.23c0 3.4 1.93 4.91 4.17 4.91 2.98 0 4.51-1.96 4.51-5.52m-3.8 7.97c-2.24 0-3.96-1.01-4.88-3v2.7h-2.64V3.59h2.64v9.17c.98-2.02 2.82-3.07 5.18-3.07 4.08 0 6.13 3.47 6.13 7.97 0 4.32-2.15 7.97-6.44 7.97m-14.96-5.05c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zM61.33 5.95c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-9.83-9.04H45.8v6.29h6.26c2.64 0 3.83-.95 3.83-2.97 0-2.15-1.13-3.31-3.89-3.31m-.89-8.46h-5.3v6.01h5.31c2.61 0 3.68-1.2 3.68-3.13 0-1.96-1.17-2.88-3.68-2.88m-8.06 17.51V5.19h8.43c4.11 0 6.1 2.02 6.1 5.27 0 2.42-1.1 3.93-3.37 4.48 2.97.49 4.45 2.12 4.45 4.97 0 3.22-2.18 5.43-6.69 5.43z\"/>\n    <path fill=\"var(--tile-color,#94c748)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"m23.79 15.684-1.315 8.032c-.085.486-.428.772-.914.772H10.413c-.486 0-.829-.286-.915-.772L7.183 9.396c-.086-.486.172-.8.629-.8h16.35c.457 0 .714.314.629.8l-.63 3.773c-.085.543-.4.772-.914.772h-9.833c-.143 0-.228.086-.2.257l.772 4.745c.029.114.114.2.229.2h3.544c.114 0 .2-.086.229-.2l.543-3.43c.057-.429.343-.6.743-.6h3.859c.572 0 .743.285.657.771\"/>\n</svg>\n";
function BitbucketLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Bitbucket',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"x9EvF":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9336b25933cc85cef07f709957fb24e7>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BitbucketDataCenterIcon", ()=>(0, _icon.BitbucketDataCenterIcon));
parcelHelpers.export(exports, "BitbucketDataCenterLogoCS", ()=>(0, _logoCs.BitbucketDataCenterLogoCS));
var _icon = require("../ui/bitbucket-data-center/icon");
var _logoCs = require("../ui/bitbucket-data-center/logo-cs");

},{"../ui/bitbucket-data-center/icon":"3wr7t","../ui/bitbucket-data-center/logo-cs":"5YJwA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3wr7t":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4b1a960d2db34ca3f44ef8828b3815ae>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BitbucketDataCenterIcon__
 *
 * A temporary component to represent the icon for Bitbucket Data Center.
 * @deprecated This component has been replaced by the component `BitbucketDataCenterIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "BitbucketDataCenterIcon", ()=>BitbucketDataCenterIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"m17.843 11.763-.986 6.024c-.065.365-.322.58-.686.58H7.81c-.365 0-.622-.215-.686-.58L5.387 7.047c-.064-.364.129-.6.472-.6h12.262c.343 0 .536.236.472.6l-.472 2.83c-.064.407-.3.579-.686.579h-7.374c-.107 0-.172.064-.15.193l.579 3.558c.021.086.085.15.171.15h2.658c.086 0 .15-.064.172-.15l.407-2.572c.043-.322.257-.45.558-.45h2.894c.428 0 .557.214.493.578\"/>\n</svg>\n";
function BitbucketDataCenterIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Bitbucket Data Center' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5YJwA":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::292bf49b7ab72c7fa30fdb701fed3b04>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __BitbucketDataCenterLogoCS__
 *
 * A temporary component to represent the logo for Bitbucket Data Center.
 *
 */ parcelHelpers.export(exports, "BitbucketDataCenterLogoCS", ()=>BitbucketDataCenterLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 207 41\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M201.52 25.73c0 1.69 1 2.84 3.03 2.84.77 0 1.5-.15 2.07-.27v3.18a8 8 0 0 1-2.22.31c-4.1 0-6.1-2.41-6.1-5.98V15.58h-3.1v-3.07h3.11V8.45h3.22v4.06h5.1v3.07h-5.1zM184.6 15.12c-3.49 0-5.25 2.26-5.59 5.6h10.7c-.19-3.56-1.8-5.6-5.1-5.59m7.37 15.79c-1.57.84-3.99 1.15-5.94 1.15-7.17 0-10.31-4.14-10.31-10 0-5.79 3.22-9.93 9.04-9.93 5.9 0 8.28 4.1 8.28 9.93v1.5l-13.99.01c.46 3.26 2.57 5.37 7.09 5.36 2.22 0 4.1-.42 5.83-1.04zm-29.79.76h-3.3l-.01-27.18h3.3l.01 16.98 8.24-8.97h4.29l-9.01 9.43 9.4 9.73h-4.49l-8.44-8.97zm-7.06-3.44v2.95c-1.15.61-2.91.88-4.68.88-6.82 0-10.01-4.14-10.01-10 0-5.79 3.18-9.93 10-9.93 1.73 0 3.07.23 4.56.92v3.07c-1.23-.57-2.53-.92-4.33-.92-4.98 0-7.01 3.15-7.01 6.87s2.07 6.86 7.1 6.86c1.96 0 3.18-.27 4.37-.69m-34.81-4.49V12.53h3.3l.01 11.58c0 3.45 1.38 4.98 4.53 4.98 3.07 0 5.17-2.03 5.17-5.9V12.53h3.3l.01 19.17h-3.3v-3.14c-1.23 2.26-3.49 3.53-6.06 3.53-4.41 0-6.94-3.03-6.94-8.32m-6.75-1.65c0-4.6-1.84-6.9-5.25-6.9-2.95 0-5.6 1.88-5.59 6.14v1.53c0 4.26 2.42 6.13 5.22 6.13 3.72 0 5.63-2.45 5.63-6.9m-4.75 9.97c-2.8 0-4.94-1.26-6.1-3.75v3.37h-3.3l-.01-27.18h3.3v11.46c1.23-2.53 3.53-3.83 6.48-3.83 5.1 0 7.67 4.33 7.67 9.96 0 5.41-2.68 9.97-8.05 9.97m-18.72-6.32c0 1.69 1 2.84 3.03 2.84.77 0 1.5-.15 2.07-.27v3.18a8 8 0 0 1-2.22.31c-4.1 0-6.1-2.41-6.1-5.98V15.62h-3.1v-3.07h3.1V8.49h3.22v4.06h5.1v3.07h-5.1zM76.66 7.49c0-1.46.96-2.3 2.3-2.3s2.3.84 2.3 2.3-.96 2.3-2.3 2.3-2.3-.84-2.3-2.3m.62 24.23-.01-19.17h3.3l.01 19.17zM65 20.41h-7.74v7.86h7.82c3.3 0 4.79-1.19 4.79-3.72 0-2.68-1.42-4.14-4.87-4.14M63.88 9.83h-6.63v7.51h6.63c3.26 0 4.6-1.5 4.6-3.91 0-2.45-1.46-3.6-4.6-3.6M53.81 31.72 53.8 6.54h10.54c5.14 0 7.63 2.53 7.63 6.59 0 3.03-1.38 4.91-4.21 5.6 3.72.61 5.56 2.64 5.56 6.21 0 4.03-2.72 6.79-8.35 6.79z\"/>\n    <path fill=\"var(--tile-color, white)\" d=\"M10 .907 30 .9a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .908\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" stroke-width=\"1.667\" d=\"M10 .907 30 .9a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .908Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"m29.745 19.672-1.64 10.04c-.107.608-.535.965-1.143.965l-13.934.006c-.608 0-1.037-.357-1.144-.965l-2.901-17.9c-.107-.607.214-1 .786-1l20.437-.008c.572 0 .893.393.786 1l-.784 4.717c-.107.679-.5.965-1.143.965l-12.29.005c-.18 0-.287.107-.25.322l.966 5.93c.036.143.143.25.286.25l4.43-.001c.143 0 .25-.108.286-.25l.678-4.288c.07-.536.428-.75.928-.751l4.824-.002c.714 0 .929.357.822.965\"/>\n</svg>\n";
function BitbucketDataCenterLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Bitbucket Data Center',
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2r3Wa":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fe0cfc4b3235b76f771e2aadd2450275>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ChatIcon", ()=>(0, _icon.ChatIcon));
parcelHelpers.export(exports, "ChatLogo", ()=>(0, _logo.ChatLogo));
parcelHelpers.export(exports, "ChatLogoCS", ()=>(0, _logoCs.ChatLogoCS));
var _icon = require("../ui/chat/icon");
var _logo = require("../ui/chat/logo");
var _logoCs = require("../ui/chat/logo-cs");

},{"../ui/chat/icon":"PmxpY","../ui/chat/logo":false,"../ui/chat/logo-cs":"lmpOh","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"PmxpY":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ae2d6061a51a6b69522551138415fa2a>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ChatIcon__
 *
 * A temporary component to represent the icon for Chat.
 * @deprecated This component has been replaced by the component `ChatIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "ChatIcon", ()=>ChatIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M10.125 16.5h8.125V6H5.75v13zM12 12.125a.875.875 0 1 0 0-1.75.875.875 0 0 0 0 1.75m4-.875a.875.875 0 1 1-1.75 0 .875.875 0 0 1 1.75 0m-7.125.875a.875.875 0 1 0 0-1.75.875.875 0 0 0 0 1.75\" clip-rule=\"evenodd\"/>\n</svg>\n";
function ChatIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Chat' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lmpOh":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9ae61655109a1084352bdf7dfc1be0f3>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ChatLogoCS__
 *
 * A temporary component to represent the logo for Chat.
 *
 */ parcelHelpers.export(exports, "ChatLogoCS", ()=>ChatLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 102 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M97.51 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-18.94-2.91c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.47-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-14.1-8.98v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V3.59h2.64v8.96c1.01-1.81 2.85-2.85 5.06-2.85 3.44 0 5.34 2.33 5.34 6.65m-16.22 5.43v2.67c-1.26.83-3.25 1.2-5.34 1.2-6.62 0-10.36-3.99-10.36-10.33 0-6.13 3.74-10.43 10.3-10.43 1.96 0 3.93.37 5.37 1.41v2.67c-1.44-.92-3.04-1.41-5.37-1.41-4.72 0-7.54 3.13-7.54 7.76s2.91 7.7 7.7 7.7c2.12 0 3.77-.49 5.24-1.23\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M24.167 21.834h-10.5l-5.833 3.5v-17.5h16.333zm-12.25-5.833a1.167 1.167 0 1 0 0-2.334 1.167 1.167 0 0 0 0 2.334M16 16a1.167 1.167 0 1 0 0-2.334A1.167 1.167 0 0 0 16 16m5.25-1.167a1.167 1.167 0 1 1-2.334 0 1.167 1.167 0 0 1 2.333 0\" clip-rule=\"evenodd\"/>\n</svg>\n";
function ChatLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Chat',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h9jo8":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::b7970c34b7da9a96d20689aaab64e048>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CompassIcon", ()=>(0, _icon.CompassIcon));
parcelHelpers.export(exports, "CompassLogo", ()=>(0, _logo.CompassLogo));
parcelHelpers.export(exports, "CompassLogoCS", ()=>(0, _logoCs.CompassLogoCS));
var _icon = require("../ui/compass/icon");
var _logo = require("../ui/compass/logo");
var _logoCs = require("../ui/compass/logo-cs");

},{"../ui/compass/icon":"2Djbk","../ui/compass/logo":false,"../ui/compass/logo-cs":"2H7Fx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2Djbk":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ec19b3c26d91498312286db03f0eb4ea>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CompassIcon__
 *
 * A temporary component to represent the icon for Compass.
 * @deprecated This component has been replaced by the component `CompassIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "CompassIcon", ()=>CompassIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#94c748)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M12.75 7.877v-3.37l6.16-.007h.007a.59.59 0 0 1 .583.598v6.147h-3.366V7.877z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M12.75 14.615v-3.37h3.368v6.165a.59.59 0 0 1-.591.59H6.583A.59.59 0 0 1 6 17.402V8.467a.59.59 0 0 1 .591-.59h6.16v3.368H9.373v3.37z\"/>\n</svg>\n";
function CompassIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Compass' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2H7Fx":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::8629b16749c0945145557a31711bb4ac>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CompassLogoCS__
 *
 * A temporary component to represent the logo for Compass.
 *
 */ parcelHelpers.export(exports, "CompassLogoCS", ()=>CompassLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 162 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M161.79 21.16c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.55-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-13.63 0c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.55-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-25.9-3.49c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01v-2.7h2.64v15.33zm-16.09-7.66c0-3.68-1.47-5.52-4.2-5.52-2.36 0-4.48 1.5-4.48 4.91v1.23c0 3.4 1.93 4.91 4.17 4.91 2.98 0 4.51-1.96 4.51-5.52m-3.8 7.97c-2.24 0-3.96-1.01-4.88-3v8.68h-2.64V10h2.64v2.76c.98-2.02 2.82-3.07 5.18-3.07 4.08 0 6.13 3.47 6.13 7.97 0 4.32-2.15 7.97-6.44 7.97M89.5 16.81v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.43 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.53c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-23.34 8.83c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-9.23 9.63v2.67c-1.26.83-3.25 1.2-5.34 1.2-6.62 0-10.36-3.99-10.36-10.33 0-6.13 3.74-10.43 10.3-10.43 1.96 0 3.93.37 5.37 1.41v2.67c-1.44-.92-3.04-1.41-5.37-1.41-4.72 0-7.54 3.13-7.54 7.76s2.91 7.7 7.7 7.7c2.12 0 3.77-.49 5.24-1.23\"/>\n    <path fill=\"var(--tile-color,#94c748)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M16.69 15.16v4.24h-4.25v-4.24zv-4.24H8.93a.74.74 0 0 0-.74.74v11.25a.74.74 0 0 0 .74.75h11.26a.74.74 0 0 0 .75-.74v-7.76zm0-8.48v4.24h4.26v4.24h4.24V7.42a.74.74 0 0 0-.73-.75h-.01z\"/>\n</svg>\n";
function CompassLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Compass',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6vJRz":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9a3c702ed15fa143c029c47453d5d680>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConfluenceIcon", ()=>(0, _icon.ConfluenceIcon));
parcelHelpers.export(exports, "ConfluenceLogo", ()=>(0, _logo.ConfluenceLogo));
parcelHelpers.export(exports, "ConfluenceLogoCS", ()=>(0, _logoCs.ConfluenceLogoCS));
var _icon = require("../ui/confluence/icon");
var _logo = require("../ui/confluence/logo");
var _logoCs = require("../ui/confluence/logo-cs");

},{"../ui/confluence/icon":"7MH3w","../ui/confluence/logo":false,"../ui/confluence/logo-cs":"8dSlv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7MH3w":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9d74d7ecef16716d9233a75661d1c4ae>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ConfluenceIcon__
 *
 * A temporary component to represent the icon for Confluence.
 * @deprecated This component has been replaced by the component `ConfluenceIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "ConfluenceIcon", ()=>ConfluenceIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M17.888 14.461c-4.039-1.953-5.219-2.245-6.92-2.245-1.997 0-3.699.831-5.219 3.165l-.25.382c-.204.314-.249.426-.249.561s.068.247.318.404l2.564 1.594c.136.09.25.135.363.135.136 0 .226-.068.363-.27l.408-.628c.635-.966 1.203-1.28 1.928-1.28.636 0 1.385.18 2.315.629l2.677 1.257c.272.134.567.067.704-.247l1.27-2.783c.136-.315.046-.517-.272-.674M6.112 9.545c4.039 1.953 5.219 2.245 6.92 2.245 1.997 0 3.699-.83 5.219-3.165l.25-.381c.204-.315.249-.427.249-.562 0-.134-.068-.247-.318-.404L15.87 5.685c-.137-.09-.25-.135-.364-.135-.136 0-.226.067-.363.27l-.408.628c-.635.965-1.203 1.28-1.928 1.28-.636 0-1.385-.18-2.315-.63L7.814 5.843c-.272-.135-.567-.068-.703.247L5.84 8.872c-.136.314-.045.516.272.673\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zm-7.032 12.217c-1.997 0-3.699.83-5.219 3.165l-.249.38c-.204.315-.25.427-.25.562s.068.247.317.404l2.565 1.594c.136.09.249.135.362.135.136 0 .227-.068.363-.27l.409-.628c.635-.966 1.202-1.28 1.928-1.28.636 0 1.384.18 2.315.63l2.677 1.256c.273.134.568.067.704-.247l1.27-2.783c.136-.315.045-.517-.272-.674-4.039-1.953-5.219-2.244-6.92-2.244m4.538-6.667c-.136 0-.227.067-.363.27l-.409.628c-.635.965-1.202 1.28-1.928 1.28-.636 0-1.384-.18-2.315-.63L7.813 5.843c-.272-.135-.567-.067-.703.247L5.84 8.872c-.136.314-.045.517.272.674 4.039 1.953 5.219 2.244 6.92 2.244 1.997 0 3.699-.83 5.219-3.165l.249-.382c.204-.314.25-.426.25-.56s-.068-.248-.317-.405l-2.565-1.593c-.136-.09-.249-.135-.362-.135\"/>\n</svg>\n";
function ConfluenceIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Confluence' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8dSlv":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::75c16792139aec141e6d13bf8c119941>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ConfluenceLogoCS__
 *
 * A temporary component to represent the logo for Confluence.
 *
 */ parcelHelpers.export(exports, "ConfluenceLogoCS", ()=>ConfluenceLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 188 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M181.16 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.2c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.1-2.16v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.46-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55m-14.51-6.23v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-22.92-4.27c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-29.1-5.74V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-2.24 6.31c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zM96.82 8.38V10h3.96v2.45h-3.96v12.88h-2.58V12.45h-2.48V10h2.48V8.31c0-2.85 1.59-4.78 4.88-4.78.8 0 1.32.12 1.78.25V6.2a8.7 8.7 0 0 0-1.66-.15c-1.62 0-2.42.95-2.42 2.33m-7.32 7.97v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-23.34 9.28c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-9.23 9.63v2.67c-1.26.83-3.25 1.2-5.34 1.2-6.62 0-10.36-3.99-10.36-10.33 0-6.13 3.74-10.43 10.3-10.43 1.96 0 3.93.37 5.37 1.41v2.67c-1.44-.92-3.04-1.41-5.37-1.41-4.72 0-7.54 3.13-7.54 7.76s2.91 7.7 7.7 7.7c2.12 0 3.77-.49 5.24-1.23\"/>\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M23.16 19.02c-4.938-2.387-6.38-2.744-8.461-2.744-2.442 0-4.522 1.015-6.38 3.87l-.306.466c-.25.384-.305.521-.305.686s.083.302.388.494l3.135 1.948c.167.11.305.165.444.165.166 0 .277-.082.444-.33l.5-.768c.776-1.18 1.47-1.564 2.357-1.564.777 0 1.692.22 2.83.768l3.273 1.537c.333.165.693.083.86-.302l1.553-3.403c.167-.384.056-.63-.333-.823M8.761 13.01c4.938 2.388 6.38 2.744 8.461 2.744 2.441 0 4.522-1.015 6.38-3.87l.305-.466c.25-.384.305-.521.305-.686 0-.164-.083-.302-.388-.494L20.691 8.29c-.167-.11-.306-.165-.444-.165-.167 0-.278.082-.444.33l-.5.768c-.776 1.18-1.47 1.564-2.357 1.564-.777 0-1.693-.22-2.83-.768l-3.273-1.537c-.333-.165-.694-.083-.86.302l-1.554 3.403c-.166.384-.055.63.333.823\"/>\n</svg>\n";
function ConfluenceLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Confluence',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gJqlT":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::67e53257327277044c72ba773c70802f>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConfluenceDataCenterIcon", ()=>(0, _icon.ConfluenceDataCenterIcon));
parcelHelpers.export(exports, "ConfluenceDataCenterLogoCS", ()=>(0, _logoCs.ConfluenceDataCenterLogoCS));
var _icon = require("../ui/confluence-data-center/icon");
var _logoCs = require("../ui/confluence-data-center/logo-cs");

},{"../ui/confluence-data-center/icon":"9woRX","../ui/confluence-data-center/logo-cs":"1Fc6D","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9woRX":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::5a14a00c887df7cd127b285246b99735>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ConfluenceDataCenterIcon__
 *
 * A temporary component to represent the icon for Confluence Data Center.
 * @deprecated This component has been replaced by the component `ConfluenceDataCenterIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "ConfluenceDataCenterIcon", ()=>ConfluenceDataCenterIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M17.37 14.265c-3.704-1.79-4.785-2.058-6.346-2.058-1.83 0-3.391.761-4.785 2.902l-.229.35c-.187.288-.229.39-.229.514s.063.227.292.37l2.35 1.462c.125.083.23.124.333.124.125 0 .208-.062.333-.247l.375-.577c.582-.885 1.102-1.173 1.768-1.173.583 0 1.27.165 2.122.577l2.455 1.152c.25.124.52.062.645-.226l1.165-2.552c.125-.289.042-.474-.25-.618M6.572 9.757c3.703 1.791 4.785 2.059 6.346 2.059 1.83 0 3.39-.762 4.785-2.902l.229-.35c.187-.288.228-.391.228-.515 0-.123-.062-.226-.29-.37l-2.352-1.462c-.125-.082-.229-.123-.333-.123-.125 0-.208.061-.333.247l-.374.576c-.583.885-1.103 1.173-1.769 1.173-.582 0-1.269-.164-2.122-.576L8.132 6.361c-.25-.123-.52-.061-.645.227L6.322 9.14c-.125.288-.041.473.25.617\"/>\n</svg>\n";
function ConfluenceDataCenterIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Confluence Data Center' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1Fc6D":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d83a204dcee0b9b44a04b2ffe07dbf32>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ConfluenceDataCenterLogoCS__
 *
 * A temporary component to represent the logo for Confluence Data Center.
 *
 */ parcelHelpers.export(exports, "ConfluenceDataCenterLogoCS", ()=>ConfluenceDataCenterLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 236 41\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M226.45 15.11c-3.49 0-5.25 2.26-5.59 5.6h10.7c-.19-3.56-1.8-5.6-5.1-5.59m7.37 15.79c-1.57.84-3.99 1.15-5.94 1.15-7.17 0-10.31-4.14-10.31-10 0-5.79 3.22-9.93 9.04-9.93 5.9 0 8.28 4.1 8.28 9.93v1.5l-13.99.01c.46 3.26 2.57 5.37 7.09 5.36 2.22 0 4.1-.42 5.83-1.04zm-18.88-2.69v2.95c-1.15.61-2.91.88-4.68.88-6.82 0-10.01-4.14-10.01-10 0-5.79 3.18-9.93 10-9.93 1.73 0 3.07.23 4.56.92v3.07c-1.23-.57-2.53-.92-4.33-.92-4.98 0-7.01 3.15-7.01 6.86s2.07 6.86 7.09 6.86c1.96 0 3.18-.27 4.37-.69m-18.12-7.77v11.23h-3.3V20.1c0-3.45-1.38-4.98-4.53-4.98-3.07 0-5.17 2.03-5.17 5.91v10.66h-3.3l-.01-19.17h3.3v3.14c1.23-2.26 3.49-3.53 6.06-3.53 4.41 0 6.94 3.03 6.94 8.32m-28.64-5.32c-3.49 0-5.25 2.26-5.59 5.6h10.7c-.19-3.56-1.8-5.6-5.1-5.59m7.37 15.79c-1.57.85-3.99 1.15-5.94 1.15-7.17 0-10.31-4.14-10.31-10 0-5.79 3.22-9.93 9.04-9.93 5.9 0 8.28 4.1 8.28 9.93v1.5l-13.99.01c.46 3.26 2.57 5.37 7.09 5.36 2.22 0 4.1-.42 5.83-1.04zm-36.4-7.16V12.54h3.3v11.58c0 3.45 1.38 4.98 4.53 4.98 3.07 0 5.18-2.03 5.17-5.9V12.54h3.3l.01 19.17h-3.3v-3.14c-1.23 2.26-3.49 3.53-6.05 3.53-4.41 0-6.94-3.03-6.94-8.32m-2.8 7.89c-.27.08-.84.15-1.69.15-3.14 0-5.14-1.49-5.14-5.02l-.01-22.27h3.3l.01 21.89c0 1.73 1.15 2.34 2.57 2.34.35 0 .57 0 .96-.04zm-15.34-21.16v2.03h4.95v3.07h-4.94l.01 16.1h-3.22l-.01-16.1h-3.1v-3.07h3.11v-2.11c0-3.56 1.99-5.98 6.09-5.98 1 0 1.65.15 2.22.31v3.03a11 11 0 0 0-2.07-.19c-2.03 0-3.03 1.19-3.03 2.91m-9.16 9.97.01 11.23h-3.3V20.13c0-3.45-1.38-4.98-4.53-4.98-3.07 0-5.17 2.03-5.17 5.91v10.66h-3.3l-.01-19.17h3.3v3.14c1.23-2.26 3.49-3.53 6.06-3.53 4.41 0 6.94 3.03 6.94 8.32M82.71 32.11c-5.75 0-9.12-4.25-9.13-10s3.37-9.93 9.12-9.93c5.71 0 9.05 4.18 9.05 9.93s-3.33 10.01-9.04 10.01m-.01-16.87c-4.1 0-5.9 3.22-5.9 6.86s1.8 6.94 5.91 6.94c4.06 0 5.83-3.3 5.82-6.94s-1.77-6.86-5.83-6.86M71.17 27.28v3.34c-1.57 1.04-4.06 1.5-6.67 1.5-8.28 0-12.96-4.98-12.96-12.91 0-7.67 4.67-13.03 12.88-13.04 2.45 0 4.91.46 6.71 1.76v3.34c-1.8-1.15-3.79-1.76-6.71-1.76-5.9 0-9.43 3.91-9.43 9.7s3.65 9.62 9.63 9.62c2.65 0 4.72-.61 6.55-1.54\"/>\n    <path fill=\"var(--tile-color, white)\" d=\"m10 .918 20-.007a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .919\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" stroke-width=\"1.667\" d=\"m10 .918 20-.007a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .919Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M28.958 23.854c-6.173-2.982-7.976-3.428-10.577-3.427-3.052.001-5.652 1.272-7.974 4.84l-.38.584c-.313.48-.382.651-.382.857s.104.378.486.618l3.92 2.434c.207.137.38.205.554.205.208 0 .347-.103.555-.412l.623-.96c.97-1.476 1.837-1.956 2.947-1.957.971 0 2.115.274 3.537.96l4.093 1.919c.416.206.867.102 1.075-.378l1.94-4.254c.208-.48.069-.79-.417-1.03m-18-7.506c6.174 2.982 7.978 3.427 10.578 3.426 3.052 0 5.652-1.271 7.974-4.84l.38-.583c.313-.48.382-.652.382-.858s-.104-.377-.486-.617l-3.919-2.434c-.208-.137-.381-.206-.555-.206-.208 0-.347.103-.554.412l-.624.96c-.97 1.476-1.837 1.957-2.947 1.957-.97 0-2.115-.273-3.537-.959l-4.093-1.92c-.416-.205-.867-.102-1.074.378l-1.94 4.255c-.208.48-.07.789.416 1.029\"/>\n</svg>\n";
function ConfluenceDataCenterLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Confluence Data Center',
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lS1aX":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::2c56ce23ac161b13f66498575d06c18d>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CrowdIcon", ()=>(0, _icon.CrowdIcon));
parcelHelpers.export(exports, "CrowdLogoCS", ()=>(0, _logoCs.CrowdLogoCS));
var _icon = require("../ui/crowd/icon");
var _logoCs = require("../ui/crowd/logo-cs");

},{"../ui/crowd/icon":"eSeFk","../ui/crowd/logo-cs":"jNvWG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eSeFk":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::737475caba8467007ea15db78e7ae272>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CrowdIcon__
 *
 * A temporary component to represent the icon for Crowd.
 * @deprecated This component has been replaced by the component `CrowdIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "CrowdIcon", ()=>CrowdIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M18.71 7.463 12 4.993l-6.71 2.47a.44.44 0 0 0-.29.433l.14 3.807c.103 3.148 1.684 5.489 4.163 7.018a.446.446 0 0 0 .646-.204l1.445-3.412a.22.22 0 0 0-.14-.298 2.585 2.585 0 1 1 1.492 0 .22.22 0 0 0-.14.298l1.446 3.412a.446.446 0 0 0 .645.204c2.48-1.529 4.06-3.87 4.163-7.018L19 7.896a.44.44 0 0 0-.29-.433\"/>\n</svg>\n";
function CrowdIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Crowd' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jNvWG":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::72ec037753103a345da3ddf80e13b592>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CrowdLogoCS__
 *
 * A temporary component to represent the logo for Crowd.
 *
 */ parcelHelpers.export(exports, "CrowdLogoCS", ()=>CrowdLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 94 24\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M85.48 13.25c0 2.76 1.1 4.14 3.15 4.14 1.77 0 3.36-1.13 3.36-3.68v-.92c0-2.55-1.45-3.68-3.13-3.68-2.23 0-3.38 1.47-3.38 4.14M91.99 19v-2.07c-.74 1.52-2.12 2.3-3.89 2.3-3.06 0-4.6-2.6-4.6-5.98 0-3.24 1.61-5.98 4.83-5.98 1.68 0 2.97.76 3.66 2.25V2.69h1.98V19zM78.7 19h-2.53l-1.98-5.57-1.06-3.54-1.06 3.54L70.1 19h-2.53L63.34 7.5h2.19l3.31 9.75 3.35-9.75h1.89l3.36 9.75 3.31-9.75h2.19zm-21.35.23c-3.45 0-5.47-2.55-5.47-6s2.02-5.96 5.47-5.96c3.43 0 5.43 2.51 5.43 5.96s-2 6-5.43 6m0-10.12c-2.46 0-3.54 1.93-3.54 4.12s1.08 4.16 3.54 4.16c2.44 0 3.5-1.98 3.5-4.16s-1.06-4.12-3.5-4.12m-10.33 3.11V19h-1.93V7.5h1.93v2.02c.67-1.36 1.82-2.32 4.07-2.18v1.93c-2.53-.25-4.07.51-4.07 2.94m-4.32 4.12v2c-.94.62-2.44.9-4 .9-4.97 0-7.77-2.99-7.77-7.75 0-4.6 2.81-7.82 7.73-7.82 1.47 0 2.94.28 4.03 1.06v2c-1.08-.69-2.28-1.06-4.03-1.06-3.54 0-5.66 2.35-5.66 5.82s2.19 5.77 5.77 5.77c1.59 0 2.83-.37 3.93-.92\"/>\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M18.71 7.463 12 4.993l-6.71 2.47a.44.44 0 0 0-.29.433l.14 3.807c.103 3.148 1.684 5.489 4.163 7.018a.446.446 0 0 0 .646-.204l1.445-3.412a.22.22 0 0 0-.14-.298 2.585 2.585 0 1 1 1.492 0 .22.22 0 0 0-.14.298l1.446 3.412a.446.446 0 0 0 .645.204c2.48-1.529 4.06-3.87 4.163-7.018L19 7.896a.44.44 0 0 0-.29-.433\"/>\n</svg>\n";
function CrowdLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Crowd',
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4lKd4":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::5db347a5f297b690cd5fd1a757ded646>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CustomerServiceManagementIcon", ()=>(0, _icon.CustomerServiceManagementIcon));
parcelHelpers.export(exports, "CustomerServiceManagementLogo", ()=>(0, _logo.CustomerServiceManagementLogo));
parcelHelpers.export(exports, "CustomerServiceManagementLogoCS", ()=>(0, _logoCs.CustomerServiceManagementLogoCS));
var _icon = require("../ui/customer-service-management/icon");
var _logo = require("../ui/customer-service-management/logo");
var _logoCs = require("../ui/customer-service-management/logo-cs");

},{"../ui/customer-service-management/icon":"5UQZu","../ui/customer-service-management/logo":false,"../ui/customer-service-management/logo-cs":"56hZl","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5UQZu":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::bf714453512d29992419d0b1472039ec>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CustomerServiceManagementIcon__
 *
 * A temporary component to represent the icon for Customer Service Management.
 * @deprecated This component has been replaced by the component `CustomerServiceManagementIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "CustomerServiceManagementIcon", ()=>CustomerServiceManagementIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M16.43 17.42A6.97 6.97 0 0 1 12 19H6.4v-.47l3.84-3.78a3.25 3.25 0 0 0 1.76.52c.65 0 1.25-.19 1.76-.51zm.99-.99A6.97 6.97 0 0 0 19 12a6.97 6.97 0 0 0-1.58-4.43l-2.67 2.67c.33.51.52 1.11.52 1.76s-.19 1.25-.51 1.76zm-.99-9.85-2.67 2.67A3.25 3.25 0 0 0 12 8.73c-.65 0-1.25.19-1.76.52L7.57 6.58A6.97 6.97 0 0 1 12 5c1.68 0 3.22.59 4.43 1.58m-9.85.99A6.97 6.97 0 0 0 5 12c0 1.68.59 3.22 1.58 4.43l2.67-2.67A3.25 3.25 0 0 1 8.73 12c0-.65.19-1.25.52-1.76z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zm-4.238 14.751a3.25 3.25 0 0 1-1.762.516 3.25 3.25 0 0 1-1.762-.515L6.4 18.533V19H12a6.97 6.97 0 0 0 4.43-1.58zM6.58 7.571A6.97 6.97 0 0 0 5 12a6.97 6.97 0 0 0 1.58 4.43l2.669-2.668A3.25 3.25 0 0 1 8.733 12c0-.649.19-1.253.516-1.762zm8.172 2.667c.326.508.515 1.113.515 1.762s-.189 1.254-.515 1.762l2.668 2.668A6.97 6.97 0 0 0 19 12a6.97 6.97 0 0 0-1.58-4.43zM12 5a6.97 6.97 0 0 0-4.43 1.58l2.668 2.668A3.25 3.25 0 0 1 12 8.733c.649 0 1.253.19 1.762.516L16.43 6.58A6.97 6.97 0 0 0 12 5\"/>\n</svg>\n";
function CustomerServiceManagementIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Customer Service Management' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"56hZl":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c882e3701f2199be9654e2d7442d1ae9>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __CustomerServiceManagementLogoCS__
 *
 * A temporary component to represent the logo for Customer Service Management.
 *
 */ parcelHelpers.export(exports, "CustomerServiceManagementLogoCS", ()=>CustomerServiceManagementLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 456 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M451.86 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-7.33-4.23v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-22.92-4.27c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-26.16-7.92v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.44 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-22.92-4.74c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-18.64-.62v-1.53c-.98 2.02-2.82 3.07-5.18 3.07-4.05 0-6.07-3.46-6.07-7.97 0-4.32 2.12-7.97 6.38-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.58v13.95c0 4.51-2.12 7.54-7.6 7.54-2.58 0-3.99-.34-5.46-.83v-2.58c1.69.55 3.44.92 5.34.92 3.83 0 5.15-2.05 5.15-4.91m-8.68-6.44c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m-16.96.03c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-14.08-8.98v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-28.33 1.31c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-31.44-11.01-2.76-7.48v18.49h-2.76V5.19h4.78l4.57 11.56 1.87 5.55 1.87-5.55 4.6-11.56h4.45v20.15h-2.76V7.06l-2.36 7.27-4.45 11.01h-2.67zm-21.51-2.23c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.1-2.16v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.47-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55M234.91 5.95c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-8.24 0h-3.53L217.69 10h2.76l4.97 13.09L230.36 10h2.76zm-15.45-9.04v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.68-5.43 3.93m-12.46-4.21c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.33-4.95c0 3.5-2.08 5.86-7.08 5.86-3.89 0-5.7-.77-7.27-1.56v-2.82c1.87.98 4.75 1.69 7.42 1.69 3.04 0 4.17-1.2 4.17-2.97 0-1.78-1.1-2.73-4.94-3.65-4.54-1.1-6.56-2.67-6.56-5.98 0-3.13 2.39-5.46 7.08-5.46 2.91 0 4.78.71 6.16 1.47v2.76c-2.02-1.16-4.2-1.53-6.29-1.53-2.64 0-4.2.92-4.2 2.76 0 1.66 1.29 2.48 4.85 3.37 4.26 1.07 6.65 2.45 6.65 6.07m-26.4-3.5v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.68-5.43 3.93m-12.46-4.21c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2H146.5c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-26.15-7.92v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.44 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-23.34 8.81c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M94.1 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55a6.3 6.3 0 0 1-1.78.25c-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45H94.1zm-6.7.58c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.05-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-27.6-2.18V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.63 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-2.89 2.79v2.67c-1.26.83-3.25 1.2-5.34 1.2-6.62 0-10.36-3.99-10.36-10.33 0-6.13 3.74-10.43 10.3-10.43 1.96 0 3.93.37 5.37 1.41v2.67c-1.44-.92-3.04-1.41-5.37-1.41-4.72 0-7.54 3.13-7.54 7.76s2.91 7.7 7.7 7.7c2.12 0 3.77-.49 5.24-1.23\"/>\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M21.91 23.23a9.3 9.3 0 0 1-5.91 2.1H8.53v-.62l5.12-5.04a4.34 4.34 0 0 0 2.35.69c.86 0 1.67-.25 2.35-.69zm1.32-1.32a9.3 9.3 0 0 0 2.1-5.91c0-2.24-.79-4.3-2.11-5.91l-3.56 3.56c.43.68.69 1.48.69 2.35s-.25 1.67-.69 2.35zM21.91 8.77l-3.56 3.56a4.34 4.34 0 0 0-2.35-.69c-.86 0-1.67.25-2.35.69l-3.56-3.56A9.3 9.3 0 0 1 16 6.67c2.24 0 4.3.79 5.91 2.11M8.77 10.09A9.3 9.3 0 0 0 6.67 16c0 2.24.79 4.3 2.11 5.91l3.56-3.56a4.34 4.34 0 0 1-.69-2.35c0-.86.25-1.67.69-2.35z\"/>\n</svg>\n";
function CustomerServiceManagementLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Customer Service Management',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"69sOI":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::25ec107dce6f77c631a37973ae4af316>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusIcon", ()=>(0, _icon.FocusIcon));
parcelHelpers.export(exports, "FocusLogo", ()=>(0, _logo.FocusLogo));
parcelHelpers.export(exports, "FocusLogoCS", ()=>(0, _logoCs.FocusLogoCS));
var _icon = require("../ui/focus/icon");
var _logo = require("../ui/focus/logo");
var _logoCs = require("../ui/focus/logo-cs");

},{"../ui/focus/icon":"iQGkM","../ui/focus/logo":false,"../ui/focus/logo-cs":"e6vRw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iQGkM":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::bc3eeb7d4cfaf5ff93494f75e1a18082>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __FocusIcon__
 *
 * A temporary component to represent the icon for Focus.
 * @deprecated This component has been replaced by the component `FocusIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "FocusIcon", ()=>FocusIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M20.84 12.21a4.29 4.29 0 0 0-6.05 0l-1.394 1.393c-.77.769-2.02.769-2.789 0L9.45 12.445 6.424 15.47l1.158 1.158a6.25 6.25 0 0 0 8.838 0zm-17.68-.418a4.253 4.253 0 0 0 6.034.017l1.412-1.412a1.973 1.973 0 0 1 2.788 0l1.158 1.158 3.026-3.025-1.158-1.158a6.25 6.25 0 0 0-8.838 0l-4.42 4.419z\"/>\n</svg>\n";
function FocusIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Focus' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e6vRw":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4355076f967edcaa86904769b6f262b2>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __FocusLogoCS__
 *
 * A temporary component to represent the logo for Focus.
 *
 */ parcelHelpers.export(exports, "FocusLogoCS", ()=>FocusLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 117 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M116.03 21.16c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-27.6-2.18V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.85 2.82-3.53 0-5.55-2.42-5.55-6.65m-2.71 3.58v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.47-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55M64.6 25.64c-4.6 0-7.3-3.4-7.3-8S60 9.7 64.6 9.7c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-9.97 5.67h-9.14v7.51h-2.76V5.19h12.94v2.64H45.49v7.36h9.14z\"/>\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M27.607 16.272c-2.176-2.176-5.712-2.152-7.865 0l-1.812 1.812c-1 1-2.625 1-3.625 0L12.8 16.578l-3.933 3.934 1.505 1.505a8.126 8.126 0 0 0 11.49 0zm-22.982-.541c2.176 2.175 5.668 2.196 7.844.02l1.834-1.834c1-1 2.625-1 3.625 0l1.505 1.505 3.934-3.933-1.505-1.505a8.126 8.126 0 0 0-11.49 0l-5.745 5.745z\"/>\n</svg>\n";
function FocusLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Focus',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"d8GqK":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::182fb6eb07085c3f21edddb7c7ec1def>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GoalsIcon", ()=>(0, _icon.GoalsIcon));
parcelHelpers.export(exports, "GoalsLogo", ()=>(0, _logo.GoalsLogo));
parcelHelpers.export(exports, "GoalsLogoCS", ()=>(0, _logoCs.GoalsLogoCS));
var _icon = require("../ui/goals/icon");
var _logo = require("../ui/goals/logo");
var _logoCs = require("../ui/goals/logo-cs");

},{"../ui/goals/icon":"9juYE","../ui/goals/logo":false,"../ui/goals/logo-cs":"7qQCd","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9juYE":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::396f70864944722c3ba43a8857b797aa>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __GoalsIcon__
 *
 * A temporary component to represent the icon for Goals.
 * @deprecated This component has been replaced by the component `GoalsIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "GoalsIcon", ()=>GoalsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M14.352 12a2.352 2.352 0 1 1-4.704 0 2.352 2.352 0 0 1 4.704 0\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M12 18.563a6.562 6.562 0 1 0 0-13.125 6.562 6.562 0 0 0 0 13.125M16.102 12a4.102 4.102 0 1 1-8.204 0 4.102 4.102 0 0 1 8.204 0\" clip-rule=\"evenodd\"/>\n</svg>\n";
function GoalsIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Goals' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7qQCd":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::3f68d5dd0522c15e377172566af4a161>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __GoalsLogoCS__
 *
 * A temporary component to represent the logo for Goals.
 *
 */ parcelHelpers.export(exports, "GoalsLogoCS", ()=>GoalsLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 116 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M115.55 21.16c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.05-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-13.12 4.13c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zm-20.75-7.63c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-20.7.31c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M58.71 24.2c-1.59.95-4.54 1.44-6.81 1.44-6.93 0-10.67-4.23-10.67-10.33 0-6.56 4.26-10.46 11.44-10.46 1.6 0 3.47.18 5.24.8v2.76c-1.53-.61-3.34-.89-5.21-.89-5.98 0-8.71 2.98-8.71 7.73 0 4.66 2.76 7.76 8.56 7.76.95 0 2.27-.09 3.4-.43v-5.61H50.8v-2.64h7.91z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M19.36 16a3.36 3.36 0 1 1-6.72 0 3.36 3.36 0 0 1 6.72 0\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M16 25.375a9.375 9.375 0 1 0 0-18.75 9.375 9.375 0 1 0 0 18.75M21.86 16a5.86 5.86 0 1 1-11.72 0 5.86 5.86 0 0 1 11.72 0\" clip-rule=\"evenodd\"/>\n</svg>\n";
function GoalsLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Goals',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9lHbq":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::0afbedbfcaeb147bcbb7853e7d772eb5>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GuardIcon", ()=>(0, _icon.GuardIcon));
parcelHelpers.export(exports, "GuardLogo", ()=>(0, _logo.GuardLogo));
parcelHelpers.export(exports, "GuardLogoCS", ()=>(0, _logoCs.GuardLogoCS));
var _icon = require("../ui/guard/icon");
var _logo = require("../ui/guard/logo");
var _logoCs = require("../ui/guard/logo-cs");

},{"../ui/guard/icon":"8HBY7","../ui/guard/logo":false,"../ui/guard/logo-cs":"l355r","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8HBY7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9cb16fe47b2bb06a618d6f42235f4d0b>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __GuardIcon__
 *
 * A temporary component to represent the icon for Guard.
 * @deprecated This component has been replaced by the component `GuardIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "GuardIcon", ()=>GuardIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M5.49 10.87h13.02c.374 0 .574-.2.574-.574V5.907c0-.374-.2-.574-.574-.574h-2.744c-.374 0-.573.2-.573.574v2.22h-1.247v-2.22c0-.374-.2-.574-.574-.574h-2.743c-.374 0-.574.2-.574.574v2.22H8.807v-2.22c0-.374-.2-.574-.573-.574H5.49c-.374 0-.573.2-.573.574v4.39c0 .373.2.573.573.573m.225 3.84a8.7 8.7 0 0 1-.5-2.493c-.024-.324.126-.499.475-.499h12.62c.349 0 .498.15.498.449a8.2 8.2 0 0 1-.523 2.544c-.15.399-.375.573-.799.573H6.513c-.424 0-.649-.174-.798-.573m11.547 2.07C16.065 18.253 14.095 19.2 12 19.2s-4.116-.948-5.288-2.42c-.299-.398-.15-.648.15-.648h10.275c.3 0 .45.25.125.649\"/>\n</svg>\n";
function GuardIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Guard' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"l355r":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::7e2f61431554fc55e274637d9e3f0532>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __GuardLogoCS__
 *
 * A temporary component to represent the logo for Guard.
 *
 */ parcelHelpers.export(exports, "GuardLogoCS", ()=>GuardLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 120 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M108.4 17.67c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V3.59h2.64v21.74zm-17.8-9.04v9.05H96.7V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93m-17.86 1.37c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-27.42-6.34V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-3.98 5.21c-1.59.95-4.54 1.44-6.81 1.44-6.93 0-10.67-4.23-10.67-10.33 0-6.56 4.26-10.46 11.44-10.46 1.6 0 3.47.18 5.24.8v2.76c-1.53-.61-3.34-.89-5.21-.89-5.98 0-8.71 2.98-8.71 7.73 0 4.66 2.76 7.76 8.56 7.76.95 0 2.27-.09 3.4-.43v-5.61H50.8v-2.64h7.91z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M8.188 14.644h15.623c.449 0 .688-.24.688-.688V8.688c0-.449-.24-.688-.688-.688h-3.292c-.45 0-.689.24-.689.688v2.664h-1.496V8.688c0-.449-.24-.688-.688-.688h-3.293c-.448 0-.688.24-.688.688v2.664H12.17V8.688c0-.449-.24-.688-.689-.688H8.188c-.449 0-.688.24-.688.688v5.268c0 .449.24.688.688.688m.27 4.609a10.4 10.4 0 0 1-.599-2.993c-.03-.389.15-.598.569-.598H23.57c.42 0 .599.18.599.538q-.09 1.662-.629 3.053c-.18.479-.448.688-.957.688H9.415c-.508 0-.778-.21-.957-.688m13.856 2.484c-1.436 1.766-3.8 2.903-6.314 2.903s-4.939-1.137-6.345-2.903c-.36-.479-.18-.778.18-.778h12.33c.359 0 .538.3.15.778\"/>\n</svg>\n";
function GuardLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Guard',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ia4MW":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::f042e3ce0576eb6d052095fee9009306>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HomeIcon", ()=>(0, _icon.HomeIcon));
parcelHelpers.export(exports, "HomeLogo", ()=>(0, _logo.HomeLogo));
parcelHelpers.export(exports, "HomeLogoCS", ()=>(0, _logoCs.HomeLogoCS));
var _icon = require("../ui/home/icon");
var _logo = require("../ui/home/logo");
var _logoCs = require("../ui/home/logo-cs");

},{"../ui/home/icon":"77BzR","../ui/home/logo":false,"../ui/home/logo-cs":"ll1Fm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"77BzR":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::f4789b6ef9b66e17e85ce46edd0e20b5>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __HomeIcon__
 *
 * A temporary component to represent the icon for Home.
 * @deprecated This component has been replaced by the component `HomeIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "HomeIcon", ()=>HomeIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M5.875 10.688v7.437h4.375V13.75h3.5v4.375h4.375v-7.437L12 5z\"/>\n</svg>\n";
function HomeIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Home' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ll1Fm":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c67123de70271166e5ef44610b854411>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __HomeLogoCS__
 *
 * A temporary component to represent the logo for Home.
 *
 */ parcelHelpers.export(exports, "HomeLogoCS", ()=>HomeLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 121 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M113.57 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zM93.3 16.81v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.43 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-23.33 8.81c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M56.41 5.19h2.76v20.15h-2.76v-8.71H45.8v8.71h-2.76V5.19h2.76v8.8h10.61z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M7.25 14.125V24.75h6.25V18.5h5v6.25h6.25V14.125L16 6z\"/>\n</svg>\n";
function HomeLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Home',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"h2R4a":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::5edbcc3f799fd1482dba48e0422a6a37>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HubIcon", ()=>(0, _icon.HubIcon));
parcelHelpers.export(exports, "HubLogoCS", ()=>(0, _logoCs.HubLogoCS));
var _icon = require("../ui/hub/icon");
var _logoCs = require("../ui/hub/logo-cs");

},{"../ui/hub/icon":"5QRCa","../ui/hub/logo-cs":"frzbw","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5QRCa":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::826142130c83ecce3a55557ab8c9ff78>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __HubIcon__
 *
 * A temporary component to represent the icon for Hub.
 * @deprecated This component has been replaced by the component `HubIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "HubIcon", ()=>HubIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 32 32\">\n    <g clip-path=\"url(#clip0_95164_16219)\">\n        <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n        <g clip-path=\"url(#clip1_95164_16219)\">\n            <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M9 25.333V6.667h14v18.666h-5.25V21.25h-3.5v4.083zm3.5-14.583h2.333V9H12.5zm4.667 0H19.5V9h-2.333zm-2.334 4.083H12.5v-1.75h2.333zM12.5 18.916h2.333v-1.75H12.5zm7-4.083h-2.333v-1.75H19.5zm-2.333 4.083H19.5v-1.75h-2.333z\" clip-rule=\"evenodd\"/>\n        </g>\n    </g>\n    <defs>\n        <clipPath id=\"clip0_95164_16219\">\n            <path fill=\"var(--icon-color, white)\" d=\"M0 0h32v32H0z\"/>\n        </clipPath>\n        <clipPath id=\"clip1_95164_16219\">\n            <path fill=\"var(--icon-color, white)\" d=\"M2 2h28v28H2z\"/>\n        </clipPath>\n    </defs>\n</svg>\n";
function HubIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Hub' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"frzbw":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::74d5a3c20dd506d1d63034c369b3973f>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __HubLogoCS__
 *
 * A temporary component to represent the logo for Hub.
 *
 */ parcelHelpers.export(exports, "HubLogoCS", ()=>HubLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 95 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M91.61 17.67c0-3.68-1.47-5.52-4.2-5.52-2.36 0-4.48 1.5-4.48 4.91v1.23c0 3.4 1.93 4.91 4.17 4.91 2.98 0 4.51-1.96 4.51-5.52m-3.8 7.97c-2.24 0-3.96-1.01-4.88-3v2.7h-2.64V3.59h2.64v9.17c.98-2.02 2.82-3.07 5.18-3.07 4.08 0 6.13 3.47 6.13 7.97 0 4.32-2.15 7.97-6.44 7.97m-24.52-6.64V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65M56.4 5.19h2.76v20.15H56.4v-8.71H45.79v8.71h-2.76V5.19h2.76v8.8H56.4z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M9 25.333V6.667h14v18.666h-5.25V21.25h-3.5v4.083zm3.5-14.583h2.333V9H12.5zm4.667 0H19.5V9h-2.333zm-2.334 4.083H12.5v-1.75h2.333zM12.5 18.916h2.333v-1.75H12.5zm7-4.083h-2.333v-1.75H19.5zm-2.333 4.083H19.5v-1.75h-2.333z\" clip-rule=\"evenodd\"/>\n</svg>\n";
function HubLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Hub',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4SvKN":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::df084aca2fa745be39487496e8cc9ce3>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraIcon", ()=>(0, _icon.JiraIcon));
parcelHelpers.export(exports, "JiraLogo", ()=>(0, _logo.JiraLogo));
parcelHelpers.export(exports, "JiraLogoCS", ()=>(0, _logoCs.JiraLogoCS));
var _icon = require("../ui/jira/icon");
var _logo = require("../ui/jira/logo");
var _logoCs = require("../ui/jira/logo-cs");

},{"../ui/jira/icon":"2BLzN","../ui/jira/logo":false,"../ui/jira/logo-cs":"jbysK","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2BLzN":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::349400291f8d779d7f120565198fb274>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraIcon__
 *
 * A temporary component to represent the icon for Jira.
 * @deprecated This component has been replaced by the component `JiraIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "JiraIcon", ()=>JiraIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M9.051 15.434H7.734c-1.988 0-3.413-1.218-3.413-3h7.085c.367 0 .605.26.605.63v7.13c-1.772 0-2.96-1.435-2.96-3.434zm3.5-3.543h-1.318c-1.987 0-3.413-1.196-3.413-2.978h7.085c.367 0 .627.239.627.608v7.13c-1.772 0-2.981-1.435-2.981-3.434zm3.52-3.522h-1.317c-1.987 0-3.413-1.217-3.413-3h7.085c.367 0 .605.262.605.61v7.129c-1.771 0-2.96-1.435-2.96-3.434z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zM4.321 12.434c0 1.782 1.425 3 3.412 3h1.319v1.326c0 2 1.188 3.433 2.959 3.433v-7.129c0-.369-.238-.63-.605-.63zm3.5-3.52c0 1.781 1.425 2.977 3.412 2.977h1.318v1.326c0 2 1.21 3.433 2.98 3.433V9.521c0-.369-.259-.608-.626-.608zm3.52-3.544c0 1.782 1.426 3 3.413 3h1.317v1.304c0 2 1.188 3.433 2.96 3.433V5.98c0-.348-.238-.609-.605-.609z\"/>\n</svg>\n";
function JiraIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Jira' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jbysK":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4e59ffc8f6204d656061ee5a0061b73d>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraLogoCS__
 *
 * A temporary component to represent the logo for Jira.
 *
 */ parcelHelpers.export(exports, "JiraLogoCS", ()=>JiraLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 83 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M71.02 17.67c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.98 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-17.79-9.04v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93M52.22 5.95c0-1.17.77-1.84 1.84-1.84s1.84.67 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-6.42-5.95V5.19h2.76V19.2c0 3.71-1.63 6.26-5.43 6.26-1.44 0-2.55-.25-3.31-.52v-2.67c.83.34 1.84.52 2.85.52 2.33 0 3.13-1.41 3.13-3.4\"/>\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M11.965 20.698h-1.803c-2.72 0-4.67-1.666-4.67-4.105h9.695c.502 0 .827.357.827.863v9.756c-2.423 0-4.05-1.963-4.05-4.7zm4.788-4.848H14.95c-2.72 0-4.67-1.636-4.67-4.075h9.695c.503 0 .857.327.857.832v9.756c-2.424 0-4.079-1.963-4.079-4.7zm4.818-4.82h-1.803c-2.72 0-4.67-1.665-4.67-4.104h9.695c.503 0 .828.357.828.833v9.756c-2.424 0-4.05-1.963-4.05-4.7z\"/>\n</svg>\n";
function JiraLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Jira',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bRXCr":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::3e7516275c284af137a32056b16698a0>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraDataCenterIcon", ()=>(0, _icon.JiraDataCenterIcon));
parcelHelpers.export(exports, "JiraDataCenterLogoCS", ()=>(0, _logoCs.JiraDataCenterLogoCS));
var _icon = require("../ui/jira-data-center/icon");
var _logoCs = require("../ui/jira-data-center/logo-cs");

},{"../ui/jira-data-center/icon":"jdvjl","../ui/jira-data-center/logo-cs":"91nWx","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jdvjl":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::be11a29c939ff0f2a727a12285a62df7>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraDataCenterIcon__
 *
 * A temporary component to represent the icon for Jira Data Center.
 * @deprecated This component has been replaced by the component `JiraDataCenterIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "JiraDataCenterIcon", ()=>JiraDataCenterIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M8.974 15.523H7.62c-2.04 0-3.502-1.249-3.502-3.078h7.271c.377 0 .62.268.62.647v7.317c-1.817 0-3.036-1.472-3.036-3.525zm3.591-3.636h-1.352c-2.04 0-3.503-1.227-3.503-3.056h7.272c.376 0 .642.245.642.625v7.317c-1.817 0-3.059-1.473-3.059-3.525zm3.614-3.614h-1.353c-2.04 0-3.502-1.249-3.502-3.078h7.271c.377 0 .62.268.62.624v7.318c-1.817 0-3.036-1.473-3.036-3.525z\"/>\n</svg>\n";
function JiraDataCenterIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Jira Data Center' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"91nWx":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::edd03c87400293ccf1fe46a969f3a3ff>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraDataCenterLogoCS__
 *
 * A temporary component to represent the logo for Jira Data Center.
 *
 */ parcelHelpers.export(exports, "JiraDataCenterLogoCS", ()=>JiraDataCenterLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 104 41\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M88.79 22.09c0 4.6 1.84 6.9 5.25 6.9 2.95 0 5.6-1.88 5.59-6.13v-1.54c0-4.25-2.42-6.13-5.22-6.13-3.72 0-5.63 2.46-5.63 6.9m10.85 9.58v-3.45c-1.23 2.53-3.53 3.83-6.48 3.84-5.1 0-7.67-4.33-7.67-9.96 0-5.4 2.68-9.97 8.05-9.97 2.8 0 4.95 1.26 6.1 3.75v-3.37h3.3l.01 19.17zm-22.24-11.3v11.31h-3.22l-.01-19.17h3.22v3.37c1.11-2.26 3.03-3.87 6.78-3.64v3.22c-4.22-.42-6.78.85-6.78 4.91M65.28 7.46c0-1.46.96-2.3 2.3-2.3s2.3.84 2.3 2.3-.96 2.3-2.3 2.3-2.3-.84-2.3-2.3m.62 24.23-.01-19.17h3.3l.01 19.17zm-8.03-7.44L57.86 6.5h3.45l.01 17.52c0 4.64-2.03 7.82-6.78 7.82-1.8 0-3.18-.31-4.14-.65v-3.33c1.03.42 2.3.65 3.57.65 2.91 0 3.91-1.76 3.91-4.26\"/>\n    <path fill=\"var(--tile-color, white)\" d=\"m10 .868 20-.007a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .869\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" stroke-width=\"1.667\" d=\"m10 .868 20-.007a9.167 9.167 0 0 1 9.17 9.163l.008 20a9.167 9.167 0 0 1-9.163 9.17l-20 .008a9.167 9.167 0 0 1-9.17-9.163l-.008-20A9.167 9.167 0 0 1 10 .869Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M14.966 25.906h-2.254c-3.4.002-5.839-2.08-5.84-5.128l12.119-.005c.628 0 1.035.446 1.035 1.078l.005 12.195c-3.03.001-5.063-2.452-5.065-5.872zm5.983-6.063h-2.254c-3.4.002-5.838-2.042-5.84-5.09l12.12-.005c.627 0 1.071.408 1.071 1.04l.005 12.196c-3.03 0-5.1-2.452-5.101-5.873zm6.02-6.025h-2.254c-3.399.002-5.838-2.08-5.84-5.128l12.12-.005c.628 0 1.034.446 1.034 1.04l.005 12.196c-3.03.001-5.063-2.452-5.064-5.873z\"/>\n</svg>\n";
function JiraDataCenterLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Jira Data Center',
        isDataCenter: true,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aCESF":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::39e77db0cf3e8883a89e74a186979d3e>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraProductDiscoveryIcon", ()=>(0, _icon.JiraProductDiscoveryIcon));
parcelHelpers.export(exports, "JiraProductDiscoveryLogo", ()=>(0, _logo.JiraProductDiscoveryLogo));
parcelHelpers.export(exports, "JiraProductDiscoveryLogoCS", ()=>(0, _logoCs.JiraProductDiscoveryLogoCS));
var _icon = require("../ui/jira-product-discovery/icon");
var _logo = require("../ui/jira-product-discovery/logo");
var _logoCs = require("../ui/jira-product-discovery/logo-cs");

},{"../ui/jira-product-discovery/icon":"5xKRf","../ui/jira-product-discovery/logo":false,"../ui/jira-product-discovery/logo-cs":"aAT36","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5xKRf":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4986587aa74e2199c5aaa284b753e478>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraProductDiscoveryIcon__
 *
 * A temporary component to represent the icon for Jira Product Discovery.
 * @deprecated This component has been replaced by the component `JiraProductDiscoveryIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "JiraProductDiscoveryIcon", ()=>JiraProductDiscoveryIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#c97cf4)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M13.467 4.882a9.47 9.47 0 0 0 5.422 0c.159-.035.265.07.23.229-.513 1.85-.513 3.558 0 5.408.035.14-.072.264-.23.211a10.1 10.1 0 0 0-5.422 0c-.142.053-.265-.07-.212-.211.476-1.85.476-3.559 0-5.408-.053-.159.07-.264.212-.23m.724 6.553v.3c0 1.39-.972 2.412-2.173 2.412a2.153 2.153 0 0 1-2.154-2.166c0-1.198.971-2.15 2.331-2.15h.353V5.62c-.176-.017-.353-.017-.53-.017a6.387 6.387 0 0 0-6.393 6.394 6.37 6.37 0 0 0 6.393 6.377c3.533 0 6.411-2.854 6.411-6.377v-.563z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zm-5.981 5.604a6.387 6.387 0 0 0-6.394 6.394 6.373 6.373 0 0 0 6.394 6.377c3.532 0 6.41-2.854 6.41-6.377v-.563H14.19v.3c0 1.39-.97 2.412-2.171 2.413a2.154 2.154 0 0 1-2.156-2.168c0-1.197.973-2.148 2.332-2.148h.353v-4.21c-.177-.018-.353-.018-.53-.018m6.87-.722a9.47 9.47 0 0 1-5.422 0c-.141-.035-.265.07-.212.228.477 1.85.477 3.559 0 5.409-.053.14.07.264.212.211a10.1 10.1 0 0 1 5.422 0c.159.053.265-.07.23-.211-.513-1.85-.513-3.56 0-5.409.034-.158-.072-.263-.23-.228\"/>\n</svg>\n";
function JiraProductDiscoveryIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Jira Product Discovery' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aAT36":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c717e345844b038535f958bda3516e1e>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraProductDiscoveryLogoCS__
 *
 * A temporary component to represent the logo for Jira Product Discovery.
 *
 */ parcelHelpers.export(exports, "JiraProductDiscoveryLogoCS", ()=>JiraProductDiscoveryLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 327 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M317.88 24.35h-1.72L310.62 10h2.82l4.91 13.13 4.9-13.13h2.82l-5.8 14.84c-1.72 4.39-2.7 6.65-6.59 6.65-1.32 0-2.06-.12-2.82-.43v-2.27c.89.28 1.9.37 2.67.37 2.15 0 3.1-1.47 4.36-4.82m-13.25-8.05v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93m-12.47-4.21c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-19.72.6h-3.53L268.87 10h2.76l4.97 13.1 4.93-13.1h2.76zm-17.46.31c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-9.39 10.42v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.46-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55m-13.88-1.42c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-17.7-15.22c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zM207.68 7.82h-4.54v14.87h4.69c4.6 0 6.9-2.42 6.9-7.3 0-4.91-2.18-7.57-7.05-7.57m-7.3 17.51V5.19h7.42c6.53 0 9.69 4.08 9.69 10.12 0 6.1-3.19 10.03-9.69 10.03zm-13.41-4.75c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-6.66 1.99v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.46-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55m-27.86-3.59V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-14.99-1.32c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V3.59h2.64v21.74zm-20.7.31c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-13.78 4.14v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93m-5-4.4c0 4.39-2.45 6.84-7.48 6.84h-4.02v6.59h-2.76V5.19h6.78c5.03 0 7.48 2.58 7.48 6.72m-7.79 4.2c3.56.12 4.94-1.56 4.94-4.14 0-2.45-1.38-4.14-4.94-4.14h-3.71v8.28zm-27.87 1.56c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.98 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-17.79-9.04v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93M52.22 5.95c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-6.42-5.95V5.19h2.76V19.2c0 3.71-1.63 6.26-5.43 6.26-1.44 0-2.55-.24-3.31-.52v-2.67c.83.34 1.84.52 2.85.52 2.33 0 3.13-1.41 3.13-3.4\"/>\n    <path fill=\"var(--tile-color,#c97cf4)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M17.448 6.967c2.544.746 5.113.746 7.656 0 .225-.05.375.1.325.323-.724 2.612-.724 5.025 0 7.637.05.199-.1.373-.325.298a14.3 14.3 0 0 0-7.656 0c-.2.075-.374-.1-.3-.298.674-2.612.674-5.025 0-7.637-.074-.223.1-.373.3-.323m1.023 9.253v.423c0 1.965-1.372 3.408-3.068 3.408a3.04 3.04 0 0 1-3.043-3.06c0-1.691 1.372-3.034 3.292-3.034h.5V8.012c-.25-.025-.5-.025-.749-.025a9.02 9.02 0 0 0-9.028 9.03c0 4.999 4.04 9.004 9.028 9.004s9.053-4.03 9.053-9.005v-.796z\"/>\n</svg>\n";
function JiraProductDiscoveryLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Jira Product Discovery',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lQrKh":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c16c180236b55a2847303bf275fd9aa3>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraServiceManagementIcon", ()=>(0, _icon.JiraServiceManagementIcon));
parcelHelpers.export(exports, "JiraServiceManagementLogo", ()=>(0, _logo.JiraServiceManagementLogo));
parcelHelpers.export(exports, "JiraServiceManagementLogoCS", ()=>(0, _logoCs.JiraServiceManagementLogoCS));
var _icon = require("../ui/jira-service-management/icon");
var _logo = require("../ui/jira-service-management/logo");
var _logoCs = require("../ui/jira-service-management/logo-cs");

},{"../ui/jira-service-management/icon":"gsyms","../ui/jira-service-management/logo":false,"../ui/jira-service-management/logo-cs":"MzWgN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gsyms":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a167626b0cdea243238150a218b626f1>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraServiceManagementIcon__
 *
 * A temporary component to represent the icon for Jira Service Management.
 * @deprecated This component has been replaced by the component `JiraServiceManagementIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "JiraServiceManagementIcon", ()=>JiraServiceManagementIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M13.744 10.156h4.578c.688 0 .922.654.503 1.174l-7.16 8.837c-2.314-1.845-2.096-4.763-.402-6.892zm-3.538 3.521H5.63c-.688 0-.923-.654-.504-1.173l7.16-8.837c2.315 1.844 2.063 4.728.386 6.875z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zm-4.256 10.156-2.481 3.12c-1.694 2.129-1.912 5.047.402 6.891l7.16-8.837c.42-.52.185-1.174-.503-1.174zm-8.619 2.348c-.419.52-.183 1.174.504 1.174h4.577l2.465-3.136c1.677-2.146 1.928-5.03-.386-6.875z\"/>\n</svg>\n";
function JiraServiceManagementIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Jira Service Management' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"MzWgN":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::53b527c6147d3e082114434b11573bf3>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __JiraServiceManagementLogoCS__
 *
 * A temporary component to represent the logo for Jira Service Management.
 *
 */ parcelHelpers.export(exports, "JiraServiceManagementLogoCS", ()=>JiraServiceManagementLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 372 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M367.07 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55a6.3 6.3 0 0 1-1.78.25c-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-7.32-4.23v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-22.92-4.27c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-26.16-7.92v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.43 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-22.92-4.74c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2H289.2c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-18.64-.62v-1.53c-.98 2.02-2.82 3.07-5.18 3.07-4.05 0-6.07-3.46-6.07-7.97 0-4.32 2.12-7.97 6.38-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.58v13.95c0 4.51-2.12 7.54-7.6 7.54-2.58 0-3.99-.34-5.46-.83v-2.58c1.69.55 3.44.92 5.34.92 3.83 0 5.15-2.05 5.15-4.91m-8.68-6.44c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m-16.97.03c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-14.07-8.98v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-28.33 1.31c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-31.44-11.01-2.76-7.48v18.49h-2.76V5.19h4.78l4.57 11.56 1.87 5.55 1.87-5.55 4.6-11.56h4.45v20.15h-2.76V7.06l-2.36 7.27-4.45 11.01h-2.67zm-21.52-2.23c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.09-2.16v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.46-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55M150.12 5.95c0-1.17.77-1.84 1.84-1.84s1.84.67 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-8.23 0h-3.53L132.91 10h2.76l4.97 13.1 4.93-13.1h2.76zm-15.45-9.04v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93m-12.47-4.21c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.33-4.95c0 3.5-2.08 5.86-7.08 5.86-3.89 0-5.7-.77-7.27-1.56v-2.82c1.87.98 4.75 1.69 7.42 1.69 3.04 0 4.17-1.2 4.17-2.97 0-1.78-1.1-2.73-4.94-3.65-4.54-1.1-6.56-2.67-6.56-5.98 0-3.13 2.39-5.46 7.08-5.46 2.91 0 4.78.71 6.16 1.47v2.76c-2.02-1.16-4.2-1.53-6.29-1.53-2.64 0-4.2.92-4.2 2.76 0 1.66 1.29 2.48 4.84 3.37 4.26 1.07 6.66 2.45 6.66 6.07m-33.99-2.12c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.98 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-17.79-9.04v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93M52.22 5.95c0-1.17.77-1.84 1.84-1.84s1.84.67 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-6.42-5.95V5.19h2.76V19.2c0 3.71-1.63 6.26-5.43 6.26-1.44 0-2.55-.25-3.31-.52v-2.67c.83.34 1.84.52 2.85.52 2.33 0 3.13-1.41 3.13-3.4\"/>\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M18.268 13.604h5.951c.894 0 1.199.85.654 1.526l-9.308 11.487c-3.008-2.397-2.725-6.19-.523-8.959zm-4.6 4.577h-5.95c-.894 0-1.2-.85-.655-1.526l9.308-11.488c3.009 2.398 2.682 6.148.502 8.938z\"/>\n</svg>\n";
function JiraServiceManagementLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Jira Service Management',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bgxyf":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::9fea2709f86f062eeac43ae43ef25aea>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomIcon", ()=>(0, _icon.LoomIcon));
parcelHelpers.export(exports, "LoomLogo", ()=>(0, _logo.LoomLogo));
parcelHelpers.export(exports, "LoomLogoCS", ()=>(0, _logoCs.LoomLogoCS));
var _icon = require("../ui/loom/icon");
var _logo = require("../ui/loom/logo");
var _logoCs = require("../ui/loom/logo-cs");

},{"../ui/loom/icon":"2Syp7","../ui/loom/logo":false,"../ui/loom/logo-cs":"hZ6ZM","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2Syp7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::55187565d76d0ab70107b394d5174d9a>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __LoomIcon__
 *
 * A temporary component to represent the icon for Loom.
 * @deprecated This component has been replaced by the component `LoomIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "LoomIcon", ()=>LoomIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M19.083 11.212h-4.142l3.588-2.071-.788-1.365-3.588 2.071 2.07-3.587-1.364-.788-2.071 3.587V4.917h-1.576v4.142L9.141 5.472l-1.365.787 2.071 3.588L6.26 7.776 5.472 9.14l3.587 2.07H4.917v1.577h4.142l-3.587 2.071.788 1.365 3.587-2.07-2.071 3.587 1.365.787 2.07-3.587v4.142h1.577V14.94l2.07 3.587 1.365-.787-2.07-3.588 3.587 2.071.788-1.365-3.587-2.07h4.142zM12 14.143a2.151 2.151 0 1 1 0-4.302 2.151 2.151 0 0 1 0 4.302\"/>\n</svg>\n";
function LoomIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Loom' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hZ6ZM":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::6a5096a51df5a305dfbd42f91714bfbb>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __LoomLogoCS__
 *
 * A temporary component to represent the logo for Loom.
 *
 */ parcelHelpers.export(exports, "LoomLogoCS", ()=>LoomLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 103 32\">\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M25.375 15.31H19.99l4.664-2.693-1.024-1.775-4.664 2.693 2.692-4.663-1.775-1.025-2.692 4.663V7.125h-2.048v5.386l-2.694-4.664-1.774 1.024 2.693 4.664-4.664-2.693-1.024 1.774 4.664 2.693H6.959v2.049h5.384L7.68 20.05l1.024 1.774 4.663-2.692-2.692 4.664 1.774 1.024 2.693-4.664v5.385h2.049v-5.385l2.692 4.664 1.774-1.024-2.692-4.665 4.663 2.693 1.025-1.774-4.664-2.693h5.385zm-9.208 3.81a2.797 2.797 0 1 1 0-5.593 2.797 2.797 0 0 1 0 5.593\"/>\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M42.67 25.34V3.93h3.93v21.41zm37.7-14.55h3.75v1.78c.8-1.42 2.66-2.19 4.26-2.19 1.98 0 3.58.86 4.32 2.43 1.15-1.77 2.69-2.42 4.61-2.42 2.69 0 5.26 1.63 5.26 5.53v9.43h-3.81v-8.63c0-1.57-.77-2.75-2.57-2.75-1.68 0-2.69 1.3-2.69 2.87v8.52h-3.9v-8.63c0-1.57-.8-2.75-2.57-2.75-1.71 0-2.72 1.27-2.72 2.87v8.52h-3.93zM55.48 25.77c-4.43 0-7.63-3.28-7.63-7.7 0-4.34 3.2-7.7 7.64-7.7 4.46 0 7.63 3.39 7.63 7.7 0 4.38-3.21 7.7-7.63 7.7m0-11.84a4.15 4.15 0 0 0-4.14 4.14 4.15 4.15 0 0 0 4.14 4.14 4.15 4.15 0 0 0 4.14-4.14 4.15 4.15 0 0 0-4.14-4.14m16.02 11.84c-4.43 0-7.63-3.28-7.63-7.7 0-4.34 3.2-7.7 7.63-7.7 4.46 0 7.64 3.39 7.64 7.7 0 4.38-3.21 7.7-7.63 7.7m0-11.89c-2.31 0-4.19 1.88-4.19 4.19s1.88 4.19 4.19 4.19 4.19-1.88 4.19-4.19-1.88-4.19-4.19-4.19\"/>\n</svg>\n";
function LoomLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Loom',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dxLsB":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::89d13c4553909c3247fff47bac7f32c1>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomAttributionLogoCS", ()=>(0, _logoCs.LoomAttributionLogoCS));
var _logoCs = require("../ui/loom-attribution/logo-cs");

},{"../ui/loom-attribution/logo-cs":"hUnxr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hUnxr":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fd272001aa98d69675b8af120a4f03a6>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __LoomAttributionLogoCS__
 *
 * A temporary component to represent the logo for Loom Attribution.
 *
 */ parcelHelpers.export(exports, "LoomAttributionLogoCS", ()=>LoomAttributionLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 100 32\">\n    <path fill=\"var(--icon-color, #101214)\" d=\"M66.71 5.11c0 1.08.49 1.93 2.47 2.31 1.16.26 1.41.44 1.41.82 0 .39-.26.62-1.08.62-.95 0-2.08-.33-2.83-.77v1.75c.59.28 1.36.62 2.83.62 2.06 0 2.85-.92 2.85-2.26m0 .03c0-1.28-.67-1.88-2.59-2.29-1.05-.23-1.31-.46-1.31-.8 0-.41.39-.59 1.08-.59.85 0 1.67.26 2.47.62V3.5c-.56-.28-1.41-.49-2.41-.49-1.9 0-2.88.82-2.88 2.16m26.29-2.11v7.32h1.57V4.81l.64 1.46 2.21 4.11h1.95V3.06h-1.54v4.73l-.59-1.39-1.77-3.34zm-9.91 0h-1.7v7.32h1.7zM79.45 8.2c0-1.28-.67-1.88-2.59-2.29-1.05-.23-1.31-.46-1.31-.8 0-.41.39-.59 1.08-.59.85 0 1.67.26 2.47.62V3.47c-.56-.28-1.41-.49-2.41-.49-1.9 0-2.88.82-2.88 2.16 0 1.08.49 1.93 2.47 2.31 1.16.26 1.41.44 1.41.82s-.26.62-1.08.62c-.95 0-2.08-.33-2.83-.77v1.75c.59.28 1.36.62 2.83.62 2.03 0 2.85-.92 2.85-2.29M53.5 3.06v7.32h3.49l.54-1.59h-2.34V3.06zm-6.91 0v1.57h1.88v5.75h1.72V4.63h2.03V3.06zm-2.49 0h-2.24l-2.54 7.32h1.95l.36-1.23c.44.13.9.21 1.36.21s.93-.08 1.36-.21l.36 1.23h1.95c-.03 0-2.57-7.32-2.57-7.32m-1.13 4.75c-.33 0-.64-.05-.93-.13l.93-3.19.93 3.19c-.28.08-.59.13-.92.13m20.06-4.75H60.8l-2.57 7.32h1.95l.36-1.23c.44.13.9.21 1.36.21s.93-.08 1.36-.21l.36 1.23h1.95zM61.9 7.81c-.33 0-.64-.05-.92-.13l.93-3.19.93 3.19c-.28.08-.59.13-.92.13m27.32-4.75h-2.23l-2.54 7.32h1.95l.36-1.23c.44.13.9.21 1.36.21s.93-.08 1.36-.21l.36 1.23h1.95zm-1.11 4.75c-.33 0-.64-.05-.92-.13l.93-3.19.93 3.19a3.7 3.7 0 0 1-.92.13\"/>\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M25.375 15.31H19.99l4.664-2.693-1.024-1.775-4.664 2.693 2.692-4.664-1.775-1.025-2.692 4.664V7.125h-2.048v5.385l-2.694-4.664-1.774 1.025 2.693 4.663-4.664-2.692-1.024 1.774 4.664 2.693H6.958v2.048h5.385L7.68 20.05l1.024 1.775 4.663-2.693-2.692 4.664 1.774 1.024 2.693-4.664v5.386h2.049v-5.385l2.692 4.663 1.774-1.024-2.692-4.664 4.663 2.693 1.025-1.775-4.664-2.692h5.385zm-9.208 3.81a2.797 2.797 0 1 1 0-5.594 2.797 2.797 0 0 1 0 5.593\"/>\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M39.32 27.74v-13.7h2.52v13.7zm24.13-9.31h2.4v1.14c.51-.91 1.7-1.4 2.72-1.4 1.27 0 2.29.55 2.76 1.55.74-1.14 1.72-1.55 2.95-1.55 1.72 0 3.37 1.04 3.37 3.54v6.04h-2.44v-5.53c0-1-.49-1.76-1.65-1.76-1.08 0-1.72.83-1.72 1.84v5.45h-2.49v-5.53c0-1-.51-1.76-1.65-1.76-1.1 0-1.74.81-1.74 1.84v5.45h-2.52zm-15.93 9.58c-2.83 0-4.89-2.1-4.89-4.93 0-2.78 2.05-4.93 4.89-4.93 2.85 0 4.89 2.17 4.89 4.93 0 2.8-2.05 4.93-4.89 4.93m0-7.58a2.65 2.65 0 0 0-2.65 2.65 2.65 2.65 0 0 0 2.65 2.65c1.46 0 2.65-1.19 2.65-2.65a2.65 2.65 0 0 0-2.65-2.65m10.26 7.58c-2.83 0-4.89-2.1-4.89-4.93 0-2.78 2.05-4.93 4.89-4.93 2.85 0 4.89 2.17 4.89 4.93 0 2.8-2.06 4.93-4.89 4.93m0-7.61a2.69 2.69 0 0 0-2.68 2.68 2.69 2.69 0 0 0 2.68 2.68 2.69 2.69 0 0 0 2.68-2.68 2.69 2.69 0 0 0-2.68-2.68\"/>\n</svg>\n";
function LoomAttributionLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Loom Attribution',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"30R6Q":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d93b69267904dc7bbdda78ec4997a2fa>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomInternalIcon", ()=>(0, _icon.LoomInternalIcon));
parcelHelpers.export(exports, "LoomInternalLogo", ()=>(0, _logo.LoomInternalLogo));
parcelHelpers.export(exports, "LoomInternalLogoCS", ()=>(0, _logoCs.LoomInternalLogoCS));
var _icon = require("../ui/loom-internal/icon");
var _logo = require("../ui/loom-internal/logo");
var _logoCs = require("../ui/loom-internal/logo-cs");

},{"../ui/loom-internal/icon":"7Cedb","../ui/loom-internal/logo":false,"../ui/loom-internal/logo-cs":"lckQ7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7Cedb":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c3dabecb5c666d4b59916374e96299a4>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __LoomInternalIcon__
 *
 * A temporary component to represent the icon for Loom.
 * @deprecated This component has been replaced by the component `LoomInternalIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "LoomInternalIcon", ()=>LoomInternalIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#625df5)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M19.083 11.212h-4.142l3.588-2.071-.788-1.365-3.588 2.071 2.07-3.587-1.364-.788-2.071 3.587V4.917h-1.576v4.142L9.141 5.472l-1.365.787 2.071 3.588L6.26 7.776 5.472 9.14l3.587 2.07H4.917v1.577h4.142l-3.587 2.071.788 1.365 3.587-2.07-2.071 3.587 1.365.787 2.07-3.587v4.142h1.577V14.94l2.07 3.587 1.365-.787-2.07-3.588 3.587 2.071.788-1.365-3.587-2.07h4.142zM12 14.143a2.151 2.151 0 1 1 0-4.302 2.151 2.151 0 0 1 0 4.302\"/>\n</svg>\n";
function LoomInternalIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Loom' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lckQ7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::a1ad132d169ee25cdbb84d478357623d>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __LoomInternalLogoCS__
 *
 * A temporary component to represent the logo for Loom.
 *
 */ parcelHelpers.export(exports, "LoomInternalLogoCS", ()=>LoomInternalLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 103 32\">\n    <path fill=\"var(--tile-color,#625df5)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M25.375 15.31H19.99l4.664-2.693-1.024-1.775-4.664 2.693 2.692-4.663-1.775-1.025-2.692 4.663V7.125h-2.048v5.386l-2.694-4.664-1.774 1.024 2.693 4.664-4.664-2.693-1.024 1.774 4.664 2.693H6.959v2.049h5.384L7.68 20.05l1.024 1.774 4.663-2.692-2.692 4.664 1.774 1.024 2.693-4.664v5.385h2.049v-5.385l2.692 4.664 1.774-1.024-2.692-4.665 4.663 2.693 1.025-1.774-4.664-2.693h5.385zm-9.208 3.81a2.797 2.797 0 1 1 0-5.593 2.797 2.797 0 0 1 0 5.593\"/>\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M42.67 25.34V3.93h3.93v21.41zm37.7-14.55h3.75v1.78c.8-1.42 2.66-2.19 4.26-2.19 1.98 0 3.58.86 4.32 2.43 1.15-1.77 2.69-2.42 4.61-2.42 2.69 0 5.26 1.63 5.26 5.53v9.43h-3.81v-8.63c0-1.57-.77-2.75-2.57-2.75-1.68 0-2.69 1.3-2.69 2.87v8.52h-3.9v-8.63c0-1.57-.8-2.75-2.57-2.75-1.71 0-2.72 1.27-2.72 2.87v8.52h-3.93zM55.48 25.77c-4.43 0-7.63-3.28-7.63-7.7 0-4.34 3.2-7.7 7.64-7.7 4.46 0 7.63 3.39 7.63 7.7 0 4.38-3.21 7.7-7.63 7.7m0-11.84a4.15 4.15 0 0 0-4.14 4.14 4.15 4.15 0 0 0 4.14 4.14 4.15 4.15 0 0 0 4.14-4.14 4.15 4.15 0 0 0-4.14-4.14m16.02 11.84c-4.43 0-7.63-3.28-7.63-7.7 0-4.34 3.2-7.7 7.63-7.7 4.46 0 7.64 3.39 7.64 7.7 0 4.38-3.21 7.7-7.63 7.7m0-11.89c-2.31 0-4.19 1.88-4.19 4.19s1.88 4.19 4.19 4.19 4.19-1.88 4.19-4.19-1.88-4.19-4.19-4.19\"/>\n</svg>\n";
function LoomInternalLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Loom',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6sWOw":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::f810e97869061b7d6b5ecb8c5cc20492>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpsgenieIcon", ()=>(0, _icon.OpsgenieIcon));
parcelHelpers.export(exports, "OpsgenieLogo", ()=>(0, _logo.OpsgenieLogo));
parcelHelpers.export(exports, "OpsgenieLogoCS", ()=>(0, _logoCs.OpsgenieLogoCS));
var _icon = require("../ui/opsgenie/icon");
var _logo = require("../ui/opsgenie/logo");
var _logoCs = require("../ui/opsgenie/logo-cs");

},{"../ui/opsgenie/icon":"fhjEW","../ui/opsgenie/logo":false,"../ui/opsgenie/logo-cs":"eU1hA","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fhjEW":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::579928a7702ff0666940203a9d4c2681>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __OpsgenieIcon__
 *
 * A temporary component to represent the icon for Opsgenie.
 * @deprecated This component has been replaced by the component `OpsgenieIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "OpsgenieIcon", ()=>OpsgenieIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M12.696 19.45c-.49.361-.749.336-1.24-.026-2.375-1.704-4.57-3.641-6.042-5.655-.155-.207-.078-.49.155-.62l2.685-1.678q.35-.233.62.077c1.033 1.188 2.04 2.35 3.202 3.176 1.162-.826 2.17-1.988 3.202-3.176q.272-.31.62-.078l2.686 1.679c.232.13.31.413.155.62-1.472 2.014-3.667 3.95-6.043 5.68m-.62-7.411c2.118 0 3.874-1.73 3.874-3.848s-1.756-3.9-3.874-3.9c-2.117 0-3.873 1.757-3.873 3.9s1.704 3.848 3.873 3.848\"/>\n</svg>\n";
function OpsgenieIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Opsgenie' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eU1hA":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fbbfed8d33353a1d1068247c2724a1b9>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __OpsgenieLogoCS__
 *
 * A temporary component to represent the logo for Opsgenie.
 *
 */ parcelHelpers.export(exports, "OpsgenieLogoCS", ()=>OpsgenieLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 164 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M156.69 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zM143.39 5.95c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-3.68-8.98v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-22.92-4.26c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-18.64-.62v-1.53c-.98 2.02-2.82 3.07-5.18 3.07-4.05 0-6.07-3.47-6.07-7.97 0-4.32 2.12-7.97 6.38-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.58v13.95c0 4.51-2.12 7.54-7.6 7.54-2.58 0-3.99-.34-5.46-.83v-2.58c1.69.55 3.44.92 5.34.92 3.83 0 5.15-2.06 5.15-4.91m-8.68-6.44c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m-4.72 3.52c0 2.55-1.66 4.48-5.76 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.17-.89-1.84-3.8-2.55-3.4-.83-4.85-2.15-4.85-4.66 0-2.67 2.06-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-16.29-3.49c0-3.68-1.47-5.52-4.2-5.52-2.36 0-4.48 1.5-4.48 4.91v1.23c0 3.4 1.93 4.91 4.17 4.91 2.98 0 4.51-1.96 4.51-5.52m-3.8 7.97c-2.24 0-3.96-1.01-4.88-3.01v8.68h-2.64V10h2.64v2.76c.98-2.02 2.82-3.07 5.18-3.07 4.08 0 6.13 3.47 6.13 7.97 0 4.32-2.15 7.97-6.44 7.97m-20.11.01c-6.22 0-9.72-4.29-9.72-10.43 0-6.07 3.5-10.33 9.72-10.33 6.2 0 9.69 4.26 9.69 10.34 0 6.13-3.5 10.43-9.69 10.43m0-18.12c-4.97 0-6.96 3.53-6.96 7.7 0 4.26 1.99 7.79 6.96 7.79 4.94 0 6.93-3.53 6.93-7.79 0-4.17-1.99-7.7-6.93-7.7\"/>\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M16.905 25.684c-.638.47-.974.437-1.612-.033-3.088-2.216-5.942-4.734-7.855-7.352-.202-.269-.1-.638.201-.806l3.491-2.182q.454-.302.806.1c1.343 1.545 2.652 3.056 4.163 4.13 1.51-1.074 2.82-2.585 4.163-4.13q.352-.402.805-.1l3.491 2.182c.303.168.403.537.202.806-1.914 2.618-4.767 5.136-7.855 7.385m-.806-9.635c2.753 0 5.035-2.249 5.035-5.001s-2.282-5.07-5.035-5.07-5.036 2.283-5.036 5.07c0 2.786 2.216 5.001 5.036 5.001\"/>\n</svg>\n";
function OpsgenieLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Opsgenie',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hGf4e":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d74ea2627e6477794707eec4b225508e>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProjectsIcon", ()=>(0, _icon.ProjectsIcon));
parcelHelpers.export(exports, "ProjectsLogo", ()=>(0, _logo.ProjectsLogo));
parcelHelpers.export(exports, "ProjectsLogoCS", ()=>(0, _logoCs.ProjectsLogoCS));
var _icon = require("../ui/projects/icon");
var _logo = require("../ui/projects/logo");
var _logoCs = require("../ui/projects/logo-cs");

},{"../ui/projects/icon":"cqYi5","../ui/projects/logo":false,"../ui/projects/logo-cs":"lWpw5","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cqYi5":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ae4772cca6d16bf931ca75f21c37faa7>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ProjectsIcon__
 *
 * A temporary component to represent the icon for Projects.
 * @deprecated This component has been replaced by the component `ProjectsIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "ProjectsIcon", ()=>ProjectsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"m5.106 14.44 1.856-1.856-1.856-1.856L6.653 9.18h3.712l2.784-2.784h4.332v4.33l-2.785 2.785v3.712L13.15 18.77l-1.857-1.856-1.856 1.856-1.7-1.7 2.784-2.784-.928-.928-2.784 2.784zm10.209-4.331a1.094 1.094 0 1 1-1.547-1.546 1.094 1.094 0 0 1 1.547 1.546\" clip-rule=\"evenodd\"/>\n</svg>\n";
function ProjectsIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Projects' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"lWpw5":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::fc36f973ebccddbdcaa482f501359276>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __ProjectsLogoCS__
 *
 * A temporary component to represent the logo for Projects.
 *
 */ parcelHelpers.export(exports, "ProjectsLogoCS", ()=>ProjectsLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 145 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M144.54 21.16c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.17-.89-1.84-3.8-2.55-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.05-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-17.75-.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-6.66 1.99v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.47-.74-3.99 0-5.61 2.52-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55M99.43 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.2c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zM83.8 31.25v-2.36c.31.03.49.03.77.03 1.13 0 2.05-.49 2.05-1.87V10h2.64v17.36c0 2.82-1.59 4.02-4.11 4.02-.67 0-1.13-.06-1.35-.12m2.3-25.3c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84M76.07 25.64c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M62.3 16.29v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93m-5-4.4c0 4.39-2.45 6.84-7.48 6.84H45.8v6.59h-2.76V5.19h6.78c5.03 0 7.48 2.58 7.48 6.72m-7.79 4.2c3.56.12 4.94-1.56 4.94-4.14 0-2.45-1.38-4.14-4.94-4.14H45.8v8.28z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"m6.152 19.486 2.651-2.652-2.651-2.651 2.21-2.21h5.303l3.977-3.977h6.187v6.187l-3.977 3.977v5.304l-2.21 2.21-2.652-2.652-2.651 2.651-2.429-2.428 3.978-3.978-1.326-1.325-3.978 3.977zM20.736 13.3a1.562 1.562 0 1 1-2.21-2.21 1.562 1.562 0 0 1 2.21 2.21\" clip-rule=\"evenodd\"/>\n</svg>\n";
function ProjectsLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Projects',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6susR":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::435c88ade8f0151bd4df73013ba79c8c>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RovoIcon", ()=>(0, _icon.RovoIcon));
parcelHelpers.export(exports, "RovoLogo", ()=>(0, _logo.RovoLogo));
parcelHelpers.export(exports, "RovoLogoCS", ()=>(0, _logoCs.RovoLogoCS));
var _icon = require("../ui/rovo/icon");
var _logo = require("../ui/rovo/logo");
var _logoCs = require("../ui/rovo/logo-cs");

},{"../ui/rovo/icon":"bB7PO","../ui/rovo/logo":false,"../ui/rovo/logo-cs":"8K8YO","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bB7PO":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::07c05c6e89f5723f7d7ed853987d71b5>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __RovoIcon__
 *
 * A temporary component to represent the icon for Rovo.
 * @deprecated This component has been replaced by the component `RovoIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "RovoIcon", ()=>RovoIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M11.057 5.257a1.57 1.57 0 0 1 1.539.015l4.621 2.668c.484.279.783.797.783 1.354v5.336a1.56 1.56 0 0 1-.782 1.355l-3.474 2.005a2 2 0 0 0 .12-.691v-5.337c0-.733-.39-1.409-1.026-1.774l-2.59-1.495V6.626q.001-.246.074-.473c.117-.364.366-.68.707-.877z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M9.881 5.94 6.408 7.945A1.56 1.56 0 0 0 5.625 9.3v5.337c0 .557.3 1.075.783 1.354l4.621 2.668c.475.274 1.06.279 1.539.015l.027-.019a1.57 1.57 0 0 0 .781-1.35v-2.067l-2.589-1.495a2.05 2.05 0 0 1-1.026-1.775V6.631a2 2 0 0 1 .12-.691\"/>\n</svg>\n";
function RovoIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Rovo' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8K8YO":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::62f4cdf442958d3fb4ff4267e130c5a5>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __RovoLogoCS__
 *
 * A temporary component to represent the logo for Rovo.
 *
 */ parcelHelpers.export(exports, "RovoLogoCS", ()=>RovoLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 106 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M98.36 25.64c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M84.34 25.33h-3.53L74.87 10h2.76l4.97 13.1L87.53 10h2.76zm-17.46.31c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M49.84 7.82h-4.05v7.36h4.05c3.59 0 4.69-1.38 4.69-3.68 0-2.18-1.13-3.68-4.69-3.68m7.45 3.62c0 3.04-1.29 5.09-3.96 5.95l4.94 7.94h-3.25l-4.44-7.51H45.8v7.51h-2.76V5.19h7.12c4.81 0 7.15 2.39 7.15 6.26\"/>\n    <path fill=\"var(--tile-color,#1868db)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M15.013 6.281a2.26 2.26 0 0 1 2.222.021l6.674 3.854a2.26 2.26 0 0 1 1.131 1.956v7.707c0 .809-.43 1.553-1.13 1.956l-5.018 2.896q.017-.046.032-.093c.093-.289.142-.594.142-.906v-7.707a2.95 2.95 0 0 0-1.481-2.563l-3.74-2.158V8.258c0-.235.036-.465.105-.682.17-.527.529-.983 1.021-1.267h.002z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"m13.314 7.267-5.017 2.896a2.25 2.25 0 0 0-1.13 1.956v7.707c0 .806.432 1.553 1.13 1.956l6.675 3.854c.686.396 1.53.403 2.222.02l.04-.026c.493-.284.853-.74 1.023-1.267a2.3 2.3 0 0 0 .105-.683v-2.986l-3.74-2.158a2.96 2.96 0 0 1-1.482-2.563V8.266a3 3 0 0 1 .174-1\"/>\n</svg>\n";
function RovoLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Rovo',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5nrXh":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d9b2ba5e011c024263d6b5588dbd6fda>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SearchIcon", ()=>(0, _icon.SearchIcon));
parcelHelpers.export(exports, "SearchLogo", ()=>(0, _logo.SearchLogo));
parcelHelpers.export(exports, "SearchLogoCS", ()=>(0, _logoCs.SearchLogoCS));
var _icon = require("../ui/search/icon");
var _logo = require("../ui/search/logo");
var _logoCs = require("../ui/search/logo-cs");

},{"../ui/search/icon":"9Y3Zj","../ui/search/logo":false,"../ui/search/logo-cs":"29JvZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9Y3Zj":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::71c7de2e30885b9e09669c8ade78e25c>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __SearchIcon__
 *
 * A temporary component to represent the icon for Search.
 * @deprecated This component has been replaced by the component `SearchIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "SearchIcon", ()=>SearchIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M5 10.688a5.69 5.69 0 0 0 5.697 5.687c1.01 0 1.958-.262 2.78-.723L16.832 19 19 16.834l-3.347-3.341c.471-.828.74-1.785.74-2.806A5.69 5.69 0 0 0 10.697 5 5.69 5.69 0 0 0 5 10.688m2.191 0c0 1.932 1.57 3.5 3.506 3.5a3.503 3.503 0 0 0 3.505-3.5c0-1.933-1.57-3.5-3.505-3.5a3.503 3.503 0 0 0-3.506 3.5\" clip-rule=\"evenodd\"/>\n</svg>\n";
function SearchIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Search' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"29JvZ":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::61358862951418a6c20d332ec9e5bc3e>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __SearchLogoCS__
 *
 * A temporary component to represent the logo for Search.
 *
 */ parcelHelpers.export(exports, "SearchLogoCS", ()=>SearchLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 130 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M128.82 16.35v8.99h-2.64v-8.53c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V3.59h2.64v8.96c1.01-1.81 2.85-2.85 5.06-2.85 3.44 0 5.34 2.33 5.34 6.66m-16.04 6.21v2.36c-.92.49-2.33.71-3.74.71-5.46 0-8-3.31-8-8 0-4.63 2.55-7.94 8-7.94 1.38 0 2.45.18 3.65.74v2.45c-.98-.46-2.02-.74-3.47-.74-3.99 0-5.61 2.51-5.61 5.49s1.66 5.49 5.67 5.49c1.56 0 2.55-.21 3.5-.55m-18.23-6.29v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.68-5.43 3.93m-17.87 1.37c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10H88v15.33zM65.08 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.2c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-15.33-4.95c0 3.5-2.08 5.86-7.08 5.86-3.89 0-5.7-.77-7.27-1.56v-2.82c1.87.98 4.75 1.69 7.42 1.69 3.04 0 4.17-1.2 4.17-2.97 0-1.78-1.1-2.73-4.94-3.65-4.54-1.1-6.56-2.67-6.56-5.98 0-3.13 2.39-5.46 7.08-5.46 2.91 0 4.78.71 6.16 1.47v2.76c-2.02-1.16-4.2-1.53-6.29-1.53-2.64 0-4.2.92-4.2 2.76 0 1.66 1.29 2.48 4.84 3.37 4.26 1.07 6.66 2.45 6.66 6.07\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"M7.127 14.833a7.583 7.583 0 0 0 11.286 6.62l4.464 4.464 2.887-2.888-4.455-4.455a7.583 7.583 0 1 0-14.181-3.74m2.917 0a4.667 4.667 0 1 0 9.333 0 4.667 4.667 0 0 0-9.333 0\" clip-rule=\"evenodd\"/>\n</svg>\n";
function SearchLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Search',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1RUF7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::84ad2926b96c2d2d07efeca2c375d40e>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StatuspageIcon", ()=>(0, _icon.StatuspageIcon));
parcelHelpers.export(exports, "StatuspageLogo", ()=>(0, _logo.StatuspageLogo));
parcelHelpers.export(exports, "StatuspageLogoCS", ()=>(0, _logoCs.StatuspageLogoCS));
var _icon = require("../ui/statuspage/icon");
var _logo = require("../ui/statuspage/logo");
var _logoCs = require("../ui/statuspage/logo-cs");

},{"../ui/statuspage/icon":"eNvRO","../ui/statuspage/logo":false,"../ui/statuspage/logo-cs":"b3jy7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eNvRO":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::d9b6abfb98a7cc46c15cd5bb68394677>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __StatuspageIcon__
 *
 * A temporary component to represent the icon for Statuspage.
 * @deprecated This component has been replaced by the component `StatuspageIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "StatuspageIcon", ()=>StatuspageIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M12 9.796c-1.924 0-3.796.832-5.324 2.118q-.238.227-.475.227c-.132 0-.263-.076-.369-.202L3.908 9.771c-.105-.126-.158-.252-.158-.353 0-.151.08-.277.237-.429C6.307 7.023 9.127 5.914 12 5.914s5.693 1.109 8.013 3.075c.158.152.237.278.237.429 0 .1-.053.227-.158.353l-1.924 2.168c-.106.126-.238.202-.37.202q-.236 0-.474-.227c-1.529-1.286-3.4-2.118-5.324-2.118m0 8.118c-2.135 0-3.875-1.664-3.875-3.68 0-2.018 1.74-3.682 3.875-3.682s3.875 1.64 3.875 3.681-1.74 3.68-3.875 3.68\"/>\n</svg>\n";
function StatuspageIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Statuspage' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"b3jy7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ab0aec0fed561f9241cb75a80a219959>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __StatuspageLogoCS__
 *
 * A temporary component to represent the logo for Statuspage.
 *
 */ parcelHelpers.export(exports, "StatuspageLogoCS", ()=>StatuspageLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 192 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M184.96 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2h-11.19c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-18.64-.62v-1.53c-.98 2.02-2.82 3.07-5.18 3.07-4.05 0-6.07-3.46-6.07-7.97 0-4.32 2.12-7.97 6.38-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.58v13.95c0 4.51-2.12 7.54-7.61 7.54-2.58 0-3.99-.34-5.46-.83v-2.58c1.69.55 3.43.92 5.34.92 3.83 0 5.15-2.05 5.15-4.91m-8.68-6.44c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m-16.96.03c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-16.09-7.66c0-3.68-1.47-5.52-4.2-5.52-2.36 0-4.48 1.5-4.48 4.91v1.23c0 3.4 1.93 4.91 4.17 4.91 2.98 0 4.51-1.96 4.51-5.52m-3.8 7.97c-2.24 0-3.96-1.01-4.88-3v8.68h-2.64V10h2.64v2.76c.98-2.02 2.82-3.07 5.18-3.07 4.08 0 6.13 3.47 6.13 7.97 0 4.32-2.15 7.97-6.44 7.97m-10.55-4.47c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.05-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.68-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-27.61-2.18V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-7.16 1.59c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19H85V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-18.95-2.91c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zm-17.26-4.75c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-6.89-.8c0 3.5-2.08 5.86-7.08 5.86-3.89 0-5.7-.77-7.27-1.56v-2.82c1.87.98 4.75 1.69 7.42 1.69 3.04 0 4.17-1.2 4.17-2.97s-1.1-2.73-4.94-3.65c-4.54-1.1-6.56-2.67-6.56-5.98 0-3.13 2.39-5.46 7.08-5.46 2.91 0 4.78.71 6.16 1.47v2.76c-2.02-1.16-4.2-1.53-6.29-1.53-2.64 0-4.2.92-4.2 2.76 0 1.66 1.29 2.48 4.84 3.37 4.26 1.07 6.66 2.45 6.66 6.07\"/>\n    <path fill=\"var(--tile-color,#ffc716)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M15.896 13.196c-2.464 0-4.86 1.114-6.817 2.835q-.303.304-.607.304c-.169 0-.338-.102-.473-.27l-2.463-2.902c-.135-.17-.202-.338-.202-.473 0-.202.1-.371.303-.573C8.607 9.484 12.217 8 15.896 8c3.678 0 7.29 1.484 10.259 4.117.202.202.303.37.303.573 0 .135-.067.304-.202.473l-2.463 2.902c-.135.168-.304.27-.473.27q-.303 0-.607-.304c-1.958-1.721-4.353-2.835-6.817-2.835m0 10.867c-2.733 0-4.96-2.228-4.96-4.927 0-2.7 2.227-4.927 4.96-4.927s4.96 2.193 4.96 4.927-2.227 4.927-4.96 4.927\"/>\n</svg>\n";
function StatuspageLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Statuspage',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ewOSd":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::e10e6a55bc3bae409833416f01d6954f>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StudioIcon", ()=>(0, _icon.StudioIcon));
parcelHelpers.export(exports, "StudioLogo", ()=>(0, _logo.StudioLogo));
parcelHelpers.export(exports, "StudioLogoCS", ()=>(0, _logoCs.StudioLogoCS));
var _icon = require("../ui/studio/icon");
var _logo = require("../ui/studio/logo");
var _logoCs = require("../ui/studio/logo-cs");

},{"../ui/studio/icon":"9Ibrl","../ui/studio/logo":false,"../ui/studio/logo-cs":"3M4DR","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"9Ibrl":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::44318da2d694177bf3151a9c722c2f2d>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __StudioIcon__
 *
 * A temporary component to represent the icon for Studio.
 * @deprecated This component has been replaced by the component `StudioIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "StudioIcon", ()=>StudioIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M10.7 11.222V19h7.8v-7.778z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M14.6 7.609 10.05 5 5.5 7.609v5.217l3.64 2.087V9.667h5.46z\"/>\n</svg>\n";
function StudioIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Studio' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3M4DR":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::7aef26ead01c8bad672b6936bd93461c>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __StudioLogoCS__
 *
 * A temporary component to represent the logo for Studio.
 *
 */ parcelHelpers.export(exports, "StudioLogoCS", ()=>StudioLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 124 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M116.71 25.64c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49m-13.48-6.2c0-1.16.77-1.84 1.84-1.84s1.84.68 1.84 1.84-.77 1.84-1.84 1.84-1.84-.67-1.84-1.84m.49 19.38V10h2.64v15.33zm-15.3-7.66c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V3.59h2.64v21.74zm-27.41-6.34V10h2.64v9.26c0 2.76 1.1 3.99 3.62 3.99 2.45 0 4.14-1.62 4.14-4.72V10h2.64v15.33h-2.64v-2.51c-.98 1.81-2.79 2.82-4.84 2.82-3.53 0-5.55-2.42-5.55-6.65m-7.17 1.59c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-6.89-.8c0 3.5-2.08 5.86-7.08 5.86-3.89 0-5.7-.77-7.27-1.56v-2.82c1.87.98 4.75 1.69 7.42 1.69 3.04 0 4.17-1.2 4.17-2.97 0-1.78-1.1-2.73-4.94-3.65-4.54-1.1-6.56-2.67-6.56-5.98 0-3.13 2.39-5.46 7.08-5.46 2.91 0 4.78.71 6.16 1.47v2.76c-2.02-1.16-4.2-1.53-6.29-1.53-2.64 0-4.2.92-4.2 2.76 0 1.66 1.29 2.48 4.84 3.37 4.26 1.07 6.66 2.45 6.66 6.07\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M14.125 14.125V24.75H24.75V14.125z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M19.75 9.594 13.5 6 7.25 9.594v7.187l5 2.875V12.25h7.5z\"/>\n</svg>\n";
function StudioLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Studio',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"j9RtV":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::4637e9a73be347bad42fd03433edb32f>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TalentIcon", ()=>(0, _icon.TalentIcon));
parcelHelpers.export(exports, "TalentLogo", ()=>(0, _logo.TalentLogo));
parcelHelpers.export(exports, "TalentLogoCS", ()=>(0, _logoCs.TalentLogoCS));
var _icon = require("../ui/talent/icon");
var _logo = require("../ui/talent/logo");
var _logoCs = require("../ui/talent/logo-cs");

},{"../ui/talent/icon":"5zeI8","../ui/talent/logo":false,"../ui/talent/logo-cs":"areZm","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5zeI8":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::46e5325ca16a481422af5c181121030b>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TalentIcon__
 *
 * A temporary component to represent the icon for Talent.
 * @deprecated This component has been replaced by the component `TalentIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "TalentIcon", ()=>TalentIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" fill-rule=\"evenodd\" d=\"m9.297 8.753 2.277-5.073h.858l2.277 5.073 5.529.598.265.816-4.121 3.734 1.14 5.442-.695.505-4.824-2.766-4.824 2.766-.695-.505 1.14-5.442-4.121-3.733.265-.817zm.777 6.415v-.678a1.857 1.857 0 0 1 3.715 0v.613a3.6 3.6 0 0 1-1.886.548h-.053a3.6 3.6 0 0 1-1.776-.483m1.858-3.134a1.393 1.393 0 1 0 0-2.786 1.393 1.393 0 0 0 0 2.786\" clip-rule=\"evenodd\"/>\n</svg>\n";
function TalentIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Talent' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"areZm":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::f026b75ebcffb163ca374d36e38a6961>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TalentLogoCS__
 *
 * A temporary component to represent the logo for Talent.
 *
 */ parcelHelpers.export(exports, "TalentLogoCS", ()=>TalentLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 122 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M117.1 20.58c0 1.35.8 2.27 2.42 2.27.61 0 1.2-.12 1.66-.21v2.55c-.46.12-.98.25-1.78.25-3.28 0-4.88-1.93-4.88-4.78v-8.19h-2.48V10h2.48V6.75h2.58V10h4.08v2.45h-4.08zm-7.33-4.23v8.99h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.51c.98-1.81 2.79-2.82 4.85-2.82 3.53 0 5.55 2.42 5.55 6.66m-22.92-4.26c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2H82.4c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-14.47.57c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zm-20.75-7.63c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.47-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zM40.28 5.19h15.09v2.64H49.2v17.51h-2.76V7.82h-6.16z\"/>\n    <path fill=\"var(--tile-color,#fb9700)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"m16.577 4.907 3.035 6.763 7.372.797.354 1.09-5.495 4.977 1.52 7.257-.927.672-6.431-3.687-6.433 3.687-.926-.672 1.52-7.257-5.495-4.978.353-1.089 7.372-.797 3.035-6.763zm-.668 11.936a2.476 2.476 0 0 0-2.476 2.477v.904a4.8 4.8 0 0 0 2.369.644h.07a4.8 4.8 0 0 0 2.514-.73v-.818a2.477 2.477 0 0 0-2.477-2.477m0-4.511a1.857 1.857 0 1 0 0 3.714 1.857 1.857 0 0 0 0-3.714\"/>\n</svg>\n";
function TalentLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Talent',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"02xTx":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::34666ed04b3b8c4b0b7908d61c974a97>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TeamsIcon", ()=>(0, _icon.TeamsIcon));
parcelHelpers.export(exports, "TeamsLogo", ()=>(0, _logo.TeamsLogo));
parcelHelpers.export(exports, "TeamsLogoCS", ()=>(0, _logoCs.TeamsLogoCS));
var _icon = require("../ui/teams/icon");
var _logo = require("../ui/teams/logo");
var _logoCs = require("../ui/teams/logo-cs");

},{"../ui/teams/icon":"ctVu7","../ui/teams/logo":false,"../ui/teams/logo-cs":"2t0cj","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ctVu7":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::46ca108d2593b6c24c5abbf971640ec4>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TeamsIcon__
 *
 * A temporary component to represent the icon for Teams.
 * @deprecated This component has been replaced by the component `TeamsIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "TeamsIcon", ()=>TeamsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M8.06 11.25a2.63 2.63 0 1 0 0-5.25 2.63 2.63 0 0 0 0 5.25m7.88 0a2.63 2.63 0 1 0 0-5.25 2.63 2.63 0 0 0 0 5.25m.17 1.31a2.89 2.89 0 0 1 2.89 2.9V18h-7.22l1.66-3.67a2.89 2.89 0 0 1 2.67-1.77M5 15.63V18h4.81l1.31-2.81a2.63 2.63 0 0 0-2.62-2.63h-.44A3.06 3.06 0 0 0 5 15.63\"/>\n</svg>\n";
function TeamsIcon(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Teams' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2t0cj":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::ca52a627ea550c7166e46bdecd782a9b>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TeamsLogoCS__
 *
 * A temporary component to represent the logo for Teams.
 *
 */ parcelHelpers.export(exports, "TeamsLogoCS", ()=>TeamsLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 127 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M126.58 21.16c0 2.55-1.66 4.48-5.77 4.48-2.3 0-4.17-.52-5.34-1.13v-2.79c1.32.77 3.53 1.5 5.46 1.5 2.02 0 3.07-.83 3.07-2.02 0-1.16-.89-1.84-3.8-2.54-3.4-.83-4.84-2.15-4.84-4.66 0-2.67 2.05-4.29 5.55-4.29 1.99 0 3.8.49 4.94 1.1v2.73c-1.84-.92-3.34-1.41-4.97-1.41-1.93 0-2.97.67-2.97 1.87 0 1.07.74 1.75 3.56 2.42 3.4.83 5.12 2.09 5.12 4.75m-24.66-4.36v8.53h-2.64v-9.26c0-2.76-1.1-3.99-3.62-3.99-2.45 0-4.14 1.63-4.14 4.72v8.53h-2.64V10h2.64v2.52c.98-1.81 2.79-2.82 4.85-2.82 2.61 0 4.39 1.32 5.15 3.74.86-2.36 2.91-3.74 5.46-3.74 3.44 0 5.34 2.33 5.34 6.66v8.99h-2.64v-8.52c0-3.16-1.1-4.72-3.62-4.72-2.45 0-4.14 1.63-4.14 4.72m-28.33.84c0 3.68 1.47 5.52 4.2 5.52 2.36 0 4.48-1.5 4.48-4.91v-1.23c0-3.4-1.93-4.91-4.17-4.91-2.97 0-4.51 1.96-4.51 5.52m8.68 7.67v-2.76c-.98 2.02-2.82 3.07-5.18 3.07-4.08 0-6.13-3.46-6.13-7.97 0-4.32 2.15-7.97 6.44-7.97 2.24 0 3.96 1.01 4.88 3.01V10h2.64v15.33zM61.99 12.08c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.68-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2H57.55c.37 2.61 2.06 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zM40.28 5.19h15.09v2.64H49.2v17.51h-2.76V7.82h-6.16z\"/>\n    <path fill=\"var(--tile-color,#dddee1)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, #101214)\" d=\"M10.75 14.83a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m10.5 0a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.23 1.75a3.86 3.86 0 0 1 3.86 3.86v3.72h-9.62l2.21-5.23a3.86 3.86 0 0 1 3.55-2.35M6.67 20.67v3.5h6.42l1.75-4.08a3.5 3.5 0 0 0-3.5-3.5h-.58a4.08 4.08 0 0 0-4.08 4.08\"/>\n</svg>\n";
function TeamsLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Teams',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jHNqy":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::71ccbb8a9dbb7de1c1e23da9fba1426d>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TrelloIcon", ()=>(0, _icon.TrelloIcon));
parcelHelpers.export(exports, "TrelloLogo", ()=>(0, _logo.TrelloLogo));
parcelHelpers.export(exports, "TrelloLogoCS", ()=>(0, _logoCs.TrelloLogoCS));
var _icon = require("../ui/trello/icon");
var _logo = require("../ui/trello/logo");
var _logoCs = require("../ui/trello/logo-cs");

},{"../ui/trello/icon":"dzg2L","../ui/trello/logo":false,"../ui/trello/logo-cs":"4kIte","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dzg2L":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::05385a6d8a6e0950a657f507588ba895>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TrelloIcon__
 *
 * A temporary component to represent the icon for Trello.
 * @deprecated This component has been replaced by the component `TrelloIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */ parcelHelpers.export(exports, "TrelloIcon", ()=>TrelloIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _iconWrapper = require("../../utils/icon-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color,#1558bc)\" d=\"M0 6a6 6 0 0 1 6-6h12a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M9.39 18.23a.95.95 0 0 0 .95-.95V5.38a.95.95 0 0 0-.95-.95H5.38a.95.95 0 0 0-.95.95v11.91c0 .52.42.95.95.95zm9.23-5.46a.95.95 0 0 0 .95-.95V5.38a.95.95 0 0 0-.95-.95h-4.01a.95.95 0 0 0-.95.95v6.44c0 .52.42.95.95.95z\"/>\n</svg>\n";
var customThemeSvg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--themed-icon-color, currentcolor)\" d=\"M18 0a6 6 0 0 1 6 6v12a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6V6a6 6 0 0 1 6-6zM5.379 4.43a.95.95 0 0 0-.948.949v11.907c0 .523.424.948.948.948H9.39a.95.95 0 0 0 .947-.948V5.38a.95.95 0 0 0-.947-.948zm9.23 0a.95.95 0 0 0-.947.949v6.44c0 .523.423.948.947.949h4.012a.95.95 0 0 0 .948-.949V5.38a.95.95 0 0 0-.948-.948z\"/>\n</svg>\n";
function TrelloIcon(_ref) {
    var iconColor = _ref.iconColor, size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Trello' : _ref$label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _iconWrapper.IconWrapper), {
        svg: svg,
        customThemeSvg: customThemeSvg,
        iconColor: iconColor,
        label: label,
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/icon-wrapper":"j6gnN","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"4kIte":[function(require,module,exports,__globalThis) {
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::46ba30990b74b0bd29f9f410ece6d0d1>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * __TrelloLogoCS__
 *
 * A temporary component to represent the logo for Trello.
 *
 */ parcelHelpers.export(exports, "TrelloLogoCS", ()=>TrelloLogoCS);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _logoWrapper = require("../../utils/logo-wrapper");
// `height` is set to 100% to allow the SVG to scale with the parent element
// The text color is set to "currentColor" to allow the SVG to inherit the color set by the parent based on the theme.
var svg = "<svg height=\"100%\" viewBox=\"0 0 113 32\">\n    <path fill=\"var(--text-color, #1e1f21)\" d=\"M104.97 25.64c-4.6 0-7.3-3.4-7.3-8s2.7-7.94 7.3-7.94c4.57 0 7.24 3.34 7.24 7.94s-2.67 8-7.24 8m0-13.49c-3.28 0-4.72 2.58-4.72 5.49s1.44 5.55 4.72 5.55c3.25 0 4.66-2.64 4.66-5.55s-1.41-5.49-4.66-5.49M96.21 25.3c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zm-8 0c-.21.06-.67.12-1.35.12-2.51 0-4.11-1.19-4.11-4.02V3.59h2.64V21.1c0 1.38.92 1.87 2.06 1.87.28 0 .46 0 .77-.03zM72.86 12.09c-2.79 0-4.2 1.81-4.48 4.48h8.56c-.15-2.85-1.44-4.48-4.08-4.48m5.89 12.64c-1.26.67-3.19.92-4.75.92-5.73 0-8.25-3.31-8.25-8 0-4.63 2.58-7.94 7.24-7.94 4.72 0 6.62 3.28 6.62 7.94v1.2H68.42c.37 2.61 2.05 4.29 5.67 4.29 1.78 0 3.28-.34 4.66-.83zm-19.48-8.44v9.05h-2.58V10h2.58v2.7c.89-1.81 2.42-3.1 5.43-2.91v2.58c-3.37-.34-5.43.67-5.43 3.93M40.28 5.19h15.09v2.64H49.2v17.51h-2.76V7.82h-6.16z\"/>\n    <path fill=\"var(--tile-color,#1558bc)\" d=\"M0 8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8z\"/>\n    <path fill=\"var(--icon-color, white)\" d=\"M12.9 24c.62 0 1.13-.49 1.13-1.1V9.1c0-.61-.5-1.1-1.13-1.1H8.13C7.51 8 7 8.49 7 9.1v13.8c0 .61.5 1.1 1.13 1.1zm10.97-6.34c.62 0 1.13-.49 1.13-1.1V9.1c0-.61-.5-1.1-1.13-1.1H19.1c-.62 0-1.13.49-1.13 1.1v7.47c0 .61.5 1.1 1.13 1.1z\"/>\n</svg>\n";
function TrelloLogoCS(_ref) {
    var size = _ref.size, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance, label = _ref.label, testId = _ref.testId;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _logoWrapper.LogoWrapper), {
        svg: svg,
        label: label || 'Trello',
        appearance: appearance,
        size: size,
        testId: testId
    });
}

},{"react":"jMk1U","../../utils/logo-wrapper":"lubTg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cfB6H":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdminIcon", ()=>(0, _icon.AtlassianAdminIcon));
parcelHelpers.export(exports, "AtlassianAdminLogo", ()=>(0, _logo.AtlassianAdminLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"7YdHY","./logo":"ewWFv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7YdHY":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdminIcon", ()=>AtlassianAdminIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\">\n      <path\n        d=\"M27.545 24.378 16.96 3.208c-.208-.458-.417-.541-.667-.541-.208 0-.458.083-.708.5-1.5 2.375-2.167 5.125-2.167 8 0 4.001 2.042 7.752 5.042 13.794.334.667.584.792 1.167.792h7.335c.541 0 .833-.208.833-.625 0-.208-.042-.333-.25-.75M12.168 14.377c-.834-1.25-1.084-1.334-1.292-1.334s-.333.083-.708.834L4.875 24.46c-.167.334-.208.459-.208.625 0 .334.291.667.916.667h7.46c.5 0 .875-.416 1.083-1.208.25-1 .334-1.876.334-2.917 0-2.917-1.292-5.751-2.292-7.251z\"\n        fill=\"".concat(colors.iconColor, "\"\n      />\n    </svg>");
};
var AtlassianAdminIcon = function AtlassianAdminIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Admin' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        label: label,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8AJoc":[function(require,module,exports,__globalThis) {
/**
 * These are the default parameters for LogoProps if the user does not specify values.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultLogoParams", ()=>defaultLogoParams);
parcelHelpers.export(exports, "legacyDefaultLogoParams", ()=>legacyDefaultLogoParams);
var defaultLogoParams = {
    iconColor: 'inherit',
    label: '',
    size: 'medium',
    textColor: 'currentColor'
};
var legacyDefaultLogoParams = {
    iconGradientStart: 'inherit',
    iconGradientStop: 'inherit'
}; /**
 * The props for the <Wrapper /> that takes the svg and turns it into a component.
 */ 

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"F9EHX":[function(require,module,exports,__globalThis) {
/* wrapper.tsx generated by @compiled/babel-plugin v0.36.1 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _runtime = require("@compiled/react/runtime");
var _excluded = [
    "label",
    "svg",
    "size",
    "appearance",
    "iconColor",
    "textColor",
    "testId"
];
var CSS_VAR_COLOR = '--logo-color';
var CSS_VAR_FILL = '--logo-fill';
var styles = {
    root: "_1e0c1o8l _kqswh2mm _syaz1vry _lswu1xf6 _vwz4kb7n _uiztglyw _o5724jg8 _zbji1osq _3se11kw7",
    stop: "_vc881r31",
    xxsmall: "_4t3i7vkz",
    xsmall: "_4t3igktf",
    small: "_4t3i1tcg",
    medium: "_4t3izwfg",
    large: "_4t3i1ylp",
    xlarge: "_4t3ickbl"
};
/**
 * __Wrapper__
 *
 * An internal component used by `@atlaskit/logo` to render logo SVGs with correct styles.
 */ var Wrapper = function Wrapper(_ref) {
    var label = _ref.label, svg = _ref.svg, size = _ref.size, appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor, userDefinedTestId = _ref.testId, rest = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
    // Only required for old logos with gradients, which set gradient values to `inherit` when no appearance is provided
    var shouldApplyStopColor = appearance === undefined;
    var testId = userDefinedTestId && "".concat(userDefinedTestId, "--wrapper");
    return /*#__PURE__*/ _react.createElement("span", (0, _extendsDefault.default)({
        "data-testid": testId,
        style: (0, _definePropertyDefault.default)((0, _definePropertyDefault.default)({}, CSS_VAR_COLOR, iconColor), CSS_VAR_FILL, textColor),
        "aria-label": label ? label : undefined,
        role: label ? 'img' : undefined,
        dangerouslySetInnerHTML: {
            __html: svg
        }
    }, rest, {
        className: (0, _runtime.ax)([
            styles.root,
            shouldApplyStopColor && styles.stop,
            size && styles[size]
        ])
    }));
};
exports.default = Wrapper;

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/defineProperty":"azbUC","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@compiled/react/runtime":"jw5yq","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jw5yq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CC", ()=>(0, _index.CC));
parcelHelpers.export(exports, "CS", ()=>(0, _index.CS));
parcelHelpers.export(exports, "ax", ()=>(0, _index.ax));
parcelHelpers.export(exports, "ac", ()=>(0, _index.ac));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _index.clearAcCache));
parcelHelpers.export(exports, "ix", ()=>(0, _index.ix));
var _index = require("./runtime/index");

},{"./runtime/index":"dH0QE","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dH0QE":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CS", ()=>(0, _styleDefault.default));
parcelHelpers.export(exports, "CC", ()=>(0, _styleCacheDefault.default));
parcelHelpers.export(exports, "ax", ()=>(0, _axDefault.default));
parcelHelpers.export(exports, "ac", ()=>(0, _acDefault.default));
parcelHelpers.export(exports, "clearAcCache", ()=>(0, _ac.clearCache));
parcelHelpers.export(exports, "ix", ()=>(0, _cssCustomPropertyDefault.default));
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _styleCache = require("./style-cache");
var _styleCacheDefault = parcelHelpers.interopDefault(_styleCache);
var _ax = require("./ax");
var _axDefault = parcelHelpers.interopDefault(_ax);
var _ac = require("./ac");
var _acDefault = parcelHelpers.interopDefault(_ac);
var _cssCustomProperty = require("./css-custom-property");
var _cssCustomPropertyDefault = parcelHelpers.interopDefault(_cssCustomProperty);

},{"./style":false,"./style-cache":false,"./ax":"3S3r1","./ac":false,"./css-custom-property":false,"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3S3r1":[function(require,module,exports,__globalThis) {
/**
 * This length includes the underscore,
 * e.g. `"_1s4A"` would be a valid atomic group hash.
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>ax);
const ATOMIC_GROUP_LENGTH = 5;
function ax(classNames) {
    // Shortcut: nothing to do
    if (!classNames.length) return;
    // Shortcut: don't need to do anything if we only have a single classname
    if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
    !classNames[0].includes(' ')) return classNames[0];
    // Using an object rather than a `Map` as it performed better in our benchmarks.
    // Would be happy to move to `Map` if it proved to be better under real conditions.
    const map = {};
    // Note: using loops to minimize iterations over the collection
    for (const value of classNames){
        // Exclude all falsy values, which leaves us with populated strings
        if (!value) continue;
        // a `value` can contain multiple classnames
        const list = value.split(' ');
        for (const className of list){
            /**
             * For atomic style classnames: the `key` is the `group`
             *
             * - Later atomic classnames with the same `group` will override earlier ones
             *   (which is what we want).
             * - Assumes atomic classnames are the only things that start with `_`
             * - Could use a regex to ensure that atomic classnames are structured how we expect,
             *   but did not add that for now as it did slow things down a bit.
             *
             * For other classnames: the `key` is the whole classname
             * - Okay to remove duplicates as doing so does not impact specificity
             *
             * */ const key = className.startsWith('_') ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
            map[key] = className;
        }
    }
    /**
     * We are converting the `map` into a string.
     *
     * The simple way to do this would be `Object.values(map).join(' ')`.
     * However, the approach below performs 10%-20% better in benchmarks.
     *
     * For `ax()` it feels right to squeeze as much runtime performance out as we can.
     */ let result = '';
    for(const key in map)result += map[key] + ' ';
    // If we have an empty string, then our `map` was empty.
    if (!result) return;
    // remove last " " from the result (we added " " at the end of every value)
    return result.trimEnd();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gqiyi":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getColorsFromAppearanceOldLogos", ()=>getColorsFromAppearanceOldLogos);
parcelHelpers.export(exports, "getColorsFromAppearance", ()=>getColorsFromAppearance);
parcelHelpers.export(exports, "getColorsForLoom", ()=>getColorsForLoom);
var _colors = require("@atlaskit/theme/colors");
var getColorsFromAppearanceOldLogos = function getColorsFromAppearanceOldLogos(appearance, colorMode) {
    var iconGradientStart, iconGradientStop, iconColor, textColor, atlassianLogoTextColor;
    switch(appearance){
        case 'brand':
            iconGradientStart = (0, _colors.B400);
            iconGradientStop = (0, _colors.B200);
            iconColor = (0, _colors.B200);
            textColor = "var(--ds-text, ".concat((0, _colors.N800), ")");
            // This is only used for the top level Atlassian wordmark (see AtlassianLogo
            // or AtlassianStartLogo for example), and is only different for the Brand
            // appearance - a bold brand color. For other appearances,
            // atlassianLogoTextColor is the same as textColor.
            atlassianLogoTextColor = (0, _colors.B400);
            break;
        case 'neutral':
            iconGradientStart = (0, _colors.N600);
            iconGradientStop = (0, _colors.N100);
            iconColor = (0, _colors.N100);
            textColor = (0, _colors.N400);
            atlassianLogoTextColor = (0, _colors.N400);
            break;
        case 'inverse':
            iconGradientStart = '#FFFFFF66';
            iconGradientStop = '#FFFFFF';
            iconColor = '#FFFFFF';
            textColor = '#FFFFFF';
            atlassianLogoTextColor = '#FFFFFF';
            break;
    }
    if (colorMode === 'dark' && appearance === 'inverse') {
        iconGradientStart = '#161A1D66';
        iconGradientStop = '#161A1D';
        iconColor = '#161A1D';
        textColor = '#161A1D';
        atlassianLogoTextColor = '#161A1D';
    }
    return {
        iconGradientStart: iconGradientStart,
        iconGradientStop: iconGradientStop,
        iconColor: iconColor,
        textColor: textColor,
        atlassianLogoTextColor: atlassianLogoTextColor
    };
};
var getColorsFromAppearance = function getColorsFromAppearance(appearance, colorMode) {
    var iconColor, textColor, atlassianLogoTextColor;
    if (colorMode === 'dark') switch(appearance){
        case 'brand':
            iconColor = '#357DE8';
            textColor = '#E2E3E4';
            atlassianLogoTextColor = '#357DE8';
            break;
        case 'neutral':
            iconColor = '#96999E';
            textColor = '#BFC1C4';
            atlassianLogoTextColor = '#96999E';
            break;
        case 'inverse':
            iconColor = '#101214';
            textColor = '#101214';
            atlassianLogoTextColor = '#101214';
            break;
    }
    else switch(appearance){
        case 'brand':
            iconColor = '#1868DB';
            textColor = '#101214';
            atlassianLogoTextColor = '#1868DB';
            break;
        case 'neutral':
            iconColor = '#6C6F77';
            textColor = '#3B3D42';
            atlassianLogoTextColor = '#6C6F77';
            break;
        case 'inverse':
            iconColor = (0, _colors.N0);
            textColor = (0, _colors.N0);
            atlassianLogoTextColor = (0, _colors.N0);
            break;
    }
    return {
        iconColor: iconColor,
        textColor: textColor,
        atlassianLogoTextColor: atlassianLogoTextColor
    };
};
var getColorsForLoom = function getColorsForLoom(appearance, colorMode) {
    var iconColor = getColorsFromAppearance(appearance, colorMode).iconColor;
    var textColor = getColorsFromAppearance(appearance, colorMode).textColor;
    if (colorMode === 'dark') switch(appearance){
        case 'brand':
            iconColor = '#625DF5';
            textColor = '#EFF0FF';
            break;
    }
    else switch(appearance){
        case 'brand':
            iconColor = '#625DF5';
            textColor = '#252434';
            break;
    }
    return {
        iconColor: iconColor,
        textColor: textColor
    };
};

},{"@atlaskit/theme/colors":"iIuwU","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ewWFv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdminLogo", ()=>AtlassianAdminLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg\n      fill=\"none\"\n      height=\"32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 295 32\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M294.31 16.348v8.985h-2.637v-9.261c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.626-4.14 4.723v8.525h-2.637V10h2.637v2.515c.982-1.81 2.791-2.822 4.846-2.822 3.526 0 5.55 2.423 5.55 6.655M274.168 5.952c0-1.165.766-1.84 1.84-1.84 1.073 0 1.84.675 1.84 1.84s-.767 1.84-1.84 1.84c-1.074 0-1.84-.675-1.84-1.84m.49 19.381V10h2.638v15.333zm-14.069-8.525v8.525h-2.637v-9.261c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.626-4.14 4.723v8.525h-2.637V10h2.637v2.515c.981-1.81 2.791-2.822 4.845-2.822 2.607 0 4.386 1.319 5.152 3.742.859-2.362 2.914-3.742 5.459-3.742 3.435 0 5.336 2.331 5.336 6.655v8.985h-2.637v-8.525c0-3.159-1.104-4.723-3.619-4.723-2.453 0-4.14 1.626-4.14 4.723m-28.327.859c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.907v-1.227c0-3.404-1.932-4.906-4.171-4.906-2.974 0-4.508 1.962-4.508 5.52m8.679 7.666v-2.76c-.981 2.024-2.821 3.067-5.183 3.067-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.974 6.44-7.974 2.239 0 3.956 1.012 4.876 3.006V3.59h2.637v21.742zm-22.021-4.017c-1.533 0-3.097-.184-4.814-.521l-1.687 4.538h-3.097l7.942-20.148h3.496l7.943 20.148h-3.097l-1.687-4.569c-1.809.368-3.373.552-4.999.552m0-2.453c1.288 0 2.607-.154 4.171-.399l-4.079-11.04-4.078 11.07c1.502.246 2.76.369 3.986.369\"\n        fill=\"".concat(colors.textColor, "\"\n      />\n      <path\n        d=\"M107.447 10.828c0 2.972 1.345 5.308 6.795 6.37 3.185.707 3.893 1.203 3.893 2.264 0 1.062-.708 1.699-2.973 1.699-2.619 0-5.733-.92-7.785-2.123v4.812c1.627.779 3.751 1.699 7.785 1.699 5.662 0 7.856-2.548 7.856-6.228m0 .07c0-3.538-1.84-5.166-7.148-6.299-2.902-.637-3.61-1.274-3.61-2.194 0-1.132 1.062-1.628 2.973-1.628 2.335 0 4.6.708 6.794 1.7V6.368c-1.557-.779-3.892-1.345-6.653-1.345-5.237 0-7.927 2.265-7.927 5.945m72.475-5.803v20.172h4.318V9.978l1.769 4.034 6.087 11.325h5.379V5.165h-4.247v13.023l-1.628-3.822-4.883-9.2zm-27.319 0h-4.671v20.172h4.671zm-10.05 14.155c0-3.538-1.841-5.166-7.149-6.298-2.902-.637-3.609-1.274-3.609-2.194 0-1.133 1.061-1.628 2.972-1.628 2.336 0 4.601.707 6.795 1.698v-4.6c-1.557-.779-3.893-1.345-6.653-1.345-5.238 0-7.927 2.265-7.927 5.945 0 2.973 1.345 5.309 6.794 6.37 3.185.708 3.893 1.203 3.893 2.265s-.708 1.699-2.973 1.699c-2.618 0-5.733-.92-7.785-2.124v4.813c1.628.779 3.751 1.699 7.785 1.699 5.592 0 7.857-2.548 7.857-6.3M71.069 5.165v20.172h9.625l1.486-4.389h-6.44V5.165zm-19.039 0v4.318h5.167v15.854h4.741V9.483h5.592V5.165zm-6.866 0h-6.157L32 25.336h5.379l.99-3.397c1.204.354 2.478.566 3.752.566s2.548-.212 3.751-.566l.991 3.397h5.379c-.07 0-7.078-20.17-7.078-20.17zM42.05 18.26c-.92 0-1.77-.142-2.548-.354L42.05 9.13l2.548 8.776a9.6 9.6 0 0 1-2.548.354M97.326 5.165H91.17l-7.08 20.171h5.38l.99-3.397c1.203.354 2.477.566 3.751.566s2.548-.212 3.751-.566l.991 3.397h5.379zM94.212 18.26c-.92 0-1.77-.142-2.548-.354l2.548-8.776 2.548 8.776a9.6 9.6 0 0 1-2.548.354m75.306-13.095h-6.157l-7.007 20.171h5.379l.991-3.397c1.203.354 2.477.566 3.751.566s2.548-.212 3.751-.566l.991 3.397h5.379zm-3.043 13.094c-.92 0-1.77-.142-2.548-.354l2.548-8.776 2.548 8.776a10 10 0 0 1-2.548.354M22.878 24.378 12.293 3.208c-.208-.458-.416-.541-.666-.541-.209 0-.459.083-.709.5-1.5 2.375-2.167 5.125-2.167 8 0 4.001 2.042 7.752 5.043 13.794.333.667.583.792 1.166.792h7.335c.542 0 .833-.208.833-.625 0-.208-.041-.333-.25-.75M7.501 14.377c-.833-1.25-1.083-1.334-1.292-1.334s-.333.083-.708.834L.208 24.46c-.166.334-.208.459-.208.625 0 .334.292.667.917.667h7.46c.5 0 .874-.416 1.083-1.208.25-1 .333-1.876.333-2.917 0-2.917-1.292-5.751-2.292-7.251z\"\n        fill=\"").concat(colors.iconColor, "\"\n      />\n    </svg>");
};
var AtlassianAdminLogo = function AtlassianAdminLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Admin' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        iconColor: iconColor,
        label: label,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eOp9n":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdministrationIcon", ()=>(0, _icon.AtlassianAdministrationIcon));
parcelHelpers.export(exports, "AtlassianAdministrationLogo", ()=>(0, _logo.AtlassianAdministrationLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"e9fTC","./logo":"gUaUu","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e9fTC":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdministrationIcon", ()=>AtlassianAdministrationIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\">\n      <path\n        d=\"M27.545 24.378 16.96 3.208c-.208-.458-.417-.541-.667-.541-.208 0-.458.083-.708.5-1.5 2.375-2.167 5.125-2.167 8 0 4.001 2.042 7.752 5.042 13.794.334.667.584.792 1.167.792h7.335c.541 0 .833-.208.833-.625 0-.208-.042-.333-.25-.75M12.168 14.377c-.834-1.25-1.084-1.334-1.292-1.334s-.333.083-.708.834L4.875 24.46c-.167.334-.208.459-.208.625 0 .334.291.667.916.667h7.46c.5 0 .875-.416 1.083-1.208.25-1 .334-1.876.334-2.917 0-2.917-1.292-5.751-2.292-7.251z\"\n        fill=\"".concat(colors.iconColor, "\"\n      />\n    </svg>");
};
var AtlassianAdministrationIcon = function AtlassianAdministrationIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Administration' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        label: label,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"gUaUu":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAdministrationLogo", ()=>AtlassianAdministrationLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg\n      fill=\"none\"\n      height=\"32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 404 32\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M403.77 16.348v8.985h-2.637v-9.261c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.626-4.14 4.723v8.525h-2.637V10h2.637v2.515c.981-1.81 2.791-2.822 4.845-2.822 3.527 0 5.551 2.423 5.551 6.655m-23.336 9.292c-4.6 0-7.299-3.404-7.299-8.004s2.699-7.943 7.299-7.943c4.57 0 7.237 3.343 7.237 7.943s-2.667 8.004-7.237 8.004m0-13.493c-3.281 0-4.723 2.576-4.723 5.489s1.442 5.55 4.723 5.55c3.251 0 4.661-2.637 4.661-5.55s-1.41-5.49-4.661-5.49zm-13.488-6.195c0-1.165.767-1.84 1.84-1.84 1.074 0 1.84.675 1.84 1.84s-.766 1.84-1.84 1.84c-1.073 0-1.84-.675-1.84-1.84m.491 19.381V10h2.637v15.333zm-7.461-4.753c0 1.35.797 2.27 2.422 2.27.614 0 1.196-.123 1.656-.215v2.545a6.3 6.3 0 0 1-1.778.245c-3.282 0-4.876-1.932-4.876-4.784v-8.188h-2.484V10h2.484V6.75h2.576V10h4.078v2.453h-4.078zm-18.943-2.913c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.907v-1.227c0-3.404-1.932-4.906-4.171-4.906-2.974 0-4.508 1.962-4.508 5.52m8.679 7.666v-2.76c-.981 2.024-2.821 3.067-5.183 3.067-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.974 6.44-7.974 2.239 0 3.956 1.012 4.876 3.006V10h2.637v15.333zm-17.793-9.046v9.046h-2.576V10h2.576v2.699c.89-1.81 2.423-3.098 5.428-2.914v2.576c-3.373-.337-5.428.675-5.428 3.926m-10.037 4.293c0 1.35.797 2.27 2.423 2.27.613 0 1.196-.123 1.656-.215v2.545c-.46.123-.982.245-1.779.245-3.281 0-4.876-1.932-4.876-4.784v-8.188h-2.484V10h2.484V6.75h2.576V10h4.079v2.453h-4.079zm-6.696.583c0 2.545-1.656 4.477-5.765 4.477-2.3 0-4.171-.521-5.336-1.135v-2.79c1.319.766 3.527 1.502 5.459 1.502 2.024 0 3.066-.828 3.066-2.024 0-1.165-.889-1.84-3.802-2.545-3.404-.828-4.846-2.147-4.846-4.661 0-2.668 2.055-4.294 5.551-4.294 1.993 0 3.803.491 4.937 1.104v2.73c-1.84-.92-3.342-1.411-4.968-1.411-1.932 0-2.974.675-2.974 1.87 0 1.074.736 1.749 3.557 2.423 3.404.828 5.121 2.086 5.121 4.754M297.497 5.952c0-1.165.767-1.84 1.84-1.84 1.074 0 1.84.675 1.84 1.84s-.766 1.84-1.84 1.84c-1.073 0-1.84-.675-1.84-1.84m.491 19.381V10h2.637v15.333zm-3.678-8.985v8.985h-2.637v-9.261c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.626-4.14 4.723v8.525h-2.637V10h2.637v2.515c.982-1.81 2.791-2.822 4.846-2.822 3.526 0 5.55 2.423 5.55 6.655M274.168 5.952c0-1.165.766-1.84 1.84-1.84 1.073 0 1.84.675 1.84 1.84s-.767 1.84-1.84 1.84c-1.074 0-1.84-.675-1.84-1.84m.49 19.381V10h2.638v15.333zm-14.069-8.525v8.525h-2.637v-9.261c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.626-4.14 4.723v8.525h-2.637V10h2.637v2.515c.981-1.81 2.791-2.822 4.845-2.822 2.607 0 4.386 1.319 5.152 3.742.859-2.362 2.914-3.742 5.459-3.742 3.435 0 5.336 2.331 5.336 6.655v8.985h-2.637v-8.525c0-3.159-1.104-4.723-3.619-4.723-2.453 0-4.14 1.626-4.14 4.723m-28.327.859c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.907v-1.227c0-3.404-1.932-4.906-4.171-4.906-2.974 0-4.508 1.962-4.508 5.52m8.679 7.666v-2.76c-.981 2.024-2.821 3.067-5.183 3.067-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.974 6.44-7.974 2.239 0 3.956 1.012 4.876 3.006V3.59h2.637v21.742zm-22.021-4.017c-1.533 0-3.097-.184-4.814-.521l-1.687 4.538h-3.097l7.942-20.148h3.496l7.943 20.148h-3.097l-1.687-4.569c-1.809.368-3.373.552-4.999.552m0-2.453c1.288 0 2.607-.154 4.171-.399l-4.079-11.04-4.078 11.07c1.502.246 2.76.369 3.986.369\"\n        fill=\"".concat(colors.textColor, "\"\n      />\n      <path\n        d=\"M107.447 10.828c0 2.972 1.345 5.308 6.795 6.37 3.185.707 3.893 1.203 3.893 2.264 0 1.062-.708 1.699-2.973 1.699-2.619 0-5.733-.92-7.785-2.123v4.812c1.627.779 3.751 1.699 7.785 1.699 5.662 0 7.856-2.548 7.856-6.228m0 .07c0-3.538-1.84-5.166-7.148-6.299-2.902-.637-3.61-1.274-3.61-2.194 0-1.132 1.062-1.628 2.973-1.628 2.335 0 4.6.708 6.794 1.7V6.368c-1.557-.779-3.892-1.345-6.653-1.345-5.237 0-7.927 2.265-7.927 5.945m72.475-5.803v20.172h4.318V9.978l1.769 4.034 6.087 11.325h5.379V5.165h-4.247v13.023l-1.628-3.822-4.883-9.2zm-27.319 0h-4.671v20.172h4.671zm-10.05 14.155c0-3.538-1.841-5.166-7.149-6.298-2.902-.637-3.609-1.274-3.609-2.194 0-1.133 1.061-1.628 2.972-1.628 2.336 0 4.601.707 6.795 1.698v-4.6c-1.557-.779-3.893-1.345-6.653-1.345-5.238 0-7.927 2.265-7.927 5.945 0 2.973 1.345 5.309 6.794 6.37 3.185.708 3.893 1.203 3.893 2.265s-.708 1.699-2.973 1.699c-2.618 0-5.733-.92-7.785-2.124v4.813c1.628.779 3.751 1.699 7.785 1.699 5.592 0 7.857-2.548 7.857-6.3M71.069 5.165v20.172h9.625l1.486-4.389h-6.44V5.165zm-19.039 0v4.318h5.167v15.854h4.741V9.483h5.592V5.165zm-6.866 0h-6.157L32 25.336h5.379l.99-3.397c1.204.354 2.478.566 3.752.566s2.548-.212 3.751-.566l.991 3.397h5.379c-.07 0-7.078-20.17-7.078-20.17zM42.05 18.26c-.92 0-1.77-.142-2.548-.354L42.05 9.13l2.548 8.776a9.6 9.6 0 0 1-2.548.354M97.326 5.165H91.17l-7.08 20.171h5.38l.99-3.397c1.203.354 2.477.566 3.751.566s2.548-.212 3.751-.566l.991 3.397h5.379zM94.212 18.26c-.92 0-1.77-.142-2.548-.354l2.548-8.776 2.548 8.776a9.6 9.6 0 0 1-2.548.354m75.306-13.095h-6.157l-7.007 20.171h5.379l.991-3.397c1.203.354 2.477.566 3.751.566s2.548-.212 3.751-.566l.991 3.397h5.379zm-3.043 13.094c-.92 0-1.77-.142-2.548-.354l2.548-8.776 2.548 8.776a10 10 0 0 1-2.548.354M22.878 24.378 12.293 3.208c-.208-.458-.416-.541-.666-.541-.209 0-.459.083-.709.5-1.5 2.375-2.167 5.125-2.167 8 0 4.001 2.042 7.752 5.043 13.794.333.667.583.792 1.166.792h7.335c.542 0 .833-.208.833-.625 0-.208-.041-.333-.25-.75M7.501 14.377c-.833-1.25-1.083-1.334-1.292-1.334s-.333.083-.708.834L.208 24.46c-.166.334-.208.459-.208.625 0 .334.292.667.917.667h7.46c.5 0 .874-.416 1.083-1.208.25-1 .333-1.876.333-2.917 0-2.917-1.292-5.751-2.292-7.251z\"\n        fill=\"").concat(colors.iconColor, "\"\n      />\n    </svg>");
};
var AtlassianAdministrationLogo = function AtlassianAdministrationLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Administration' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        iconColor: iconColor,
        label: label,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kMc8s":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAnalyticsIcon", ()=>(0, _icon.AtlassianAnalyticsIcon));
parcelHelpers.export(exports, "AtlassianAnalyticsLogo", ()=>(0, _logo.AtlassianAnalyticsLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"7pjHn","./logo":"3mcOS","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"7pjHn":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAnalyticsIcon", ()=>AtlassianAnalyticsIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useId = require("@atlaskit/ds-lib/use-id");
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode, id) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconGradientStart: iconColor,
        iconGradientStop: iconColor,
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearanceOldLogos)(appearance, colorMode);
    return "<svg height=\"32\" viewBox=\"0 0 48 48\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"".concat(id, "-a\" x1=\"12.595\" x2=\"12.595\" y1=\"40\" y2=\"30\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0\" stop-color=\"").concat(colors.iconGradientStart, "\"/>\n      <stop offset=\"1\" stop-color=\"").concat(colors.iconGradientStop, "\"/>\n    </linearGradient>\n    <linearGradient id=\"").concat(id, "-b\" x1=\"28.595\" x2=\"28.595\" y1=\"40\" y2=\"27\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0\" stop-color=\"").concat(colors.iconGradientStart, "\"/>\n      <stop offset=\"1\" stop-color=\"").concat(colors.iconGradientStop, "\"/>\n    </linearGradient>\n    <linearGradient xlink:href=\"#").concat(id, "-b\" id=\"").concat(id, "-c\" x1=\"20.595\" x2=\"20.595\" y2=\"22\"/>\n    <linearGradient xlink:href=\"#").concat(id, "-b\" id=\"").concat(id, "-d\" x1=\"36.595\" x2=\"36.595\" y2=\"20\"/>\n  </defs>\n  <path d=\"M10.595 30h4v10h-4z\" fill=\"url(#").concat(id, "-a)\"/>\n  <path d=\"M26.595 27h4v13h-4z\" fill=\"url(#").concat(id, "-b)\"/>\n  <path d=\"M18.595 22h4v18h-4z\" fill=\"url(#").concat(id, "-c)\"/>\n  <path d=\"M34.595 20h4v20h-4z\" fill=\"url(#").concat(id, "-d)\"/>\n  <path fill=\"").concat(colors.iconColor, "\" d=\"m9.009 25.414-2.828-2.828 10.127-10.128a5 5 0 0 1 6.605-.411l4.471 3.477a1.5 1.5 0 0 0 1.982-.123l9.815-9.815 2.828 2.828-10.127 10.128a5 5 0 0 1-6.605.411l-4.471-3.477a1.5 1.5 0 0 0-1.982.123l-9.815 9.815Z\" />\n</svg>");
};
var AtlassianAnalyticsIcon = function AtlassianAnalyticsIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Analytics' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, testId = _ref2.testId;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    var id = (0, _useId.useId)();
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode, id),
        iconColor: iconColor,
        textColor: textColor,
        size: size,
        testId: testId
    });
};

},{"react":"jMk1U","@atlaskit/ds-lib/use-id":"jrARK","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3mcOS":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AtlassianAnalyticsLogo", ()=>AtlassianAnalyticsLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _useId = require("@atlaskit/ds-lib/use-id");
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode, id) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconGradientStart: iconColor,
        iconGradientStop: iconColor,
        textColor: textColor,
        iconColor: iconColor,
        // We treat the word "Atlassian" differently to normal product logos, it has a bold brand look
        atlassianLogoTextColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearanceOldLogos)(appearance, colorMode);
    return "\n  <svg height=\"32\" viewBox=\"0 0 477 48\" xmlns=\"http://www.w3.org/2000/svg\">\n  <defs>\n    <linearGradient id=\"".concat(id, "-a\" x1=\"447.285\" x2=\"447.285\" y1=\"40\" y2=\"30\" gradientUnits=\"userSpaceOnUse\">\n      <stop offset=\"0\" stop-color=\"").concat(colors.iconGradientStart, "\"/>\n      <stop offset=\"1\" stop-color=\"").concat(colors.iconGradientStop, "\"/>\n    </linearGradient>\n    <linearGradient xlink:href=\"#").concat(id, "-a\" id=\"").concat(id, "-b\" x1=\"463.285\" x2=\"463.285\" y2=\"27\"/>\n    <linearGradient xlink:href=\"#").concat(id, "-a\" id=\"").concat(id, "-c\" x1=\"455.285\" x2=\"455.285\" y2=\"22\"/>\n    <linearGradient xlink:href=\"#").concat(id, "-a\" id=\"").concat(id, "-d\" x1=\"471.285\" x2=\"471.285\" y2=\"20\"/>\n  </defs>\n  <g fill=\"").concat(colors.atlassianLogoTextColor, "\">\n    <path d=\"M106.72 18.359c0 4.201 1.949 7.536 9.572 9.008 4.548.953 5.5 1.689 5.5 3.205 0 1.473-.953 2.425-4.158 2.425-3.725 0-8.142-1.256-11.044-2.988v6.843c2.295 1.126 5.327 2.382 10.957 2.382 7.969 0 11.131-3.551 11.131-8.835m0 0c0-4.981-2.642-7.319-10.091-8.922-4.114-.91-5.111-1.819-5.111-3.118 0-1.646 1.473-2.339 4.201-2.339 3.292 0 6.54.996 9.615 2.382v-6.54c-2.166-1.083-5.5-1.949-9.398-1.949-7.363 0-11.174 3.205-11.174 8.445M209.1 10.346v28.455h6.063V17.103l2.556 5.76 8.575 15.938h7.623V10.346h-6.064V28.71l-2.295-5.327-6.886-13.037H209.1zM163.909 10.346h6.626v28.455h-6.626zM156.263 30.399c0-4.981-2.642-7.319-10.091-8.922-4.114-.91-5.111-1.819-5.111-3.118 0-1.646 1.473-2.339 4.201-2.339 3.292 0 6.54.996 9.615 2.382v-6.54c-2.166-1.083-5.5-1.949-9.398-1.949-7.363 0-11.174 3.205-11.174 8.445 0 4.201 1.949 7.536 9.572 9.008 4.548.953 5.5 1.689 5.5 3.205 0 1.473-.953 2.425-4.158 2.425-3.725 0-8.142-1.256-11.044-2.988v6.843c2.295 1.126 5.327 2.382 10.957 2.382 7.969 0 11.131-3.551 11.131-8.835M55.243 10.346v28.455h13.62l2.145-6.15h-9.095V10.346h-6.67zM28.334 10.346v6.15h7.363v22.305h6.67V16.496h7.882v-6.15H28.334zM18.663 10.346h-8.74L0 38.801h7.579l1.407-4.792a18.852 18.852 0 0 0 10.612 0l1.407 4.792h7.579l-9.922-28.455Zm-4.37 18.533c-1.267 0-2.49-.185-3.647-.524l3.647-12.422 3.647 12.422c-1.157.339-2.38.524-3.647.524ZM92.344 10.346h-8.74l-9.922 28.455h7.579l1.407-4.792a18.852 18.852 0 0 0 10.612 0l1.407 4.792h7.579l-9.922-28.455Zm-4.37 18.533c-1.267 0-2.49-.185-3.647-.524l3.647-12.422 3.647 12.422c-1.157.339-2.38.524-3.647.524ZM194.414 10.346h-8.74l-9.922 28.455h7.579l1.407-4.792a18.852 18.852 0 0 0 10.612 0l1.407 4.792h7.579l-9.922-28.455Zm-4.37 18.533c-1.267 0-2.49-.185-3.647-.524l3.647-12.422 3.647 12.422c-1.157.339-2.38.524-3.647.524Z\"/>\n  </g>\n  <g fill=\"").concat(colors.textColor, "\">\n    <path d=\"m254.776 31.987-2.53 6.809H247.6l11.916-30.225h5.244l11.916 30.225h-4.646l-2.53-6.855c-2.714.552-5.061.828-7.499.828-2.3 0-4.646-.276-7.223-.782Zm13.479-3.496-6.119-16.562-6.119 16.608c2.254.368 4.141.552 5.98.552 1.933 0 3.911-.23 6.257-.598ZM298.984 38.796h-3.957V24.902c0-4.141-1.656-5.981-5.428-5.981-3.681 0-6.211 2.438-6.211 7.085v12.79h-3.957V15.794h3.957v3.772c1.472-2.715 4.187-4.232 7.269-4.232 5.291 0 8.327 3.634 8.327 9.983v13.479ZM320.097 34.656c-1.472 3.036-4.232 4.6-7.775 4.6-6.119 0-9.201-5.199-9.201-11.961 0-6.486 3.22-11.961 9.661-11.961 3.358 0 5.935 1.518 7.314 4.508v-4.048h3.957v23.002h-3.957v-4.14Zm-6.717.92c3.542 0 6.717-2.254 6.717-7.361v-1.84c0-5.106-2.898-7.361-6.256-7.361-4.463 0-6.763 2.944-6.763 8.281 0 5.521 2.208 8.281 6.303 8.281ZM336.196 38.935c-3.772 0-6.165-1.794-6.165-6.027V6.179h3.957v26.269c0 2.07 1.38 2.806 3.083 2.806.414 0 .69 0 1.15-.046v3.542c-.322.092-1.012.184-2.024.184ZM347.328 37.324l-8.327-21.53h4.232l7.361 19.69 7.361-19.69h4.232l-8.695 22.267c-2.576 6.579-4.048 9.983-9.891 9.983-1.979 0-3.083-.184-4.232-.644v-3.404c1.334.414 2.852.552 4.002.552 3.22 0 4.646-2.208 6.533-7.223h-2.576ZM374.698 35.07c.92 0 1.794-.185 2.484-.322v3.818c-.69.184-1.472.368-2.668.368-4.923 0-7.315-2.898-7.315-7.177V19.473h-3.727v-3.68h3.727v-4.877h3.864v4.877h6.119v3.68h-6.119v12.191c0 2.024 1.196 3.405 3.635 3.405ZM384.265 6.961c1.61 0 2.76 1.012 2.76 2.76s-1.15 2.76-2.76 2.76-2.76-1.012-2.76-2.76 1.15-2.76 2.76-2.76Zm-2.024 8.833h3.957v23.002h-3.957V15.794ZM408.416 38.198c-1.38.736-3.496 1.058-5.612 1.058-8.189 0-12.007-4.968-12.007-12.007 0-6.947 3.818-11.915 12.007-11.915 2.07 0 3.68.276 5.475 1.104v3.681c-1.472-.69-3.037-1.104-5.199-1.104-5.98 0-8.419 3.772-8.419 8.235s2.484 8.235 8.511 8.235c2.346 0 3.818-.322 5.244-.828v3.542ZM420.144 39.256c-3.451 0-6.257-.782-8.005-1.702v-4.187c1.978 1.15 5.291 2.254 8.188 2.254 3.037 0 4.601-1.242 4.601-3.036 0-1.749-1.334-2.761-5.705-3.818-5.106-1.242-7.269-3.221-7.269-6.993 0-4.002 3.082-6.44 8.327-6.44 2.99 0 5.705.736 7.407 1.656v4.094c-2.76-1.38-5.014-2.117-7.453-2.117-2.898 0-4.462 1.013-4.462 2.807 0 1.61 1.104 2.622 5.336 3.635 5.106 1.242 7.683 3.128 7.683 7.13 0 3.819-2.484 6.717-8.649 6.717Z\"/>\n  </g>\n  <path fill=\"url(#").concat(id, "-a)\" d=\"M445.285 30h4v10h-4z\"/>\n  <path fill=\"url(#").concat(id, "-b)\" d=\"M461.285 27h4v13h-4z\"/>\n  <path fill=\"url(#").concat(id, "-c)\" d=\"M453.285 22h4v18h-4z\"/>\n  <path fill=\"url(#").concat(id, "-d)\" d=\"M469.285 20h4v20h-4z\"/>\n  <path fill=\"").concat(colors.iconColor, "\" d=\"m443.699 25.414-2.828-2.828 10.127-10.128a5 5 0 0 1 6.605-.411l4.471 3.477a1.5 1.5 0 0 0 1.982-.123l9.815-9.815 2.828 2.828-10.127 10.128a5 5 0 0 1-6.605.411l-4.471-3.477a1.5 1.5 0 0 0-1.982.123l-9.815 9.815Z\"/>\n</svg>");
};
var AtlassianAnalyticsLogo = function AtlassianAnalyticsLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Atlassian Analytics' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    var id = (0, _useId.useId)();
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        size: size,
        iconColor: iconColor,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode, id),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/ds-lib/use-id":"jrARK","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"40fXz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BitbucketIcon", ()=>(0, _icon.BitbucketIcon));
parcelHelpers.export(exports, "BitbucketLogo", ()=>(0, _logo.BitbucketLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"5aLva","./logo":"kmpC1","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5aLva":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BitbucketIcon", ()=>BitbucketIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=".concat(colors.iconColor, " d=\"m25.586 15.819-1.618 9.885c-.106.598-.528.95-1.126.95H9.122c-.598 0-1.02-.352-1.126-.95L5.146 8.08c-.105-.598.212-.985.775-.985h20.123c.562 0 .88.387.773.985l-.773 4.644c-.106.668-.493.95-1.126.95H12.816c-.176 0-.282.105-.246.316l.95 5.84c.035.14.14.246.281.246h4.362c.141 0 .246-.105.282-.246l.668-4.222c.07-.527.422-.738.915-.738h4.75c.703 0 .914.351.808.95\"/>\n    </svg>");
};
var BitbucketIcon = function BitbucketIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Bitbucket' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"kmpC1":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BitbucketLogo", ()=>BitbucketLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 158 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill=".concat(colors.iconColor, " d=\"m20.46 15.152-1.619 9.885c-.105.598-.527.95-1.125.95H3.996c-.599 0-1.02-.352-1.126-.95L.02 7.412c-.105-.598.211-.985.774-.985h20.123c.563 0 .88.387.774.985l-.774 4.644c-.106.668-.493.95-1.126.95H7.69c-.176 0-.281.105-.246.316l.95 5.84c.035.141.14.247.281.247h4.363c.14 0 .246-.106.281-.247l.668-4.221c.07-.528.423-.739.915-.739h4.75c.703 0 .914.352.809.95\"/>\n        <path fill=").concat(colors.textColor, " d=\"M153.212 20.787c0 1.35.797 2.27 2.422 2.27.614 0 1.196-.123 1.656-.215v2.545c-.46.123-.981.245-1.778.245-3.282 0-4.876-1.932-4.876-4.784v-8.187h-2.484v-2.454h2.484v-3.25h2.576v3.25h4.078v2.453h-4.078zm-13.537-8.494c-2.791 0-4.201 1.809-4.477 4.477h8.556c-.154-2.852-1.442-4.477-4.079-4.477m5.888 12.634c-1.257.675-3.189.92-4.753.92-5.735 0-8.25-3.312-8.25-8.004 0-4.63 2.576-7.942 7.238-7.942 4.722 0 6.624 3.281 6.624 7.942v1.196h-11.194c.368 2.607 2.055 4.294 5.674 4.294 1.778 0 3.281-.338 4.661-.828zm-23.82.613h-2.638V3.799h2.638v13.585l6.593-7.176h3.435l-7.207 7.544 7.513 7.79h-3.588l-6.746-7.176zm-5.648-2.76v2.362c-.92.49-2.331.705-3.742.705-5.458 0-8.004-3.312-8.004-8.004 0-4.63 2.546-7.942 8.004-7.942 1.38 0 2.454.184 3.65.736v2.453c-.982-.46-2.024-.736-3.466-.736-3.986 0-5.612 2.515-5.612 5.49s1.656 5.489 5.674 5.489c1.564 0 2.545-.215 3.496-.552m-27.843-3.588v-8.986h2.637v9.262c0 2.76 1.104 3.986 3.619 3.986 2.453 0 4.14-1.625 4.14-4.722v-8.526h2.637v15.334h-2.637v-2.515c-.982 1.81-2.79 2.821-4.846 2.821-3.526 0-5.55-2.422-5.55-6.654m-5.388-1.319c0-3.68-1.472-5.52-4.201-5.52-2.362 0-4.478 1.503-4.478 4.907v1.226c0 3.404 1.932 4.907 4.171 4.907 2.975 0 4.508-1.963 4.508-5.52m-3.803 7.973c-2.238 0-3.956-1.012-4.876-3.005v2.699h-2.637V3.798h2.637v9.17c.982-2.025 2.822-3.067 5.183-3.067 4.079 0 6.133 3.465 6.133 7.973 0 4.324-2.146 7.973-6.44 7.973m-14.974-5.06c0 1.35.797 2.27 2.422 2.27.614 0 1.196-.123 1.656-.215v2.545a6.3 6.3 0 0 1-1.778.245c-3.282 0-4.876-1.932-4.876-4.784v-8.187h-2.484v-2.454h2.484v-3.25h2.576v3.25h4.078v2.453h-4.078zM53.328 6.16c0-1.166.767-1.84 1.84-1.84s1.84.674 1.84 1.84S56.242 8 55.168 8s-1.84-.676-1.84-1.84m.49 19.38V10.207h2.638V25.54zm-9.828-9.046h-6.194v6.287h6.256c2.637 0 3.833-.951 3.833-2.975 0-2.147-1.134-3.312-3.894-3.312m-.889-8.464h-5.305v6.01h5.305c2.607 0 3.68-1.195 3.68-3.127 0-1.963-1.165-2.883-3.68-2.883m-8.065 17.51V5.394h8.433c4.11 0 6.103 2.024 6.103 5.274 0 2.423-1.104 3.926-3.373 4.478 2.974.49 4.446 2.116 4.446 4.968 0 3.22-2.177 5.428-6.685 5.428z\"/>\n      </svg>");
};
var BitbucketLogo = function BitbucketLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Bitbucket' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ieC6Y":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CompassIcon", ()=>(0, _icon.CompassIcon));
parcelHelpers.export(exports, "CompassLogo", ()=>(0, _logo.CompassLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"jNVFA","./logo":"al2SZ","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"jNVFA":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CompassIcon", ()=>CompassIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M15.667 15.66v5.942H9.713V15.66zV9.722H4.807c-.58.004-1.047.47-1.043 1.04v15.755a1.04 1.04 0 0 0 1.028 1.054h15.771a1.04 1.04 0 0 0 1.042-1.04V15.66zm0-11.88v5.942h5.967v5.938h5.935V4.82a1.04 1.04 0 0 0-1.028-1.053h-.014z\"/>\n      </svg>\n    ");
};
var CompassIcon = function CompassIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Compass' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"al2SZ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CompassLogo", ()=>CompassLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 155 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=".concat(colors.iconColor, " d=\"M11.903 14.993v5.942H5.95v-5.942zV9.055H1.043c-.58.004-1.047.47-1.043 1.04v15.756a1.04 1.04 0 0 0 1.028 1.054H16.8a1.04 1.04 0 0 0 1.043-1.04V14.993zm0-11.879v5.941h5.967v5.938h5.936V4.153A1.04 1.04 0 0 0 22.778 3.1h-.015z\"/>\n    <path fill=\"").concat(colors.textColor, "\" d=\"M154.46 21.37c0 2.545-1.656 4.477-5.765 4.477-2.3 0-4.171-.521-5.336-1.134v-2.791c1.318.767 3.526 1.503 5.458 1.503 2.024 0 3.067-.828 3.067-2.024 0-1.166-.889-1.84-3.803-2.546-3.404-.828-4.845-2.146-4.845-4.661 0-2.668 2.055-4.293 5.551-4.293 1.993 0 3.802.49 4.937 1.104v2.729c-1.84-.92-3.343-1.41-4.968-1.41-1.932 0-2.975.674-2.975 1.87 0 1.073.736 1.748 3.558 2.423 3.404.828 5.121 2.085 5.121 4.753m-13.626 0c0 2.545-1.656 4.477-5.766 4.477-2.3 0-4.17-.521-5.336-1.134v-2.791c1.319.767 3.527 1.503 5.459 1.503 2.024 0 3.067-.828 3.067-2.024 0-1.166-.89-1.84-3.803-2.546-3.404-.828-4.845-2.146-4.845-4.661 0-2.668 2.054-4.293 5.55-4.293 1.994 0 3.803.49 4.938 1.104v2.729c-1.84-.92-3.343-1.41-4.968-1.41-1.932 0-2.975.674-2.975 1.87 0 1.073.736 1.748 3.557 2.423 3.404.828 5.122 2.085 5.122 4.753m-25.873-3.496c0 3.68 1.472 5.52 4.201 5.52 2.361 0 4.477-1.503 4.477-4.907v-1.226c0-3.404-1.932-4.907-4.17-4.907-2.975 0-4.508 1.963-4.508 5.52m8.678 7.667v-2.76c-.981 2.024-2.821 3.066-5.182 3.066-4.079 0-6.134-3.465-6.134-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.699h2.638v15.334zm-16.09-7.667c0-3.68-1.472-5.52-4.201-5.52-2.362 0-4.478 1.503-4.478 4.907v1.226c0 3.404 1.932 4.907 4.171 4.907 2.975 0 4.508-1.963 4.508-5.52m-3.803 7.973c-2.238 0-3.956-1.012-4.876-3.005v8.679h-2.637V10.207h2.637v2.76c.982-2.024 2.822-3.066 5.183-3.066 4.079 0 6.133 3.465 6.133 7.973 0 4.324-2.146 7.973-6.44 7.973m-21.583-8.832v8.526h-2.637v-9.262c0-2.76-1.104-3.986-3.619-3.986-2.453 0-4.14 1.625-4.14 4.722v8.526H69.13V10.207h2.637v2.515c.982-1.81 2.791-2.821 4.846-2.821 2.606 0 4.385 1.318 5.152 3.741.858-2.361 2.913-3.741 5.458-3.741 3.435 0 5.336 2.33 5.336 6.654v8.986h-2.637v-8.526c0-3.158-1.104-4.722-3.619-4.722-2.453 0-4.14 1.625-4.14 4.722m-23.335 8.832c-4.6 0-7.299-3.404-7.299-8.004s2.699-7.942 7.299-7.942c4.57 0 7.237 3.342 7.237 7.942s-2.668 8.004-7.237 8.004m0-13.493c-3.282 0-4.723 2.576-4.723 5.49s1.441 5.55 4.723 5.55c3.25 0 4.661-2.637 4.661-5.55s-1.41-5.49-4.661-5.49m-9.233 9.629v2.668c-1.258.828-3.251 1.196-5.336 1.196-6.624 0-10.366-3.986-10.366-10.334 0-6.134 3.742-10.427 10.304-10.427 1.963 0 3.926.368 5.367 1.41v2.669c-1.441-.92-3.036-1.411-5.367-1.411-4.722 0-7.544 3.128-7.544 7.759s2.914 7.697 7.698 7.697c2.116 0 3.772-.49 5.244-1.227\"/>\n  </svg>");
};
var CompassLogo = function CompassLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Compass' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bAjHy":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConfluenceIcon", ()=>(0, _icon.ConfluenceIcon));
parcelHelpers.export(exports, "ConfluenceLogo", ()=>(0, _logo.ConfluenceLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"aysGG","./logo":"ihhgr","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aysGG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConfluenceIcon", ()=>ConfluenceIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M25.769 20.234c-6.584-3.183-8.507-3.66-11.282-3.66-3.254 0-6.028 1.355-8.507 5.16l-.406.622c-.333.513-.407.696-.407.915s.11.403.517.659l4.18 2.598c.222.146.407.22.592.22.222 0 .37-.11.592-.44l.665-1.024c1.036-1.574 1.96-2.086 3.144-2.086 1.036 0 2.257.293 3.773 1.025l4.365 2.049c.443.22.924.11 1.146-.403l2.071-4.537c.222-.512.074-.842-.444-1.098M6.572 12.22c6.584 3.184 8.507 3.66 11.281 3.66 3.255 0 6.03-1.354 8.507-5.16l.407-.622c.333-.512.407-.695.407-.915s-.11-.402-.518-.658l-4.18-2.598c-.221-.147-.406-.22-.591-.22-.222 0-.37.11-.592.44l-.666 1.024c-1.035 1.573-1.96 2.086-3.144 2.086-1.035 0-2.256-.293-3.772-1.025L9.346 6.183c-.444-.22-.924-.11-1.146.402l-2.072 4.538c-.222.512-.074.841.444 1.098\"/>\n    </svg>");
};
var ConfluenceIcon = function ConfluenceIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Confluence' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"ihhgr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConfluenceLogo", ()=>ConfluenceLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 180 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M20.602 20.234c-6.584-3.183-8.507-3.66-11.281-3.66-3.255 0-6.03 1.355-8.507 5.16l-.407.622c-.333.513-.407.696-.407.915s.111.403.518.659l4.18 2.598c.221.146.406.22.591.22.222 0 .37-.11.592-.44l.666-1.024c1.035-1.574 1.96-2.086 3.144-2.086 1.035 0 2.256.293 3.772 1.025l4.365 2.049c.444.22.925.11 1.146-.403l2.072-4.537c.222-.512.074-.842-.444-1.098M1.406 12.22c6.583 3.184 8.507 3.66 11.28 3.66 3.256 0 6.03-1.354 8.508-5.16l.407-.622c.332-.512.406-.695.406-.915s-.11-.402-.518-.658L17.31 5.927c-.222-.147-.407-.22-.592-.22-.222 0-.37.11-.592.44l-.665 1.024c-1.036 1.573-1.96 2.086-3.144 2.086-1.036 0-2.257-.293-3.773-1.025L4.18 6.183c-.444-.22-.925-.11-1.147.402L.962 11.123c-.222.512-.074.841.444 1.098\"/>\n      <path fill=\"").concat(colors.textColor, "\" d=\"M172.49 12.293c-2.791 0-4.201 1.809-4.477 4.477h8.556c-.154-2.852-1.442-4.477-4.079-4.477m5.888 12.634c-1.257.675-3.189.92-4.753.92-5.735 0-8.25-3.312-8.25-8.004 0-4.63 2.576-7.942 7.238-7.942 4.722 0 6.624 3.281 6.624 7.942v1.196h-11.194c.368 2.607 2.055 4.294 5.674 4.294 1.778 0 3.281-.338 4.661-.828zm-15.093-2.147v2.362c-.92.49-2.331.705-3.742.705-5.458 0-8.004-3.312-8.004-8.004 0-4.63 2.546-7.942 8.004-7.942 1.38 0 2.454.184 3.65.736v2.453c-.982-.46-2.024-.736-3.466-.736-3.986 0-5.612 2.515-5.612 5.49s1.656 5.489 5.674 5.489c1.564 0 2.545-.215 3.496-.552m-14.503-6.226v8.986h-2.637v-9.262c0-2.76-1.104-3.986-3.619-3.986-2.453 0-4.14 1.625-4.14 4.722v8.526h-2.637V10.207h2.637v2.515c.981-1.81 2.791-2.821 4.845-2.821 3.527 0 5.551 2.422 5.551 6.654m-22.921-4.262c-2.79 0-4.201 1.809-4.477 4.477h8.556c-.154-2.852-1.441-4.477-4.079-4.477m5.888 12.634c-1.257.675-3.189.92-4.753.92-5.735 0-8.249-3.312-8.249-8.004 0-4.63 2.576-7.942 7.237-7.942 4.723 0 6.624 3.281 6.624 7.942v1.196h-11.193c.368 2.607 2.054 4.294 5.673 4.294 1.778 0 3.281-.338 4.661-.828zm-29.1-5.734v-8.986h2.637v9.262c0 2.76 1.104 3.986 3.619 3.986 2.453 0 4.14-1.625 4.14-4.722v-8.526h2.637v15.334h-2.637v-2.515c-.981 1.81-2.791 2.821-4.845 2.821-3.527 0-5.551-2.422-5.551-6.654m-2.231 6.317c-.215.061-.674.122-1.35.122-2.514 0-4.108-1.196-4.108-4.017V3.798h2.637v17.51c0 1.38.92 1.871 2.055 1.871.275 0 .459 0 .766-.03zM88.157 8.582v1.625h3.956v2.454h-3.956v12.88h-2.576V12.66h-2.484v-2.454h2.484V8.521c0-2.852 1.595-4.784 4.876-4.784a6.3 6.3 0 0 1 1.779.245v2.423a8.7 8.7 0 0 0-1.656-.154c-1.626 0-2.423.95-2.423 2.33m-7.327 7.974v8.986h-2.637v-9.262c0-2.76-1.104-3.986-3.619-3.986-2.453 0-4.14 1.625-4.14 4.722v8.526h-2.637V10.207h2.637v2.515c.981-1.81 2.79-2.821 4.845-2.821 3.527 0 5.551 2.422 5.551 6.654m-23.336 9.292c-4.6 0-7.298-3.404-7.298-8.004s2.698-7.942 7.298-7.942c4.57 0 7.238 3.342 7.238 7.942s-2.668 8.004-7.238 8.004m0-13.493c-3.28 0-4.722 2.576-4.722 5.49s1.441 5.55 4.722 5.55c3.251 0 4.662-2.637 4.662-5.55s-1.41-5.49-4.662-5.49m-9.233 9.629v2.668c-1.257.828-3.25 1.196-5.336 1.196-6.624 0-10.365-3.986-10.365-10.334 0-6.134 3.741-10.427 10.304-10.427 1.963 0 3.925.368 5.367 1.41v2.669c-1.442-.92-3.036-1.411-5.367-1.411-4.723 0-7.544 3.128-7.544 7.759s2.913 7.697 7.697 7.697c2.116 0 3.772-.49 5.244-1.227\"/>\n    </svg>\n    ");
};
var ConfluenceLogo = function ConfluenceLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Confluence' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"rQCUQ":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusIcon", ()=>(0, _icon.FocusIcon));
parcelHelpers.export(exports, "FocusLogo", ()=>(0, _logo.FocusLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"dqYX2","./logo":"6GJ2n","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"dqYX2":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusIcon", ()=>FocusIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 48 48\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path fill=\"".concat(colors.iconColor, "\" d=\"M45.4277 24.5018C41.4108 20.4849 34.8821 20.5276 30.908 24.5018L27.5636 27.8462C25.717 29.6927 22.7177 29.6927 20.8712 27.8462L18.0925 25.0675L10.8309 32.3291L13.6096 35.1078C19.4658 40.9641 28.9654 40.9641 34.8216 35.1078L45.4277 24.5018ZM3 23.5018C7.01684 27.5186 13.4637 27.5578 17.4805 23.5409L20.8676 20.1538C22.7142 18.3073 25.7135 18.3073 27.56 20.1538L30.3387 22.9325L37.6003 15.6709L34.8216 12.8922C28.9654 7.03593 19.4658 7.03593 13.6096 12.8922L3.00356 23.4982L3 23.5018Z\"/>\n\t\t</svg>\n\t\t");
};
var FocusIcon = function FocusIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Focus' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6GJ2n":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusLogo", ()=>FocusLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 168 48\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<path fill=\"".concat(colors.iconColor, "\" d=\"M42.4277 24.5018C38.4108 20.4849 31.8821 20.5276 27.908 24.5018L24.5636 27.8462C22.717 29.6927 19.7177 29.6927 17.8712 27.8462L15.0925 25.0675L7.83088 32.3291L10.6096 35.1078C16.4658 40.9641 25.9654 40.9641 31.8216 35.1078L42.4277 24.5018ZM0 23.5018C4.01684 27.5186 10.4637 27.5578 14.4805 23.5409L17.8676 20.1538C19.7142 18.3073 22.7135 18.3073 24.56 20.1538L27.3387 22.9325L34.6003 15.6709L31.8216 12.8922C25.9654 7.03593 16.4658 7.03593 10.6096 12.8922L0.00355592 23.4982L0 23.5018Z\"/>\n\t\t<path fill=\"").concat(colors.textColor, "\" d=\"M167.405 31.746C167.405 35.564 164.921 38.462 158.757 38.462C155.307 38.462 152.501 37.68 150.753 36.76V32.574C152.731 33.724 156.043 34.828 158.941 34.828C161.977 34.828 163.541 33.586 163.541 31.792C163.541 30.044 162.207 29.032 157.837 27.974C152.731 26.732 150.569 24.754 150.569 20.982C150.569 16.98 153.651 14.542 158.895 14.542C161.885 14.542 164.599 15.278 166.301 16.198V20.292C163.541 18.912 161.287 18.176 158.849 18.176C155.951 18.176 154.387 19.188 154.387 20.982C154.387 22.592 155.491 23.604 159.723 24.616C164.829 25.858 167.405 27.744 167.405 31.746Z\"/>\n\t\t<path fill=\"").concat(colors.textColor, "\" d=\"M126.009 28.48V15.002H129.965V28.894C129.965 33.034 131.621 34.874 135.393 34.874C139.073 34.874 141.603 32.436 141.603 27.79V15.002H145.559V38.002H141.603V34.23C140.131 36.944 137.417 38.462 134.335 38.462C129.045 38.462 126.009 34.828 126.009 28.48Z\"/>\n\t\t<path fill=\"").concat(colors.textColor, "\" d=\"M121.953 33.862V37.404C120.573 38.14 118.457 38.462 116.341 38.462C108.153 38.462 104.335 33.494 104.335 26.456C104.335 19.51 108.153 14.542 116.341 14.542C118.411 14.542 120.021 14.818 121.815 15.646V19.326C120.343 18.636 118.779 18.222 116.617 18.222C110.637 18.222 108.199 21.994 108.199 26.456C108.199 30.918 110.683 34.69 116.709 34.69C119.055 34.69 120.527 34.368 121.953 33.862Z\"/>\n\t\t<path fill=\"").concat(colors.textColor, "\" d=\"M90.2616 38.462C83.3616 38.462 79.3136 33.356 79.3136 26.456C79.3136 19.556 83.3616 14.542 90.2616 14.542C97.1156 14.542 101.118 19.556 101.118 26.456C101.118 33.356 97.1156 38.462 90.2616 38.462ZM90.2616 18.222C85.3396 18.222 83.1776 22.086 83.1776 26.456C83.1776 30.826 85.3396 34.782 90.2616 34.782C95.1376 34.782 97.2536 30.826 97.2536 26.456C97.2536 22.086 95.1376 18.222 90.2616 18.222Z\"/>\n\t\t<path fill=\"").concat(colors.textColor, "\" d=\"M75.298 26.732H61.59V38.002H57.45V7.78003H76.862V11.736H61.59V22.776H75.298V26.732Z\"/>\n\t\t</svg>\n\t\t");
};
var FocusLogo = function FocusLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Focus' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bVBvF":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GuardIcon", ()=>(0, _icon.GuardIcon));
parcelHelpers.export(exports, "GuardLogo", ()=>(0, _logo.GuardLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"2aj2C","./logo":"16Hgc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2aj2C":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GuardIcon", ()=>GuardIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\">\n      <path\n        d=\"M5.584 14.4h20.83c.599 0 .918-.32.918-.918V6.459c0-.599-.319-.918-.918-.918h-4.39c-.598 0-.917.32-.917.918v3.551h-1.995V6.46c0-.599-.32-.918-.918-.918h-4.39c-.598 0-.917.32-.917.918v3.551h-1.995V6.46c0-.599-.32-.918-.918-.918h-4.39c-.598 0-.917.32-.917.918v7.023c0 .599.319.918.917.918zm.36 6.145a13.9 13.9 0 0 1-.798-3.99c-.04-.52.199-.799.758-.799h20.191c.559 0 .798.24.798.719q-.12 2.214-.838 4.07c-.24.638-.598.918-1.277.918H7.221c-.679 0-1.038-.28-1.277-.918m18.475 3.312c-1.915 2.354-5.068 3.87-8.42 3.87s-6.584-1.516-8.46-3.87c-.478-.638-.239-1.038.24-1.038h16.44c.48 0 .719.4.2 1.038\"\n        fill=\"".concat(colors.iconColor, "\"\n      />\n    </svg>");
};
var GuardIcon = function GuardIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Guard' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        label: label,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"16Hgc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GuardLogo", ()=>GuardLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 114 32\" focusable=\"false\" aria-hidden=\"true\">\n      <path\n        d=\"M.918 13.733h20.83c.598 0 .918-.32.918-.918V5.792c0-.599-.32-.918-.918-.918h-4.39c-.598 0-.918.32-.918.918v3.551h-1.995V5.792c0-.599-.319-.918-.918-.918H9.139c-.599 0-.918.32-.918.918v3.551H6.225V5.792c0-.599-.32-.918-.918-.918H.917c-.598 0-.917.32-.917.918v7.023c0 .599.32.918.918.918m.359 6.145a13.9 13.9 0 0 1-.798-3.99c-.04-.52.2-.799.758-.799h20.191c.56 0 .799.24.799.719q-.12 2.214-.838 4.07c-.24.638-.599.918-1.277.918H2.554c-.679 0-1.038-.28-1.277-.918m18.476 3.312c-1.916 2.354-5.068 3.87-8.42 3.87s-6.584-1.516-8.46-3.87c-.479-.638-.24-1.038.24-1.038h16.44c.479 0 .718.4.2 1.038\"\n        fill=\"".concat(colors.iconColor, "\"\n      />\n      <path\n        d=\"M102.398 17.874c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.502 4.477-4.906V17.26c0-3.404-1.932-4.907-4.171-4.907-2.974 0-4.508 1.963-4.508 5.52zm8.679 7.667v-2.76c-.982 2.024-2.822 3.067-5.183 3.067-4.079 0-6.133-3.466-6.133-7.974 0-4.324 2.146-7.973 6.44-7.973 2.238 0 3.956 1.012 4.876 3.005V3.798h2.637v21.743zm-17.793-9.047v9.047h-2.576V10.208h2.576v2.698c.89-1.809 2.423-3.097 5.428-2.913v2.576c-3.373-.337-5.428.675-5.428 3.925m-17.869 1.381c0 3.68 1.472 5.52 4.201 5.52 2.362 0 4.478-1.503 4.478-4.907v-1.227c0-3.404-1.932-4.906-4.17-4.906-2.976 0-4.509 1.962-4.509 5.52m8.679 7.666v-2.76c-.982 2.024-2.822 3.067-5.183 3.067-4.079 0-6.133-3.465-6.133-7.973 0-4.324 2.146-7.974 6.44-7.974 2.238 0 3.956 1.012 4.876 3.006v-2.699h2.637v15.333zM56.68 19.193v-8.985h2.637v9.261c0 2.76 1.105 3.987 3.62 3.987 2.453 0 4.14-1.625 4.14-4.723v-8.525h2.637v15.333h-2.638v-2.514c-.981 1.809-2.79 2.821-4.845 2.821-3.527 0-5.55-2.423-5.55-6.655zm-3.973 5.213c-1.595.951-4.539 1.442-6.808 1.442-6.931 0-10.672-4.232-10.672-10.335 0-6.563 4.262-10.457 11.438-10.457 1.595 0 3.466.184 5.244.797v2.76c-1.533-.613-3.342-.89-5.213-.89-5.98 0-8.71 2.975-8.71 7.729 0 4.661 2.76 7.758 8.557 7.758.95 0 2.269-.092 3.404-.429v-5.612h-5.152v-2.637h7.912z\"\n        fill=\"").concat(colors.textColor, "\"\n      />\n    </svg>");
};
var GuardLogo = function GuardLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Guard' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        iconColor: iconColor,
        label: label,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"aKV0g":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraIcon", ()=>(0, _icon.JiraIcon));
parcelHelpers.export(exports, "JiraLogo", ()=>(0, _logo.JiraLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"fjkE4","./logo":"cfaMX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fjkE4":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraIcon", ()=>JiraIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M11.034 21.99h-2.22c-3.346 0-5.747-2.05-5.747-5.052h11.932c.619 0 1.019.44 1.019 1.062v12.007c-2.983 0-4.984-2.416-4.984-5.784zm5.893-5.967h-2.219c-3.347 0-5.748-2.013-5.748-5.015h11.933c.618 0 1.055.402 1.055 1.025V24.04c-2.983 0-5.02-2.416-5.02-5.784zm5.93-5.93h-2.219c-3.347 0-5.748-2.05-5.748-5.052h11.933c.618 0 1.018.439 1.018 1.025v12.007c-2.983 0-4.984-2.416-4.984-5.784z\"/>\n    </svg>");
};
var JiraIcon = function JiraIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cfaMX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraLogo", ()=>JiraLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 77 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M7.967 21.323H5.748C2.401 21.323 0 19.273 0 16.271h11.933c.618 0 1.018.44 1.018 1.062V29.34c-2.983 0-4.984-2.416-4.984-5.784zm5.894-5.967h-2.22c-3.346 0-5.747-2.013-5.747-5.015h11.932c.618 0 1.055.402 1.055 1.025v12.007c-2.983 0-5.02-2.416-5.02-5.784zm5.93-5.93h-2.22c-3.347 0-5.748-2.05-5.748-5.052h11.933c.618 0 1.019.439 1.019 1.025v12.007c-2.983 0-4.984-2.416-4.984-5.784z\"/>\n      <path fill=\"").concat(colors.textColor, "\" d=\"M65.023 17.874c0 3.68 1.472 5.52 4.202 5.52 2.36 0 4.477-1.503 4.477-4.907V17.26c0-3.404-1.932-4.906-4.17-4.906-2.975 0-4.509 1.962-4.509 5.52m8.679 7.666v-2.76c-.981 2.024-2.821 3.067-5.183 3.067-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.974 6.44-7.974 2.239 0 3.956 1.012 4.876 3.006v-2.699h2.637V25.54zM55.91 16.493v9.047h-2.577V10.207h2.576v2.698c.89-1.809 2.423-3.097 5.428-2.913v2.576c-3.373-.337-5.428.675-5.428 3.925M46.224 6.159c0-1.165.767-1.84 1.84-1.84s1.84.675 1.84 1.84-.767 1.84-1.84 1.84-1.84-.675-1.84-1.84m.49 19.381V10.207h2.638V25.54zm-6.427-5.95V5.393h2.76v14.015c0 3.71-1.626 6.256-5.428 6.256-1.442 0-2.546-.246-3.312-.522v-2.668c.828.338 1.84.522 2.852.522 2.33 0 3.128-1.41 3.128-3.404\"/>\n    </svg>");
};
var JiraLogo = function JiraLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hYE78":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraAlignIcon", ()=>(0, _icon.JiraAlignIcon));
parcelHelpers.export(exports, "JiraAlignLogo", ()=>(0, _logo.JiraAlignLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"eqg5a","./logo":"1tKCG","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eqg5a":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraAlignIcon", ()=>JiraAlignIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" height=\"32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      fill=\"".concat(colors.iconColor, "\"\n      d=\"M25.52 25.727c0-3.604-2.949-6.517-6.517-6.517h-6.007v-5.497H6.48v10.813c0 .837.364 1.201 1.201 1.201zM6.48 6.687c0 3.604 2.876 6.517 6.48 6.517h6.043V18.7h6.517V7.888q0-1.2-1.201-1.201z\"\n    />\n  </svg>");
};
var JiraAlignIcon = function JiraAlignIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Align' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1tKCG":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraAlignLogo", ()=>JiraAlignLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg viewBox=\"0 0 146 32\" focusable=\"false\" aria-hidden=\"true\" height=\"32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19.04 25.727c0-3.604-2.949-6.517-6.517-6.517H6.517v-5.497H0v10.813c0 .837.364 1.201 1.201 1.201zM0 6.687c0 3.604 2.876 6.517 6.48 6.517h6.043V18.7h6.517V7.888q0-1.2-1.201-1.201z\" fill=\"".concat(colors.iconColor, "\"/>\n      <path d=\"M144.993 16.555v8.985h-2.638v-9.26c0-2.76-1.104-3.988-3.618-3.988-2.454 0-4.14 1.626-4.14 4.723v8.525h-2.638V10.207h2.638v2.515c.981-1.81 2.79-2.822 4.845-2.822 3.527 0 5.551 2.423 5.551 6.655m-19.589 7.759V22.78c-.982 2.024-2.822 3.067-5.183 3.067-4.048 0-6.072-3.465-6.072-7.973 0-4.324 2.116-7.974 6.379-7.974 2.238 0 3.956 1.012 4.876 3.006v-2.699h2.576V24.16c0 4.508-2.116 7.544-7.606 7.544-2.576 0-3.986-.337-5.458-.828V28.3c1.686.552 3.434.92 5.336.92 3.833 0 5.152-2.054 5.152-4.906m-8.679-6.44c0 3.68 1.472 5.52 4.201 5.52 2.362 0 4.478-1.503 4.478-4.907V17.26c0-3.404-1.932-4.906-4.171-4.906-2.975 0-4.508 1.962-4.508 5.52M107.96 6.16c0-1.166.766-1.84 1.84-1.84 1.073 0 1.84.674 1.84 1.84S110.873 8 109.8 8c-1.074 0-1.84-.675-1.84-1.84m.49 19.38V10.208h2.638v15.334h-2.638Zm-2.537-.03c-.215.061-.675.122-1.349.122-2.515 0-4.11-1.196-4.11-4.017V3.798h2.638v17.51c0 1.38.92 1.871 2.054 1.871.276 0 .46 0 .767-.03v2.36ZM88.83 21.523c-1.534 0-3.098-.184-4.815-.521l-1.687 4.539h-3.097l7.942-20.148h3.496l7.943 20.148h-3.097l-1.687-4.57c-1.81.368-3.373.552-4.999.552Zm0-2.453c1.287 0 2.606-.153 4.17-.399l-4.079-11.04-4.078 11.07c1.502.246 2.76.369 3.986.369Zm-27.807-1.196c0 3.68 1.472 5.52 4.202 5.52 2.36 0 4.477-1.503 4.477-4.907V17.26c0-3.404-1.932-4.906-4.17-4.906-2.975 0-4.509 1.962-4.509 5.52m8.679 7.666v-2.76c-.981 2.024-2.822 3.067-5.183 3.067-4.079 0-6.133-3.465-6.133-7.973 0-4.324 2.146-7.974 6.44-7.974 2.239 0 3.956 1.012 4.876 3.006v-2.699h2.637V25.54zM51.91 16.494v9.047h-2.577V10.207h2.576v2.699c.89-1.81 2.423-3.097 5.428-2.913v2.576c-3.373-.338-5.428.674-5.428 3.925ZM42.224 6.16c0-1.166.767-1.84 1.84-1.84s1.84.674 1.84 1.84S45.137 8 44.064 8s-1.84-.675-1.84-1.84m.49 19.38V10.208h2.638v15.334h-2.637Zm-6.427-5.949V5.393h2.76v14.014c0 3.71-1.626 6.256-5.428 6.256-1.442 0-2.546-.245-3.312-.521v-2.668c.828.337 1.84.521 2.852.521 2.33 0 3.128-1.41 3.128-3.404\" fill=\"").concat(colors.textColor, "\"/>\n    </svg>\n  ");
};
var JiraAlignLogo = function JiraAlignLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Align' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"47Ksv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraProductDiscoveryIcon", ()=>(0, _icon.JiraProductDiscoveryIcon));
parcelHelpers.export(exports, "JiraProductDiscoveryLogo", ()=>(0, _logo.JiraProductDiscoveryLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"f0G1F","./logo":"6QSOI","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f0G1F":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraProductDiscoveryIcon", ()=>JiraProductDiscoveryIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M17.655 5.884a15.3 15.3 0 0 0 8.75 0c.257-.056.428.114.37.37-.826 2.985-.826 5.742 0 8.727.058.228-.113.427-.37.342a16.33 16.33 0 0 0-8.75 0c-.228.085-.428-.114-.342-.342.77-2.985.77-5.742 0-8.727-.086-.256.114-.426.342-.37m1.169 10.576v.483c0 2.246-1.568 3.894-3.506 3.894a3.474 3.474 0 0 1-3.477-3.496c0-1.933 1.567-3.468 3.762-3.468h.57V7.078c-.285-.028-.57-.028-.855-.028C9.618 7.05 5 11.655 5 17.37c0 5.713 4.617 10.29 10.318 10.29s10.346-4.605 10.346-10.29v-.91z\"/>\n    </svg>");
};
var JiraProductDiscoveryIcon = function JiraProductDiscoveryIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Product Discovery' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"6QSOI":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraProductDiscoveryLogo", ()=>JiraProductDiscoveryLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 318 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M12.655 5.218a15.3 15.3 0 0 0 8.75 0c.257-.057.428.114.37.37-.826 2.984-.826 5.742 0 8.727.058.227-.113.426-.37.341a16.33 16.33 0 0 0-8.75 0c-.228.085-.428-.114-.342-.341.77-2.985.77-5.743 0-8.727-.086-.256.114-.427.342-.37m1.169 10.575v.483c0 2.246-1.568 3.895-3.506 3.895a3.474 3.474 0 0 1-3.478-3.497c0-1.933 1.568-3.468 3.763-3.468h.57V6.412c-.285-.028-.57-.028-.855-.028C4.618 6.384 0 10.989 0 16.703s4.617 10.29 10.318 10.29 10.346-4.605 10.346-10.29v-.91z\" />\n      <path fill=\"").concat(colors.textColor, "\" d=\"M308.551 24.559h-1.718l-5.55-14.352h2.821l4.907 13.125 4.906-13.125h2.822l-5.796 14.843c-1.718 4.385-2.699 6.654-6.594 6.654-1.318 0-2.054-.122-2.821-.429v-2.27c.889.277 1.901.369 2.668.369 2.147 0 3.097-1.472 4.355-4.815m-13.247-8.065v9.047h-2.576V10.207h2.576v2.699c.889-1.81 2.422-3.097 5.428-2.913v2.576c-3.374-.338-5.428.674-5.428 3.925m-12.464-4.202c-2.79 0-4.201 1.81-4.477 4.478h8.556c-.153-2.852-1.441-4.478-4.079-4.478m5.888 12.635c-1.257.675-3.189.92-4.753.92-5.735 0-8.249-3.312-8.249-8.004 0-4.63 2.576-7.943 7.237-7.943 4.723 0 6.624 3.282 6.624 7.943v1.196h-11.193c.368 2.607 2.054 4.293 5.673 4.293 1.779 0 3.281-.337 4.661-.828zm-19.717.613h-3.527l-5.949-15.333h2.76l4.968 13.095 4.937-13.095h2.76zm-17.462.307c-4.6 0-7.299-3.404-7.299-8.004s2.699-7.943 7.299-7.943c4.569 0 7.237 3.343 7.237 7.943s-2.668 8.004-7.237 8.004m0-13.493c-3.281 0-4.723 2.576-4.723 5.49 0 2.912 1.442 5.55 4.723 5.55 3.251 0 4.661-2.638 4.661-5.55 0-2.914-1.41-5.49-4.661-5.49M242.16 22.78v2.362c-.92.49-2.331.705-3.742.705-5.458 0-8.004-3.312-8.004-8.004 0-4.63 2.546-7.943 8.004-7.943 1.38 0 2.454.184 3.65.736v2.454c-.982-.46-2.024-.736-3.466-.736-3.986 0-5.612 2.514-5.612 5.49 0 2.974 1.656 5.488 5.674 5.488 1.564 0 2.545-.214 3.496-.552m-13.872-1.41c0 2.545-1.656 4.477-5.765 4.477-2.3 0-4.171-.521-5.336-1.135v-2.79c1.319.766 3.527 1.502 5.459 1.502 2.024 0 3.066-.828 3.066-2.024 0-1.165-.889-1.84-3.802-2.545-3.404-.828-4.846-2.147-4.846-4.661 0-2.668 2.055-4.294 5.551-4.294 1.993 0 3.803.491 4.937 1.104v2.73c-1.84-.92-3.342-1.41-4.968-1.41-1.932 0-2.974.674-2.974 1.87 0 1.073.736 1.748 3.557 2.422 3.404.828 5.121 2.086 5.121 4.754M210.599 6.16c0-1.166.767-1.84 1.84-1.84s1.84.674 1.84 1.84-.767 1.84-1.84 1.84-1.84-.675-1.84-1.84m.491 19.38V10.208h2.637v15.334zM198.344 8.03h-4.539v14.873h4.692c4.6 0 6.9-2.422 6.9-7.298 0-4.907-2.177-7.575-7.053-7.575m-7.299 17.51V5.394h7.422c6.532 0 9.69 4.078 9.69 10.12 0 6.102-3.189 10.028-9.69 10.028zm-13.411-4.753c0 1.35.797 2.27 2.422 2.27.614 0 1.196-.123 1.656-.215v2.545c-.46.123-.981.245-1.778.245-3.282 0-4.876-1.932-4.876-4.784v-8.187h-2.484v-2.454h2.484v-3.25h2.576v3.25h4.078v2.453h-4.078zm-6.66 1.993v2.362c-.92.49-2.331.705-3.742.705-5.458 0-8.004-3.312-8.004-8.004 0-4.63 2.546-7.943 8.004-7.943 1.38 0 2.454.184 3.65.736v2.454c-.982-.46-2.024-.736-3.466-.736-3.986 0-5.612 2.514-5.612 5.49 0 2.974 1.656 5.488 5.674 5.488 1.564 0 2.545-.214 3.496-.552m-27.843-3.588v-8.985h2.637v9.261c0 2.76 1.104 3.987 3.619 3.987 2.453 0 4.14-1.625 4.14-4.723v-8.525h2.637V25.54h-2.637v-2.514c-.982 1.809-2.791 2.821-4.846 2.821-3.526 0-5.55-2.423-5.55-6.655m-14.987-1.318c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.907V17.26c0-3.404-1.932-4.906-4.171-4.906-2.974 0-4.508 1.962-4.508 5.52m8.679 7.667v-2.76c-.981 2.023-2.821 3.066-5.183 3.066-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005V3.798h2.637V25.54zm-20.698.306c-4.6 0-7.299-3.404-7.299-8.004s2.699-7.943 7.299-7.943c4.569 0 7.237 3.343 7.237 7.943s-2.668 8.004-7.237 8.004m0-13.493c-3.282 0-4.723 2.576-4.723 5.49 0 2.912 1.441 5.55 4.723 5.55 3.25 0 4.661-2.638 4.661-5.55 0-2.914-1.411-5.49-4.661-5.49m-13.776 4.14v9.047h-2.576V10.207h2.576v2.699c.89-1.81 2.423-3.097 5.428-2.913v2.576c-3.373-.338-5.428.674-5.428 3.925m-5.002-4.385c0 4.385-2.454 6.838-7.483 6.838h-4.017v6.594h-2.76V5.393h6.777c5.03 0 7.483 2.576 7.483 6.716m-7.79 4.2c3.558.124 4.938-1.563 4.938-4.14 0-2.452-1.38-4.14-4.938-4.14h-3.71v8.28zM61.69 17.874c0 3.68 1.472 5.52 4.201 5.52 2.361 0 4.477-1.503 4.477-4.907V17.26c0-3.404-1.931-4.906-4.17-4.906-2.975 0-4.508 1.962-4.508 5.52m8.679 7.666v-2.76c-.982 2.024-2.822 3.067-5.183 3.067-4.079 0-6.134-3.465-6.134-7.973 0-4.324 2.147-7.974 6.44-7.974 2.24 0 3.957 1.012 4.877 3.006v-2.699h2.637V25.54zm-17.793-9.046v9.047H50V10.207h2.576v2.699c.89-1.81 2.423-3.097 5.428-2.913v2.576c-3.373-.338-5.428.674-5.428 3.925M42.89 6.16c0-1.166.767-1.84 1.84-1.84s1.84.674 1.84 1.84S45.805 8 44.73 8s-1.84-.675-1.84-1.84m.491 19.38V10.208h2.638v15.334zm-6.428-5.949V5.393h2.76v14.014c0 3.71-1.625 6.256-5.428 6.256-1.441 0-2.545-.245-3.312-.521v-2.668c.828.337 1.84.521 2.852.521 2.331 0 3.128-1.41 3.128-3.404\" />\n    </svg>");
};
var JiraProductDiscoveryLogo = function JiraProductDiscoveryLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Product Discovery' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bzHbR":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraServiceManagementIcon", ()=>(0, _icon.JiraServiceManagementIcon));
parcelHelpers.export(exports, "JiraServiceManagementLogo", ()=>(0, _logo.JiraServiceManagementLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"f7VgO","./logo":"iOF0b","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"f7VgO":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraServiceManagementIcon", ()=>JiraServiceManagementIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=".concat(colors.iconColor, " d=\"M18.79 13.257h7.325c1.1 0 1.476 1.046.805 1.878L15.464 29.274c-3.702-2.951-3.353-7.62-.644-11.027zm-5.66 5.634H5.806c-1.1 0-1.476-1.046-.805-1.878L16.457 2.874c3.702 2.951 3.3 7.566.617 11z\"/>\n    </svg>");
};
var JiraServiceManagementIcon = function JiraServiceManagementIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Service Management' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"iOF0b":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JiraServiceManagementLogo", ()=>JiraServiceManagementLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 362 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=".concat(colors.iconColor, " d=\"M14.124 13.257h7.325c1.1 0 1.475 1.046.804 1.878L10.798 29.274c-3.702-2.951-3.353-7.62-.644-11.027zm-5.66 5.634H1.138c-1.1 0-1.476-1.046-.805-1.878L11.79 2.874c3.703 2.951 3.3 7.566.617 11z\" />\n      <path fill=").concat(colors.textColor, " d=\"M357.074 20.787c0 1.35.797 2.27 2.422 2.27.614 0 1.196-.123 1.656-.215v2.545c-.46.123-.981.245-1.778.245-3.282 0-4.876-1.932-4.876-4.784v-8.187h-2.484v-2.454h2.484v-3.25h2.576v3.25h4.078v2.453h-4.078zm-7.327-4.231v8.985h-2.638V16.28c0-2.76-1.104-3.987-3.618-3.987-2.454 0-4.14 1.625-4.14 4.723v8.525h-2.638V10.208h2.638v2.514c.981-1.81 2.79-2.821 4.845-2.821 3.527 0 5.551 2.423 5.551 6.655m-22.921-4.263c-2.791 0-4.201 1.81-4.477 4.477h8.556c-.154-2.852-1.442-4.477-4.079-4.477m5.888 12.635c-1.257.674-3.189.92-4.753.92-5.735 0-8.25-3.312-8.25-8.004 0-4.631 2.576-7.943 7.238-7.943 4.722 0 6.624 3.281 6.624 7.943v1.196h-11.194c.368 2.606 2.055 4.293 5.674 4.293 1.778 0 3.281-.337 4.661-.828zm-26.152-7.912v8.525h-2.637V16.28c0-2.76-1.104-3.987-3.619-3.987-2.453 0-4.14 1.625-4.14 4.723v8.525h-2.637V10.208h2.637v2.514c.981-1.81 2.79-2.821 4.845-2.821 2.607 0 4.385 1.319 5.152 3.741.859-2.361 2.913-3.741 5.459-3.741 3.434 0 5.336 2.33 5.336 6.655v8.985h-2.638v-8.525c0-3.16-1.104-4.723-3.618-4.723-2.454 0-4.14 1.625-4.14 4.723m-22.921-4.723c-2.79 0-4.201 1.81-4.477 4.477h8.556c-.153-2.852-1.441-4.477-4.079-4.477m5.888 12.635c-1.257.674-3.189.92-4.753.92-5.735 0-8.25-3.312-8.25-8.004 0-4.631 2.577-7.943 7.238-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196h-11.193c.368 2.606 2.054 4.293 5.673 4.293 1.779 0 3.281-.337 4.661-.828zm-18.638-.614v-1.533c-.982 2.024-2.822 3.067-5.183 3.067-4.048 0-6.072-3.466-6.072-7.974 0-4.324 2.116-7.973 6.379-7.973 2.238 0 3.956 1.012 4.876 3.005v-2.698h2.576V24.16c0 4.508-2.116 7.544-7.606 7.544-2.576 0-3.986-.337-5.458-.828V28.3c1.686.552 3.434.92 5.336.92 3.833 0 5.152-2.055 5.152-4.907m-8.679-6.44c0 3.68 1.472 5.52 4.201 5.52 2.362 0 4.478-1.503 4.478-4.906V17.26c0-3.404-1.932-4.907-4.171-4.907-2.975 0-4.508 1.963-4.508 5.52m-16.949.001c0 3.68 1.472 5.52 4.201 5.52 2.361 0 4.477-1.503 4.477-4.906V17.26c0-3.404-1.932-4.907-4.17-4.907-2.975 0-4.508 1.963-4.508 5.52m8.678 7.667v-2.76c-.981 2.024-2.821 3.066-5.182 3.066-4.079 0-6.134-3.465-6.134-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.699h2.638V25.54zm-14.073-8.984v8.985h-2.638V16.28c0-2.76-1.104-3.987-3.618-3.987-2.454 0-4.14 1.625-4.14 4.723v8.525h-2.638V10.208h2.638v2.514c.981-1.81 2.79-2.821 4.845-2.821 3.527 0 5.551 2.423 5.551 6.655m-28.327 1.318c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.906V17.26c0-3.404-1.932-4.907-4.171-4.907-2.974 0-4.508 1.963-4.508 5.52m8.679 7.667v-2.76c-.981 2.024-2.821 3.066-5.183 3.066-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.699h2.637V25.54zm-31.445-11.009-2.76-7.482V25.54h-2.76V5.393h4.784l4.569 11.56 1.871 5.552 1.87-5.551 4.6-11.561h4.447V25.54h-2.76V7.263l-2.361 7.268-4.447 11.01h-2.668zm-21.511-2.238c-2.791 0-4.202 1.81-4.478 4.477h8.556c-.153-2.852-1.441-4.477-4.078-4.477m5.888 12.635c-1.258.674-3.19.92-4.754.92-5.734 0-8.249-3.312-8.249-8.004 0-4.631 2.576-7.943 7.237-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196h-11.193c.368 2.606 2.055 4.293 5.673 4.293 1.779 0 3.282-.337 4.662-.828zm-15.094-2.148v2.362c-.92.49-2.33.705-3.741.705-5.459 0-8.004-3.312-8.004-8.004 0-4.63 2.545-7.942 8.004-7.942 1.38 0 2.453.184 3.649.736v2.453c-.981-.46-2.024-.736-3.465-.736-3.987 0-5.612 2.515-5.612 5.49s1.656 5.489 5.673 5.489c1.564 0 2.546-.215 3.496-.552M140.124 6.16c0-1.166.766-1.84 1.84-1.84 1.073 0 1.84.674 1.84 1.84S143.037 8 141.964 8c-1.074 0-1.84-.675-1.84-1.84m.49 19.38V10.208h2.638v15.334zm-8.233 0h-3.527l-5.949-15.332h2.76l4.968 13.094 4.937-13.094h2.76zm-15.455-9.046v9.047h-2.576V10.207h2.576v2.699c.889-1.81 2.423-3.097 5.428-2.913v2.576c-3.373-.338-5.428.674-5.428 3.925m-12.463-4.201c-2.791 0-4.202 1.81-4.478 4.477h8.556c-.153-2.852-1.441-4.477-4.078-4.477m5.888 12.635c-1.258.674-3.19.92-4.754.92-5.734 0-8.249-3.312-8.249-8.004 0-4.631 2.576-7.943 7.237-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196h-11.193c.368 2.606 2.055 4.293 5.673 4.293 1.779 0 3.282-.337 4.662-.828zM95.024 19.99c0 3.496-2.085 5.857-7.084 5.857-3.894 0-5.704-.766-7.268-1.564v-2.821c1.87.981 4.754 1.687 7.422 1.687 3.036 0 4.17-1.196 4.17-2.975s-1.104-2.73-4.937-3.65c-4.539-1.103-6.563-2.667-6.563-5.98 0-3.127 2.392-5.458 7.084-5.458 2.914 0 4.784.705 6.164 1.472v2.76c-2.024-1.165-4.201-1.533-6.286-1.533-2.638 0-4.202.92-4.202 2.76 0 1.656 1.288 2.484 4.845 3.373 4.263 1.073 6.655 2.453 6.655 6.072m-34.001-2.116c0 3.68 1.472 5.52 4.201 5.52 2.362 0 4.478-1.503 4.478-4.906V17.26c0-3.404-1.932-4.907-4.17-4.907-2.975 0-4.509 1.963-4.509 5.52m8.679 7.667v-2.76c-.981 2.024-2.821 3.066-5.183 3.066-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.699h2.637V25.54zM51.91 16.494v9.047h-2.577V10.207h2.576v2.699c.89-1.81 2.423-3.097 5.428-2.913v2.576c-3.373-.338-5.428.674-5.428 3.925M42.224 6.16c0-1.166.767-1.84 1.84-1.84s1.84.674 1.84 1.84S45.137 8 44.064 8s-1.84-.675-1.84-1.84m.49 19.38V10.208h2.638v15.334zm-6.427-5.949V5.393h2.76v14.014c0 3.71-1.626 6.256-5.428 6.256-1.442 0-2.546-.245-3.312-.521v-2.668c.828.337 1.84.521 2.852.521 2.33 0 3.128-1.41 3.128-3.404\" />\n    </svg>");
};
var JiraServiceManagementLogo = function JiraServiceManagementLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Jira Service Management' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"5l6mv":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomIcon", ()=>(0, _icon.LoomIcon));
parcelHelpers.export(exports, "LoomLogo", ()=>(0, _logo.LoomLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"8v3Zz","./logo":"bNTmV","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8v3Zz":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomIcon", ()=>LoomIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsForLoom)(appearance, colorMode);
    return "<svg\n    fill=\"none\"\n    height=\"32\"\n    viewBox=\"0 0 32 32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n  >\n    <path\n      d=\"M27.333 15.508h-6.628l5.74-3.315-1.26-2.184-5.74 3.314 3.313-5.74-2.184-1.26-3.313 5.74V5.434h-2.522v6.628l-3.314-5.74-2.184 1.26 3.314 5.74-5.74-3.314-1.26 2.184 5.74 3.314H4.667v2.521h6.627l-5.74 3.314 1.261 2.184 5.74-3.313-3.314 5.74 2.184 1.26 3.314-5.74V28.1h2.521v-6.627l3.313 5.74 2.184-1.261-3.314-5.74 5.74 3.313 1.261-2.184-5.74-3.313h6.628zM16 20.198a3.442 3.442 0 1 1 0-6.885 3.442 3.442 0 0 1 0 6.884\"\n      fill=\"".concat(colors.iconColor, "\"\n    />\n  </svg>");
};
var LoomIcon = function LoomIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Loom' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"bNTmV":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomLogo", ()=>LoomLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsForLoom)(appearance, colorMode);
    return "<svg\n      fill=\"none\"\n      height=\"32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 98 32\"\n      focusable=\"false\"\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M29.657 13.659h-8.672l7.51-4.337-1.649-2.857-7.51 4.336 4.335-7.51-2.857-1.65-4.336 7.51V.479H13.18v8.672l-4.337-7.51-2.856 1.65 4.336 7.51-7.51-4.336-1.65 2.857 7.51 4.336H0v3.299h8.671l-7.51 4.336 1.65 2.858 7.51-4.336-4.336 7.51 2.857 1.65 4.336-7.511v8.672h3.3v-8.671l4.335 7.51 2.857-1.65-4.336-7.51 7.51 4.336 1.65-2.858-7.51-4.335h8.672v-3.3zM14.83 19.794a4.503 4.503 0 1 1 0-9.006 4.503 4.503 0 0 1 0 9.006\"\n        fill=\"".concat(colors.iconColor, "\"\n      />\n      <path\n        d=\"M37.303 26.155V4.459h3.983v21.696zm38.204-14.743h3.803v1.798c.808-1.438 2.696-2.218 4.313-2.218 2.007 0 3.624.87 4.373 2.457 1.167-1.798 2.726-2.457 4.673-2.457 2.725 0 5.33 1.648 5.33 5.604v9.559h-3.862v-8.75c0-1.588-.78-2.786-2.607-2.786-1.707 0-2.726 1.318-2.726 2.907v8.63H84.85v-8.75c0-1.59-.808-2.787-2.606-2.787-1.738 0-2.757 1.288-2.757 2.907v8.63h-3.981zm-25.219 15.17c-4.487 0-7.737-3.328-7.737-7.798 0-4.4 3.24-7.806 7.737-7.806 4.52 0 7.737 3.439 7.737 7.806 0 4.438-3.251 7.798-7.737 7.798m0-11.996a4.2 4.2 0 0 0-4.197 4.199c0 2.315 1.883 4.199 4.197 4.199s4.196-1.884 4.196-4.2a4.2 4.2 0 0 0-4.196-4.198m16.245 11.996c-4.487 0-7.737-3.328-7.737-7.798 0-4.4 3.24-7.806 7.737-7.806 4.52 0 7.737 3.439 7.737 7.806 0 4.438-3.253 7.798-7.737 7.798m0-12.046c-2.34 0-4.245 1.906-4.245 4.247s1.904 4.247 4.245 4.247a4.25 4.25 0 0 0 4.245-4.247 4.25 4.25 0 0 0-4.245-4.247\"\n        fill=\"").concat(colors.textColor, "\"\n      />\n    </svg>");
};
var LoomLogo = function LoomLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Loom' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"0Qp4W":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomAttributionIcon", ()=>(0, _icon.LoomAttributionIcon));
parcelHelpers.export(exports, "LoomAttributionLogo", ()=>(0, _logo.LoomAttributionLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"8cn31","./logo":"buYa7","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8cn31":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomAttributionIcon", ()=>LoomAttributionIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _constants = require("../../constants");
var _loom = require("../loom");
var LoomAttributionIcon = function LoomAttributionIcon(_ref) {
    var appearance = _ref.appearance, _ref$label = _ref.label, label = _ref$label === void 0 ? 'Loom Attribution' : _ref$label, _ref$size = _ref.size, size = _ref$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref$size, testId = _ref.testId, _ref$iconColor = _ref.iconColor, iconColor = _ref$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref$iconColor, _ref$textColor = _ref.textColor, textColor = _ref$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref$textColor;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _loom.LoomIcon), {
        appearance: appearance,
        label: label,
        size: size,
        testId: testId,
        iconColor: iconColor,
        textColor: textColor
    });
};

},{"react":"jMk1U","../../constants":"8AJoc","../loom":"5l6mv","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"buYa7":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoomAttributionLogo", ()=>LoomAttributionLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsForLoom)(appearance, colorMode);
    return "<svg\n\t\tfill=\"none\"\n\t\theight=\"32\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfocusable=\"false\"\n\t\taria-hidden=\"true\"\n\t\tviewBox=\"0 0 88 32\"\n\t>\n\t\t<path\n\t\t\td=\"M29.488 12.765h-8.983l7.78-4.344-1.544-2.585-7.78 4.344 4.492-7.523-2.674-1.493-4.491 7.522V0H13.2v8.687L8.71 1.164 6.035 2.657l4.49 7.522-7.778-4.343L1.204 8.42l7.779 4.344H0v2.986h8.982l-7.778 4.343 1.543 2.585 7.78-4.342-4.492 7.522 2.674 1.493L13.2 19.83v8.687h3.087v-8.873l4.574 7.663 2.507-1.4-4.575-7.663 7.946 4.437 1.544-2.586-7.779-4.343h8.982v-2.986h.001Zm-14.744 5.552c-2.318 0-4.197-1.817-4.197-4.059s1.88-4.059 4.197-4.059 4.198 1.817 4.198 4.06c0 2.24-1.88 4.058-4.198 4.058\"\n\t\t\tfill=\"".concat(colors.iconColor, "\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M38.379 26.847V10.094h3.18v16.753zm30.503-11.79h3.036v1.438c.646-1.15 2.153-1.773 3.444-1.773 1.602 0 2.893.695 3.49 1.964.932-1.438 2.177-1.964 3.731-1.964 2.175 0 4.256 1.318 4.256 4.48v7.642h-3.084V19.85c0-1.27-.623-2.228-2.081-2.228-1.363 0-2.177 1.054-2.177 2.324v6.9h-3.155V19.85c0-1.27-.646-2.228-2.081-2.228-1.387 0-2.2 1.03-2.2 2.324v6.9h-3.18V15.057Zm-20.134 12.13c-3.582 0-6.176-2.66-6.176-6.234 0-3.517 2.585-6.242 6.176-6.242 3.609 0 6.177 2.75 6.177 6.242 0 3.547-2.596 6.234-6.177 6.234m0-9.59a3.357 3.357 0 0 0 0 6.713 3.357 3.357 0 0 0 0-6.713m12.966 9.59c-3.583 0-6.177-2.66-6.177-6.234 0-3.517 2.586-6.242 6.177-6.242 3.608 0 6.176 2.75 6.176 6.242 0 3.547-2.597 6.234-6.176 6.234m0-9.63a3.397 3.397 0 0 0-3.39 3.395 3.397 3.397 0 0 0 3.39 3.395 3.396 3.396 0 0 0 0-6.79M64.933 5.63c0-1.102-.697-1.522-1.983-1.837-.803-.21-1.018-.368-1.018-.63q0-.473.804-.473c.643 0 1.286.21 1.93.473V1.798a4.5 4.5 0 0 0-1.876-.42c-1.447 0-2.25.682-2.25 1.785 0 1.05.696 1.575 1.928 1.838.804.157 1.072.315 1.072.682 0 .263-.215.473-.804.473a4.46 4.46 0 0 1-2.197-.63v1.417c.483.263 1.233.473 2.197.473 1.5.052 2.197-.683 2.197-1.785Zm16.662-4.067v5.988h1.3V3.007l.542 1.23 1.841 3.368h1.626V1.563h-1.3v3.85l-.488-1.123-1.463-2.727zm-8.056 0h-1.465v6.042h1.465zm-23.981 0v6.042h2.863l.432-1.295h-1.945V1.563zm-5.671 0v1.295h1.604v4.747h1.44V2.858h1.715V1.563zm-2.177 0h-1.802l-2.066 6.042h1.59l.317-1.025a4 4 0 0 0 1.113.162q.556 0 1.113-.162l.318 1.025h1.59zm-.9 3.938a3 3 0 0 1-.743-.108l.742-2.643.742 2.643c-.265.054-.477.108-.742.108Zm16.577-3.938H55.53L53.4 7.605h1.638l.328-1.025q.573.162 1.146.162.574 0 1.147-.162l.328 1.025h1.638l-2.24-6.042Zm-.928 3.938c-.273 0-.546-.054-.765-.108l.765-2.643.764 2.643a3.3 3.3 0 0 1-.764.108m21.98-3.938h-1.857l-2.13 6.042h1.638l.328-1.025q.574.162 1.147.162c.573 0 .764-.054 1.146-.162l.328 1.025h1.638zm-.93 3.938c-.272 0-.545-.054-.763-.108l.764-2.643.765 2.643a3.3 3.3 0 0 1-.765.108Zm-6.894.129c0-1.102-.697-1.522-1.983-1.837-.803-.21-1.018-.368-1.018-.63q0-.473.804-.473c.643 0 1.286.21 1.93.473V1.798a4.5 4.5 0 0 0-1.876-.42c-1.447 0-2.25.682-2.25 1.785 0 1.05.696 1.575 1.928 1.838.804.157 1.072.315 1.072.682 0 .263-.215.473-.804.473-.75 0-1.608-.263-2.197-.63v1.417c.482.263 1.233.473 2.197.473 1.447.052 2.197-.683 2.197-1.785Z\"\n\t\t\tfill=\"").concat(colors.textColor, "\"\n\t\t/>\n\t</svg>");
};
var LoomAttributionLogo = function LoomAttributionLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Loom Attribution' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"hjIrq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpsgenieIcon", ()=>(0, _icon.OpsgenieIcon));
parcelHelpers.export(exports, "OpsgenieLogo", ()=>(0, _logo.OpsgenieLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"cLfXr","./logo":"eHqEg","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"cLfXr":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpsgenieIcon", ()=>OpsgenieIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M17.114 28.127c-.785.578-1.199.537-1.984-.041-3.8-2.727-7.313-5.826-9.668-9.049-.248-.33-.124-.785.248-.991l4.297-2.686q.558-.372.992.124c1.652 1.9 3.264 3.76 5.123 5.082 1.86-1.322 3.47-3.181 5.123-5.082q.434-.495.992-.124l4.297 2.686c.372.206.496.66.248.991-2.355 3.223-5.867 6.322-9.668 9.09m-.992-11.858c3.388 0 6.198-2.768 6.198-6.156s-2.81-6.239-6.198-6.239-6.198 2.81-6.198 6.239c0 3.43 2.727 6.156 6.198 6.156\"/>\n    </svg>");
};
var OpsgenieIcon = function OpsgenieIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Opsgenie' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        label: label,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eHqEg":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OpsgenieLogo", ()=>OpsgenieLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 154 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M11.78 28.127c-.785.578-1.198.537-1.983-.041-3.801-2.727-7.313-5.826-9.668-9.049-.248-.33-.124-.785.248-.991l4.297-2.686q.558-.372.991.124c1.653 1.9 3.264 3.76 5.124 5.082 1.859-1.322 3.47-3.181 5.123-5.082q.435-.495.992-.124l4.297 2.686c.371.206.495.66.247.991-2.355 3.223-5.867 6.322-9.668 9.09m-.99-11.857c3.388 0 6.197-2.768 6.197-6.156s-2.81-6.239-6.197-6.239-6.198 2.81-6.198 6.239c0 3.43 2.727 6.156 6.198 6.156\"/>\n      <path fill=\"").concat(colors.textColor, "\" d=\"M146.689 12.293c-2.79 0-4.201 1.81-4.477 4.477h8.556c-.153-2.852-1.441-4.477-4.079-4.477m5.888 12.635c-1.257.674-3.189.92-4.753.92-5.735 0-8.249-3.312-8.249-8.004 0-4.631 2.576-7.943 7.237-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196h-11.193c.368 2.606 2.054 4.293 5.673 4.293 1.779 0 3.281-.337 4.661-.828zM133.385 6.16c0-1.166.767-1.84 1.841-1.84s1.84.674 1.84 1.84-.767 1.84-1.84 1.84c-1.074 0-1.841-.675-1.841-1.84m.491 19.38V10.208h2.638v15.334zm-3.677-8.984v8.985h-2.638V16.28c0-2.76-1.104-3.987-3.618-3.987-2.454 0-4.14 1.625-4.14 4.723v8.525h-2.638V10.208h2.638v2.514c.981-1.81 2.79-2.821 4.845-2.821 3.527 0 5.551 2.423 5.551 6.655m-22.921-4.263c-2.791 0-4.201 1.81-4.477 4.477h8.556c-.154-2.852-1.442-4.477-4.079-4.477m5.888 12.635c-1.257.674-3.189.92-4.753.92-5.735 0-8.25-3.312-8.25-8.004 0-4.631 2.576-7.943 7.238-7.943 4.722 0 6.624 3.281 6.624 7.943v1.196h-11.194c.368 2.606 2.055 4.293 5.674 4.293 1.778 0 3.281-.337 4.661-.828zm-18.639-.614v-1.533c-.981 2.024-2.821 3.067-5.182 3.067-4.048 0-6.072-3.466-6.072-7.974 0-4.324 2.116-7.973 6.378-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.698h2.576V24.16c0 4.508-2.116 7.544-7.605 7.544-2.576 0-3.987-.337-5.459-.828V28.3c1.687.552 3.435.92 5.336.92 3.834 0 5.152-2.055 5.152-4.907m-8.678-6.44c0 3.68 1.472 5.52 4.2 5.52 2.362 0 4.478-1.503 4.478-4.906V17.26c0-3.404-1.932-4.907-4.17-4.907-2.975 0-4.508 1.963-4.508 5.52m-4.703 3.497c0 2.545-1.656 4.477-5.765 4.477-2.3 0-4.17-.52-5.336-1.134v-2.79c1.319.766 3.527 1.502 5.459 1.502 2.024 0 3.066-.828 3.066-2.024 0-1.165-.89-1.84-3.802-2.545-3.404-.829-4.846-2.147-4.846-4.662 0-2.668 2.055-4.293 5.55-4.293 1.994 0 3.804.49 4.938 1.104v2.73c-1.84-.92-3.342-1.411-4.968-1.411-1.932 0-2.974.674-2.974 1.87 0 1.073.736 1.748 3.557 2.423 3.404.828 5.121 2.085 5.121 4.753m-16.274-3.496c0-3.68-1.472-5.52-4.202-5.52-2.36 0-4.477 1.503-4.477 4.907v1.227c0 3.404 1.932 4.906 4.17 4.906 2.975 0 4.509-1.962 4.509-5.52m-3.803 7.974c-2.239 0-3.956-1.013-4.876-3.006v8.679h-2.637V10.207h2.637v2.76c.981-2.024 2.821-3.066 5.183-3.066 4.079 0 6.133 3.465 6.133 7.973 0 4.324-2.147 7.973-6.44 7.973m-20.121 0c-6.225 0-9.721-4.293-9.721-10.426 0-6.072 3.496-10.335 9.721-10.335 6.195 0 9.69 4.263 9.69 10.335 0 6.133-3.495 10.426-9.69 10.426m0-18.124c-4.968 0-6.961 3.527-6.961 7.698 0 4.262 1.993 7.789 6.961 7.789 4.937 0 6.93-3.527 6.93-7.79 0-4.17-1.993-7.697-6.93-7.697\" />\n    </svg>");
};
var OpsgenieLogo = function OpsgenieLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Opsgenie' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        iconColor: iconColor,
        label: label,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"54y5j":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RovoIcon", ()=>(0, _icon.RovoIcon));
parcelHelpers.export(exports, "RovoLogo", ()=>(0, _logo.RovoLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"2cb6e","./logo":"fcMAX","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2cb6e":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RovoIcon", ()=>RovoIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\">\n    <g fill=\"".concat(colors.iconColor, "\" fill-rule=\"evenodd\">\n      <path d=\"M17.06 4.246a2.79 2.79 0 0 0-2.736-.026l-.049.033-.002.001c-.605.35-1.048.91-1.256 1.558-.085.268-.13.552-.13.842v3.675l4.603 2.656a3.64 3.64 0 0 1 1.824 3.155v9.487a3.6 3.6 0 0 1-.214 1.23l6.175-3.566a2.77 2.77 0 0 0 1.392-2.407v-9.487c0-.991-.532-1.912-1.392-2.408z\"/>\n      <path d=\"m6.058 9 6.176-3.566a3.7 3.7 0 0 0-.214 1.23v9.486c0 1.303.693 2.505 1.823 3.155l4.604 2.657v3.674c0 .29-.045.575-.13.843a2.8 2.8 0 0 1-1.258 1.558.4.4 0 0 0-.05.033c-.851.47-1.89.461-2.735-.026L6.06 23.301a2.78 2.78 0 0 1-1.392-2.408v-9.486c0-.996.529-1.912 1.391-2.408z\"/>\n    </g>\n  </svg>");
};
var RovoIcon = function RovoIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Rovo' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        label: label,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"fcMAX":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RovoLogo", ()=>RovoLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 100 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M12.393 4.246a2.79 2.79 0 0 0-2.735-.026.4.4 0 0 1-.05.033l-.001.001c-.606.35-1.048.91-1.257 1.558q-.129.404-.13.842v3.675l4.603 2.656a3.64 3.64 0 0 1 1.824 3.155v9.487a3.6 3.6 0 0 1-.214 1.23l6.175-3.566A2.77 2.77 0 0 0 22 20.884v-9.487c0-.991-.532-1.912-1.392-2.408z\"\n        fill=\"".concat(colors.iconColor, "\"\n        fillRule=\"evenodd\"\n      />\n      <path\n        d=\"m1.391 9 6.176-3.566a3.6 3.6 0 0 0-.214 1.23v9.486c0 1.303.693 2.505 1.823 3.155h.001l4.603 2.657v3.674c0 .29-.045.575-.13.843a2.8 2.8 0 0 1-1.258 1.558.4.4 0 0 0-.05.033c-.85.47-1.89.461-2.734-.026l-8.216-4.743A2.78 2.78 0 0 1 0 20.893v-9.486c0-.996.529-1.912 1.391-2.408z\"\n        fill=\"").concat(colors.iconColor, "\"\n        fillRule=\"evenodd\"\n      />\n      <path\n        d=\"M91.688 25.848c-4.6 0-7.298-3.404-7.298-8.004S87.088 9.9 91.688 9.9c4.57 0 7.238 3.342 7.238 7.942s-2.668 8.004-7.238 8.004zm0-13.494c-3.28 0-4.722 2.576-4.722 5.49 0 2.913 1.441 5.55 4.722 5.55 3.251 0 4.662-2.637 4.662-5.55 0-2.914-1.41-5.49-4.662-5.49M77.675 25.54H74.15L68.2 10.208h2.76l4.968 13.094 4.938-13.095h2.76zm-17.462.308c-4.6 0-7.299-3.404-7.299-8.004s2.7-7.943 7.3-7.943c4.568 0 7.236 3.342 7.236 7.942s-2.668 8.004-7.237 8.004zm0-13.494c-3.281 0-4.723 2.576-4.723 5.49 0 2.913 1.442 5.55 4.723 5.55 3.25 0 4.661-2.637 4.661-5.55 0-2.914-1.41-5.49-4.66-5.49zM43.177 8.03H39.13v7.36h4.048c3.588 0 4.692-1.38 4.692-3.68 0-2.177-1.134-3.68-4.692-3.68zm7.452 3.619c0 3.036-1.288 5.09-3.956 5.949l4.938 7.943H48.36l-4.447-7.514H39.13v7.514h-2.76V5.393h7.115c4.815 0 7.145 2.392 7.145 6.256z\"\n        fill=\"").concat(colors.textColor, "\"\n      />\n    </svg>");
};
var RovoLogo = function RovoLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Rovo' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        iconColor: iconColor,
        label: label,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"1a7OU":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StatuspageIcon", ()=>(0, _icon.StatuspageIcon));
parcelHelpers.export(exports, "StatuspageLogo", ()=>(0, _logo.StatuspageLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"3sQ2Q","./logo":"eLFdH","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"3sQ2Q":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StatuspageIcon", ()=>StatuspageIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M16 12.604c-3.033 0-5.981 1.37-8.39 3.489q-.375.373-.748.373c-.208 0-.415-.124-.581-.332l-3.032-3.572c-.166-.207-.25-.415-.25-.581 0-.25.125-.457.374-.706 3.655-3.24 8.1-5.067 12.627-5.067s8.97 1.827 12.626 5.067c.249.249.374.457.374.706 0 .166-.084.374-.25.581l-3.032 3.572c-.166.208-.373.332-.581.332q-.374 0-.748-.374c-2.409-2.118-5.358-3.488-8.39-3.488m0 13.374c-3.365 0-6.106-2.742-6.106-6.064S12.635 13.85 16 13.85s6.106 2.7 6.106 6.064-2.741 6.063-6.105 6.063\"/>\n    </svg>");
};
var StatuspageIcon = function StatuspageIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Statuspage' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"eLFdH":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StatuspageLogo", ()=>StatuspageLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 188 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" d=\"M13 12.604c-3.032 0-5.98 1.37-8.39 3.489q-.373.373-.747.373c-.208 0-.416-.124-.582-.332L.25 12.562c-.167-.207-.25-.415-.25-.581 0-.25.125-.457.374-.706C4.029 8.035 8.473 6.208 13 6.208s8.971 1.827 12.626 5.067c.25.249.374.457.374.706 0 .166-.083.374-.25.581l-3.031 3.572c-.166.208-.374.332-.582.332q-.373 0-.747-.374c-2.41-2.118-5.358-3.488-8.39-3.488m0 13.374c-3.364 0-6.105-2.742-6.105-6.064S9.635 13.85 13 13.85c3.364 0 6.105 2.7 6.105 6.064s-2.74 6.063-6.105 6.063\" />\n      <path fill=\"").concat(colors.textColor, "\" d=\"M180.293 12.293c-2.79 0-4.201 1.81-4.477 4.477h8.556c-.153-2.852-1.441-4.477-4.079-4.477m5.888 12.635c-1.257.674-3.189.92-4.753.92-5.735 0-8.249-3.312-8.249-8.004 0-4.631 2.576-7.943 7.237-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196h-11.193c.368 2.606 2.054 4.293 5.673 4.293 1.779 0 3.281-.337 4.661-.828zm-18.638-.614v-1.533c-.981 2.024-2.821 3.067-5.183 3.067-4.048 0-6.072-3.466-6.072-7.974 0-4.324 2.116-7.973 6.379-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.698h2.576V24.16c0 4.508-2.116 7.544-7.605 7.544-2.576 0-3.987-.337-5.459-.828V28.3c1.687.552 3.435.92 5.336.92 3.833 0 5.152-2.055 5.152-4.907m-8.679-6.44c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.906V17.26c0-3.404-1.932-4.907-4.171-4.907-2.974 0-4.508 1.963-4.508 5.52m-16.949.001c0 3.68 1.472 5.52 4.201 5.52 2.362 0 4.478-1.503 4.478-4.906V17.26c0-3.404-1.932-4.907-4.171-4.907-2.975 0-4.508 1.963-4.508 5.52m8.679 7.667v-2.76c-.982 2.024-2.822 3.066-5.183 3.066-4.079 0-6.133-3.465-6.133-7.973 0-4.324 2.146-7.973 6.44-7.973 2.238 0 3.956 1.012 4.876 3.005v-2.699h2.637V25.54zm-16.091-7.666c0-3.68-1.472-5.52-4.201-5.52-2.361 0-4.477 1.503-4.477 4.907v1.227c0 3.404 1.932 4.906 4.17 4.906 2.975 0 4.508-1.962 4.508-5.52m-3.802 7.974c-2.239 0-3.956-1.013-4.876-3.006v8.679h-2.638V10.207h2.638v2.76c.981-2.024 2.821-3.066 5.182-3.066 4.079 0 6.134 3.465 6.134 7.973 0 4.324-2.147 7.973-6.44 7.973m-10.56-4.477c0 2.545-1.656 4.477-5.765 4.477-2.3 0-4.171-.52-5.336-1.134v-2.79c1.318.766 3.526 1.502 5.458 1.502 2.024 0 3.067-.828 3.067-2.024 0-1.165-.889-1.84-3.803-2.545-3.404-.829-4.845-2.147-4.845-4.662 0-2.668 2.055-4.293 5.551-4.293 1.993 0 3.802.49 4.937 1.104v2.73c-1.84-.92-3.343-1.411-4.968-1.411-1.932 0-2.975.674-2.975 1.87 0 1.073.736 1.748 3.558 2.423 3.404.828 5.121 2.085 5.121 4.753m-27.598-2.177v-8.985h2.638v9.26c0 2.76 1.104 3.988 3.618 3.988 2.454 0 4.14-1.626 4.14-4.723v-8.525h2.638V25.54h-2.638v-2.515c-.981 1.81-2.79 2.821-4.845 2.821-3.527 0-5.55-2.422-5.55-6.654m-7.155 1.596c0 1.349.797 2.269 2.422 2.269.614 0 1.196-.123 1.656-.215v2.546a6.3 6.3 0 0 1-1.778.245c-3.282 0-4.876-1.932-4.876-4.784v-8.188h-2.484v-2.453h2.484V6.957h2.576v3.25h4.078v2.454H85.39zm-18.943-2.914c0 3.68 1.472 5.52 4.202 5.52 2.361 0 4.477-1.503 4.477-4.906V17.26c0-3.404-1.932-4.907-4.17-4.907-2.975 0-4.509 1.963-4.509 5.52m8.679 7.667v-2.76c-.981 2.024-2.821 3.066-5.183 3.066-4.078 0-6.133-3.465-6.133-7.973 0-4.324 2.147-7.973 6.44-7.973 2.239 0 3.956 1.012 4.876 3.005v-2.699h2.637V25.54zm-17.258-4.752c0 1.349.797 2.269 2.422 2.269.614 0 1.196-.123 1.656-.215v2.546a6.3 6.3 0 0 1-1.778.245c-3.282 0-4.876-1.932-4.876-4.784v-8.188h-2.484v-2.453h2.484V6.957h2.576v3.25h4.078v2.454h-4.078zm-6.894-.798c0 3.496-2.085 5.858-7.084 5.858-3.894 0-5.704-.767-7.268-1.564v-2.822c1.871.982 4.754 1.687 7.422 1.687 3.036 0 4.17-1.196 4.17-2.975 0-1.778-1.104-2.729-4.937-3.649-4.539-1.104-6.563-2.668-6.563-5.98 0-3.128 2.392-5.459 7.084-5.459 2.914 0 4.784.706 6.164 1.472v2.76c-2.024-1.165-4.201-1.533-6.286-1.533-2.638 0-4.202.92-4.202 2.76 0 1.656 1.288 2.484 4.846 3.373 4.262 1.074 6.654 2.454 6.654 6.072\" />\n    </svg>");
};
var StatuspageLogo = function StatuspageLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Statuspage' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"59Cnq":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TrelloIcon", ()=>(0, _icon.TrelloIcon));
parcelHelpers.export(exports, "TrelloLogo", ()=>(0, _logo.TrelloLogo));
var _icon = require("./icon");
var _logo = require("./logo");

},{"./icon":"e7QHL","./logo":"8cVFc","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"e7QHL":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TrelloIcon", ()=>TrelloIcon);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor;
    var colors = {
        iconColor: iconColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 32 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=".concat(colors.iconColor, " clip-rule=\"evenodd\" d=\"M24.286 5.337H7.714a2.585 2.585 0 0 0-2.585 2.585v16.572a2.585 2.585 0 0 0 2.585 2.584h16.572a2.585 2.585 0 0 0 2.585-2.584V7.922a2.585 2.585 0 0 0-2.585-2.585m-9.791 15.66a.86.86 0 0 1-.859.858h-3.634a.86.86 0 0 1-.859-.859V10.21a.86.86 0 0 1 .859-.86h3.634a.86.86 0 0 1 .859.86zm8.362-4.953a.86.86 0 0 1-.859.859h-3.634a.86.86 0 0 1-.859-.859V10.21a.86.86 0 0 1 .859-.86h3.634a.86.86 0 0 1 .859.86z\" fill-rule=\"evenodd\"/>\n    </svg>");
};
var TrelloIcon = function TrelloIcon(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Trello' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        svg: svg({
            appearance: appearance,
            iconColor: iconColor
        }, colorMode),
        iconColor: iconColor,
        size: size,
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"8cVFc":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TrelloLogo", ()=>TrelloLogo);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = require("../../wrapper");
var _wrapperDefault = parcelHelpers.interopDefault(_wrapper);
var _utils = require("../utils");
var svg = function svg(_ref, colorMode) {
    var appearance = _ref.appearance, iconColor = _ref.iconColor, textColor = _ref.textColor;
    var colors = {
        iconColor: iconColor,
        textColor: textColor
    };
    if (appearance) colors = (0, _utils.getColorsFromAppearance)(appearance, colorMode);
    return "<svg fill=\"none\" height=\"32\" viewBox=\"0 0 106 32\" focusable=\"false\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"".concat(colors.iconColor, "\" clip-rule=\"evenodd\" d=\"M19.157 4.67H2.585A2.585 2.585 0 0 0 0 7.255v16.572a2.585 2.585 0 0 0 2.585 2.585h16.572a2.585 2.585 0 0 0 2.584-2.585V7.255a2.585 2.585 0 0 0-2.584-2.585M9.365 20.33a.86.86 0 0 1-.858.858H4.873a.86.86 0 0 1-.859-.858V9.543c0-.475.385-.859.859-.859h3.634c.474 0 .858.385.858.86zm8.362-4.952a.86.86 0 0 1-.858.858h-3.634a.86.86 0 0 1-.859-.858V9.543c0-.475.385-.859.859-.859h3.634c.474 0 .858.385.858.86z\" fill-rule=\"evenodd\"/>\n      <path fill=\"").concat(colors.textColor, "\" d=\"M97.64 25.848c-4.6 0-7.298-3.404-7.298-8.004S93.04 9.9 97.64 9.9c4.57 0 7.238 3.342 7.238 7.942s-2.668 8.004-7.238 8.004m0-13.494c-3.281 0-4.722 2.576-4.722 5.49 0 2.913 1.44 5.55 4.722 5.55 3.251 0 4.662-2.637 4.662-5.55 0-2.914-1.411-5.49-4.662-5.49M88.874 25.51c-.215.062-.675.123-1.35.123-2.514 0-4.109-1.196-4.109-4.017V3.798h2.637V21.31c0 1.38.92 1.87 2.055 1.87.276 0 .46 0 .767-.03zm-7.996 0c-.215.062-.675.123-1.35.123-2.514 0-4.109-1.196-4.109-4.017V3.798h2.637V21.31c0 1.38.92 1.87 2.055 1.87.276 0 .46 0 .767-.03zM65.532 12.293c-2.79 0-4.202 1.81-4.478 4.477h8.556c-.153-2.852-1.44-4.477-4.078-4.477m5.888 12.635c-1.258.674-3.19.92-4.754.92-5.734 0-8.249-3.312-8.249-8.004 0-4.631 2.576-7.943 7.237-7.943 4.723 0 6.624 3.281 6.624 7.943v1.196H61.085c.368 2.606 2.055 4.293 5.673 4.293 1.78 0 3.282-.337 4.662-.828zm-19.48-8.434v9.047h-2.576V10.208h2.576v2.698c.89-1.809 2.423-3.097 5.428-2.913v2.576c-3.373-.337-5.428.675-5.428 3.925M32.943 5.393H48.03V8.03h-6.164v17.511h-2.76V8.031h-6.164z\"/>\n    </svg>");
};
var TrelloLogo = function TrelloLogo(_ref2) {
    var appearance = _ref2.appearance, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? 'Trello' : _ref2$label, _ref2$size = _ref2.size, size = _ref2$size === void 0 ? (0, _constants.defaultLogoParams).size : _ref2$size, testId = _ref2.testId, _ref2$iconColor = _ref2.iconColor, iconColor = _ref2$iconColor === void 0 ? (0, _constants.defaultLogoParams).iconColor : _ref2$iconColor, _ref2$textColor = _ref2.textColor, textColor = _ref2$textColor === void 0 ? (0, _constants.defaultLogoParams).textColor : _ref2$textColor;
    var _useThemeObserver = (0, _tokens.useThemeObserver)(), colorMode = _useThemeObserver.colorMode;
    return /*#__PURE__*/ (0, _reactDefault.default).createElement((0, _wrapperDefault.default), {
        appearance: appearance,
        label: label,
        iconColor: iconColor,
        size: size,
        svg: svg({
            appearance: appearance,
            textColor: textColor
        }, colorMode),
        testId: testId,
        textColor: textColor
    });
};

},{"react":"jMk1U","@atlaskit/tokens":"cmVFI","../../constants":"8AJoc","../../wrapper":"F9EHX","../utils":"gqiyi","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}],"2QhWk":[function(require,module,exports,__globalThis) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createFeatureFlaggedComponent", ()=>createFeatureFlaggedComponent);
parcelHelpers.export(exports, "tempSizeWrapper", ()=>tempSizeWrapper);
parcelHelpers.export(exports, "logoDocsSchema", ()=>logoDocsSchema);
parcelHelpers.export(exports, "PROGRAM_LOGO_DOCS_ORDER", ()=>PROGRAM_LOGO_DOCS_ORDER);
parcelHelpers.export(exports, "APP_LOGO_DOCS_ORDER", ()=>APP_LOGO_DOCS_ORDER);
parcelHelpers.export(exports, "LEGACY_ONLY_LOGOS", ()=>LEGACY_ONLY_LOGOS);
parcelHelpers.export(exports, "SHARED_LOGOS", ()=>SHARED_LOGOS);
parcelHelpers.export(exports, "NEW_ONLY_LOGOS", ()=>NEW_ONLY_LOGOS);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutProperties = require("@babel/runtime/helpers/objectWithoutProperties");
var _objectWithoutPropertiesDefault = parcelHelpers.interopDefault(_objectWithoutProperties);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _excluded = [
    "size",
    "shouldUseNewLogoDesign"
], _excluded2 = [
    "size"
];
var createFeatureFlaggedComponent = function createFeatureFlaggedComponent(LegacyComponent, NewComponent) {
    // Note: textColor and iconColor aren't supported on all new logos
    // These props will be deprecated in the future
    return function(_ref) {
        var size = _ref.size, shouldUseNewLogoDesign = _ref.shouldUseNewLogoDesign, props = (0, _objectWithoutPropertiesDefault.default)(_ref, _excluded);
        if ((0, _platformFeatureFlags.fg)('platform-logo-rebrand') || shouldUseNewLogoDesign) // Size defaults need to be set, as the temp library had different defaults
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(NewComponent, (0, _extendsDefault.default)({
            size: size || 'medium'
        }, props));
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(LegacyComponent, (0, _extendsDefault.default)({
            size: size
        }, props));
    };
};
var tempSizeWrapper = function tempSizeWrapper(NewComponent) {
    return function(_ref2) {
        var size = _ref2.size, props = (0, _objectWithoutPropertiesDefault.default)(_ref2, _excluded2);
        return /*#__PURE__*/ (0, _reactDefault.default).createElement(NewComponent, (0, _extendsDefault.default)({
            size: size || 'medium'
        }, props));
    };
};
var logoDocsSchema = [
    // Program logos
    {
        name: 'atlassian',
        type: 'legacy',
        category: 'program'
    },
    {
        name: 'atlassian-access',
        type: 'legacy',
        category: 'program'
    },
    {
        name: 'atlassian-marketplace',
        type: 'legacy',
        category: 'program'
    },
    // Home collection
    {
        name: 'home',
        type: 'new',
        category: 'app'
    },
    {
        name: 'hub',
        type: 'new',
        category: 'app'
    },
    // Teamwork collection
    {
        name: 'confluence',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'jira',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'loom',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'loom-blurple',
        type: 'new',
        category: 'app',
        skipExample: true
    },
    {
        name: 'loom-attribution',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'rovo',
        type: 'migration',
        category: 'app'
    },
    // Strategy collection
    {
        name: 'align',
        type: 'new',
        category: 'app'
    },
    {
        name: 'focus',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'talent',
        type: 'new',
        category: 'app'
    },
    // Product collection
    {
        name: 'jira-product-discovery',
        type: 'migration',
        category: 'app'
    },
    // Dev collection
    {
        name: 'bitbucket',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'compass',
        type: 'migration',
        category: 'app'
    },
    // Customer collection
    {
        name: 'jira-service-management',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'assets',
        type: 'new',
        category: 'app'
    },
    {
        name: 'customer-service-management',
        type: 'new',
        category: 'app'
    },
    {
        name: 'opsgenie',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'statuspage',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'trello',
        type: 'migration',
        category: 'app'
    },
    // Platform Collection
    {
        name: 'admin',
        type: 'new',
        category: 'app'
    },
    {
        name: 'analytics',
        type: 'new',
        category: 'app'
    },
    {
        name: 'chat',
        type: 'new',
        category: 'app'
    },
    {
        name: 'goals',
        type: 'new',
        category: 'app'
    },
    {
        name: 'guard',
        type: 'migration',
        category: 'app'
    },
    {
        name: 'projects',
        type: 'new',
        category: 'app'
    },
    {
        name: 'search',
        type: 'new',
        category: 'app'
    },
    {
        name: 'studio',
        type: 'new',
        category: 'app'
    },
    {
        name: 'teams',
        type: 'new',
        category: 'app'
    },
    // Data Center
    {
        name: 'jira-data-center',
        type: 'new',
        category: 'app'
    },
    {
        name: 'confluence-data-center',
        type: 'new',
        category: 'app'
    },
    {
        name: 'bitbucket-data-center',
        type: 'new',
        category: 'app'
    },
    {
        name: 'bamboo',
        type: 'new',
        category: 'app'
    },
    {
        name: 'crowd',
        type: 'new',
        category: 'app'
    },
    // Deprecated
    {
        name: 'atlassian-administration',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'atlassian-admin',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'atlassian-analytics',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'atlas',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'jira-align',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'jira-software',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    },
    {
        name: 'jira-work-management',
        type: 'legacy',
        category: 'app',
        skipExample: true,
        deprecated: true
    }
];
var PROGRAM_LOGO_DOCS_ORDER = logoDocsSchema.filter(function(logo) {
    return logo.category === 'program' && !logo.skipExample;
}).map(function(logo) {
    return logo.name;
});
var APP_LOGO_DOCS_ORDER = logoDocsSchema.filter(function(logo) {
    return logo.category === 'app' && !logo.skipExample;
}).map(function(logo) {
    return logo.name;
});
var LEGACY_ONLY_LOGOS = logoDocsSchema.filter(function(logo) {
    return logo.type === 'legacy';
});
var SHARED_LOGOS = logoDocsSchema.filter(function(logo) {
    return logo.type === 'migration';
});
var NEW_ONLY_LOGOS = logoDocsSchema.filter(function(logo) {
    return logo.type === 'new';
});

},{"@babel/runtime/helpers/extends":"lKa0J","@babel/runtime/helpers/objectWithoutProperties":"j8lr0","react":"jMk1U","@atlaskit/platform-feature-flags":"3H8e6","@parcel/transformer-js/src/esmodule-helpers.js":"jnFvT"}]},["4VwAv","4dmnR"], "4dmnR", "parcelRequirede6b", {}, null, null, "http://localhost:3000")

//# sourceMappingURL=adminMCP.6efbc4f8.js.map
