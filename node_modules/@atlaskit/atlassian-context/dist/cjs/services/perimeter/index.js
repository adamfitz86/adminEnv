"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFedrampModerate = isFedrampModerate;
exports.isIsolatedCloud = isIsolatedCloud;
exports.isolatedCloudDomain = isolatedCloudDomain;
var _constants = require("../../common/constants");
var _atlCookiesLookup = require("../atl-cookies-lookup");
/**
 * Determines if the current perimeter is an Isolated Cloud L2 perimeter
 *
 * @returns {boolean} - True if the current perimeter is an Isolated Cloud perimeter, false otherwise
 */
function isIsolatedCloud() {
  var atlCtxCookieValues = (0, _atlCookiesLookup.parseAtlCtxCookies)();
  if (!atlCtxCookieValues) {
    // If the cookies are not set, the current perimeter is non-isolated commercial
    return false;
  }

  // The icDomain check is needed for when federal perimeters are eventually added to Isolated Cloud as well
  return _constants.ISOLATED_CLOUD_PERIMETERS.includes(atlCtxCookieValues.perimeter) && atlCtxCookieValues.icDomain !== undefined;
}

/**
 * Determines if the current perimeter is FedRAMP Moderate.
 * Please note that FedRAMP Moderate is not currently in Isolated Cloud, but when it is, this function will still return true.
 *
 * @returns {boolean} - True if the current perimeter is FedRAMP Moderate, false otherwise
 */
function isFedrampModerate() {
  var atlCtxCookieValues = (0, _atlCookiesLookup.parseAtlCtxCookies)();
  if (!atlCtxCookieValues) {
    // If the cookies are not set, the current perimeter is non-isolated commercial
    return false;
  }
  return atlCtxCookieValues.perimeter === _constants.FEDRAMP_MODERATE;
}

/**
 * Retrieves the customer selected IC domain name.
 *
 * @returns {string | undefined} - The Isolated Cloud domain name if applicable, undefined otherwise (ex. if not in Isolated Cloud)
 */
function isolatedCloudDomain() {
  var atlCtxCookieValues = (0, _atlCookiesLookup.parseAtlCtxCookies)();
  return atlCtxCookieValues === null || atlCtxCookieValues === void 0 ? void 0 : atlCtxCookieValues.icDomain;
}