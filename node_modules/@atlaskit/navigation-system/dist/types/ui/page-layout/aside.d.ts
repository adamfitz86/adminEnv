/// <reference types="react" />
import type { StrictXCSSProp } from '@atlaskit/css';
import type { CommonSlotProps } from './types';
/**
 * The Aside is rendered to the right (inline end) of the Main area.
 *
 * You can optionally render a `PanelSplitter` as a child to make the aside area resizable.
 */
export declare function Aside({ children, xcss, isFixed: isFixedProp, defaultWidth, label, skipLinkLabel, testId, id: providedId, }: CommonSlotProps & {
    /**
     * The content of the layout area.
     */
    children: React.ReactNode;
    /**
     * The accessible name of the slot, announced by screen readers.
     */
    label?: string;
    /**
     * @deprecated
     *
     * Support for `isFixed={false}` is being removed and `isFixed={true}` will be the only supported behavior.
     *
     * This change is being rolled out behind the `platform_dst_nav4_disable_is_fixed_prop` feature gate. After rollout this prop will be removed.
     *
     * Reach out to #help-design-system if you are relying on the `isFixed={false}` behavior.
     *
     * ---
     *
     * Whether the layout area should be fixed _on large viewports_.
     *
     * When fixed, the element will have its own scroll container - it will not use the body scroll.
     *
     * **Important:** On small viewports, the element will always use body scroll, to make it easier to scroll the page when
     * the content is tall.
     *
     * When not fixed, the element will use the body scroll.
     */
    isFixed?: boolean;
    /**
     * Bounded style overrides.
     */
    xcss?: StrictXCSSProp<'backgroundColor', never>;
    /**
     * The default width of the layout area.
     *
     * It should be between the resize bounds - the minimum is 120px and the maximum is 50% of the viewport width.
     */
    defaultWidth?: number;
}): JSX.Element;
