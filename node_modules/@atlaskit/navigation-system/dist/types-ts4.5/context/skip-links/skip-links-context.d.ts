/// <reference types="react" />
import { type SkipLinkData } from './types';
export type SkipLinksContextData = {
    registerSkipLink: (skipLinkData: SkipLinkData) => void;
    unregisterSkipLink: (id: string | undefined) => void;
};
/**
 * Provides a way to register and unregister skip links
 */
export declare const SkipLinksContext: import("react").Context<SkipLinksContextData>;
/**
 * Internal-only hook for registering skip links.
 *
 * `useSkipLink` is the public API wrapper of this.
 *
 * This private version exists for us to support `onBeforeNavigate` for the side nav use case,
 * where we might need to expand it before moving focus, without having to support `onBeforeNavigate` publicly.
 */
export declare const useSkipLinkInternal: ({ id, label, listIndex, onBeforeNavigate, isHidden, }: SkipLinkData) => void;
/**
 * Call `useSkipLink` to register a skip link for important elements on the page.
 */
export declare const useSkipLink: (id: string, label: string, listIndex?: number) => void;
