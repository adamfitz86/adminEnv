"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRuntimeClassNameLibrary = void 0;
// If classNameCompressionMap is provided, import and use `ac`, otherwise use `ax`.
// Although `ac` does what `ax` does plus handling compressed class names, `ax` is more performant than `ac`.
// Therefore, we use `ax` by default unless classNameCompressionMap is provided.
const getRuntimeClassNameLibrary = (meta) => {
    return meta.state.opts.classNameCompressionMap ? 'ac' : 'ax';
};
exports.getRuntimeClassNameLibrary = getRuntimeClassNameLibrary;
//# sourceMappingURL=get-runtime-class-name-library.js.map