import * as t from '@babel/types';
import type { Metadata } from '../types';
import type { CssItem } from './types';
/**
 * Transforms CSS output into `sheets` and a list of expressions for determining
 * the classNames for a component at runtime.
 *
 * @param cssItems {CssItem[]}
 */
export declare const transformCssItems: (cssItems: CssItem[], meta: Metadata) => {
    sheets: string[];
    classNames: t.Expression[];
};
/**
 * Wraps CSS within a CssItem around selector closures. Each subsequent selector
 * in the selectors array represents a nested selector.
 *
 * @param item {CssItem}
 * @param selectors {string[]}
 */
export declare const applySelectors: (item: CssItem, selectors: string[]) => void;
