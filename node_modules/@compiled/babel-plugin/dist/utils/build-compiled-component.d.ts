import * as t from '@babel/types';
import type { Metadata } from '../types';
import type { CSSOutput } from './types';
/**
 * Will return a generated AST for a Compiled Component.
 * This is primarily used for CSS prop and ClassNames apis.
 *
 * @param node Originating node
 * @param sheets {string[]} Stylesheets
 * @param meta {Metadata} Useful metadata that can be used during the transformation
 */
export declare const compiledTemplate: (node: t.Expression, sheets: string[], meta: Metadata) => t.Node;
/**
 * Returns a Compiled Component AST.
 *
 * @param node Originating node
 * @param cssOutput CSS and variables to place onto the component
 * @param meta {Metadata} Useful metadata that can be used during the transformation
 */
export declare const buildCompiledComponent: (node: t.JSXElement, cssOutput: CSSOutput, meta: Metadata) => t.Node;
