"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformCss = void 0;
const utils_1 = require("@compiled/utils");
const autoprefixer_1 = __importDefault(require("autoprefixer"));
const postcss_1 = __importDefault(require("postcss"));
const postcss_nested_1 = __importDefault(require("postcss-nested"));
const postcss_normalize_whitespace_1 = __importDefault(require("postcss-normalize-whitespace"));
const atomicify_rules_1 = require("./plugins/atomicify-rules");
const discard_duplicates_1 = require("./plugins/discard-duplicates");
const discard_empty_rules_1 = require("./plugins/discard-empty-rules");
const expand_shorthands_1 = require("./plugins/expand-shorthands");
const extract_stylesheets_1 = require("./plugins/extract-stylesheets");
const flatten_multiple_selectors_1 = require("./plugins/flatten-multiple-selectors");
const increase_specificity_1 = require("./plugins/increase-specificity");
const normalize_css_1 = require("./plugins/normalize-css");
const parent_orphaned_pseudos_1 = require("./plugins/parent-orphaned-pseudos");
const sort_atomic_style_sheet_1 = require("./plugins/sort-atomic-style-sheet");
/**
 * Will transform CSS into multiple CSS sheets.
 *
 * @param css CSS string
 * @param opts Transformation options
 */
const transformCss = (css, opts) => {
    var _a;
    const sheets = [];
    const classNames = [];
    // This is defaulted to `true` unless set
    const flattenMultipleSelectorsOption = (_a = opts.flattenMultipleSelectors) !== null && _a !== void 0 ? _a : true;
    try {
        const result = (0, postcss_1.default)([
            (0, discard_duplicates_1.discardDuplicates)(),
            (0, discard_empty_rules_1.discardEmptyRules)(),
            (0, parent_orphaned_pseudos_1.parentOrphanedPseudos)(),
            (0, postcss_nested_1.default)({
                bubble: [
                    'container',
                    '-moz-document',
                    'layer',
                    'else',
                    'when',
                    // postcss-nested bubbles `starting-style` by default in versions from 6.0.2 onwards:
                    // https://github.com/postcss/postcss-nested?tab=readme-ov-file#bubble
                    // When we upgrade to a version that includes this change, we can remove this from the list.
                    'starting-style',
                ],
                unwrap: ['color-profile', 'counter-style', 'font-palette-values', 'page', 'property'],
            }),
            ...(0, normalize_css_1.normalizeCSS)(opts),
            (0, expand_shorthands_1.expandShorthands)(),
            (0, atomicify_rules_1.atomicifyRules)({
                classNameCompressionMap: opts.classNameCompressionMap,
                callback: (className) => classNames.push(className),
                classHashPrefix: opts.classHashPrefix,
            }),
            ...(flattenMultipleSelectorsOption ? [(0, flatten_multiple_selectors_1.flattenMultipleSelectors)(), (0, discard_duplicates_1.discardDuplicates)()] : []),
            ...(opts.increaseSpecificity ? [(0, increase_specificity_1.increaseSpecificity)()] : []),
            (0, sort_atomic_style_sheet_1.sortAtomicStyleSheet)({
                sortAtRulesEnabled: opts.sortAtRules,
                sortShorthandEnabled: opts.sortShorthand,
            }),
            ...(process.env.AUTOPREFIXER === 'off' ? [] : [(0, autoprefixer_1.default)()]),
            (0, postcss_normalize_whitespace_1.default)(),
            (0, extract_stylesheets_1.extractStyleSheets)({ callback: (sheet) => sheets.push(sheet) }),
        ]).process(css, {
            from: undefined,
        });
        // We need to access something to make the transformation happen.
        result.css;
        return {
            sheets,
            classNames: (0, utils_1.unique)(classNames),
        };
    }
    catch (e) {
        const message = e instanceof Error ? e.message : e;
        throw (0, utils_1.createError)('css', 'Unhandled exception')(`An unhandled exception was raised when parsing your CSS, this is probably a bug!
  Raise an issue here: https://github.com/atlassian-labs/compiled/issues/new?assignees=&labels=&template=bug_report.md&title=CSS%20Parsing%20Exception:%20

  Input CSS: {
    ${css}
  }

  Exception: ${message}`);
    }
};
exports.transformCss = transformCss;
//# sourceMappingURL=transform.js.map