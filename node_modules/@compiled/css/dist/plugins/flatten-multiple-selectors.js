"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.flattenMultipleSelectors = void 0;
const postcss_selector_parser_1 = __importDefault(require("postcss-selector-parser"));
function flattenNode(node) {
    node.each((child) => {
        var _a;
        if (!child.parent)
            return;
        // Recursively flatten inside at-rules
        if (child.type === 'atrule' && 'each' in child) {
            flattenNode(child);
        }
        // Flatten rules with multiple selectors
        if (child.type === 'rule' && child.parent) {
            const selectors = [];
            (0, postcss_selector_parser_1.default)((root) => {
                root.each((sel) => {
                    selectors.push(sel.toString().trim());
                });
            }).processSync(child.selector);
            if (selectors.length > 1) {
                selectors.forEach((selector) => {
                    var _a;
                    const rule = child.clone();
                    rule.selector = selector;
                    (_a = child.parent) === null || _a === void 0 ? void 0 : _a.insertBefore(child, rule);
                });
                (_a = child.parent) === null || _a === void 0 ? void 0 : _a.removeChild(child);
            }
        }
    });
}
/**
 * Transforms a style sheet into atomic rules.
 * When passing a `callback` option it will callback with created class names.
 *
 * Preconditions:
 *
 * 1. No nested rules allowed - normalize them with the `parent-orphaned-pseudos` and `nested` plugins first.
 *
 * @throws Throws an error if `opts.classHashPrefix` contains invalid css class/id characters
 */
const flattenMultipleSelectors = () => {
    return {
        postcssPlugin: 'flatten-multiple-selectors',
        OnceExit(root) {
            flattenNode(root);
        },
    };
};
exports.flattenMultipleSelectors = flattenMultipleSelectors;
//# sourceMappingURL=flatten-multiple-selectors.js.map