import type { ParsedAtRule } from './types';
/**
 * Extracts and parses breakpoint information from a media query. We define breakpoints as
 * the `min-width`/`max-width`/`min-height`/`max-width`/`width`/`height` parts of a media query.
 *
 * There are three situations that this function can handle (terminology is based on
 * [that from W3C](https://drafts.csswg.org/mediaqueries/)):
 *
 * ### Situation one - min/max syntax
 *
 *     <property>: <length><lengthUnit>
 *
 *     e.g. max-width: 200px
 *
 * ### Situation two - reversed range syntax
 *
 *     <length><lengthUnit> <comparisonOperator> <width|height>
 *
 *     e.g. 200px >= width
 *
 * ### Situation three - range syntax
 *
 *     <width|height> <comparisonOperator> <length><lengthUnit>
 *
 *     e.g. width <= 200px
 *
 * Cases like 0 <= width <= 200px are treated as combinations of
 * situation two and situation three.
 *
 * Note that more exotic syntax (e.g. `calc()` functions, ratios) are not currently
 * supported. They will be returned without being parsed, and might be sorted in a
 * still-deterministic but slightly odd manner.
 *
 * @param params The original media query, as a string
 * @returns The extracted and parsed breakpoints from the media query
 */
export declare const parseMediaQuery: (params: string) => ParsedAtRule[];
