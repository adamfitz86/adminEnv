"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.outline = void 0;
const utils_1 = require("./utils");
/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/outline
 */
const outline = (value) => {
    const [left, middle, right] = value.nodes;
    const styleValues = [
        ...utils_1.globalValues,
        'auto',
        'none',
        'dotted',
        'dashed',
        'solid',
        'double',
        'groove',
        'ridge',
        'inset',
        'outset',
    ];
    const sizeValues = ['thin', 'medium', 'thick'];
    let colorValue = '';
    let styleValue = '';
    let widthValue = '';
    /**
     * Extracts values from a node and mutates variables in scope.
     * If it returns `true` we should bail out and return no nodes.
     *
     * @param node
     */
    const extractValues = (node) => {
        if (node && node.type === 'word') {
            if ((0, utils_1.isColor)(node)) {
                if (colorValue !== '') {
                    // It has already been set - invalid!
                    return true;
                }
                colorValue = node.value;
            }
            else if (sizeValues.includes(node.value)) {
                if (widthValue !== '') {
                    // It has already been set - invalid!
                    return true;
                }
                widthValue = node.value;
            }
            else if (styleValues.includes(node.value)) {
                if (styleValue !== '') {
                    // It has already been set - invalid!
                    return true;
                }
                styleValue = node.value;
            }
            else {
                // Invalid
                return true;
            }
        }
        else if (node && node.type === 'numeric') {
            if (widthValue !== '') {
                // It has already been set - invalid!
                return true;
            }
            widthValue = node;
        }
        return false;
    };
    if (extractValues(left) || extractValues(middle) || extractValues(right)) {
        return [];
    }
    return [
        { prop: 'outline-color', value: colorValue || 'currentColor' },
        { prop: 'outline-style', value: styleValue || 'none' },
        { prop: 'outline-width', value: widthValue || 'medium' },
    ];
};
exports.outline = outline;
//# sourceMappingURL=outline.js.map