"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.flexFlow = void 0;
const utils_1 = require("./utils");
/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow
 */
const flexFlow = (value) => {
    const [left, right] = value.nodes;
    const directionValues = [...utils_1.globalValues, 'row', 'row-reverse', 'column', 'column-reverse'];
    const wrapValues = [...utils_1.globalValues, 'nowrap', 'wrap', 'reverse'];
    let directionValue = '';
    let wrapValue = '';
    /**
     * Extracts values from a node and mutates variables in scope.
     * If it returns `true` we should bail out and return no nodes.
     *
     * @param node
     */
    const extractValues = (node) => {
        if (node && node.type === 'word') {
            if (directionValues.includes(node.value)) {
                if (directionValue !== '') {
                    // Invalid - already set!
                    return true;
                }
                directionValue = node.value;
            }
            else if (wrapValues.includes(node.value)) {
                if (wrapValue !== '') {
                    // Invalid - already set!
                    return true;
                }
                wrapValue = node.value;
            }
            else {
                // Invalid
                return true;
            }
        }
        return false;
    };
    if (extractValues(left) || extractValues(right)) {
        return [];
    }
    return [
        { prop: 'flex-direction', value: directionValue || 'row' },
        { prop: 'flex-wrap', value: wrapValue || 'nowrap' },
    ];
};
exports.flexFlow = flexFlow;
//# sourceMappingURL=flex-flow.js.map