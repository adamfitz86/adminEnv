import type { Plugin, Container } from 'postcss';
interface PluginOpts {
    classNameCompressionMap?: Record<string, string>;
    callback?: (className: string) => void;
    selectors?: string[];
    atRule?: string;
    parentNode?: Container;
    classHashPrefix?: string;
}
/**
 * Transforms a style sheet into atomic rules.
 * When passing a `callback` option it will callback with created class names.
 *
 * Preconditions:
 *
 * 1. No nested rules allowed - normalize them with the `parent-orphaned-pseudos` and `nested` plugins first.
 *
 * @throws Throws an error if `opts.classHashPrefix` contains invalid css class/id characters
 */
export declare const atomicifyRules: (opts?: PluginOpts) => Plugin;
export declare const postcss = true;
export {};
