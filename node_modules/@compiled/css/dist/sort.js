"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sort = void 0;
const postcss_1 = __importDefault(require("postcss"));
const postcss_discard_duplicates_1 = __importDefault(require("postcss-discard-duplicates"));
const merge_duplicate_at_rules_1 = require("./plugins/merge-duplicate-at-rules");
const sort_atomic_style_sheet_1 = require("./plugins/sort-atomic-style-sheet");
/**
 * Sorts an atomic style sheet.
 *
 * @param stylesheet
 * @returns the sorted stylesheet
 */
function sort(stylesheet, { sortAtRulesEnabled, sortShorthandEnabled, } = {
    // These default values should remain undefined so we don't override the default
    // values set in packages/css/src/plugins/sort-atomic-style-sheet.ts
    //
    // Modify packages/css/src/plugins/sort-atomic-style-sheet.ts if you want to
    // update the actual default values for sortAtRulesEnabled and sortShortEnabled.
    sortAtRulesEnabled: undefined,
    sortShorthandEnabled: undefined,
}) {
    const result = (0, postcss_1.default)([
        (0, postcss_discard_duplicates_1.default)(),
        (0, merge_duplicate_at_rules_1.mergeDuplicateAtRules)(),
        (0, sort_atomic_style_sheet_1.sortAtomicStyleSheet)({ sortAtRulesEnabled, sortShorthandEnabled }),
    ]).process(stylesheet, {
        from: undefined,
    });
    return result.css;
}
exports.sort = sort;
//# sourceMappingURL=sort.js.map